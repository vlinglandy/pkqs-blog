{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-matery/.gitignore","hash":"5340c994462c7345373e075529f40e60c1952f00","modified":1679315433960},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"484a703733b839bd98e016ddb015f028c2593fef","modified":1679315433961},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"16aede145829a270d6ee8dfa7209b4d354d9168c","modified":1679383053589},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1679315433962},{"_id":"themes/hexo-theme-matery/README.md","hash":"93ae00dc14ff64e0b6f2faa3b14b12e4df135e2f","modified":1679315433963},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"190a389a85e524592f19c745adbaeef4214a2291","modified":1679315433965},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"f5c69f3e107474da19630e136abed5d87609e59f","modified":1679315433967},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"c3d2849348bd52fab85b38040818b429057d3101","modified":1679315433968},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"c6de0de68bdc75a8a905787a0526b70ee9821da8","modified":1679315433968},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"626d28dbc7fa2e0fb6601e324dcad08993bcf002","modified":1679315434017},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1679315433968},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"57733d52d17361e735fcc95f875e0b1b9ebdcbd8","modified":1679315434017},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"4d2bb286d9903f770344e11898bd3f13444760bf","modified":1679315433969},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"6deb819e47fe11edd2fc87a6296cae725a0275f9","modified":1679315434018},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1679315434021},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"4ac716d15d84e7c37f07308a5ec008a2ac090c9b","modified":1679315434020},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1679315434019},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"7e92c983794c5c4a2b16eca2452eb187316262ef","modified":1679315434022},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1679315434023},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1679315434023},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"c170d2e1413c9b89863effd4e0a26c413c633a71","modified":1679315434025},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"eb3875f997767bc6c500a158535cfadcbca96f8f","modified":1679315434024},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"444ecca1cb35bad81b063f1d7cb9fd80ead195dd","modified":1679315434027},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1679315434026},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1679315434026},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"058eb27ff10f5314d8b9e334c54419b9a6572315","modified":1679315434027},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1679315434028},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"442c710d69892eb56d3d257cf4c2e195e6913eea","modified":1679315433971},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1679315434038},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"be527741c39c9dc4a13ad712b49fe8db0147fe1e","modified":1679315433970},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"4b01030b7136192bdbd704e29a0fe12f92767551","modified":1679315433972},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2841870e0c625787de348221e5ddb7bbe99ec5a2","modified":1679315433972},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1679315433975},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1679315433974},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"dee1bf78556a2422e2f6dfc9a7563f37806d9c9f","modified":1679315433973},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1679315433977},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"a924658cbc1a1aeafe9fa455b08bd495071285a1","modified":1679315433977},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"1b392f2160f962f62f3ddf5e1155c7f2f4888e1d","modified":1679315433978},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1679315433977},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"96a20785870b24c4e307d49a3b27c5077437743a","modified":1679315433979},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"27764936791ce36b527bea63689435346bbfb425","modified":1679315433980},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1679315433981},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90888c945384aa1ee4650bd43bd7ea670f25828c","modified":1679315433981},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1679315433982},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"e10a37e82a4fc9c806025ad791e82c3b22fdfa4d","modified":1679315433983},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"4bcdbd27273dd1b7098d4cfa6479b5d6b138cd12","modified":1679315433984},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"f3d6b20ac07f1b096c5cf0b091523867fd4fd0b5","modified":1679315433987},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1679315433986},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"c6ad79f25fdd038df06aaaead4b9e45f8078e34a","modified":1679315433985},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1679315433986},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"c9ce806110db632d29bdb0eea3b55b1fb4b1aff3","modified":1679315433988},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"d8773abab5d0b672b70a9df20a8f9f7f6b0a2dae","modified":1679315433989},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"7f583c935253e2bf6421791715ee9de4989add6e","modified":1679315433989},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"3590cebe5d6729300f2ac83ff9e0ceceb66da4b9","modified":1679315433992},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"de0d5763ddd64463f43135678b64c044884b8406","modified":1679315433992},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"05ac5b4df05e80e3123e464e7df2dfc589b0bbd2","modified":1679315433990},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1679315433993},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"1fb43f421de58aa24458f7d4a4cda44b8a3d62cc","modified":1679315433994},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"f67bc52bc5a2464ebe30f42c65c0ee38eeec2fda","modified":1679315433995},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1679315433995},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"4218ed406c43ed781fe78ad8bf1834fa4b76b049","modified":1679315433997},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"e50fae64b6cfdbed18861eb49eca5018a920c7a4","modified":1679315433997},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ab6de30729d48669476372ccd4aefa7e15d92c38","modified":1679315433996},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"f640583d45179abc1ef57951e7f61fb9e10f44c9","modified":1679315433998},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"5ee3ade52bc7494226ed30e7dd4531d1d91ca67c","modified":1679315434001},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"d1d7c4da3d56f42541eea965a6ebf1f8e2fff0f4","modified":1679315433999},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"beb3044890bfe7cfd26328565da4f8f955563424","modified":1679315434001},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1679315434003},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"131e2eabf6b216210efd0746300889adfee357be","modified":1679315434004},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"3ef458166041a8a12e493cc5963a5af5d98c1dfc","modified":1679315434003},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1679315434005},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1679315434007},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"d6692f8c81013191fce59f47df1b6171649181ca","modified":1679315434005},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"d84f2f464209f02f49917423ac5accf1c548f38c","modified":1679315434006},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"141f19a8aa41b7a21436f23ce114bd5fda932512","modified":1679315434009},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"f5259f18a906f2862fe72b90c28125b5f6b7d0b1","modified":1679315434009},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"9edbeb1ec6212762d597ae7a05b5a219f72c8f98","modified":1679315434009},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"fb5ee7674070956d134ddca6890a9bd3f398cc0f","modified":1679315434010},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"20f0b6155eee348276dd91790f6a52b1005a0518","modified":1679315434012},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"5f64edd00d0a7c3b5e90d5ff99c9ebba61482d75","modified":1679315434014},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"03dcd0a7a9fdbcc2bc38a99a8fad96ae17a340fa","modified":1679315434016},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"d32898104477acef56c33d00a68b48db15dcf2e6","modified":1679315434014},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"c2f785f4986d6ed1da0d1f2cd339f33754625004","modified":1679315434016},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"f59b2f1351d7977b676a4d51634b7dad648d3e99","modified":1679315434031},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1679315434034},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1679315434033},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"541bc0b481beee921c62d0e84b61b124c95d2d01","modified":1679315434033},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"328a49b26ce663d9824c53aced118db4d55f2ac7","modified":1679315434032},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"e4a478c91cd6750a9f18b65b914ff0b316fb08b3","modified":1679315434034},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"52b3b36a0ed3db3bdf8bf1f999e37731078c485b","modified":1679315434037},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1679315434037},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1679315434037},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"36d90a4b90df89c8fdc588203e394903b11747c8","modified":1679315434036},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1679315434038},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1679315434029},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"98e7c48678c69f089d0d42f6d005c83265e9f400","modified":1679315434030},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"18415c69461d706cf8039580cc79d00c029c637c","modified":1679315434029},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"8db5b764f940614a209a332a4a11a53e5ea52fbc","modified":1679315434044},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1679315434042},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"72fac8fd3671f3525a574423985ee522958989d3","modified":1679315434044},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"713eca7dcc8d4d02a03652367abc1afcc74e6c75","modified":1679315434044},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"8ab118a6f3e115efb50283c0fe408ad91ce7021b","modified":1679315434045},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1679315434397},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1679315434340},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1679315434046},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1679315434420},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1679315434315},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1679315434048},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"ff60e62a9486505283582e8ad9226b35ba93d5c5","modified":1679315434050},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1679315434049},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"d2569ef80127ed2f4af7ef4d9f82b037794eec69","modified":1679315434086},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1679315434048},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1679315434087},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1679315434047},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"8f53dbd5f9a40c377664bf8ca0d5d5ed75b91757","modified":1679315434087},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1679315434088},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6ab7871d36cab438bbd4d781bc1fe7618b46b6e7","modified":1679315434089},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"a8133367d48199e7505c2d831ca848b4202b9ba6","modified":1679315434088},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"066d2c89ad429e44f6467b9267da782ccaad57de","modified":1679315434089},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"3edbe498f7bb9e7daa77f9db30e1b5eeab40e067","modified":1679315434090},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"4c0d5510ea487b0fe63e96464ab0b381565cc273","modified":1679315434114},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1679315434093},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1679315434092},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1679315434113},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"043eba3c85c2e2009a9fabf3c4fc55537852fd86","modified":1679315434133},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1679315434129},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1679315434134},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1679315434135},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1679315434140},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1679315434140},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"137e1c0f71e472fb7004c1832972287fb2dfc343","modified":1679315434152},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1679315434220},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1679315434244},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1679315434246},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1679315434247},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1679315434253},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"1ddc9448fbba8915f9452b4f0a970f33635e46a7","modified":1679315434254},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1679315434250},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"07b1e7932403b38aebb1c024ef3c3f5bb0c6aa2e","modified":1679315434253},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1679315434243},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"1aec6cfcbf8c833f728b8736060fe5690e19d92f","modified":1679315434256},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1679315434249},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1679315434251},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1679315434271},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eceb98f80392cb57df1af5b160d85924f69fb2e0","modified":1679315434299},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1679315434297},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1679315434285},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1679315434286},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1679315434338},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1679315434338},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1679315434339},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1679315434339},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1679315434350},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1679315434358},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1679315434364},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1679315434366},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1679315434372},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1679315434377},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1679315434380},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1679315434380},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1679315434382},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1679315434387},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1679315434391},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1679315434393},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1679315434423},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1679315434423},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1679315434084},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1679315434068},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1679315434144},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1679315434085},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1679315434142},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1679315434146},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1679315434147},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"c55278b00976c96e1df949ca5afee79b8ab385b2","modified":1679315434151},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1679315434068},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1679315434149},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1679315434149},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1679315434148},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"de34668d902ec082d17ddb6dd7ad24255fb547c5","modified":1679315434282},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1679315434276},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1679315434273},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1679315434280},{"_id":"source/about/index.md","hash":"f104d12a6b18ba660eb9802bf20dad63d038712f","modified":1679393778458},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"ba635a17a9d9d132369f9fe4b1fbcaf001ea6ac9","modified":1679315434284},{"_id":"source/categories/index.md","hash":"946aecea0f6ca50c68ebc769a8b628167e1ea98f","modified":1679383888482},{"_id":"source/tags/index.md","hash":"05eb07068daa2417042595680698843de0e6052d","modified":1679383881086},{"_id":"source/_posts/人际/行为准则.md","hash":"c6782b402ad5a8fca5cc244516ccba64880f5e61","modified":1679390122781},{"_id":"source/_posts/.assets/1.md1417238.0365547.png","hash":"f08e3968cd4194ac9505c136350e8228c07cf87c","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1679315434145},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1679315434275},{"_id":"source/_posts/.assets/1.md1417250.7184358.png","hash":"bc1100b85a53645afc760971b5f68e88ae99749d","modified":1672960488000},{"_id":"source/_posts/.assets/1.md1417246.299532.png","hash":"4363511ba7e66e80ce9d5db3d0492def670bed6b","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日promise.md235682.9938133.png","hash":"72f37ff9c3a6d5d1fa259e1440f8a1b81f967486","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1679315434279},{"_id":"source/_posts/.assets/1月20日promise.md235692.2422852.png","hash":"c5fd0395ad7be1c4b12bb42e4a83835bf9d739af","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md2920.8035762.png","hash":"9cac00fee3c6589a752846ca0d5c1ab8c528ec87","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md2916.6256426.png","hash":"58679f9f0b42d38e8fd6b109fc357bc55b4d5655","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md5073.4717357.png","hash":"5928e7f6d75f2662b0f6713ebda9b72eec95dd47","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md6706.498681.png","hash":"83b7f9cc51d379245e69d2eb13eb6a405fcb9238","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md8027.2859747.png","hash":"7045e178f7f44ee9a31742e422ba851863199171","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md67208.077329.png","hash":"c292a7f5b947ce18f5765014ca78b3d7b13620e4","modified":1672960488000},{"_id":"source/_posts/.assets/1月25日vue.md37151.492159.png","hash":"c0db47ad574f61326f147c024aa616fc9e97887f","modified":1672960488000},{"_id":"source/_posts/.assets/1环境配置.md413228.4853456.png","hash":"bc6dcf8e2db4ec4841ba26b3ad4a9f6b1d69ac55","modified":1672960488000},{"_id":"source/_posts/.assets/1环境配置.md413238.6011281.png","hash":"bc6dcf8e2db4ec4841ba26b3ad4a9f6b1d69ac55","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403638.7962655.png","hash":"ce0d72ada1b32d81efa9656ab9d1dbcca4b0dde4","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md513881.3262211.png","hash":"0e6636c580f5ca9e383084aa18e0ad5687e21188","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md513909.2151679.png","hash":"303945403938a5dd4f4d4dc47042de7dc0f339c3","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514033.9866234.png","hash":"9ed5759632b6870fe34de2ddcb2a9911bb9cffaf","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514048.0239213.png","hash":"b8a3812463148ec9e04b8e73b239509018300fc1","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514075.6433358.png","hash":"6860b719680822649a21891cd09f1c35a48f5192","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514055.2760586.png","hash":"081df80364a7e16abc28684dfcd02c69ec84f362","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514216.0652174.png","hash":"6bbf2fbd8fab452d230ae73a224f487da0cbe3a3","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514226.8845683.png","hash":"26b83e702ea40d1aa15c608759dbb9c0fd4c8b3b","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514236.9433722.png","hash":"f31fcbb80f435188e1b6119f59889de250b90259","modified":1672960488000},{"_id":"source/_posts/.assets/316.md166218.3223817.png","hash":"ca6dde64f8815701365f5f1d82b1eb2e9d9e0bf8","modified":1672960488000},{"_id":"source/_posts/.assets/316.md168931.1434498.png","hash":"7ca27e514a994ef4bb61c13f597df61e10c765e4","modified":1672960488000},{"_id":"source/_posts/.assets/316.md171943.9925175.png","hash":"99b6f135497c47c7ecac4165c627cec8884c416a","modified":1672960488000},{"_id":"source/_posts/.assets/316.md172365.8270354.png","hash":"2dabac91cff80865961a46bd036216280950cf2a","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153994.1508552.png","hash":"1b18ca5dc9d06b5101a598b168e5401da7d32ffb","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md507155.4952171.png","hash":"95792ec40d89e2213c2c6bdf6b1760c70bfc39b8","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md514474.7323131.png","hash":"80efaf71730da7901259c1ecef0f0d15a76390de","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md514529.3909751.png","hash":"29ee3b43fae764f868667f04276f97bbc0b53c5c","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md70072.0889825.png","hash":"c89cd62d08eb6c394c3ca0d83f9741a7fd1f2eb3","modified":1672960488000},{"_id":"source/_posts/.assets/414.md100764.0028163.png","hash":"13edde1e0545620dda1eb1aa73817a492b944727","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md34887.9539284.png","hash":"4f3c6884284ca5ae89f626b8892cba1ee079eb74","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md35092.5947733.png","hash":"8accddbf9a4b496209c6b26826c1b913f6c5bf14","modified":1672960488000},{"_id":"source/_posts/.assets/io.md113308.6995954.png","hash":"36a8324c497f0a7fabc06df1a5f8f321010dc562","modified":1672960488000},{"_id":"source/_posts/.assets/io.md162824.3383311.png","hash":"ac346d6ef882905e8ce7c1da81b4204d50786c03","modified":1672960488000},{"_id":"source/_posts/.assets/npm包管理器.md142027.4601679.png","hash":"e8b41cf2d7f581126ab97b53196cf1e25a11680b","modified":1672960488000},{"_id":"source/_posts/.assets/vue.md21286.7180135.png","hash":"61f73b57a22742b467f34ecaeac3675aee863267","modified":1672960488000},{"_id":"source/_posts/.assets/vue.md670337.0901578.png","hash":"22ffa305767d6295126ec4f6bc922a98c1bec70e","modified":1672960488000},{"_id":"source/_posts/.assets/vue.md21297.4033964.png","hash":"12627730be6a408fdb08117aba95878aeb4ba4c5","modified":1672960488000},{"_id":"source/_posts/.assets/w3cschol.md862.4771198.png","hash":"4d554dad82ab882a109b3cd26475e8dc42f7fbd3","modified":1672960488000},{"_id":"source/_posts/.assets/w3cschol.md1746.5527591.png","hash":"9e5e0cd404914324a98937856af0aa1c8ad95740","modified":1672960488000},{"_id":"source/_posts/.assets/webpack源码.md619427.862813.png","hash":"0776bd75ccdf4ba0249b07cbbf7274b1ef52716f","modified":1672960488000},{"_id":"source/_posts/.assets/w3cschol.md2723.7273675.png","hash":"188a4052ae3781c741686fa498f02483704f9032","modified":1672960488000},{"_id":"source/_posts/.assets/webpack源码.md630753.2392985.png","hash":"bb2c647d637e02772278c0a8acd9a156ecd8d3b4","modified":1672960488000},{"_id":"source/_posts/.assets/个人博客系统.md843174.085782.png","hash":"916e07014c94fb283c98b23b4723a50e4bc43e44","modified":1672960488000},{"_id":"source/_posts/.assets/使用必读.md1088.4297397.png","hash":"bff71591e6b6f681ac98834b43cea0e914a1e073","modified":1672960488000},{"_id":"source/_posts/.assets/个人博客系统.md929942.5882908.png","hash":"3871b589abfd803317e03d85e8625f6e9325669f","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀中期答辩.md436514.0435547.png","hash":"cfe496552b0f8c7cd14067b860d16f8dbfa877a2","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md873844.5083633.png","hash":"7338a66762ac9f1615976b6b942cee072ecc3524","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md874548.4817692.png","hash":"2d75f1c516479151878f9af20bb6a6544db8da46","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md874971.9884781.png","hash":"79ff8ab98125623f97b241c7891d0f615b88ea0b","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md874371.3870288.png","hash":"5ae897910e37fc24309f0e12920f5f000bedd415","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md875111.2384049.png","hash":"5acddacbed11a90bb7072011403e83479e2cba81","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md875638.8566695.png","hash":"a9938f11e0d4ae43ef3247c3cb497844b4424388","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md875366.0889578.png","hash":"5c87d87bf1b03740fe039c8c3c0269b6018fc46d","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md876441.8723815.png","hash":"0bfbcb123882ad89e8908a348f439b204e70df47","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md876093.2901425.png","hash":"b85731054b1dc2d3ff644126465aec124ed03338","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md876971.6935862.png","hash":"efc986e7814b24f89634cc0b3674d651540562fc","modified":1672960488000},{"_id":"source/_posts/.assets/剧本杀预约平台.md876629.606092.png","hash":"e25556d950b548391038da4a610765acce7ce4a9","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md422108.356915.png","hash":"6ecb9a561820d52d2c25311ab37daf4893dc6233","modified":1672960488000},{"_id":"source/_posts/.assets/发育.md18024.1677258.png","hash":"f20819062f53a02d59a37f02d2b9e9141ff0be09","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md422058.2758218.png","hash":"ea92d46bdb5d95eebbd60f54976bfe327a3947fc","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148373.3606601.png","hash":"bd239370c3dd2ade7ca6927d5c0630160bf6c29e","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148428.7818816.png","hash":"fd9f28a79a14ef848349c0693e31b2e5eb32c240","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148468.859773.png","hash":"08e90028ee22078f9d9dfa5d63f82be1e63ce2ff","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148564.0685976.png","hash":"9087aec4c150e42c1cb2f01a1de40cbd291559c6","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148522.0800665.png","hash":"def5c9e118327bbfc88a232979c4f07d14d63cca","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148591.3864208.png","hash":"0cabd0102bbcac8bce59d0fbc7d407ded2f2aa3d","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148616.4921955.png","hash":"f9e942006c40459dea09262d39c6f421e561b885","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148666.9466384.png","hash":"f39ca141459703f1c2ab2fe6300053e18237368f","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148697.7836336.png","hash":"152130a937ea9441687220371a08d3bce04f4181","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148748.4971253.png","hash":"9cd6da16650b46e8c05f7bcafb0fe20048084774","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148722.3611294.png","hash":"84029c6695995796d5491f0867fee620473aad1a","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md84017.1395017.png","hash":"78110f6e419f056b59a4e80a71b0d3c4d970df35","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148777.8052579.png","hash":"88dd6de8178cd20b0cd6952940617ce4dbb4ebae","modified":1672960488000},{"_id":"source/_posts/.assets/小程序学习.md363669.9234657.png","hash":"b5c636b667fc75ea79f624c3242aaf9b241b5751","modified":1672960488000},{"_id":"source/_posts/.assets/小红书二面.md146673.6233674.png","hash":"099cf7e173d7ef73c0859bc9f0657b0f2bc6b656","modified":1672960488000},{"_id":"source/_posts/.assets/小红书二面.md146673.62893.png","hash":"099cf7e173d7ef73c0859bc9f0657b0f2bc6b656","modified":1672960488000},{"_id":"source/_posts/.assets/小红书二面.md146673.6313797.png","hash":"099cf7e173d7ef73c0859bc9f0657b0f2bc6b656","modified":1672960488000},{"_id":"source/_posts/.assets/小红书感谢信.md272381.7371272.png","hash":"4654c62804dc69059be61037e7fea19faa8839a1","modified":1672960488000},{"_id":"source/_posts/.assets/小红书感谢信.md272395.64361.png","hash":"aeb60023ba8f446f76661ea30475f3e9e3d2c123","modified":1672960488000},{"_id":"source/_posts/.assets/工作痕迹.md434699.8587094.png","hash":"8a623e7967d4bff5357998741f3fb0536bcaaeb2","modified":1672960488000},{"_id":"source/_posts/.assets/开会1 团队构建.md1183905.2063818.png","hash":"c3c43f509ee51ff0718cffe1069a56bda4e92f2d","modified":1672960488000},{"_id":"source/_posts/.assets/打包.md48959.9726076.png","hash":"dcad7cd08d18b7cef14031efcd7d9c47124ca910","modified":1672960488000},{"_id":"source/_posts/.assets/打包.md48965.0485063.png","hash":"f222c1adbc7860bc5f121c6d6ecb9afd251a61b2","modified":1672960488000},{"_id":"source/_posts/.assets/百度一面.md151231.320574.png","hash":"a76b49d5397aac3a4a618b66cbe0e5df143e101d","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1 理解css.md218374.9276195.png","hash":"3665e101916298f18f0817068a7ff399fddfb9d7","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md218590.3096841.png","hash":"c86b91cf9e76e625ba4e431f015aea439a8665cf","modified":1672960488000},{"_id":"source/_posts/.assets/第一天.md527132.1027915.png","hash":"c10c326a5b337c90f6a7a9d3dd9da24bf59077c3","modified":1672960488000},{"_id":"source/_posts/.assets/第一节上课笔记.md81300.7017663.png","hash":"d9a135675aba3e7a2042d279fe1b08775d8bb20a","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md7996.359897.png","hash":"0f19412f60e28e7580cf483b4f885066f439de0c","modified":1672960488000},{"_id":"source/_posts/.assets/第二年.md146801.2046873.png","hash":"099cf7e173d7ef73c0859bc9f0657b0f2bc6b656","modified":1672960488000},{"_id":"source/_posts/.assets/第二年.md146798.287088.png","hash":"099cf7e173d7ef73c0859bc9f0657b0f2bc6b656","modified":1672960488000},{"_id":"source/_posts/.assets/考试信息整理.md89152.9861956.png","hash":"c35d42c311c3233e3683af5996242d8d99fa2411","modified":1672960488000},{"_id":"source/_posts/.assets/考试信息整理.md89163.8406378.png","hash":"316449b84d23d4c7ba1c29ef4063b40c35b8e2ab","modified":1672960488000},{"_id":"source/_posts/.assets/计划.md1685537.2829463.png","hash":"1990bc7bac110185e69495cbcdc710e71a0c621e","modified":1672960488000},{"_id":"source/_posts/.assets/项目3 项目解决方案.md249259.6685748.png","hash":"6b78f73c6b9b9c39e5fac4a60f1ef0e18e75544b","modified":1672960488000},{"_id":"source/_posts/.assets/项目3解决方案.md249282.8298926.png","hash":"6b78f73c6b9b9c39e5fac4a60f1ef0e18e75544b","modified":1672960488000},{"_id":"source/_posts/.assets/项目3解决方案.md250825.9080774.png","hash":"e00d68055930ec7bdd5690faade385341de3314d","modified":1672960488000},{"_id":"source/_posts/.assets/项目3解决方案.md251039.8216212.png","hash":"e3cee1349f634431101ffbeb7af7a4d624277bfb","modified":1672960488000},{"_id":"source/_posts/.assets/项目5页面编写.md1183937.8709562.png","hash":"c3c43f509ee51ff0718cffe1069a56bda4e92f2d","modified":1672960488000},{"_id":"source/_posts/.assets/项目5页面编写.md1183954.1419548.png","hash":"0e62ec97eec2dfba14327a3aa0948dd35a06e1d4","modified":1672960488000},{"_id":"source/_posts/.assets/项目5页面编写.md1184026.4269618.png","hash":"0a8fb928a909eab1723d633cee1c6830a782b47b","modified":1672960488000},{"_id":"source/_posts/学习方法/版本1.md","hash":"f3defea33a6254d9bb494d08b1ad1bf70d4eee56","modified":1679391729960},{"_id":"source/_posts/学习方法/最新版本.md","hash":"61af703972e3ac9cac077486ee4ed96d522697e0","modified":1679391716894},{"_id":"source/_posts/各种资源/牛客资源理顺.md","hash":"3f05c3001e8239e6589c4c73197c5fd681c1df43","modified":1679391671155},{"_id":"source/_posts/算法/map技巧.md","hash":"df142d466cb26d5607105fc9de028e10e59a13a4","modified":1679390026168},{"_id":"source/_posts/算法/sort操作.md","hash":"f5fd6d0a80e26469c24ca9bced290c39682aeca7","modified":1679390031024},{"_id":"source/_posts/算法/vector技巧.md","hash":"0eb2ef54e1e09deb14b48ef2b7b95dc646ebe05c","modified":1679390122781},{"_id":"source/_posts/算法/字符串技巧.md","hash":"d67436e024a5e1d60c94c18f744df6d9af17dc34","modified":1679390022520},{"_id":"source/_posts/算法/刷题技巧.md","hash":"b9a8a17df2fd44cf0f9b2759a9cdb669708cd989","modified":1679390122781},{"_id":"source/_posts/算法/异或操作.md","hash":"a9f6ff151d564f5140c7e8ce44f692d5671c924a","modified":1679390122781},{"_id":"source/_posts/算法/贪心.md","hash":"1247c701d856abe6542455548ead64cd0820c750","modified":1679390122781},{"_id":"source/_posts/算法/读取操作.md","hash":"972792431ce6cfd98d69bb206a0dd8cba93013e7","modified":1679390122781},{"_id":"source/_posts/算法/迭代技巧.md","hash":"73335bb281a690c40ce73ac765cc0c0f8b486f93","modified":1679390122781},{"_id":"source/_posts/算法/递归技巧.md","hash":"725299463d107f682723140aea32fbc376f23cb7","modified":1679390156815},{"_id":"source/_posts/算法/队列操作.md","hash":"600b45ab0253aecabfa9284dd8c1e3590776469b","modified":1679390149192},{"_id":"source/_posts/资源整理/资源整理.md","hash":"0fb7da59975531bfc25414417beed2bc75ed7687","modified":1679390872761},{"_id":"source/_posts/博客/前端基础/强缓存与协商缓存.md","hash":"a8455c8dbee629ac1413f84f38d3e8e36e597e0d","modified":1679391594643},{"_id":"source/_posts/其他/感悟/1.md","hash":"7e9ac479de1f4f3cc2bb601fb5afe1d93c890763","modified":1679390122781},{"_id":"source/_posts/博客/框架原理/1_vue源码初探.md","hash":"065e58e6a7b7750b63f27821d2132d60e8a7b228","modified":1679391613179},{"_id":"source/_posts/学校/准大三暑假/计划.md","hash":"631970a0236d542b0c96ebe2b73deb557cff4b30","modified":1679391766100},{"_id":"source/_posts/学校/找工作/感谢信.md","hash":"f50f19444fa1e032d9950577a73a5915d5c99d32","modified":1679392563100},{"_id":"source/_posts/学校/大二下/acm.md","hash":"11533c07cb26e8fb6fe4c6d197921383996f2d20","modified":1679392375835},{"_id":"source/_posts/算法/c算法/c艹读写文件与容器操作.md","hash":"7bda54c46b2c948e79748a0b691469bbf0fe5483","modified":1679390355520},{"_id":"source/_posts/算法/c算法/cstring.md","hash":"47b081f0ed60be4e469e8bdd5ee2e773aff33695","modified":1679390323025},{"_id":"source/_posts/算法/c算法/搞不懂的题目数组越界.md","hash":"5b680a92e10b848c6f6040dcbff4e6d135e3580c","modified":1679390403181},{"_id":"source/_posts/算法/c算法/数组字符串刷题.md","hash":"581f91995371caa3e32cad7e114377234a1cb089","modified":1679390413945},{"_id":"source/_posts/算法/学校acm培训/c语言摸底题目讲解.md","hash":"2cfa8a65fce148793433dee9a1c47c558193be24","modified":1679390170968},{"_id":"source/_posts/编程语言/JavaScript/javascript高级程序设计.md","hash":"90e7b881f993d44723d803e1ac4f017cab434d8b","modified":1679390783939},{"_id":"source/_posts/编程语言/JavaScript/js算法.md","hash":"e41481b3243709c86c53dc6d9ba487942fa82701","modified":1679390822199},{"_id":"source/_posts/编程语言/java/io.md","hash":"936ca1aeaefb49bae29154c58468576ef50c7f47","modified":1679390669789},{"_id":"source/_posts/编程语言/doc命令/bat.md","hash":"e201d8a3b5dadd03771f8656b15da6de565b16b3","modified":1679390486865},{"_id":"source/_posts/编程语言/java/io汇总.md","hash":"ba4416032f47c9e57fc7178f3a7c693f4c57780d","modified":1679390691706},{"_id":"source/_posts/编程语言/java/数据库.md","hash":"4587997855d24178b4db70a77855ca034da028b1","modified":1679390747388},{"_id":"source/_posts/前端/学习/vue3/尚桂谷.md","hash":"15f3656ac9481ada44bf6e1f738ad9412bf827bc","modified":1679390122639},{"_id":"source/_posts/前端/学习/BootStrap/w3cschol.md","hash":"764799c9db9261b33b5575b99153614231730968","modified":1679390122628},{"_id":"source/_posts/前端/学习/js基础/获取网页中的文字节点.md","hash":"416e171d16c6c6aa501d3be55d1e1056eafcb188","modified":1679390122629},{"_id":"source/_posts/前端/学习/js基础/强哥题库.md","hash":"4744dd81e7de173e88f96b0e00fc2f2abef59a20","modified":1679389183144},{"_id":"source/_posts/前端/学习/react/尚硅谷学习问题.md","hash":"ba982a29224b1acfd330cc86e77ac63935a72cd3","modified":1679393525402},{"_id":"source/_posts/前端/学习/react/demo1.md","hash":"fc6b79fa321038d1c4ed7e18b9e197571a98ba2e","modified":1679390122638},{"_id":"source/_posts/前端/学习/前端面试讲题/301手写call.md","hash":"f072f6349afdbbd62cbb2e61e3f622ccc8fad6af","modified":1679389604805},{"_id":"source/_posts/前端/学习/前端面试讲题/302js题目.md","hash":"1c2a8c1265ed9530ea24352f68e4d4ba3381e59c","modified":1679389645314},{"_id":"source/_posts/前端/学习/前端工程化/webpack.md","hash":"75bfc984070d547bf73d211e4c26859803a34190","modified":1679389576058},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月10日正则表达式.md","hash":"6550262dcf9a3223e92dafa104f6bdfe49abdb72","modified":1679390122639},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月11日正则表达式.md","hash":"4254d9444518a373572c7907654dd6d7a5f0cb58","modified":1679390122639},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月14日DOM.md","hash":"887a0bc1351a3635df143fa7ba5873ca228ac1d5","modified":1679391080913},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月19日商品放大镜.md","hash":"b60f003b1409e34072cbf325430ef888558cb2ac","modified":1679391154068},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月17号documentElement.md","hash":"f5c79b81957cb261a5fda5ebb60536ca14163a73","modified":1679391134843},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月20日sass.md","hash":"ecb60a110bae549d82aeffe0978a71a7cb6baa9d","modified":1679391166332},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月20日异步.md","hash":"8713300033e2832145723934c04e8aded6a199bf","modified":1679391180670},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月25日vue.md","hash":"7c0b7148a77c510e4c5f9676e87336e98cf7714c","modified":1679391305021},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月23vue.md","hash":"db4e3bf8fe0dbc966520ccc116821676dc58baa6","modified":1679391245081},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月23日vue组件.md","hash":"50a21b833ef7388e6ee51d149c593b39552d7dad","modified":1679391294737},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月4日.md","hash":"1811cb597edb42b085b10da614ef59b897599793","modified":1679389565919},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月5日.md","hash":"47f9b3d78489cf8de9b7e68d5a42ed5edd933fa4","modified":1679390122639},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月8日原型与正则.md","hash":"eaf7e4b1e925a0de16060bded80c159b4b591563","modified":1679390122639},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/1月7日讲题.md","hash":"5eca360a814da90899d865bb4fabbb5511099ed3","modified":1679390122639},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/javascript基础测验.md","hash":"7afa6f52936874fe6e3dad55798197f1a3b5a072","modified":1679391327987},{"_id":"source/_posts/前端/学习/小程序/小程序学习.md","hash":"ec34caacec7628b4115722adc31581c809689f06","modified":1679390122729},{"_id":"source/_posts/前端/学习/小程序/小程序设计大赛.md","hash":"6f374f5027e0f2eaa45922c884a05c1264f5a139","modified":1679390122728},{"_id":"source/_posts/前端/学习/参与开源/相关文章.md","hash":"f8d5b05d2b60e0040c67c8a30f157981ab75ce8f","modified":1679389793429},{"_id":"source/_posts/前端/学习/面试题目/716html刷题.md","hash":"ad32b93a07497a7171110bc791a17262ea8f0e7d","modified":1679393655986},{"_id":"source/_posts/前端/学习/微服务/qiankun.md","hash":"c856b9a137c62fe29be5d2cadccf8169f6ce80ba","modified":1679390122239},{"_id":"source/_posts/学校/准大三暑假/青训营/vue2和vue3区别.md","hash":"e86331fd15b3bde59331988d8f858112b23f9cd0","modified":1679392017060},{"_id":"source/_posts/前端/进阶/前端工程化/peerDependences.md","hash":"eaa9cfc722ea6c28b02f291c556f6a1bfbb60acc","modified":1679391416451},{"_id":"source/_posts/学校/准大三暑假/青训营/开会1 团队构建.md","hash":"3f817e99b373a7847142f1200ab26ff3eb5af253","modified":1679392082119},{"_id":"source/_posts/学校/准大三暑假/青训营/笔记1理解css.md","hash":"23a182622186c68b279f7e4954e0b047d36ad73e","modified":1679392130486},{"_id":"source/_posts/学校/准大三暑假/青训营/考试内容.md","hash":"eee97847c3b3f690b3b337e985dd4d6116d636db","modified":1679392170655},{"_id":"source/_posts/学校/准大三暑假/青训营/项目3解决方案.md","hash":"1c2ac72677fe1e5a2aab717e68de7bd1ef3c1d43","modified":1679392228289},{"_id":"source/_posts/学校/准大三暑假/青训营/项目7汇总.md","hash":"f88252048accac1197c34ea4d732dc7a5ef8287c","modified":1679392300816},{"_id":"source/_posts/前端/进阶/大前端进阶/babel.md","hash":"fb081ebf3f201c130d3f75f684bece32c8ba4922","modified":1679391449652},{"_id":"source/_posts/前端/进阶/大前端进阶/webpack.md","hash":"a5612ca933b6c368f6ee69a089190d799b1081cf","modified":1679391524501},{"_id":"source/_posts/前端/进阶/大前端进阶/commonJS规范.md","hash":"7a3ac85ce57c44878327e77db77b0ed58449b2df","modified":1679391461156},{"_id":"source/_posts/前端/进阶/大前端进阶/npm包管理器.md","hash":"58e47a2b696cf55e138f15703fde2ca6123361a5","modified":1679391469729},{"_id":"source/_posts/前端/进阶/大前端进阶/模块化开发整理.md","hash":"d24aaf417135b81176fbedbf52fe4ba36fd5698b","modified":1679391550689},{"_id":"source/_posts/各种资源/其他/git/1_命令.md","hash":"e163b419c5af41bedd9ed3f8976c377b3d975483","modified":1679391647733},{"_id":"source/_posts/学校/大二下/acm/实验1.md","hash":"069f9f2171a94e5b14056f1c9e9ba8b7021b16c4","modified":1679392420833},{"_id":"source/_posts/学校/面试复习/vue/vuejs设计与实现笔记.md","hash":"37ffeb371cf864c63ba4f6247003809208baa8eb","modified":1679392615905},{"_id":"source/_posts/学校/面试复习/牛客刷题/第一天.md","hash":"3ece63e162859ba99a202ceb0946bebea5333d37","modified":1679392678521},{"_id":"source/_posts/学校/面试复习/牛客刷题/第二天.md","hash":"5d346ae88cc1c0f88302610f9536daae3e5ed683","modified":1679392690744},{"_id":"source/_posts/算法/leetcode/js/偶数子序列.md","hash":"2097d2808e55aeadb4533cff62cba1241ea14f74","modified":1679390253935},{"_id":"source/_posts/算法/leetcode/js/订阅模式.md","hash":"0cbddebd53d6b4c596c91bd1d2da18649c9816de","modified":1679390273588},{"_id":"source/_posts/算法/leetcode/js/421网易做题痕迹.md","hash":"8f519af69ec28c84658f5eb44308e4a48e05d25b","modified":1679390237713},{"_id":"source/_posts/学校/面试复习/面试内容/b站商业化一面.md","hash":"5dee9caa423131b1b7136cc2ea642680e6e66e00","modified":1679392758044},{"_id":"source/_posts/编程语言/JavaScript/时间/时间格式化.md","hash":"1b975a5fb73b5b514a9c23d53403e4029afe71f0","modified":1679392991885},{"_id":"source/_posts/学校/面试复习/面试内容/b站商业化二面.md","hash":"f6056e3ec1fe10ade2a57d3ceb4e36fb651714ca","modified":1679392770512},{"_id":"source/_posts/学校/面试复习/面试内容/字节跳动番茄小说.md","hash":"ee5109846ab955400087f73f7a6cc02d9f15cb6d","modified":1679392807292},{"_id":"source/_posts/学校/面试复习/面试内容/小红书电商技术一面.md","hash":"e4740b379b90079c8410b227ca4391ed3d970b95","modified":1679392865249},{"_id":"source/_posts/学校/面试复习/面试内容/字节跳动基础架构一面.md","hash":"83c68dd2bc20b9f35c01092d7463890c0792eabe","modified":1679392852241},{"_id":"source/_posts/学校/面试复习/面试内容/小红书电商技术二面.md","hash":"ca027de731ba6e92849c440e985231a1e8533a1e","modified":1679392882330},{"_id":"source/_posts/学校/面试复习/面试内容/蔚来新能源一面.md","hash":"17e62014a4bf4c21fc4bd7aafd3d811f2e3a1b4e","modified":1679392928117},{"_id":"source/_posts/学校/面试复习/面试内容/百度工程效能二面.md","hash":"de27501c68854e2c1b33114ba3ee11e21ce77aec","modified":1679392912199},{"_id":"source/_posts/编程语言/go/基础语法/1环境配置.md","hash":"c5cc0ba920bc22759c18416eba6bec0c477d193c","modified":1679390559262},{"_id":"source/_posts/学校/面试复习/面试内容/百度工程效能一面.md","hash":"e7279ee1618209d1ff556626bed0ba3471671df2","modified":1679392900429},{"_id":"source/_posts/编程语言/go/CORS跨域/go跨域demo.md","hash":"f07c45939044d466c2ca38e42e276f5286d47d72","modified":1679390542317},{"_id":"source/_posts/编程语言/go/青训营/每日打卡.md","hash":"e15e1ddfa05ac920f07efe30c912788f798fda60","modified":1679390607132},{"_id":"source/_posts/编程语言/go/青训营/第一节上课笔记.md","hash":"50fc39c2b9d2ccc5635ba2447bbf1046643c2ded","modified":1679390619653},{"_id":"source/_posts/编程语言/go/类型转换/string类型转换.md","hash":"cd18212f0c96a81487cd8c736a497df41f450695","modified":1679390591039},{"_id":"source/_posts/学校/准大三暑假/青训营/反思/获奖反思.md","hash":"a0b9552ba59c2875567272adbc856b81fb8c15c7","modified":1679391852401},{"_id":"source/_posts/前端/进阶/前端工程化/webpack/webpack源码.md","hash":"54fcdcfb9f5f65e2ab297424a5853bbcc3fb81b3","modified":1679391402119},{"_id":"source/_posts/学校/准大三暑假/青训营/反思/项目架构.md","hash":"76e95663a3d8e729d10fb2ac6932470c395527ae","modified":1679391891403},{"_id":"source/_posts/前端/学习/唯创前端上课笔记/node/320第一节课.md","hash":"0ce3ea166b6862339f6a86507c6a865c920265cf","modified":1679390122718},{"_id":"source/_posts/学校/准大三暑假/青训营/答辩/答辩稿子.md","hash":"609a654caf84cbedfe7401ba79b50cdebe9a279b","modified":1679391942150},{"_id":"source/_posts/学校/准大三暑假/青训营/答辩/亮点与难点.md","hash":"ae4d548e4888925426ad553821189021dceea204","modified":1679391920282},{"_id":"source/_posts/学校/准大三暑假/青训营/项目新功能/待添加的功能.md","hash":"6d3a8497fee8bdabb860bf0f15b9e9a2db2e55ef","modified":1679391974471},{"_id":"source/_posts/前端/进阶/大前端进阶/前端静态页面经验/编写经验.md","hash":"26b780b4b113ea811079d6ffb06cea6928a84926","modified":1679390122755},{"_id":"source/_posts/学校/面试复习/牛客刷题/新年第一天/第一天1_4.md","hash":"5e1abf2bcc41ace468a6ee910dff8cbd46f1a0c3","modified":1679392702301},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1679315434112},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1679315434132},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"4cd5ddc413b3024d7b56331c0d0d0b2bd933f27f","modified":1679315434138},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1679315434318},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1679315434328},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1679315434324},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1679315434348},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1679315434356},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1679315434361},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1679315434345},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1679315434371},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1679315434375},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1679315434353},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1679315434367},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1679315434370},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1679315434384},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1679315434396},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"6ceed6950e44336bb51f1b19d4658e4324afcebd","modified":1679315434055},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1679315434065},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1679315434389},{"_id":"source/_posts/.assets/1月20日promise.md234014.5177307.png","hash":"0f6640eeae9a4dbb331b608a806ab594e6608708","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日promise.md236162.7976628.png","hash":"8caef729cbbedf88865289db37778c8c40f6bfdd","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日promise.md237117.9045526.png","hash":"0828d39644b7fe01b1074f4a844766a59d479638","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md248439.0169909.png","hash":"d9e6641c2b1b77935c44ae7d66f378aa34ed59cb","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md249892.955306.png","hash":"15f9d24ec7697e4a4fd333404e24e5c792170026","modified":1672960488000},{"_id":"source/_posts/.assets/1月19日商品放大镜.md163610.6889688.png","hash":"77d396b4535dae42d8bcc6e1c0c2876dc092e4dd","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md252346.3523103.png","hash":"6067b26b73b9e2fd7feb20bf00992fb7c8b0ca2d","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md302.2332279.png","hash":"518c7a831f7f1d95334b296219f701b93c72c8ce","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md8097.629221.png","hash":"d3be9f31b4be7822222715e4e1b4bf7a236be0f5","modified":1672960488000},{"_id":"source/_posts/.assets/1月22日vue.md105983.2423853.png","hash":"b3fafd9a1a1f49bde0ee5c1d089d43b92e1cced7","modified":1672960488000},{"_id":"source/_posts/.assets/1月22日vue.md83635.3176074.png","hash":"ac5fc330082b0ed0f6dc19eed9f727dfa64cf262","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md55852.935343.png","hash":"d827fb3ce4c4ad2484fa62baacf1f0bd8966d56d","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56067.3123484.png","hash":"92aea5574ce698ed6fd2b519f0dd3c56307fd3c7","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56162.2985281.png","hash":"0a7bf8136f29c879f2f2ef92609c544e30e957d6","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56274.1162875.png","hash":"69cd5ef4da5b8478e69412fc7edfff862e194877","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56172.3844651.png","hash":"8be16983685f3a30db94fc4c77c0898f2e49a318","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md60537.8039823.png","hash":"aa5a781c82f808d30799cf852a353807b8c2931a","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md61768.3312032.png","hash":"f560bf34f724c00a9f09a63ef02c635f2bfc0680","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md61756.8490572.png","hash":"2609d407d064229b15e046ac7bb5e7e47ad8c6fb","modified":1672960488000},{"_id":"source/_posts/.assets/1月25日vue.md37619.1287058.png","hash":"46c4af9600b6310980ddc59c34de3a59c0c97335","modified":1672960488000},{"_id":"source/_posts/.assets/1月25日vue.md52399.0476767.png","hash":"00937f22e3aa67b89a551627b76a3f48afe43a7a","modified":1672960488000},{"_id":"source/_posts/.assets/1月25日vue.md51946.6911813.png","hash":"d2908ed8889860f406e035e81d212602c617cae7","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403249.1498896.png","hash":"1b2ac09d57c47bd69fef504485b27717751800f2","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403489.5276732.png","hash":"ed8dacf031afdb3d2138288968889700f535618a","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md513901.9588869.png","hash":"2659f9230694e7807a795ec60e1d41d36af80cbe","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md514042.0338102.png","hash":"3f83d2f5f3b7869e5267872fd8e0acdf8342cf7f","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节.md575482.2178164.png","hash":"095b5ea47ec2d835a598a236c67a8c6cfaca93f3","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节.md576322.9271069.png","hash":"ad68be7bce625e0a84fadce57768aae353ca6df8","modified":1672960488000},{"_id":"source/_posts/.assets/304第二节课.md589026.1121121.png","hash":"c90025c6d15f07c851abda92ec2fafd570b86fc7","modified":1672960488000},{"_id":"source/_posts/.assets/310vue.md162694.4659769.png","hash":"446a1a49606a00b25b75d3d3b7e016ce5ffed65e","modified":1672960488000},{"_id":"source/_posts/.assets/314.md12299.6173281.png","hash":"92e4bea5cbb80b2059b9b667b19b3d5dd594f39b","modified":1672960488000},{"_id":"source/_posts/.assets/316.md166035.1979729.png","hash":"f49ee80b31a8afe576ad402123fe96dbbc4b2353","modified":1672960488000},{"_id":"source/_posts/.assets/316.md166195.1502071.png","hash":"20a98fb518b32ff2a606197aaee786c168e8dfa9","modified":1672960488000},{"_id":"source/_posts/.assets/316.md168668.0410745.png","hash":"248d62118d3433be5a8fbe6fb465dc58943d59a0","modified":1672960488000},{"_id":"source/_posts/.assets/316.md168490.035765.png","hash":"e59fdbddec9190ab187adc3a30e3e9794a523c2f","modified":1672960488000},{"_id":"source/_posts/.assets/316.md170364.855395.png","hash":"1ef8619cf3a6157b4c592d1a6236baa45045db71","modified":1672960488000},{"_id":"source/_posts/.assets/316.md170797.2456565.png","hash":"5ee26ddc771ad066c6e1de89664c8871607c95f9","modified":1672960488000},{"_id":"source/_posts/.assets/316.md170193.314602.png","hash":"1ef8619cf3a6157b4c592d1a6236baa45045db71","modified":1672960488000},{"_id":"source/_posts/.assets/318.md322360.3032255.png","hash":"e74b62584f0f556196fff2b2f2d6a4b2f251c068","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md70019.0938479.png","hash":"37ba870b6530df5bdd18971f9e88fca03244bc13","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md519032.6122771.png","hash":"c2dc5bde79f6555c40960a79e43d43e0df6814a9","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md580375.6449401.png","hash":"91bd7b95c1ac141f006ae7a723c4556a2178cb76","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md580363.1668798.png","hash":"5218a9847cd9aa3f4e3a00ae831eb71eab93a0b7","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md27611.2343393.png","hash":"385d8b6f8e493d361ee1e12b0479f35caa17e736","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md33990.2925189.png","hash":"e9f6b63714d1e872095769e1c7d40c2b227dfef8","modified":1672960488000},{"_id":"source/_posts/.assets/io.md112225.8044385.png","hash":"8318003b3ed63fc832ed872f34b0123e01d4909f","modified":1672960488000},{"_id":"source/_posts/.assets/vue.md21291.9196294.png","hash":"300364f52c4528d5f3e09a379a1abf5ff9f93971","modified":1672960488000},{"_id":"source/_posts/.assets/vue2和vue3区别.md292771.0675869.png","hash":"67d2973638541c99887435164d2c90f22f5b31b9","modified":1672960488000},{"_id":"source/_posts/.assets/webpack源码.md630655.7572731.png","hash":"ac085573217dc8aa1862936cafa820e2478a8ab5","modified":1672960488000},{"_id":"source/_posts/.assets/webpack源码.md630941.8944969.png","hash":"f8899f0f6ea013e742b6d2191df030576ef08e2d","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md418753.1240793.png","hash":"d78ddaa0e1663d558a0d91988da34bfcc9157803","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md418839.1179297.png","hash":"1279ef875b74054c1930033c2debee5c976c29e9","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md420522.8053669.png","hash":"7346639f69e0e22181e01946dcdfc0b295e68b19","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md422046.0170795.png","hash":"f0da63db7187336fa5e1159e9072d55ea47a2ee0","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md148640.3215188.png","hash":"a4b0fb34d88bae4e288967fd0afc1ac10801ed70","modified":1672960488000},{"_id":"source/_posts/.assets/学习资源.md408666.1068105.png","hash":"cf68f1dbfaa37b6a8ebfb45f9cb78ee9cdd8ee6b","modified":1672960488000},{"_id":"source/_posts/.assets/在线教学与考试系统.md88838.0164573.png","hash":"b2bbc972e6652e69d0dd37cf0f4ac70fac64c030","modified":1672960488000},{"_id":"source/_posts/.assets/宁安职教通.md266082.6378361.png","hash":"194760ee428b921923ec4402bf109f0bdc3a3ae9","modified":1672960488000},{"_id":"source/_posts/.assets/宁安职教通.md266706.4021156.png","hash":"384da78ff05ff5f67def6260e06da150bc546b1e","modified":1672960488000},{"_id":"source/_posts/.assets/小程序设计大赛.md346015.3814921.png","hash":"8c66b1f413ea627adaeaa875a8440e54278c34f4","modified":1672960488000},{"_id":"source/_posts/.assets/小红书感谢信.md272291.9352692.png","hash":"47da230fa12e4c7143aeb2682b1345b104e3b0ca","modified":1672960488000},{"_id":"source/_posts/.assets/尚硅谷学习问题.md381422.8787286.png","hash":"df5b0c51840f6cb340e1e19b70030340c14eec0a","modified":1672960488000},{"_id":"source/_posts/.assets/每日打卡.md252947.7437885.png","hash":"3a267d73c478cd7fd25a9f136359f1c706104d39","modified":1672960488000},{"_id":"source/_posts/.assets/春招和项目方面.md776129.6006048.png","hash":"2134566cc47d6d98d239d6876a89cbdb47c63c9a","modified":1672960488000},{"_id":"source/_posts/.assets/直播1项目直播答疑.md340988.0396699.png","hash":"55911406a544b551fc0c705625ca4c29b0915796","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1 理解css.md218323.1269198.png","hash":"315dfbf7432258484ef9839fb668f02af7a2ff12","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1 理解css.md218333.8239649.png","hash":"315dfbf7432258484ef9839fb668f02af7a2ff12","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1 理解css.md218356.52832.png","hash":"2bd140d34d10b7da7f41cdd2911bec6584b94cd1","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md218647.173366.png","hash":"a6f47b08003b58f3a88f296b27235c1c0c7182c0","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md219079.011119.png","hash":"e6e1bd3974258e384852d15e009510d9c3a42faa","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md219886.4612302.png","hash":"a48a50f5e5262b533e49c2babca1c25dc97175dd","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md219141.8691707.png","hash":"e6e1bd3974258e384852d15e009510d9c3a42faa","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md221664.9078061.png","hash":"b69e1999f52c79d6a672d3f7ec2092bcc4161b8d","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md221692.2893996.png","hash":"79390a854180b1d475fee107690701b097b44af0","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md222262.8181075.png","hash":"3be165b4d6da0f6e9ac6c9d5a84a86c4bfa43ab8","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md222275.4463433.png","hash":"271b542c7fcc05aa977aad06884ea8483b6b9d3a","modified":1672960488000},{"_id":"source/_posts/.assets/第一天.md548459.8181286.png","hash":"d33464c7f012dae7c6b6f9472f3967d15978f3ef","modified":1672960488000},{"_id":"source/_posts/.assets/第一章初识springboot.md743514.4169291.png","hash":"1813486e9592ba933a4a28a62791042b9eaf75af","modified":1672960488000},{"_id":"source/_posts/.assets/谷歌邮箱.md687998.7147576.png","hash":"7109d11106a77ba6310c7ca98756933939ec1ce4","modified":1672960488000},{"_id":"source/_posts/.assets/题目集锦.md404832.3926041.png","hash":"cc16fb6f09cc93f46ceae6a5646899e03b55e79f","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1679315434342},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"104613de917a8576ff26aaa36d1c0c7bb4730f4e","modified":1679315434096},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1679315434155},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c843f0dc497314574c608ca28cc742bb041786d5","modified":1679315434158},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"c2f2b1b0346e28ceae19f4b3d174f033311aa060","modified":1679315434303},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1679315434313},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1679315434321},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1679315434335},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1679315434337},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1679315434412},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"9a8303b1c6334e2500da617810206ece45a8ac6b","modified":1679315434053},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1679315434083},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1679315434064},{"_id":"source/_posts/.assets/1月20日promise.md236079.6264426.png","hash":"7938838c1b26090227589869cea5b82ec0b1358f","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日promise.md236088.7578288.png","hash":"6b95be0daba9eddabcfa831f6180c090116a342d","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日promise.md236330.6916808.png","hash":"8aee4235558dd045843a01658870fb78c0a23e95","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md248502.0948059.png","hash":"ebb233ec41b1d54952f9900a534f337c882d67ad","modified":1672960488000},{"_id":"source/_posts/.assets/1月20日sass.md250085.4915727.png","hash":"6a5654b48f08fc0541811398f95fb10cb5856c8e","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56343.3872972.png","hash":"83f6789e640fd574be9fe8b0ac0ebb56a5999d51","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md58696.9284898.png","hash":"57631beda74a385b2a19ac007c6b78fcf5e6ac98","modified":1672960488000},{"_id":"source/_posts/.assets/1月23日vue组件.md67222.0779037.png","hash":"39debe4dcec8b4dbb09924ee594063e8411c7fe1","modified":1672960488000},{"_id":"source/_posts/.assets/1月25日vue.md52376.5114536.png","hash":"99840e9f16ea5aa49b43e85cfa85bd76f5cf0ac6","modified":1672960488000},{"_id":"source/_posts/.assets/302js题目.md434984.9319526.png","hash":"24343213d66c844155d2ab9bb1b71670264dc34c","modified":1672960488000},{"_id":"source/_posts/.assets/302js题目.md437037.7123088.png","hash":"71be4cbc46d681c46b9bd4ea67b51a8b6512fa27","modified":1672960488000},{"_id":"source/_posts/.assets/302js题目.md435927.9342887.png","hash":"2665d02cacbd73549c978540cf576493b6ec993f","modified":1672960488000},{"_id":"source/_posts/.assets/302js题目.md437506.4447353.png","hash":"6f14fb8794d7fb60662120d2cd205daadeb1c71b","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403390.8070026.png","hash":"3e5880de3da6500056eb3482e1cc9bdac04f49c5","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403081.6815878.png","hash":"ef5d38399db9ac2e33c53ea68e99d2a550f069b1","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403322.8302524.png","hash":"5436ea07d85c1519dc2b27d311dca5dd48fffb9b","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403550.0109937.png","hash":"774800262da5c25c80582eaa09f78986fbfb46ce","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403984.15777.png","hash":"82ce8310288f0228fd6d77a2e598fb6d24f09f2f","modified":1672960488000},{"_id":"source/_posts/.assets/303第一节课.md486540.6170202.png","hash":"906122e4ced29686f77cdc3f855fe4568144aff3","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md513871.9560479.png","hash":"9e0b94e8c56d2a3b42ac7948f1e3cdd4318bff71","modified":1672960488000},{"_id":"source/_posts/.assets/303计算机基础.md513892.3355265.png","hash":"87c8b67dded0302060784831b39d6a7a952e6344","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节.md576258.1487402.png","hash":"85e556baa625fdfda143011b179e816796d2720e","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节.md576346.7470506.png","hash":"0e21391a48d18f8a9ddb22f958f5c1c546a3173f","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节.md576286.1779488.png","hash":"07e9199ac7d32ed07a9c716eb920302d15a43b6c","modified":1672960488000},{"_id":"source/_posts/.assets/304第二节课.md589261.0886392.png","hash":"e7944c0b5b9bcd4790b3acdc8ba9240a93008d6f","modified":1672960488000},{"_id":"source/_posts/.assets/310vue.md163140.04702.png","hash":"9d76965854487ee4775a0bc2b469b390788ba3b2","modified":1672960488000},{"_id":"source/_posts/.assets/316.md169133.5178251.png","hash":"882afbcf15751101fda7c07550ed233b2c289f40","modified":1672960488000},{"_id":"source/_posts/.assets/316.md172168.9388571.png","hash":"b82a349da5b462d5efe528cdf5e61cbf631edc20","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md150996.6350845.png","hash":"51fe425039a322524bd04ef15bef97f640899398","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153358.1114678.png","hash":"bf419f401bcfc0b96c0e835b32758a1db3d66758","modified":1672960488000},{"_id":"source/_posts/.assets/318.md321321.0356575.png","hash":"46be190a7ea9dba9331d1ed7f1fe53cef169224c","modified":1672960488000},{"_id":"source/_posts/.assets/318.md322308.7533477.png","hash":"454eb8a75a8fcc7b6f9c50d63533f1bbf2e2c292","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md178935.16939.png","hash":"375bd91946cfac1a8ccd0b2a620c0e52f9461c00","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md82970.8534267.png","hash":"09a6c9e9bf90df3bc766ca03a78b7a8ab4f69fc0","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md627488.1810531.png","hash":"1b91c4cafe9eb84936ee4a94e965aff3f7ec7c88","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md24309.6640686.png","hash":"1b33e5be2ad325d151639c305973812f92e7ef7c","modified":1672960488000},{"_id":"source/_posts/.assets/demo1.md129034.0160372.png","hash":"8406ad287d060e49bd0f2a54cd8d3529add3aff1","modified":1672960488000},{"_id":"source/_posts/.assets/npm包管理器.md142099.1894383.png","hash":"be55ad4f272fc7d31a6cdf4efaec4275cb2e1ea1","modified":1672960488000},{"_id":"source/_posts/.assets/使用必读.md10.1140209.png","hash":"7d4ebeab1f03cd8670387d7d5cd5e7780e5dcdba","modified":1672960488000},{"_id":"source/_posts/.assets/图片.md38.7196858.png","hash":"c26cd094e499442c9d5cea046b9a72dd6b8ba0f3","modified":1672960488000},{"_id":"source/_posts/.assets/异或操作.md17772.237989.png","hash":"a7bee8e90c71eadd647330ba084c213c3906b463","modified":1672960488000},{"_id":"source/_posts/.assets/异或操作.md19073.541803.png","hash":"db140c43f060dcae51c5db40f616a1f4d74f5319","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md219402.1933185.png","hash":"8756dccc5c6bbbd3ecacb41c20b0ed96bf3132eb","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md220639.8503365.png","hash":"e9cacd64dff9a3463ed1772182695a0501cf8047","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md221547.2095768.png","hash":"1055062b9c5e7f69c088ac3e8e4e659915153759","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md220217.8306201.png","hash":"67de9554d90c98ebe47414279d1acd35926925f4","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md222443.5535013.png","hash":"0a040a6a2527a1ec948a5630be4acb0ebe4f5069","modified":1672960488000},{"_id":"source/_posts/.assets/第一天.md549563.984941.png","hash":"dad989dd74b8db35ff68c50de39883fc31ef1101","modified":1672960488000},{"_id":"source/_posts/.assets/第一章初识springboot.md743465.5181492.png","hash":"b84bb92219dda7084f939781c024a9f958e9b74c","modified":1672960488000},{"_id":"source/_posts/.assets/第一章计算机系统概论.md87241.6063322.png","hash":"3c9e7c5d44c26ffa253848ad4da000deefbc9aee","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md222239.9160676.png","hash":"cc4bb1ec34a412079f72440bb6053307a3e3717c","modified":1672960488000},{"_id":"source/_posts/.assets/简历名词.md376726.3995677.png","hash":"32cca70f468e6c2430592e62195e65cf24648697","modified":1672960488000},{"_id":"source/_posts/.assets/简历名词.md376739.5443997.png","hash":"44852a7445b5710e4ed7baa600b3bcc95734a1b6","modified":1672960488000},{"_id":"source/_posts/.assets/黑马程序员.md15356.9063572.png","hash":"287cc9df49f2faf9c94757497ad393dd4a8d0a35","modified":1672960488000},{"_id":"source/_posts/.assets/黑马程序员.md15399.0895887.png","hash":"198679e61a4a99942b791ef05db3b5fd28b45f3e","modified":1672960488000},{"_id":"source/_posts/.assets/黑马程序员.md15636.1510928.png","hash":"6ae679225ef36f6c2ecf3c2b0d4880b0925f2784","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1679315434042},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"e47dd1412564cd6aacc4e0a596fd83074a747870","modified":1679315434308},{"_id":"source/_posts/.assets/1月20日sass.md246098.1806178.png","hash":"f2af79fd5b6acbc873c5ec917d32c579db31550f","modified":1672960488000},{"_id":"source/_posts/.assets/1月22日vue.md104902.4330818.png","hash":"3dbe455354aa10bcfa854298c9c9548b588ac44a","modified":1672960488000},{"_id":"source/_posts/.assets/1月22日vue.md106078.0831891.png","hash":"d1ad2256287a5f99db2186ce6cf44278d98c5e65","modified":1672960488000},{"_id":"source/_posts/.assets/1月23vue.md56360.4937962.png","hash":"8a679dd37e5775ca02559efbb2395b8883db6c3a","modified":1672960488000},{"_id":"source/_posts/.assets/1月22日vue.md97993.6461094.png","hash":"2801cb140e8a852976ff4d65b4f20ab6a92819bc","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md402885.3939762.png","hash":"ab46d051aa0f9927eef0932092240c15fdb20bfa","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403114.780257.png","hash":"cefaec754b475201267b71ce39572b49c0c1de62","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403202.9597229.png","hash":"a0ec57088f5835f9cfddb8aab34d6d65303bb28e","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403460.5871842.png","hash":"e699d2a1c4b8083bdd58ade3def86287d1d3b978","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403731.7126329.png","hash":"c5f3cd7bffde3013d85d43aff52ad8322fbdf573","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403911.3649901.png","hash":"8d368afc5a926bec2739a20aae993d9232fb487b","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md404300.9134356.png","hash":"2689fe3cb0a479312c04688017057d029437d3bb","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md404516.2926099.png","hash":"0f745c93ec9be6e36ab2f3c168ae2f8d9920caaa","modified":1672960488000},{"_id":"source/_posts/.assets/303第一节课.md488343.0718361.png","hash":"8cd6b53ed5560e694076734f8b20172f9bab7052","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md524482.9219879.png","hash":"220268c3d0e7e4cd052e5864c6c28f3a5c167b5c","modified":1672960488000},{"_id":"source/_posts/.assets/304数据类型.md605490.2050867.png","hash":"8447b040e406e41901e6566bc9e4154275348465","modified":1672960488000},{"_id":"source/_posts/.assets/304第二节课.md587747.2865378.png","hash":"3a53c19585a7417caa7474340c4285263fa6cfb9","modified":1672960488000},{"_id":"source/_posts/.assets/304第二节课.md589080.2616685.png","hash":"425d6fa9ca81dbd2b49c15d5d81487b892f9df81","modified":1672960488000},{"_id":"source/_posts/.assets/307第一节课.md831959.6854642.png","hash":"35953f1776315d2a59c028af9e714d2f3d02a7e4","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md60406.7272974.png","hash":"8ab8b632dd74cd9fabbad1267434cfbf5de2632e","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md149858.5418655.png","hash":"d8039b2ce897dbc4472a3ed5d0ab6c35947447e0","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md152850.5430698.png","hash":"28d18b246e2123deddd6fba9ab9888f149217e67","modified":1672960488000},{"_id":"source/_posts/.assets/318.md323174.045727.png","hash":"f142155ad25f4811efe4ef954e36ebad88eff681","modified":1672960488000},{"_id":"source/_posts/.assets/318.md324749.0586487.png","hash":"fdbe9b558a6d1832c063b6d2d470a348edb3c920","modified":1672960488000},{"_id":"source/_posts/.assets/318.md322776.2431871.png","hash":"cafdd00b3c7d803ca4063597f67c43eb622fe88b","modified":1672960488000},{"_id":"source/_posts/.assets/318.md322874.6618118.png","hash":"66801bafb53741f208a4cd798b1ca5630f4d4297","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md580521.6445002.png","hash":"1cf01e63a4a21c320cd1f17ddfb617f3f756a93c","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md30465.8998462.png","hash":"68f865589bd328f57307b3b55426f2c25ee4ad47","modified":1672960488000},{"_id":"source/_posts/.assets/io.md114167.4566158.png","hash":"03a8a6d1d2281776e243df1d8f6cd1ef9816b676","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md414826.36603.png","hash":"7e3743bce2fdb7e126757be6acc8384c5052b108","modified":1672960488000},{"_id":"source/_posts/.assets/实验二.md87475.2381731.png","hash":"1b21bf74f0ee360d26450b52f0fb64474de2943d","modified":1672960488000},{"_id":"source/_posts/.assets/实验二.md88143.6928752.png","hash":"321af7a14fd2eb6699572975c600ff6cf103037c","modified":1672960488000},{"_id":"source/_posts/.assets/浏览器安全.md380393.4115212.png","hash":"639c33b0f0b8b6f37d51c6932cae6e1e8b7715cd","modified":1672960488000},{"_id":"source/_posts/.assets/笔记1理解css.md222125.9937966.png","hash":"30757daea6f872ddd74e4b11457da5d9e7461f9a","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md231716.1770315.png","hash":"d1b848ae3b281269a60d63e04b0a3daedcb66b30","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md2923.2132966.png","hash":"068377c2e575436fb87560771c17aa94ce999780","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md3561.7612394.png","hash":"068377c2e575436fb87560771c17aa94ce999780","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md7310.7053834.png","hash":"5f27c32d23b4d827051f0d8d2a7009f4b8b94b8b","modified":1672960488000},{"_id":"source/_posts/.assets/答辩稿子.md186861.0243026.png","hash":"e85a59b205643cd9f971fabdcf681d2eb4843d92","modified":1672960488000},{"_id":"source/_posts/.assets/简历名词.md378577.1587822.png","hash":"b29e609d77a25e427e9c01638137bd27967af910","modified":1672960488000},{"_id":"source/_posts/.assets/简历名词.md378551.5810254.png","hash":"e53d45d01b4d34ca449d1af3ce4e18ea93c7c2dd","modified":1672960488000},{"_id":"source/_posts/.assets/计划.md1939865.5019727.png","hash":"9ed090bba49534677c492b1040ef61e2443b1d68","modified":1672960488000},{"_id":"source/_posts/.assets/重点难点.md401944.0257807.png","hash":"793389427df3fbd4c522bdee497037d1e920f2dc","modified":1672960488000},{"_id":"source/_posts/.assets/题目集锦.md404471.7235549.png","hash":"0f745c93ec9be6e36ab2f3c168ae2f8d9920caaa","modified":1672960488000},{"_id":"source/_posts/.assets/题目集锦.md404477.1056487.png","hash":"0f745c93ec9be6e36ab2f3c168ae2f8d9920caaa","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1679315434332},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1679315434419},{"_id":"source/_posts/.assets/302第一节课.md402948.9206892.png","hash":"bdb9574170d2fbf7d1c94094644052431e6dbd1a","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md404403.4174711.png","hash":"e02171efac8b224a3bbc135f2947b0cb51718cbb","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md518996.1259508.png","hash":"a87a97d60f709ed3309667026c697a154c8fb7ed","modified":1672960488000},{"_id":"source/_posts/.assets/303第一节课.md487003.8642761.png","hash":"bdf47098b62a3b3c92bd6777a06dd352c8f539ee","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md519688.4141775.png","hash":"137246f6c95bbc97d5c0fe927ec046379e1b8060","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md524126.2648819.png","hash":"706792465eca24878ffef1753678711edf36f9dd","modified":1672960488000},{"_id":"source/_posts/.assets/304第一节课.md592821.6689658.png","hash":"26c2195696a21e6c3f29878b728b63c29d9cb779","modified":1672960488000},{"_id":"source/_posts/.assets/307第一节课.md836341.2939575.png","hash":"e66a134d355be93a35458cca325de8ef222a5b40","modified":1672960488000},{"_id":"source/_posts/.assets/307第一节课.md834544.1709982.png","hash":"1c39a928f18f3c5bc94ae7b10f720251bb0dd3de","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63091.5971932.png","hash":"1a9792d738003740942b61c34461c3e41cae928c","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63239.2790501.png","hash":"54aedd7aeb551c7da3bfe25bfecf6ddc66912413","modified":1672960488000},{"_id":"source/_posts/.assets/316.md179148.022251.png","hash":"070c9e3af1b554e541be7054d42b00809ae051b8","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md152760.8747772.png","hash":"b6ef5fc412b6d12245d705629182a20e1529268a","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153731.2351819.png","hash":"57f643c88b35861d672617b7f4dc1675dc678faa","modified":1672960488000},{"_id":"source/_posts/.assets/320第一节课.md82728.5009842.png","hash":"7e9c0136c8f5562dac32f459d7a502f3666bf085","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md581338.1178945.png","hash":"e91c3214f401f39cb51df64a300c87d7027a5098","modified":1672960488000},{"_id":"source/_posts/.assets/图片.md27.3626111.png","hash":"7e49b7e43d6b8021ee6b18c18a810630db23639d","modified":1672960488000},{"_id":"source/_posts/.assets/怎么拒绝.md242998.9812392.png","hash":"8bf90ed498812ccedbec1a14611abfdb9b73d098","modified":1672960488000},{"_id":"source/_posts/.assets/第一章计算机系统概论.md87291.2097166.png","hash":"debb0a6d98875356efc38971e1dcb080c520e932","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md145025.813975.png","hash":"17532288e4173a0e388ced14536f0c31895a7279","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md146153.1875207.png","hash":"c8e3b1c9f4ad06bad0c20c1d2973372191852989","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md3582.7172177.png","hash":"69b56f7ecd979770c5cbe9adba2fc049478526cd","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md7697.5051569.png","hash":"7614fab73292ad9027ea58a0bbb1ddb38eccdb30","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md4211.2132596.png","hash":"24718ec66f97c8884157c2924f60c52cffc33589","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md82361.6223639.png","hash":"3e71e7a463dc3cdd15f81824db5a1178de2f9bf6","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1679315434080},{"_id":"source/_posts/.assets/1月20日sass.md246574.1015633.png","hash":"f012b9c4a305d657895b830d4d8f1d3ddefe99d4","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403059.2953169.png","hash":"7d3e87b569d39a390eaeb4e8b7c919f53ead7fd1","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md403626.1211157.png","hash":"1c5a251948775249d7b8654b87333ab47e0b6cd9","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md405021.7468375.png","hash":"0f8bd94573f97e8cfb07c6bd6322edc059eb3a7b","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md523644.2103565.png","hash":"2aba966b816c311e69a66efab14fe248e8781028","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md523969.1829234.png","hash":"2aba966b816c311e69a66efab14fe248e8781028","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md59705.4939483.png","hash":"787abb7a128b77015030837a366538fa14c139f6","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md60193.3983117.png","hash":"30a41465e51a6fad81204267068d10725c83d595","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63527.0270604.png","hash":"cff2e7452f5c0202d80ec8b9a18287df59a1f6f4","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63356.3840514.png","hash":"ebb80afb6d612cab7e0df68db1eb7c5dc938c6b8","modified":1672960488000},{"_id":"source/_posts/.assets/316.md166018.1343452.png","hash":"41d4e2030a4183de97cbd7ed10ae509dddd8fb0f","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md150976.1209527.png","hash":"e275cf05d58f8ec1d4b6fcccacda2796f0221536","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153447.6117376.png","hash":"c65a20703f29a7ca30dca3443561eb09f3cda03b","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153573.4817305.png","hash":"800d411516ff31f225f968732749b7bfdf333ab3","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153858.2409436.png","hash":"a206efd3f720e155d5d045bc74de452a399b77e9","modified":1672960488000},{"_id":"source/_posts/.assets/318.md324928.0605421.png","hash":"8d06ff94fec49294e500c5f765c2932d7ee22c50","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md582185.3142967.png","hash":"a4d1653110205c3a709d6a3b55ce8a43a8334b6a","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583357.6698474.png","hash":"e7541b71ea16e7308f47ea74a4cb86ddc01c4041","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583493.9084818.png","hash":"544087a1b1fca64e937f71deb7131848d74f784c","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583098.7936653.png","hash":"d8947e6e246e44b98595ee1256a3c2d349cd5dcd","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md30833.0647414.png","hash":"1b1cc78d532a3ce6e13358cb60d54a1ab9638190","modified":1672960488000},{"_id":"source/_posts/.assets/bat.md35168.0603045.png","hash":"246ccf44c2c631f24a2ab9b9d46bb37153e1df21","modified":1672960488000},{"_id":"source/_posts/.assets/npm包管理器.md52802.3586232.png","hash":"dadb7542f3b147b55329f22c12de1a616e99c4c0","modified":1672960488000},{"_id":"source/_posts/.assets/尚硅谷学习问题.md288804.2270389.png","hash":"443e1f103981ea6f4c4c4d485e5642e2c8993f05","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md3863.8654603.png","hash":"9d0802c6fae5945be94f97b77c89039382362f01","modified":1672960488000},{"_id":"source/_posts/.assets/第三章系统总线.md8166.0720473.png","hash":"e8bec98e5c86ee8c444fac1d37a0e263291255bd","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md400546.1236557.png","hash":"f8e3174a2b488d8ca89bcb44250290dedff34936","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md519726.3761108.png","hash":"b03f69cf51b480b2b3aa7871c982a17226b555ff","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md519705.8072007.png","hash":"d5ff94bdda16b5503e3b90bf8c01453cb8df7974","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md522938.8115139.png","hash":"dc3719acfb1fa51025196f6d510e4f236be22f03","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md522951.8562219.png","hash":"9c43b60e3ea20ac8a941423391e53ff8191089ef","modified":1672960488000},{"_id":"source/_posts/.assets/307第一节课.md832913.3045981.png","hash":"2117ab839d51099451643d658aac79fbdd7542b3","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md60221.4728807.png","hash":"fa8edd76e801acaec788c836affad8f2423654df","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md152733.7709814.png","hash":"f8922bd543d67cfee6c8d0c61219574b7b5702d4","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153234.9609189.png","hash":"a6368df83fd03e1bc500ada82f3b06c8c9fc8c2e","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153265.7995551.png","hash":"a6368df83fd03e1bc500ada82f3b06c8c9fc8c2e","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153769.3793099.png","hash":"8a64303e5aa01d62ae158dcac54f33ff8e484be7","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153694.9374618.png","hash":"1c091a30542b8d668b2ec7981e35589c291b57dd","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md153872.797065.png","hash":"e769584c3f6f0bc6f92fb7a8e8ffae3dde2183f5","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md581955.1089297.png","hash":"6c74cc4f1d2b65229587f17587eb29fb59d1cf79","modified":1672960488000},{"_id":"source/_posts/.assets/宁安职教通.md265628.2850218.png","hash":"5e4ac9710626145bcb89ce7df876b9d9062a6be1","modified":1672960488000},{"_id":"source/_posts/.assets/每日打卡.md433866.5600664.png","hash":"5617255e49c4b605ce0f636e8810a843e550de1d","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"d1ec95821873a81eddf4e5698698b39d54d2a8cc","modified":1679315434297},{"_id":"source/_posts/.assets/302第一节课.md404663.8044042.png","hash":"9e8115a2cbcaeee37f6f59ba825f8c1db6f3b1c7","modified":1672960488000},{"_id":"source/_posts/.assets/303简历指导.md522970.4228903.png","hash":"3a0c80c8b6481131afa65df9a5cc6c965814f9fb","modified":1672960488000},{"_id":"source/_posts/.assets/307第一节课.md833052.3907567.png","hash":"9ae6ce2017f3daef3bf165775ae1ab6b7122ce75","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md60959.9550691.png","hash":"83417cb3b9d02b7971211802d0805c34ce8a0fc8","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md61976.4975929.png","hash":"9d8b3779603af4a35972a286067f82e323813034","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63149.6482561.png","hash":"a851aa21c314dd2fdf904b4e3166a800fac615ed","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md151372.8978418.png","hash":"5a6a848e3fdff15bda82c8ed37617cb2578f259d","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md580865.5053063.png","hash":"22243da52e5efa39f69e155b17caf229ab2c8fe7","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md581273.0605574.png","hash":"8523036ccddcc5e8d986b277d8674628d2614c24","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md581285.9342034.png","hash":"42a4cc6f75f5dff112745b3571ec1a9f3afb7300","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583518.8213372.png","hash":"3ca7caae16190dc2ed37fd5326135d0b44c0792f","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583748.8276033.png","hash":"614f18b49952b8b4b899f2bc0739d26b6d602b76","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"80063546f828243e2345670701656b735fc3ead8","modified":1679315434270},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1679315434408},{"_id":"source/_posts/.assets/303第一节课.md491287.7947322.png","hash":"4a23742a322bb7faedb5ade9ffb701c54d3022c4","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md63709.1916218.png","hash":"8bec5a5a40b010f27a29a613024587b02527aec2","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md64596.4658457.png","hash":"59e28eef841248fc7dfb75582c9eea6fe4513717","modified":1672960488000},{"_id":"source/_posts/.assets/314.md491688.3491751.png","hash":"5d84a86b4a016979284e58989349c1103b8e4e78","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md150602.046356.png","hash":"03458099e97f6adf5682624a29d58837fc3703b5","modified":1672960488000},{"_id":"source/_posts/.assets/321汇编语言学习.md583667.1757437.png","hash":"f373972269a31f8b61b284a1bbcd56b6057672fe","modified":1672960488000},{"_id":"source/_posts/.assets/require和amdcmd支持.md610277.4831827.png","hash":"c50d4b12d60ed5f570120bd387f91d164294adce","modified":1672960488000},{"_id":"source/_posts/.assets/require和amd cmd支持.md610239.5691017.png","hash":"5c6eff3963d5ac77cf96d33aaf25d0d4d2d7106e","modified":1672960488000},{"_id":"source/_posts/.assets/第一章计算机系统概论.md87638.5355743.png","hash":"67345a7f29928c79e226a2cc4df506b86eaff25d","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md62859.096138.png","hash":"4c92087e77c2f79eb4d547e75f3be8ec6b9a4035","modified":1672960488000},{"_id":"source/_posts/.assets/314.md491661.3767257.png","hash":"a3bb87ce9472ba9a78daedea40e556363806275d","modified":1672960488000},{"_id":"source/_posts/.assets/原型题目1.md416261.3726985.png","hash":"09c58b99cb4ff4b7d671ab93ff73f276da3bcc79","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md402637.3292128.png","hash":"887f65aa7b2fa6afee1bb48ceb759c663810bb22","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md59771.1621101.png","hash":"1d638ffa0b7df151509193dd787be1084f8d4f5d","modified":1672960488000},{"_id":"source/_posts/.assets/309第二节课.md62881.9527519.png","hash":"41ab2c552261c528d14a69be93fdb826a1ec0cce","modified":1672960488000},{"_id":"source/_posts/.assets/316二分法.md152887.5649778.png","hash":"dc7d55d7ab149ebeb8a19d29987e848c17811be2","modified":1672960488000},{"_id":"source/_posts/.assets/课程规划与简介.md1656767.020326.png","hash":"2ecca511605b974d922284b1ceaa6798d444463a","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1679315434109},{"_id":"source/_posts/.assets/303第一节课.md491422.5524088.png","hash":"c2b9a6e98f2120007eb01d9ed22d0ce01a590d7a","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"1df59d7e5481ac2917c7043b28883393675dcaf9","modified":1679315434126},{"_id":"source/_posts/.assets/316二分法.md152823.9848562.png","hash":"2b27766823eaf89c9b6fe59aa24522c07987e8cb","modified":1672960488000},{"_id":"source/_posts/.assets/302第一节课.md401444.5653827.png","hash":"1856fe6c28644634425a582462624e8237dd4cd5","modified":1672960488000},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"5755d222f96a897b9f509d2859be21996a3dbfd0","modified":1679315434241},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"3889e37cafaaace5e745ccd3e10c9255e32cae3a","modified":1679315434219}],"Category":[{"name":"学习方法","_id":"clfi3co5t0005o8hug18vc6j6"},{"name":"修身","_id":"clfi3co5z000ao8hu02vob86e"},{"name":"算法","_id":"clfi3co62000ho8hueb8cgy7o"},{"name":"前端","_id":"clfi3co6c000to8hu2d7qh6vf"},{"name":"资源整理","_id":"clfi3co6k001do8hu1q9og6w7"},{"name":"其他","_id":"clfi3co6m001oo8huafpu3uej"},{"name":"学校","_id":"clfi3co6p001wo8hu15od4azx"},{"name":"js","_id":"clfi3co79003ao8hu1l7o2bgi"},{"name":"doc","_id":"clfi3co7e003po8huajyefi16"},{"name":"java","_id":"clfi3co7g003xo8hu3xoxhryi"},{"name":"git","_id":"clfi3co8k007po8hu6rag7p41"},{"name":"面经","_id":"clfi3co8s008ko8hu3qtzceqc"},{"name":"golang","_id":"clfi3co91009go8hu1dxzfhlx"}],"Data":[],"Page":[{"title":"tags","date":"2023-03-21T07:13:13.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-03-21 15:13:13\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2023-03-21T07:31:21.086Z","path":"tags/index.html","comments":1,"_id":"clfi3co5c0000o8hu28lvdk7w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-03-21T07:13:41.000Z","layout":"about","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-03-21 15:13:41\nlayout: about\ntype: about\n---\n","updated":"2023-03-21T10:16:18.458Z","path":"about/index.html","_id":"clfi3co5g0001o8hu0wjv9sy4","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2023-03-21T07:12:43.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-03-21 15:12:43\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-03-21T07:31:28.482Z","path":"categories/index.html","comments":1,"_id":"clfi3co5h0002o8hu649c13og","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"自己总结的学习方法 第一版","date":"2022-10-15T02:06:51.000Z","_content":"\n## 整体性学习法\n\n（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。\n\n（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。\n\n（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。\n\n（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。\n\n（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。\n\n（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。\n\n## 具体实战\n\n1. 先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）\n2. 接下来慢速播放视频，配合实践练习（上课的时候跟着做题）\n3. 然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)\n4. 最后复习，写比第三版详尽的笔记，做思维导图。\n5. 多尝试，纠错，提速。\n\n注意：联系可以用命名的方式来建立，比如1:2,2:7–>1:7命名为穿越\n\n比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。\n\n大量记忆即应用性知识（算法api，单词）\n\n1. (先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）\n2. 然后从头到尾实践(复述)一遍，期间可以做笔记\n3. 什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识\n4. 查缺补漏\n5. 应用\n\n## 可参考A4纸记忆法\n\n* 类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习\n\n## 实战方法，项目\n\n1. 在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）\n2. 主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的\n3. 为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践\n4. 初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚\n5. 一个一个解决问题\n6. 然后缓慢补充理论\n\n## 学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\n\n> 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n>\n> 感悟\n>\n","source":"_posts/学习方法/版本1.md","raw":"---\ntitle: '自己总结的学习方法 第一版'\ndate: 2022-10-15 10:06:51\ntags: 学习方法\ncategories: 学习方法\n---\n\n## 整体性学习法\n\n（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。\n\n（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。\n\n（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。\n\n（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。\n\n（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。\n\n（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。\n\n## 具体实战\n\n1. 先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）\n2. 接下来慢速播放视频，配合实践练习（上课的时候跟着做题）\n3. 然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)\n4. 最后复习，写比第三版详尽的笔记，做思维导图。\n5. 多尝试，纠错，提速。\n\n注意：联系可以用命名的方式来建立，比如1:2,2:7–>1:7命名为穿越\n\n比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。\n\n大量记忆即应用性知识（算法api，单词）\n\n1. (先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）\n2. 然后从头到尾实践(复述)一遍，期间可以做笔记\n3. 什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识\n4. 查缺补漏\n5. 应用\n\n## 可参考A4纸记忆法\n\n* 类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习\n\n## 实战方法，项目\n\n1. 在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）\n2. 主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的\n3. 为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践\n4. 初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚\n5. 一个一个解决问题\n6. 然后缓慢补充理论\n\n## 学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\n\n> 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n>\n> 感悟\n>\n","slug":"学习方法/版本1","published":1,"updated":"2023-03-21T09:42:09.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co5n0003o8hu08akbmjf","content":"<h2 id=\"整体性学习法\"><a href=\"#整体性学习法\" class=\"headerlink\" title=\"整体性学习法\"></a>整体性学习法</h2><p>（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。</p>\n<p>（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。</p>\n<p>（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。</p>\n<p>（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。</p>\n<p>（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。</p>\n<p>（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。</p>\n<h2 id=\"具体实战\"><a href=\"#具体实战\" class=\"headerlink\" title=\"具体实战\"></a>具体实战</h2><ol>\n<li>先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）</li>\n<li>接下来慢速播放视频，配合实践练习（上课的时候跟着做题）</li>\n<li>然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)</li>\n<li>最后复习，写比第三版详尽的笔记，做思维导图。</li>\n<li>多尝试，纠错，提速。</li>\n</ol>\n<p>注意：联系可以用命名的方式来建立，比如1:2,2:7–&gt;1:7命名为穿越</p>\n<p>比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。</p>\n<p>大量记忆即应用性知识（算法api，单词）</p>\n<ol>\n<li>(先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）</li>\n<li>然后从头到尾实践(复述)一遍，期间可以做笔记</li>\n<li>什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识</li>\n<li>查缺补漏</li>\n<li>应用</li>\n</ol>\n<h2 id=\"可参考A4纸记忆法\"><a href=\"#可参考A4纸记忆法\" class=\"headerlink\" title=\"可参考A4纸记忆法\"></a>可参考A4纸记忆法</h2><ul>\n<li>类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习</li>\n</ul>\n<h2 id=\"实战方法，项目\"><a href=\"#实战方法，项目\" class=\"headerlink\" title=\"实战方法，项目\"></a>实战方法，项目</h2><ol>\n<li>在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）</li>\n<li>主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的</li>\n<li>为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践</li>\n<li>初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚</li>\n<li>一个一个解决问题</li>\n<li>然后缓慢补充理论</li>\n</ol>\n<h2 id=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"><a href=\"#学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\" class=\"headerlink\" title=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"></a>学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹</h2><blockquote>\n<p>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</p>\n<p>感悟</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"整体性学习法\"><a href=\"#整体性学习法\" class=\"headerlink\" title=\"整体性学习法\"></a>整体性学习法</h2><p>（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。</p>\n<p>（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。</p>\n<p>（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。</p>\n<p>（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。</p>\n<p>（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。</p>\n<p>（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。</p>\n<h2 id=\"具体实战\"><a href=\"#具体实战\" class=\"headerlink\" title=\"具体实战\"></a>具体实战</h2><ol>\n<li>先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）</li>\n<li>接下来慢速播放视频，配合实践练习（上课的时候跟着做题）</li>\n<li>然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)</li>\n<li>最后复习，写比第三版详尽的笔记，做思维导图。</li>\n<li>多尝试，纠错，提速。</li>\n</ol>\n<p>注意：联系可以用命名的方式来建立，比如1:2,2:7–&gt;1:7命名为穿越</p>\n<p>比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。</p>\n<p>大量记忆即应用性知识（算法api，单词）</p>\n<ol>\n<li>(先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）</li>\n<li>然后从头到尾实践(复述)一遍，期间可以做笔记</li>\n<li>什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识</li>\n<li>查缺补漏</li>\n<li>应用</li>\n</ol>\n<h2 id=\"可参考A4纸记忆法\"><a href=\"#可参考A4纸记忆法\" class=\"headerlink\" title=\"可参考A4纸记忆法\"></a>可参考A4纸记忆法</h2><ul>\n<li>类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习</li>\n</ul>\n<h2 id=\"实战方法，项目\"><a href=\"#实战方法，项目\" class=\"headerlink\" title=\"实战方法，项目\"></a>实战方法，项目</h2><ol>\n<li>在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）</li>\n<li>主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的</li>\n<li>为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践</li>\n<li>初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚</li>\n<li>一个一个解决问题</li>\n<li>然后缓慢补充理论</li>\n</ol>\n<h2 id=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"><a href=\"#学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\" class=\"headerlink\" title=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"></a>学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹</h2><blockquote>\n<p>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</p>\n<p>感悟</p>\n</blockquote>\n"},{"title":"行为准则","date":"2022-10-15T02:06:51.000Z","_content":"\n## 不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\n\n## 三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\n\n## 一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\n\n## 独立\n\n## 不慌张\n\n## 不影响自己才帮助别人\n\n## 和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\n\n## 面向场景的整理笔记\n\n## 在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\n\n## 警惕那些你成功后不给你鼓掌的人\n\n## 减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\n\n## 每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\n\n## 突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\n","source":"_posts/人际/行为准则.md","raw":"---\ntitle: '行为准则'\ndate: 2022-10-15 10:06:51\ntags: 为人\ncategories: 修身\n---\n\n## 不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\n\n## 三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\n\n## 一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\n\n## 独立\n\n## 不慌张\n\n## 不影响自己才帮助别人\n\n## 和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\n\n## 面向场景的整理笔记\n\n## 在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\n\n## 警惕那些你成功后不给你鼓掌的人\n\n## 减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\n\n## 每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\n\n## 突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\n","slug":"人际/行为准则","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co5r0004o8hu2idsh31u","content":"<h2 id=\"不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\"><a href=\"#不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\" class=\"headerlink\" title=\"不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\"></a>不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己</h2><h2 id=\"三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\"><a href=\"#三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\" class=\"headerlink\" title=\"三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\"></a>三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）</h2><h2 id=\"一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\"><a href=\"#一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\" class=\"headerlink\" title=\"一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\"></a>一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性</h2><h2 id=\"独立\"><a href=\"#独立\" class=\"headerlink\" title=\"独立\"></a>独立</h2><h2 id=\"不慌张\"><a href=\"#不慌张\" class=\"headerlink\" title=\"不慌张\"></a>不慌张</h2><h2 id=\"不影响自己才帮助别人\"><a href=\"#不影响自己才帮助别人\" class=\"headerlink\" title=\"不影响自己才帮助别人\"></a>不影响自己才帮助别人</h2><h2 id=\"和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\"><a href=\"#和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\" class=\"headerlink\" title=\"和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\"></a>和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受</h2><h2 id=\"面向场景的整理笔记\"><a href=\"#面向场景的整理笔记\" class=\"headerlink\" title=\"面向场景的整理笔记\"></a>面向场景的整理笔记</h2><h2 id=\"在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\"><a href=\"#在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\" class=\"headerlink\" title=\"在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\"></a>在一个高压环境中，兴趣和自律最好要比被迫考核优先到来</h2><h2 id=\"警惕那些你成功后不给你鼓掌的人\"><a href=\"#警惕那些你成功后不给你鼓掌的人\" class=\"headerlink\" title=\"警惕那些你成功后不给你鼓掌的人\"></a>警惕那些你成功后不给你鼓掌的人</h2><h2 id=\"减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\"><a href=\"#减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\" class=\"headerlink\" title=\"减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\"></a>减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小</h2><h2 id=\"每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\"><a href=\"#每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\" class=\"headerlink\" title=\"每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\"></a>每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效</h2><h2 id=\"突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\"><a href=\"#突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\" class=\"headerlink\" title=\"突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\"></a>突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\"><a href=\"#不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\" class=\"headerlink\" title=\"不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己\"></a>不给的时候，会更爱自己，因为自己时刻保持七分爱意，3分爱自己</h2><h2 id=\"三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\"><a href=\"#三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\" class=\"headerlink\" title=\"三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）\"></a>三分严厉七分善意（3分要求7分给予，做不到就退出，保持高姿态）</h2><h2 id=\"一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\"><a href=\"#一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\" class=\"headerlink\" title=\"一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性\"></a>一直不说自己什么实力，无论什么人来了都不畏惧，别人就觉得你很厉害，注意，不要装逼，不要露馅，保持一致性</h2><h2 id=\"独立\"><a href=\"#独立\" class=\"headerlink\" title=\"独立\"></a>独立</h2><h2 id=\"不慌张\"><a href=\"#不慌张\" class=\"headerlink\" title=\"不慌张\"></a>不慌张</h2><h2 id=\"不影响自己才帮助别人\"><a href=\"#不影响自己才帮助别人\" class=\"headerlink\" title=\"不影响自己才帮助别人\"></a>不影响自己才帮助别人</h2><h2 id=\"和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\"><a href=\"#和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\" class=\"headerlink\" title=\"和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受\"></a>和强者接触时自己姿态一定不能低，必须自己有自己压倒性的优势，并且他非常紧缺，或者很难获得，不然后期自己会很难受</h2><h2 id=\"面向场景的整理笔记\"><a href=\"#面向场景的整理笔记\" class=\"headerlink\" title=\"面向场景的整理笔记\"></a>面向场景的整理笔记</h2><h2 id=\"在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\"><a href=\"#在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\" class=\"headerlink\" title=\"在一个高压环境中，兴趣和自律最好要比被迫考核优先到来\"></a>在一个高压环境中，兴趣和自律最好要比被迫考核优先到来</h2><h2 id=\"警惕那些你成功后不给你鼓掌的人\"><a href=\"#警惕那些你成功后不给你鼓掌的人\" class=\"headerlink\" title=\"警惕那些你成功后不给你鼓掌的人\"></a>警惕那些你成功后不给你鼓掌的人</h2><h2 id=\"减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\"><a href=\"#减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\" class=\"headerlink\" title=\"减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小\"></a>减少与内心自卑的人接触，你的友善只会让他觉得你和他一样弱小</h2><h2 id=\"每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\"><a href=\"#每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\" class=\"headerlink\" title=\"每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效\"></a>每天说一句“我好菜”能大大提升自己的敬畏心和努力程度，亲测有效</h2><h2 id=\"突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\"><a href=\"#突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\" class=\"headerlink\" title=\"突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧\"></a>突然发觉不能对性格自卑的人太友好，太友好会将你归为弱者，可能看不起自己的人也不会看得起对其放低姿态的人吧</h2>"},{"title":"map技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 初始化一个位置\n\nmap<int,int> m;\nm[1]++;\ncout<<m[1];\n\n## map遍历\n\nmap<int,int>::iterator it;\n","source":"_posts/算法/map技巧.md","raw":"---\ntitle: 'map技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 初始化一个位置\n\nmap<int,int> m;\nm[1]++;\ncout<<m[1];\n\n## map遍历\n\nmap<int,int>::iterator it;\n","slug":"算法/map技巧","published":1,"updated":"2023-03-21T09:13:46.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co5w0007o8hufir45a15","content":"<h2 id=\"初始化一个位置\"><a href=\"#初始化一个位置\" class=\"headerlink\" title=\"初始化一个位置\"></a>初始化一个位置</h2><p>map&lt;int,int&gt; m;<br>m[1]++;<br>cout&lt;&lt;m[1];</p>\n<h2 id=\"map遍历\"><a href=\"#map遍历\" class=\"headerlink\" title=\"map遍历\"></a>map遍历</h2><p>map&lt;int,int&gt;::iterator it;</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"初始化一个位置\"><a href=\"#初始化一个位置\" class=\"headerlink\" title=\"初始化一个位置\"></a>初始化一个位置</h2><p>map&lt;int,int&gt; m;<br>m[1]++;<br>cout&lt;&lt;m[1];</p>\n<h2 id=\"map遍历\"><a href=\"#map遍历\" class=\"headerlink\" title=\"map遍历\"></a>map遍历</h2><p>map&lt;int,int&gt;::iterator it;</p>\n"},{"title":"自己总结的学习方法 最新版","date":"2022-10-15T02:06:51.000Z","_content":"\n## 负重学习法\n\n## 总结原理再加上为什么是这个原理等于记住\n\n## 记笔记，同时想几个相关的思考总结题，和自我检测题\n\n## 为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\n\n## 学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\n\n## 构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的\n\n## 熟练让大脑伪多线程\n\n## 我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\n\n## 实战\n\n1. 首先学不会的知识，学完不断提取，记笔记\n2. 学完之后找题目做，无论什么题目，然后不断查缺补漏\n3. 做完一遍题目之后复习基础知识\n4. 然后继续做题，做题时主动思考+摸索\n\n## 睡觉学习法\n\n1. 首先花两天时间看书，在思维里串联起来\n2. 睡觉的时候回想知识\n\n> 原理可行性\n>\n> 学习的本质不是接收，而是提取，所以选择睡觉时提取不费力\n\n## 整体性学习法里加入做题\n\n## 整体性学习法\n\n（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。\n\n（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。\n\n（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。\n\n（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。\n\n（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。\n\n（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。\n\n具体实战\n\n1. 先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）\n2. 接下来慢速播放视频，配合实践练习（上课的时候跟着做题）\n3. 然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)\n4. 最后复习，写比第三版详尽的笔记，做思维导图。\n5. 多尝试，纠错，提速。\n\n注意：联系可以用命名的方式来建立，比如1:2,2:7–>1:7命名为穿越\n\n比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。\n\n大量记忆即应用性知识（算法api，单词）\n\n1. (先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）\n2. 然后从头到尾实践(复述)一遍，期间可以做笔记\n3. 什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识\n4. 查缺补漏\n5. 应用\n\n## 可参考A4纸记忆法\n\n* 类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习\n\n## 实战方法，项目\n\n1. 在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）\n2. 主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的\n3. 为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践\n4. 初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚\n5. 一个一个解决问题\n6. 然后缓慢补充理论\n\n## 学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\n\n> 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n>\n> 感悟\n\n## 给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\n","source":"_posts/学习方法/最新版本.md","raw":"---\ntitle: '自己总结的学习方法 最新版'\ndate: 2022-10-15 10:06:51\ntags: 学习方法\ncategories: 学习方法\n---\n\n## 负重学习法\n\n## 总结原理再加上为什么是这个原理等于记住\n\n## 记笔记，同时想几个相关的思考总结题，和自我检测题\n\n## 为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\n\n## 学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\n\n## 构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的\n\n## 熟练让大脑伪多线程\n\n## 我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\n\n## 实战\n\n1. 首先学不会的知识，学完不断提取，记笔记\n2. 学完之后找题目做，无论什么题目，然后不断查缺补漏\n3. 做完一遍题目之后复习基础知识\n4. 然后继续做题，做题时主动思考+摸索\n\n## 睡觉学习法\n\n1. 首先花两天时间看书，在思维里串联起来\n2. 睡觉的时候回想知识\n\n> 原理可行性\n>\n> 学习的本质不是接收，而是提取，所以选择睡觉时提取不费力\n\n## 整体性学习法里加入做题\n\n## 整体性学习法\n\n（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。\n\n（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。\n\n（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。\n\n（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。\n\n（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。\n\n（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。\n\n具体实战\n\n1. 先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）\n2. 接下来慢速播放视频，配合实践练习（上课的时候跟着做题）\n3. 然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)\n4. 最后复习，写比第三版详尽的笔记，做思维导图。\n5. 多尝试，纠错，提速。\n\n注意：联系可以用命名的方式来建立，比如1:2,2:7–>1:7命名为穿越\n\n比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。\n\n大量记忆即应用性知识（算法api，单词）\n\n1. (先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）\n2. 然后从头到尾实践(复述)一遍，期间可以做笔记\n3. 什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识\n4. 查缺补漏\n5. 应用\n\n## 可参考A4纸记忆法\n\n* 类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习\n\n## 实战方法，项目\n\n1. 在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）\n2. 主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的\n3. 为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践\n4. 初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚\n5. 一个一个解决问题\n6. 然后缓慢补充理论\n\n## 学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\n\n> 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n>\n> 感悟\n\n## 给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\n","slug":"学习方法/最新版本","published":1,"updated":"2023-03-21T09:41:56.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co5x0008o8hu6tk6bpmr","content":"<h2 id=\"负重学习法\"><a href=\"#负重学习法\" class=\"headerlink\" title=\"负重学习法\"></a>负重学习法</h2><h2 id=\"总结原理再加上为什么是这个原理等于记住\"><a href=\"#总结原理再加上为什么是这个原理等于记住\" class=\"headerlink\" title=\"总结原理再加上为什么是这个原理等于记住\"></a>总结原理再加上为什么是这个原理等于记住</h2><h2 id=\"记笔记，同时想几个相关的思考总结题，和自我检测题\"><a href=\"#记笔记，同时想几个相关的思考总结题，和自我检测题\" class=\"headerlink\" title=\"记笔记，同时想几个相关的思考总结题，和自我检测题\"></a>记笔记，同时想几个相关的思考总结题，和自我检测题</h2><h2 id=\"为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\"><a href=\"#为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\" class=\"headerlink\" title=\"为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\"></a>为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力</h2><h2 id=\"学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\"><a href=\"#学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\" class=\"headerlink\" title=\"学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\"></a>学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看</h2><h2 id=\"构建模型之后思考思维链条-自顶向下-从你会的，蔓延到你不会的\"><a href=\"#构建模型之后思考思维链条-自顶向下-从你会的，蔓延到你不会的\" class=\"headerlink\" title=\"构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的\"></a>构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的</h2><h2 id=\"熟练让大脑伪多线程\"><a href=\"#熟练让大脑伪多线程\" class=\"headerlink\" title=\"熟练让大脑伪多线程\"></a>熟练让大脑伪多线程</h2><h2 id=\"我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\"><a href=\"#我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\" class=\"headerlink\" title=\"我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\"></a>我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力</h2><h2 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h2><ol>\n<li>首先学不会的知识，学完不断提取，记笔记</li>\n<li>学完之后找题目做，无论什么题目，然后不断查缺补漏</li>\n<li>做完一遍题目之后复习基础知识</li>\n<li>然后继续做题，做题时主动思考+摸索</li>\n</ol>\n<h2 id=\"睡觉学习法\"><a href=\"#睡觉学习法\" class=\"headerlink\" title=\"睡觉学习法\"></a>睡觉学习法</h2><ol>\n<li>首先花两天时间看书，在思维里串联起来</li>\n<li>睡觉的时候回想知识</li>\n</ol>\n<blockquote>\n<p>原理可行性</p>\n<p>学习的本质不是接收，而是提取，所以选择睡觉时提取不费力</p>\n</blockquote>\n<h2 id=\"整体性学习法里加入做题\"><a href=\"#整体性学习法里加入做题\" class=\"headerlink\" title=\"整体性学习法里加入做题\"></a>整体性学习法里加入做题</h2><h2 id=\"整体性学习法\"><a href=\"#整体性学习法\" class=\"headerlink\" title=\"整体性学习法\"></a>整体性学习法</h2><p>（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。</p>\n<p>（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。</p>\n<p>（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。</p>\n<p>（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。</p>\n<p>（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。</p>\n<p>（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。</p>\n<p>具体实战</p>\n<ol>\n<li>先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）</li>\n<li>接下来慢速播放视频，配合实践练习（上课的时候跟着做题）</li>\n<li>然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)</li>\n<li>最后复习，写比第三版详尽的笔记，做思维导图。</li>\n<li>多尝试，纠错，提速。</li>\n</ol>\n<p>注意：联系可以用命名的方式来建立，比如1:2,2:7–&gt;1:7命名为穿越</p>\n<p>比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。</p>\n<p>大量记忆即应用性知识（算法api，单词）</p>\n<ol>\n<li>(先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）</li>\n<li>然后从头到尾实践(复述)一遍，期间可以做笔记</li>\n<li>什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识</li>\n<li>查缺补漏</li>\n<li>应用</li>\n</ol>\n<h2 id=\"可参考A4纸记忆法\"><a href=\"#可参考A4纸记忆法\" class=\"headerlink\" title=\"可参考A4纸记忆法\"></a>可参考A4纸记忆法</h2><ul>\n<li>类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习</li>\n</ul>\n<h2 id=\"实战方法，项目\"><a href=\"#实战方法，项目\" class=\"headerlink\" title=\"实战方法，项目\"></a>实战方法，项目</h2><ol>\n<li>在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）</li>\n<li>主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的</li>\n<li>为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践</li>\n<li>初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚</li>\n<li>一个一个解决问题</li>\n<li>然后缓慢补充理论</li>\n</ol>\n<h2 id=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"><a href=\"#学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\" class=\"headerlink\" title=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"></a>学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹</h2><blockquote>\n<p>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</p>\n<p>感悟</p>\n</blockquote>\n<h2 id=\"给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\"><a href=\"#给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\" class=\"headerlink\" title=\"给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\"></a>给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"负重学习法\"><a href=\"#负重学习法\" class=\"headerlink\" title=\"负重学习法\"></a>负重学习法</h2><h2 id=\"总结原理再加上为什么是这个原理等于记住\"><a href=\"#总结原理再加上为什么是这个原理等于记住\" class=\"headerlink\" title=\"总结原理再加上为什么是这个原理等于记住\"></a>总结原理再加上为什么是这个原理等于记住</h2><h2 id=\"记笔记，同时想几个相关的思考总结题，和自我检测题\"><a href=\"#记笔记，同时想几个相关的思考总结题，和自我检测题\" class=\"headerlink\" title=\"记笔记，同时想几个相关的思考总结题，和自我检测题\"></a>记笔记，同时想几个相关的思考总结题，和自我检测题</h2><h2 id=\"为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\"><a href=\"#为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\" class=\"headerlink\" title=\"为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力\"></a>为什么要记笔记？因为记笔记是自己的思考结果，是自己的思考产物，看了之后不用重新学一遍，直接记录内容架构就能想出整体内容，而不记录的话相当于每次重新学一遍，费时费力</h2><h2 id=\"学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\"><a href=\"#学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\" class=\"headerlink\" title=\"学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看\"></a>学到哪个就查哪个，或者把所有资源都放到资源单子，找完一个一个看</h2><h2 id=\"构建模型之后思考思维链条-自顶向下-从你会的，蔓延到你不会的\"><a href=\"#构建模型之后思考思维链条-自顶向下-从你会的，蔓延到你不会的\" class=\"headerlink\" title=\"构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的\"></a>构建模型之后思考思维链条(自顶向下),从你会的，蔓延到你不会的</h2><h2 id=\"熟练让大脑伪多线程\"><a href=\"#熟练让大脑伪多线程\" class=\"headerlink\" title=\"熟练让大脑伪多线程\"></a>熟练让大脑伪多线程</h2><h2 id=\"我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\"><a href=\"#我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\" class=\"headerlink\" title=\"我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力\"></a>我向往这样的生活，每天端着自己专业的书，不必因为考试追求高分而去匆忙的找练习题，不是在慌乱与急促中学习，就是看书，花更多时间感受书中内容的魅力</h2><h2 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h2><ol>\n<li>首先学不会的知识，学完不断提取，记笔记</li>\n<li>学完之后找题目做，无论什么题目，然后不断查缺补漏</li>\n<li>做完一遍题目之后复习基础知识</li>\n<li>然后继续做题，做题时主动思考+摸索</li>\n</ol>\n<h2 id=\"睡觉学习法\"><a href=\"#睡觉学习法\" class=\"headerlink\" title=\"睡觉学习法\"></a>睡觉学习法</h2><ol>\n<li>首先花两天时间看书，在思维里串联起来</li>\n<li>睡觉的时候回想知识</li>\n</ol>\n<blockquote>\n<p>原理可行性</p>\n<p>学习的本质不是接收，而是提取，所以选择睡觉时提取不费力</p>\n</blockquote>\n<h2 id=\"整体性学习法里加入做题\"><a href=\"#整体性学习法里加入做题\" class=\"headerlink\" title=\"整体性学习法里加入做题\"></a>整体性学习法里加入做题</h2><h2 id=\"整体性学习法\"><a href=\"#整体性学习法\" class=\"headerlink\" title=\"整体性学习法\"></a>整体性学习法</h2><p>（1）获取：信息进入你的眼睛和耳朵，阅读、课堂上记笔记以及个人的种种经历都是获取。获取阶段的目标是获取的信息要准确，信息量要尽量压缩。</p>\n<p>（2）理解：了解信息的基本意思，并放在上下文中联系，这是学习的最基本联系。</p>\n<p>（3）拓展：拓展阶段是整体性学习中最花力气的地方，这一步将形成模型、高速公路和广泛的联系，从而获得良好的结构。</p>\n<p>（4）纠错：在模型和高速公路中寻找错误，这个阶段要删除那些无效的联系。</p>\n<p>（5）应用：把纠错带入最后的水平，通过比较（知识）信息是如何在现实中运行的来进行调整，如果理解不符合现实世界，那么再多也无用。</p>\n<p>（6）测试：上述阶段的每一步都需要测试，测试有助于你迅速找到学习中的问题所在，帮助你改进学习技术，克服缺点。</p>\n<p>具体实战</p>\n<ol>\n<li>先倍速播放视频，理解大概，然后找相关的书籍或者文章来理解（课前预习，整体迅速概览）</li>\n<li>接下来慢速播放视频，配合实践练习（上课的时候跟着做题）</li>\n<li>然后如果此时基本掌握，那么先模拟一下所有的知识，比如画图，讲述，分析，理解(目的是整体梳理知识的类块，并通过调用达到学会而不是了解)</li>\n<li>最后复习，写比第三版详尽的笔记，做思维导图。</li>\n<li>多尝试，纠错，提速。</li>\n</ol>\n<p>注意：联系可以用命名的方式来建立，比如1:2,2:7–&gt;1:7命名为穿越</p>\n<p>比如，如果我们学语言的时候，假如不起名字为元组，列表，字典，就很难统一记住与理解，本质是分组理解，分类。</p>\n<p>大量记忆即应用性知识（算法api，单词）</p>\n<ol>\n<li>(先面后点)首先找知识汇总（有视频先视频，总体掌握，然后是教程文档）</li>\n<li>然后从头到尾实践(复述)一遍，期间可以做笔记</li>\n<li>什么都不看，首先整理知识点，或者分类，然后按类输出(实践，默写，复述)知识</li>\n<li>查缺补漏</li>\n<li>应用</li>\n</ol>\n<h2 id=\"可参考A4纸记忆法\"><a href=\"#可参考A4纸记忆法\" class=\"headerlink\" title=\"可参考A4纸记忆法\"></a>可参考A4纸记忆法</h2><ul>\n<li>类比自己html学会的过程，先学一遍，然后听课，重复上述四点，然后做项目练习</li>\n</ul>\n<h2 id=\"实战方法，项目\"><a href=\"#实战方法，项目\" class=\"headerlink\" title=\"实战方法，项目\"></a>实战方法，项目</h2><ol>\n<li>在实战中摸索，探索，实践，强调主动思考（你觉得应该怎么做，然后展开问五个问题，依次解决）</li>\n<li>主动思考，然后实战，搜索，检测，进而正向强化自己的猜想，这是效率最高的</li>\n<li>为什么自信的人能成功，就是因为自我能力强，敢想敢猜，敢实践</li>\n<li>初生牛犊的力气来使劲探索，没有束缚，之后慢慢放开手脚</li>\n<li>一个一个解决问题</li>\n<li>然后缓慢补充理论</li>\n</ol>\n<h2 id=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"><a href=\"#学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\" class=\"headerlink\" title=\"学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹\"></a>学习过程中要想着如何灵活运用，之后配合上面的摸索前后包夹</h2><blockquote>\n<p>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</p>\n<p>感悟</p>\n</blockquote>\n<h2 id=\"给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\"><a href=\"#给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\" class=\"headerlink\" title=\"给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。\"></a>给知识标为难易度，然后第一遍过，第二遍学简单，第三遍复习简单同时学中等，第四遍复习中等学难。。。</h2>"},{"title":"sort操作","date":"2022-10-15T02:06:51.000Z","_content":"\n## sort比较多维vector\n\n```cpp\nsort(intervals.begin(),intervals.end(),[](vector<int> &a,vector<int> &b){\n    return a[1]<b[1];\n});\n```\n\n```java\n  Arrays.sort(ins, (a, b)->{\n            return a[1] != b[1] ? a[1] - b[1] : b[0] - a[0];\n        });\n```\n","source":"_posts/算法/sort操作.md","raw":"---\ntitle: 'sort操作'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## sort比较多维vector\n\n```cpp\nsort(intervals.begin(),intervals.end(),[](vector<int> &a,vector<int> &b){\n    return a[1]<b[1];\n});\n```\n\n```java\n  Arrays.sort(ins, (a, b)->{\n            return a[1] != b[1] ? a[1] - b[1] : b[0] - a[0];\n        });\n```\n","slug":"算法/sort操作","published":1,"updated":"2023-03-21T09:13:51.024Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co5y0009o8hu75oldzfh","content":"<h2 id=\"sort比较多维vector\"><a href=\"#sort比较多维vector\" class=\"headerlink\" title=\"sort比较多维vector\"></a>sort比较多维vector</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span>(intervals.<span class=\"built_in\">begin</span>(),intervals.<span class=\"built_in\">end</span>(),[](vector&lt;<span class=\"type\">int</span>&gt; &amp;a,vector&lt;<span class=\"type\">int</span>&gt; &amp;b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>]&lt;b[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arrays.sort(ins, (a, b)-&gt;&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>] != b[<span class=\"number\">1</span>] ? a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>] : b[<span class=\"number\">0</span>] - a[<span class=\"number\">0</span>];</span><br><span class=\"line\">      &#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"sort比较多维vector\"><a href=\"#sort比较多维vector\" class=\"headerlink\" title=\"sort比较多维vector\"></a>sort比较多维vector</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sort</span>(intervals.<span class=\"built_in\">begin</span>(),intervals.<span class=\"built_in\">end</span>(),[](vector&lt;<span class=\"type\">int</span>&gt; &amp;a,vector&lt;<span class=\"type\">int</span>&gt; &amp;b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>]&lt;b[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arrays.sort(ins, (a, b)-&gt;&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>] != b[<span class=\"number\">1</span>] ? a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>] : b[<span class=\"number\">0</span>] - a[<span class=\"number\">0</span>];</span><br><span class=\"line\">      &#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"资源整理","date":"2022-10-15T02:06:51.000Z","_content":"\n## 试题\n\n1. 期末考题(各大学校期末考题)\n2. 考研真题(各大院校考研真题)\n3. 专项练习(语言，数据结构，计算机组成原理，计算机网络，操作系统，数据库，sql，机器学习，移动开发，英语考查)\n4. 在线编程（算法，sql，shell，前端）\n5. 公司真题(大公司很多算法题，2h)\n6. 精华题目(各大题目)\n7. 更多题库(模拟笔试，大公司算法题目)\n8. 试题广场(项目类型的题目，点赞实现等等)\n\n## 面试\n\n1. AI模拟面试\n2. 预约面试\n\n## 面经\n\n**各大岗位的面试题目汇总（全面）**\n\n## 算法\n\n## 求职\n\n## 项目\n\n[牛客社区制作](https://www.nowcoder.com/study/live/246)\n\n# 顺序\n\n1. 首先学习基础\n2. 然后看书\n3. 然后看面经，记笔记总结\n4. 做精华题目\n5. 做专项练习\n6. 做公司真题\n7. 预约面试\n8. 投递简历\n","source":"_posts/各种资源/牛客资源理顺.md","raw":"---\ntitle: '资源整理'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: 前端\n---\n\n## 试题\n\n1. 期末考题(各大学校期末考题)\n2. 考研真题(各大院校考研真题)\n3. 专项练习(语言，数据结构，计算机组成原理，计算机网络，操作系统，数据库，sql，机器学习，移动开发，英语考查)\n4. 在线编程（算法，sql，shell，前端）\n5. 公司真题(大公司很多算法题，2h)\n6. 精华题目(各大题目)\n7. 更多题库(模拟笔试，大公司算法题目)\n8. 试题广场(项目类型的题目，点赞实现等等)\n\n## 面试\n\n1. AI模拟面试\n2. 预约面试\n\n## 面经\n\n**各大岗位的面试题目汇总（全面）**\n\n## 算法\n\n## 求职\n\n## 项目\n\n[牛客社区制作](https://www.nowcoder.com/study/live/246)\n\n# 顺序\n\n1. 首先学习基础\n2. 然后看书\n3. 然后看面经，记笔记总结\n4. 做精华题目\n5. 做专项练习\n6. 做公司真题\n7. 预约面试\n8. 投递简历\n","slug":"各种资源/牛客资源理顺","published":1,"updated":"2023-03-21T09:41:11.155Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co60000do8huhryc8m0i","content":"<h2 id=\"试题\"><a href=\"#试题\" class=\"headerlink\" title=\"试题\"></a>试题</h2><ol>\n<li>期末考题(各大学校期末考题)</li>\n<li>考研真题(各大院校考研真题)</li>\n<li>专项练习(语言，数据结构，计算机组成原理，计算机网络，操作系统，数据库，sql，机器学习，移动开发，英语考查)</li>\n<li>在线编程（算法，sql，shell，前端）</li>\n<li>公司真题(大公司很多算法题，2h)</li>\n<li>精华题目(各大题目)</li>\n<li>更多题库(模拟笔试，大公司算法题目)</li>\n<li>试题广场(项目类型的题目，点赞实现等等)</li>\n</ol>\n<h2 id=\"面试\"><a href=\"#面试\" class=\"headerlink\" title=\"面试\"></a>面试</h2><ol>\n<li>AI模拟面试</li>\n<li>预约面试</li>\n</ol>\n<h2 id=\"面经\"><a href=\"#面经\" class=\"headerlink\" title=\"面经\"></a>面经</h2><p><strong>各大岗位的面试题目汇总（全面）</strong></p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h2 id=\"求职\"><a href=\"#求职\" class=\"headerlink\" title=\"求职\"></a>求职</h2><h2 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h2><p><a href=\"https://www.nowcoder.com/study/live/246\">牛客社区制作</a></p>\n<h1 id=\"顺序\"><a href=\"#顺序\" class=\"headerlink\" title=\"顺序\"></a>顺序</h1><ol>\n<li>首先学习基础</li>\n<li>然后看书</li>\n<li>然后看面经，记笔记总结</li>\n<li>做精华题目</li>\n<li>做专项练习</li>\n<li>做公司真题</li>\n<li>预约面试</li>\n<li>投递简历</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"试题\"><a href=\"#试题\" class=\"headerlink\" title=\"试题\"></a>试题</h2><ol>\n<li>期末考题(各大学校期末考题)</li>\n<li>考研真题(各大院校考研真题)</li>\n<li>专项练习(语言，数据结构，计算机组成原理，计算机网络，操作系统，数据库，sql，机器学习，移动开发，英语考查)</li>\n<li>在线编程（算法，sql，shell，前端）</li>\n<li>公司真题(大公司很多算法题，2h)</li>\n<li>精华题目(各大题目)</li>\n<li>更多题库(模拟笔试，大公司算法题目)</li>\n<li>试题广场(项目类型的题目，点赞实现等等)</li>\n</ol>\n<h2 id=\"面试\"><a href=\"#面试\" class=\"headerlink\" title=\"面试\"></a>面试</h2><ol>\n<li>AI模拟面试</li>\n<li>预约面试</li>\n</ol>\n<h2 id=\"面经\"><a href=\"#面经\" class=\"headerlink\" title=\"面经\"></a>面经</h2><p><strong>各大岗位的面试题目汇总（全面）</strong></p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h2 id=\"求职\"><a href=\"#求职\" class=\"headerlink\" title=\"求职\"></a>求职</h2><h2 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h2><p><a href=\"https://www.nowcoder.com/study/live/246\">牛客社区制作</a></p>\n<h1 id=\"顺序\"><a href=\"#顺序\" class=\"headerlink\" title=\"顺序\"></a>顺序</h1><ol>\n<li>首先学习基础</li>\n<li>然后看书</li>\n<li>然后看面经，记笔记总结</li>\n<li>做精华题目</li>\n<li>做专项练习</li>\n<li>做公司真题</li>\n<li>预约面试</li>\n<li>投递简历</li>\n</ol>\n"},{"title":"刷题技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\n\n## 从读题开始进行题目建模\n\n## 学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\n\n## 从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\n\n## 主动思考，摸索\n\n## 看代码提升飞快\n\n## 先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\n\n## 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n\n## 思考自己成功过的经历，而不是失败的\n\n## 先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\n\n## 如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\n\n## 如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\n\n## 掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\n\n## 提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\n","source":"_posts/算法/刷题技巧.md","raw":"---\ntitle: '刷题技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 算法\n    - 刷题\ncategories: 算法\n---\n\n## 使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\n\n## 从读题开始进行题目建模\n\n## 学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\n\n## 从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\n\n## 主动思考，摸索\n\n## 看代码提升飞快\n\n## 先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\n\n## 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n\n## 思考自己成功过的经历，而不是失败的\n\n## 先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\n\n## 如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\n\n## 如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\n\n## 掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\n\n## 提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\n","slug":"算法/刷题技巧","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co61000fo8hug5g06ce2","content":"<h2 id=\"使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\"><a href=\"#使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\" class=\"headerlink\" title=\"使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\"></a>使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模</h2><h2 id=\"从读题开始进行题目建模\"><a href=\"#从读题开始进行题目建模\" class=\"headerlink\" title=\"从读题开始进行题目建模\"></a>从读题开始进行题目建模</h2><h2 id=\"学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\"><a href=\"#学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\" class=\"headerlink\" title=\"学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\"></a>学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍</h2><h2 id=\"从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\"><a href=\"#从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\" class=\"headerlink\" title=\"从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\"></a>从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来</h2><h2 id=\"主动思考，摸索\"><a href=\"#主动思考，摸索\" class=\"headerlink\" title=\"主动思考，摸索\"></a>主动思考，摸索</h2><h2 id=\"看代码提升飞快\"><a href=\"#看代码提升飞快\" class=\"headerlink\" title=\"看代码提升飞快\"></a>看代码提升飞快</h2><h2 id=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"><a href=\"#先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\" class=\"headerlink\" title=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"></a>先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己</h2><h2 id=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"><a href=\"#学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\" class=\"headerlink\" title=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"></a>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</h2><h2 id=\"思考自己成功过的经历，而不是失败的\"><a href=\"#思考自己成功过的经历，而不是失败的\" class=\"headerlink\" title=\"思考自己成功过的经历，而不是失败的\"></a>思考自己成功过的经历，而不是失败的</h2><h2 id=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"><a href=\"#先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\" class=\"headerlink\" title=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"></a>先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验</h2><h2 id=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"><a href=\"#如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\" class=\"headerlink\" title=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"></a>如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数</h2><h2 id=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"><a href=\"#如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\" class=\"headerlink\" title=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"></a>如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）</h2><h2 id=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"><a href=\"#掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\" class=\"headerlink\" title=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"></a>掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处</h2><h2 id=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"><a href=\"#提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\" class=\"headerlink\" title=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"></a>提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\"><a href=\"#使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\" class=\"headerlink\" title=\"使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模\"></a>使用方法让自己对某一行为感兴趣，这种方法优于别人，如主动思考，题目建模</h2><h2 id=\"从读题开始进行题目建模\"><a href=\"#从读题开始进行题目建模\" class=\"headerlink\" title=\"从读题开始进行题目建模\"></a>从读题开始进行题目建模</h2><h2 id=\"学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\"><a href=\"#学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\" class=\"headerlink\" title=\"学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍\"></a>学习知识只要系统化学习一遍，之后多看别的，效果都是差不多的，这就要求我们从头到尾学一遍</h2><h2 id=\"从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\"><a href=\"#从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\" class=\"headerlink\" title=\"从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来\"></a>从头到尾想好怎么做的思路然后做，然后用脑子写一遍代码，脑子写完之后（或者用手比划），然后从头到尾写出来</h2><h2 id=\"主动思考，摸索\"><a href=\"#主动思考，摸索\" class=\"headerlink\" title=\"主动思考，摸索\"></a>主动思考，摸索</h2><h2 id=\"看代码提升飞快\"><a href=\"#看代码提升飞快\" class=\"headerlink\" title=\"看代码提升飞快\"></a>看代码提升飞快</h2><h2 id=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"><a href=\"#先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\" class=\"headerlink\" title=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"></a>先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己</h2><h2 id=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"><a href=\"#学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\" class=\"headerlink\" title=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"></a>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</h2><h2 id=\"思考自己成功过的经历，而不是失败的\"><a href=\"#思考自己成功过的经历，而不是失败的\" class=\"headerlink\" title=\"思考自己成功过的经历，而不是失败的\"></a>思考自己成功过的经历，而不是失败的</h2><h2 id=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"><a href=\"#先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\" class=\"headerlink\" title=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"></a>先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验</h2><h2 id=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"><a href=\"#如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\" class=\"headerlink\" title=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"></a>如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数</h2><h2 id=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"><a href=\"#如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\" class=\"headerlink\" title=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"></a>如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）</h2><h2 id=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"><a href=\"#掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\" class=\"headerlink\" title=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"></a>掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处</h2><h2 id=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"><a href=\"#提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\" class=\"headerlink\" title=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"></a>提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步</h2>"},{"title":"vector技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 删除\n\nv.**erase**(**v**.**begin**(**)**+**2**)**;**//删除第三个位置的元素\n\nv.pop_back()删除最后一个\n","source":"_posts/算法/vector技巧.md","raw":"---\ntitle: 'vector技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 删除\n\nv.**erase**(**v**.**begin**(**)**+**2**)**;**//删除第三个位置的元素\n\nv.pop_back()删除最后一个\n","slug":"算法/vector技巧","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co63000jo8hucx44635i","content":"<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><p>v.<strong>erase</strong>(<strong>v</strong>.<strong>begin</strong>(<strong>)</strong>+<strong>2</strong>)<strong>;</strong>//删除第三个位置的元素</p>\n<p>v.pop_back()删除最后一个</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><p>v.<strong>erase</strong>(<strong>v</strong>.<strong>begin</strong>(<strong>)</strong>+<strong>2</strong>)<strong>;</strong>//删除第三个位置的元素</p>\n<p>v.pop_back()删除最后一个</p>\n"},{"title":"字符串技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 字符串转数字\n\ncstdlib\n\n**atoi()**\n\nstring\n\n**stoi()**\n\n## 字符串翻转\n\ncstring\n\n**strrev()**\n\nalgorithm\n\n**reverse()**\n\n`string s2(s1.rbegin(),s1.rend());`\n","source":"_posts/算法/字符串技巧.md","raw":"---\ntitle: '字符串技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 字符串转数字\n\ncstdlib\n\n**atoi()**\n\nstring\n\n**stoi()**\n\n## 字符串翻转\n\ncstring\n\n**strrev()**\n\nalgorithm\n\n**reverse()**\n\n`string s2(s1.rbegin(),s1.rend());`\n","slug":"算法/字符串技巧","published":1,"updated":"2023-03-21T09:13:42.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co64000mo8hu9vyvapqt","content":"<h2 id=\"字符串转数字\"><a href=\"#字符串转数字\" class=\"headerlink\" title=\"字符串转数字\"></a>字符串转数字</h2><p>cstdlib</p>\n<p><strong>atoi()</strong></p>\n<p>string</p>\n<p><strong>stoi()</strong></p>\n<h2 id=\"字符串翻转\"><a href=\"#字符串翻转\" class=\"headerlink\" title=\"字符串翻转\"></a>字符串翻转</h2><p>cstring</p>\n<p><strong>strrev()</strong></p>\n<p>algorithm</p>\n<p><strong>reverse()</strong></p>\n<p><code>string s2(s1.rbegin(),s1.rend());</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"字符串转数字\"><a href=\"#字符串转数字\" class=\"headerlink\" title=\"字符串转数字\"></a>字符串转数字</h2><p>cstdlib</p>\n<p><strong>atoi()</strong></p>\n<p>string</p>\n<p><strong>stoi()</strong></p>\n<h2 id=\"字符串翻转\"><a href=\"#字符串翻转\" class=\"headerlink\" title=\"字符串翻转\"></a>字符串翻转</h2><p>cstring</p>\n<p><strong>strrev()</strong></p>\n<p>algorithm</p>\n<p><strong>reverse()</strong></p>\n<p><code>string s2(s1.rbegin(),s1.rend());</code></p>\n"},{"title":"io操作","date":"2022-10-15T02:06:51.000Z","_content":"\nC++11标准中貌似将gets列为警告了\n\nC++14彻底删除了gets\n\n那我们 该如何读取一行呢\n\n## 一 用[getchar](https://so.csdn.net/so/search?q=getchar&spm=1001.2101.3001.7020) 一个一个读\n\n```cpp\nwhile( (c = getchar()) != EOF && len < max_size ){  \n        line[len++] = c;  \n        if('\\n' == c)  break;  \n}  \n```\n\n## 二  getline\n\n用法\n\n```cpp\nstring s;\ngetline(cin,s);\n```\n\ngetline会忽略行末的空格\n\n## 三 cin.get()\n\n```cpp\n    char str[30];\n    cin.get(str, 30).get(); //利用 get（）消除行末的空格\n                            //如果不消除的话 就会被下一个cin.get读到\n```\n\n## 四  正则\n\n[^\\n]表示当读入换行字符的时候就结束读入。这个是scanf的正则用法。\n\nscanf(\"%*[\\n]\")表示该输入项读入后不赋予任何变量，即scanf(\"%*[^\\n]\")表示跳过一行[字符串](https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020)。\n\n```cpp\nscanf(\"%[^\\n]\", str)\n```\n","source":"_posts/算法/读取操作.md","raw":"---\ntitle: 'io操作'\ndate: 2022-10-15 10:06:51\ntags: \n    - 算法\ncategories: 算法\n---\n\nC++11标准中貌似将gets列为警告了\n\nC++14彻底删除了gets\n\n那我们 该如何读取一行呢\n\n## 一 用[getchar](https://so.csdn.net/so/search?q=getchar&spm=1001.2101.3001.7020) 一个一个读\n\n```cpp\nwhile( (c = getchar()) != EOF && len < max_size ){  \n        line[len++] = c;  \n        if('\\n' == c)  break;  \n}  \n```\n\n## 二  getline\n\n用法\n\n```cpp\nstring s;\ngetline(cin,s);\n```\n\ngetline会忽略行末的空格\n\n## 三 cin.get()\n\n```cpp\n    char str[30];\n    cin.get(str, 30).get(); //利用 get（）消除行末的空格\n                            //如果不消除的话 就会被下一个cin.get读到\n```\n\n## 四  正则\n\n[^\\n]表示当读入换行字符的时候就结束读入。这个是scanf的正则用法。\n\nscanf(\"%*[\\n]\")表示该输入项读入后不赋予任何变量，即scanf(\"%*[^\\n]\")表示跳过一行[字符串](https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020)。\n\n```cpp\nscanf(\"%[^\\n]\", str)\n```\n","slug":"算法/读取操作","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co68000qo8hu03j64nm9","content":"<p>C++11标准中貌似将gets列为警告了</p>\n<p>C++14彻底删除了gets</p>\n<p>那我们 该如何读取一行呢</p>\n<h2 id=\"一-用getchar-一个一个读\"><a href=\"#一-用getchar-一个一个读\" class=\"headerlink\" title=\"一 用getchar 一个一个读\"></a>一 用<a href=\"https://so.csdn.net/so/search?q=getchar&spm=1001.2101.3001.7020\">getchar</a> 一个一个读</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>( (c = <span class=\"built_in\">getchar</span>()) != EOF &amp;&amp; len &lt; max_size )&#123;  </span><br><span class=\"line\">        line[len++] = c;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;\\n&#x27;</span> == c)  <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二-getline\"><a href=\"#二-getline\" class=\"headerlink\" title=\"二  getline\"></a>二  getline</h2><p>用法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string s;</span><br><span class=\"line\"><span class=\"built_in\">getline</span>(cin,s);</span><br></pre></td></tr></table></figure>\n\n<p>getline会忽略行末的空格</p>\n<h2 id=\"三-cin-get\"><a href=\"#三-cin-get\" class=\"headerlink\" title=\"三 cin.get()\"></a>三 cin.get()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> str[<span class=\"number\">30</span>];</span><br><span class=\"line\">cin.<span class=\"built_in\">get</span>(str, <span class=\"number\">30</span>).<span class=\"built_in\">get</span>(); <span class=\"comment\">//利用 get（）消除行末的空格</span></span><br><span class=\"line\">                        <span class=\"comment\">//如果不消除的话 就会被下一个cin.get读到</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四-正则\"><a href=\"#四-正则\" class=\"headerlink\" title=\"四  正则\"></a>四  正则</h2><p>[^\\n]表示当读入换行字符的时候就结束读入。这个是scanf的正则用法。</p>\n<p>scanf(“%<em>[\\n]”)表示该输入项读入后不赋予任何变量，即scanf(“%</em>[^\\n]”)表示跳过一行<a href=\"https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020\">字符串</a>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%[^\\n]&quot;</span>, str)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>C++11标准中貌似将gets列为警告了</p>\n<p>C++14彻底删除了gets</p>\n<p>那我们 该如何读取一行呢</p>\n<h2 id=\"一-用getchar-一个一个读\"><a href=\"#一-用getchar-一个一个读\" class=\"headerlink\" title=\"一 用getchar 一个一个读\"></a>一 用<a href=\"https://so.csdn.net/so/search?q=getchar&spm=1001.2101.3001.7020\">getchar</a> 一个一个读</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>( (c = <span class=\"built_in\">getchar</span>()) != EOF &amp;&amp; len &lt; max_size )&#123;  </span><br><span class=\"line\">        line[len++] = c;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;\\n&#x27;</span> == c)  <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二-getline\"><a href=\"#二-getline\" class=\"headerlink\" title=\"二  getline\"></a>二  getline</h2><p>用法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string s;</span><br><span class=\"line\"><span class=\"built_in\">getline</span>(cin,s);</span><br></pre></td></tr></table></figure>\n\n<p>getline会忽略行末的空格</p>\n<h2 id=\"三-cin-get\"><a href=\"#三-cin-get\" class=\"headerlink\" title=\"三 cin.get()\"></a>三 cin.get()</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> str[<span class=\"number\">30</span>];</span><br><span class=\"line\">cin.<span class=\"built_in\">get</span>(str, <span class=\"number\">30</span>).<span class=\"built_in\">get</span>(); <span class=\"comment\">//利用 get（）消除行末的空格</span></span><br><span class=\"line\">                        <span class=\"comment\">//如果不消除的话 就会被下一个cin.get读到</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四-正则\"><a href=\"#四-正则\" class=\"headerlink\" title=\"四  正则\"></a>四  正则</h2><p>[^\\n]表示当读入换行字符的时候就结束读入。这个是scanf的正则用法。</p>\n<p>scanf(“%<em>[\\n]”)表示该输入项读入后不赋予任何变量，即scanf(“%</em>[^\\n]”)表示跳过一行<a href=\"https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020\">字符串</a>。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%[^\\n]&quot;</span>, str)</span><br></pre></td></tr></table></figure>\n"},{"title":"贪心","date":"2022-10-15T02:06:51.000Z","_content":"\n## 把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\n\n```\nfunction element(name,prop,children){\n    let dom=document.createElement(name)\n    for(let i in prop){\n        dom.i=prop[i]\n    }\n    for(let i=0;i<children.length;i++){\n        if(typeof children[i]=='string'){\n            dom.innerHtml=children[i]\n        }else dom.appendChild(element(children[i]))\n    }\n    return dom\n}\n```\n\nelement('ul', {id: 'list'}, [\nelement('li', {class: 'item'}, ['Item 1']),\nelement('li', {class: 'item'}, ['Item 2']),\nelement('li', {class: 'item'}, ['Item 3'])\n])\n","source":"_posts/算法/贪心.md","raw":"---\ntitle: '贪心'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\n\n```\nfunction element(name,prop,children){\n    let dom=document.createElement(name)\n    for(let i in prop){\n        dom.i=prop[i]\n    }\n    for(let i=0;i<children.length;i++){\n        if(typeof children[i]=='string'){\n            dom.innerHtml=children[i]\n        }else dom.appendChild(element(children[i]))\n    }\n    return dom\n}\n```\n\nelement('ul', {id: 'list'}, [\nelement('li', {class: 'item'}, ['Item 1']),\nelement('li', {class: 'item'}, ['Item 2']),\nelement('li', {class: 'item'}, ['Item 3'])\n])\n","slug":"算法/贪心","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6a000ro8hu54org5ns","content":"<h2 id=\"把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\"><a href=\"#把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\" class=\"headerlink\" title=\"把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\"></a>把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function element(name,prop,children)&#123;</span><br><span class=\"line\">    let dom=document.createElement(name)</span><br><span class=\"line\">    for(let i in prop)&#123;</span><br><span class=\"line\">        dom.i=prop[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(let i=0;i&lt;children.length;i++)&#123;</span><br><span class=\"line\">        if(typeof children[i]==&#x27;string&#x27;)&#123;</span><br><span class=\"line\">            dom.innerHtml=children[i]</span><br><span class=\"line\">        &#125;else dom.appendChild(element(children[i]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return dom</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>element(‘ul’, {id: ‘list’}, [<br>element(‘li’, {class: ‘item’}, [‘Item 1’]),<br>element(‘li’, {class: ‘item’}, [‘Item 2’]),<br>element(‘li’, {class: ‘item’}, [‘Item 3’])<br>])</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\"><a href=\"#把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\" class=\"headerlink\" title=\"把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明\"></a>把所有贪心策略都想出来，然后运算，选一个最好的，而不需要证明</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function element(name,prop,children)&#123;</span><br><span class=\"line\">    let dom=document.createElement(name)</span><br><span class=\"line\">    for(let i in prop)&#123;</span><br><span class=\"line\">        dom.i=prop[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(let i=0;i&lt;children.length;i++)&#123;</span><br><span class=\"line\">        if(typeof children[i]==&#x27;string&#x27;)&#123;</span><br><span class=\"line\">            dom.innerHtml=children[i]</span><br><span class=\"line\">        &#125;else dom.appendChild(element(children[i]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return dom</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>element(‘ul’, {id: ‘list’}, [<br>element(‘li’, {class: ‘item’}, [‘Item 1’]),<br>element(‘li’, {class: ‘item’}, [‘Item 2’]),<br>element(‘li’, {class: ‘item’}, [‘Item 3’])<br>])</p>\n"},{"title":"异或操作","date":"2022-10-15T02:06:51.000Z","_content":"\n## 本质是无进位相加\n\n性质：\n\n- 0异或N等于N\n- N异或N等于0\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md17772.237989.png)\n\n## 不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\n\n1. a=a异或b\n2. b=a异或b\n3. a=a异或b\n\na异或b异或b等于a\n\na异或b异或a等于b\n\n## 一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\n\n- 用一个变量0异或数组中每一个数\n\n## 两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md19073.541803.png)\n","source":"_posts/算法/异或操作.md","raw":"---\ntitle: '异或操作'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\n    - 算法\ncategories: 算法\n---\n\n## 本质是无进位相加\n\n性质：\n\n- 0异或N等于N\n- N异或N等于0\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md17772.237989.png)\n\n## 不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\n\n1. a=a异或b\n2. b=a异或b\n3. a=a异或b\n\na异或b异或b等于a\n\na异或b异或a等于b\n\n## 一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\n\n- 用一个变量0异或数组中每一个数\n\n## 两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md19073.541803.png)\n","slug":"算法/异或操作","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6d000wo8hu6dv0axul","content":"<h2 id=\"本质是无进位相加\"><a href=\"#本质是无进位相加\" class=\"headerlink\" title=\"本质是无进位相加\"></a>本质是无进位相加</h2><p>性质：</p>\n<ul>\n<li>0异或N等于N</li>\n<li>N异或N等于0</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md17772.237989.png\"></p>\n<h2 id=\"不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\"><a href=\"#不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\" class=\"headerlink\" title=\"不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\"></a>不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）</h2><ol>\n<li>a=a异或b</li>\n<li>b=a异或b</li>\n<li>a=a异或b</li>\n</ol>\n<p>a异或b异或b等于a</p>\n<p>a异或b异或a等于b</p>\n<h2 id=\"一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\"><a href=\"#一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\" class=\"headerlink\" title=\"一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\"></a>一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字</h2><ul>\n<li>用一个变量0异或数组中每一个数</li>\n</ul>\n<h2 id=\"两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\"><a href=\"#两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\" class=\"headerlink\" title=\"两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\"></a>两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md19073.541803.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"本质是无进位相加\"><a href=\"#本质是无进位相加\" class=\"headerlink\" title=\"本质是无进位相加\"></a>本质是无进位相加</h2><p>性质：</p>\n<ul>\n<li>0异或N等于N</li>\n<li>N异或N等于0</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md17772.237989.png\"></p>\n<h2 id=\"不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\"><a href=\"#不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\" class=\"headerlink\" title=\"不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）\"></a>不用额外变量交换两个数（前提是异或运算满足交换律和结合律的）</h2><ol>\n<li>a=a异或b</li>\n<li>b=a异或b</li>\n<li>a=a异或b</li>\n</ol>\n<p>a异或b异或b等于a</p>\n<p>a异或b异或a等于b</p>\n<h2 id=\"一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\"><a href=\"#一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\" class=\"headerlink\" title=\"一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字\"></a>一个数组中一种数出现了奇数次，其他数出现了偶数次，怎么找到这个数字</h2><ul>\n<li>用一个变量0异或数组中每一个数</li>\n</ul>\n<h2 id=\"两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\"><a href=\"#两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\" class=\"headerlink\" title=\"两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字\"></a>两个数出现了奇数次，其他数出现了偶数次，怎么找到这两个数字</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/异或操作.md19073.541803.png\"></p>\n"},{"title":"迭代技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\n","source":"_posts/算法/迭代技巧.md","raw":"---\ntitle: '迭代技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\n","slug":"算法/迭代技巧","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6e000zo8hu3sg5br9r","content":"<h2 id=\"迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\"><a href=\"#迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\" class=\"headerlink\" title=\"迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\"></a>迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\"><a href=\"#迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\" class=\"headerlink\" title=\"迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用\"></a>迭代肯定有变量覆盖和重用，如果是迭代就考虑有没有相同的结构可供我们重用</h2>"},{"title":"递归技巧","date":"2022-10-15T02:06:51.000Z","_content":"\n## 解题技巧\n\n- 退出条件\n- 首先思考要写的函数功能\n- 怎么用该功能解决一些问题或者子问题（这里决定了迭代方向）\n- 利用该函数和该函数解决的子问题或得到的答案完成该功能（一个结果或者一个累加，排序等等，总之是解决问题）\n","source":"_posts/算法/递归技巧.md","raw":"---\ntitle: '递归技巧'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 解题技巧\n\n- 退出条件\n- 首先思考要写的函数功能\n- 怎么用该功能解决一些问题或者子问题（这里决定了迭代方向）\n- 利用该函数和该函数解决的子问题或得到的答案完成该功能（一个结果或者一个累加，排序等等，总之是解决问题）\n","slug":"算法/递归技巧","published":1,"updated":"2023-03-21T09:15:56.815Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6g0014o8hu5serby7z","content":"<h2 id=\"解题技巧\"><a href=\"#解题技巧\" class=\"headerlink\" title=\"解题技巧\"></a>解题技巧</h2><ul>\n<li>退出条件</li>\n<li>首先思考要写的函数功能</li>\n<li>怎么用该功能解决一些问题或者子问题（这里决定了迭代方向）</li>\n<li>利用该函数和该函数解决的子问题或得到的答案完成该功能（一个结果或者一个累加，排序等等，总之是解决问题）</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"解题技巧\"><a href=\"#解题技巧\" class=\"headerlink\" title=\"解题技巧\"></a>解题技巧</h2><ul>\n<li>退出条件</li>\n<li>首先思考要写的函数功能</li>\n<li>怎么用该功能解决一些问题或者子问题（这里决定了迭代方向）</li>\n<li>利用该函数和该函数解决的子问题或得到的答案完成该功能（一个结果或者一个累加，排序等等，总之是解决问题）</li>\n</ul>\n"},{"title":"资源整理","date":"2022-10-15T02:06:51.000Z","_content":"\n- 人际  偶尔会写几条\n- 其他  其他\n- 前端  放置学习资源和清单还有进阶的一些能沉淀下来的东西和工具，目录主要是大方向\n- 各种资源  放置每个方向的学习资源\n- 后端  放置能沉淀下俩的东西，不过暂时没用\n- 学习方法  放置自己的学习方法文档\n- 学校  放置每个学习的学习内容和笔记和假期做的事情\n- 工作经历  每个工作的经历和周报和文档\n- 架构思维  高质量的思考\n- 生活技能  做饭等等\n- 算法  算法学习中的技巧和刷题记录\n- 编程语言  每个语言在入门阶段时的笔记\n","source":"_posts/资源整理/资源整理.md","raw":"---\ntitle: '资源整理'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: 资源整理\n---\n\n- 人际  偶尔会写几条\n- 其他  其他\n- 前端  放置学习资源和清单还有进阶的一些能沉淀下来的东西和工具，目录主要是大方向\n- 各种资源  放置每个方向的学习资源\n- 后端  放置能沉淀下俩的东西，不过暂时没用\n- 学习方法  放置自己的学习方法文档\n- 学校  放置每个学习的学习内容和笔记和假期做的事情\n- 工作经历  每个工作的经历和周报和文档\n- 架构思维  高质量的思考\n- 生活技能  做饭等等\n- 算法  算法学习中的技巧和刷题记录\n- 编程语言  每个语言在入门阶段时的笔记\n","slug":"资源整理/资源整理","published":1,"updated":"2023-03-21T09:27:52.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6h0017o8hu0os47gqr","content":"<ul>\n<li>人际  偶尔会写几条</li>\n<li>其他  其他</li>\n<li>前端  放置学习资源和清单还有进阶的一些能沉淀下来的东西和工具，目录主要是大方向</li>\n<li>各种资源  放置每个方向的学习资源</li>\n<li>后端  放置能沉淀下俩的东西，不过暂时没用</li>\n<li>学习方法  放置自己的学习方法文档</li>\n<li>学校  放置每个学习的学习内容和笔记和假期做的事情</li>\n<li>工作经历  每个工作的经历和周报和文档</li>\n<li>架构思维  高质量的思考</li>\n<li>生活技能  做饭等等</li>\n<li>算法  算法学习中的技巧和刷题记录</li>\n<li>编程语言  每个语言在入门阶段时的笔记</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>人际  偶尔会写几条</li>\n<li>其他  其他</li>\n<li>前端  放置学习资源和清单还有进阶的一些能沉淀下来的东西和工具，目录主要是大方向</li>\n<li>各种资源  放置每个方向的学习资源</li>\n<li>后端  放置能沉淀下俩的东西，不过暂时没用</li>\n<li>学习方法  放置自己的学习方法文档</li>\n<li>学校  放置每个学习的学习内容和笔记和假期做的事情</li>\n<li>工作经历  每个工作的经历和周报和文档</li>\n<li>架构思维  高质量的思考</li>\n<li>生活技能  做饭等等</li>\n<li>算法  算法学习中的技巧和刷题记录</li>\n<li>编程语言  每个语言在入门阶段时的笔记</li>\n</ul>\n"},{"title":"队列操作","date":"2022-10-15T02:06:51.000Z","_content":"\n- queue\\<int\\>  que\n\n1. push() 在队尾插入一个元素\n2. pop() 删除队列第一个元素\n3. size() 返回队列中元素个数\n4. empty() 如果队列空则返回true\n5. front() 返回队列中的第一个元素\n6. back() 返回队列中最后一个元素\n","source":"_posts/算法/队列操作.md","raw":"---\ntitle: '队列操作'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n- queue\\<int\\>  que\n\n1. push() 在队尾插入一个元素\n2. pop() 删除队列第一个元素\n3. size() 返回队列中元素个数\n4. empty() 如果队列空则返回true\n5. front() 返回队列中的第一个元素\n6. back() 返回队列中最后一个元素\n","slug":"算法/队列操作","published":1,"updated":"2023-03-21T09:15:49.192Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6i001bo8hua2xd9zsn","content":"<ul>\n<li>queue&lt;int&gt;  que</li>\n</ul>\n<ol>\n<li>push() 在队尾插入一个元素</li>\n<li>pop() 删除队列第一个元素</li>\n<li>size() 返回队列中元素个数</li>\n<li>empty() 如果队列空则返回true</li>\n<li>front() 返回队列中的第一个元素</li>\n<li>back() 返回队列中最后一个元素</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>queue&lt;int&gt;  que</li>\n</ul>\n<ol>\n<li>push() 在队尾插入一个元素</li>\n<li>pop() 删除队列第一个元素</li>\n<li>size() 返回队列中元素个数</li>\n<li>empty() 如果队列空则返回true</li>\n<li>front() 返回队列中的第一个元素</li>\n<li>back() 返回队列中最后一个元素</li>\n</ol>\n"},{"title":"vue源码初探","date":"2022-10-15T02:06:51.000Z","_content":"\n## vue创建与运行流程\n\n1. 每个vue文件都会编译成render函数，放在自身对象上，子组件会放在components对象中\n\n   ```json\n   {\n       \"name\": \"App\",\n       \"components\": {\n           \"HelloWorld\": {\n               \"name\": \"HelloWorld\",\n               \"__hmrId\": \"/src/components/HelloWorld.vue\",\n               \"__file\": \"C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\components\\\\HelloWorld.vue\"\n           }\n       },\n       \"__hmrId\": \"/src/App.vue\",\n       \"__file\": \"C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\App.vue\"\n   }\n   ```\n2. 创建app实例时传入上述对象，首先init初始化好工具函数，之后将组件实例放到component中\n\n## 从mini-vue看源码怎么实现的vue\n\n**源码运行流程以及ref的创建**\n\n1. 首先引入打包好的文件\n2. 打包文件中调用了将template方法传入一个将template转换成ast语法树的函数，并调用运行时dom返回render函数\n\n   ```js\n   function compileToFunction(template, options = {}) {\n     const { code } = baseCompile(template, options);\n\n     // 调用 compile 得到的代码在给封装到函数内，\n     // 这里会依赖 runtimeDom 的一些函数，所以在这里通过参数的形式注入进去\n     const render = new Function(\"Vue\", code)(runtimeDom);\n\n     return render;\n   }\n   ```\n3. 并且将该函数保存到compile中\n4. 引入好打包文件之后引入项目组件app.js，这里app.js中每个组件已经转换为对象的形式，包含名称，render函数，和setup函数\n5. 我们看一下这个创建响应式count数据的流程\n\n   ```js\n   const count = ref(0);\n   ```\n\n   1. 调用createRef方法传入value0\n   2. 调用RefImpl的接口，传入value返回一个ref对象\n\n      1. refimpl对象包含rawvalue，value，dep和__v_isRef为true的变量\n      2. 首先将传入的value变量为rawvalue变量赋值\n      3. 用convert函数转换该变量，如果该变量是一个对象就调用reactive函数，否则直接返回变量到value中\n      4. 调用createDep方法给dep变量赋值，传入空对象，该函数返回一个new Set的集合对象\n      5. 创建完refImpl对象了，将该变量返回给count，结束\n   3. RefImpl中提供了get value和setvalue的方法\n\n      1. get val中有`trackRefValue`函数，该函数接受前面传过来的this\n      2. 如果shouldTrack并且activeeffect被定义则调用 ，trackeffects，并传入之前的this.dep的集合变量\n      3. 该函数会将`activeEffect`添加到dep集合中\n   4. setvalue的流程\n\n      1. 该函数接受一个新值，如果该值和自己的ths.rawvalue不一样的话就调用convert方法传入新值并赋值给value，同时直接将新值赋值geinewvalue\n      2. 之后调用`triggerRefValue`方法，传入该变量的this，该函数会将this.dep变量传给`triggerEffects`的函数，`triggerEffects`会遍历传入的dep集合，如果这个集合中含有`scheduler`属性就调用该迭代变量的scheduler函数中，否则就调用run函数\n         ```js\n         function triggerEffects(dep) {\n             for (const effect of dep) {\n                 if (effect.scheduler) {\n                     effect.scheduler();\n                 }\n                 else {\n                     effect.run();\n                 }\n             }\n         }\n         ```\n   5. ref对象创建完毕，接下来我们可以用count.value获取到该值了，同时该值的getter与setter已经被我们截获，每次调用set值之后就会去dep中调用相应的订阅函数\n   6. 总体来讲就是我们创建一个count变量，为这个变量设置get和set方法，每次set之后我们还要记得给依赖该函数的变量进行重新计算赋值，dep就是谁依赖我了，谁用到我了，而不是我依赖谁了，谁用到我了，我修改之后要跟他说一声，该说的我都放到dep集合中了，每次set之后我都通知dep集合中的每一个对象，让他尽快改，相当于也调用他的set方法\n6. 将app中的组件返回，最终的结构是\n\n   ```js\n   {\n     name: \"App\",\n     setup() {},\n\n     render() {\n       return h(\"div\", { tId: 1 }, [h(\"p\", {}, \"主页\"), h(HelloWorld)]);\n     },\n   };\n   ```\n7. h函数会返回虚拟dom，如果传入的是对象则调用render方法，放到children中，否则就会根据tag，props，children创建虚拟dom\n8. 导入app.js完毕，现在获取到了所需的虚拟dom，将其传入createapp函数中\n\n   1. create函数将传入的app放到...args中，调用ensurerenderer函数返回的createapp函数\n   2. ensurerenderer返回renderer对象，如果该对象为空则返回createrenderer函数创建的对象，createrenderer会传入创建元素，文本，文字，插入，删除等所有dom操作方法放到options中解构使用\n\n      ```js\n      function ensureRenderer() {\n        // 如果 renderer 有值的话，那么以后都不会初始化了\n        return (\n          renderer ||\n          (renderer = createRenderer({\n            createElement,\n            createText,\n            setText,\n            setElementText,\n            patchProp,\n            insert,\n            remove,\n          }))\n        );\n      }\n      ```\n   3. createrenderer函数构建流程\n\n      1. 首先定义render函数，传入vnode，和container容器\n         render会调用patch传入null，vnode和container\n   4. 返回包含render和createapp函数的对象，createapp相当于createappapi函数，传入了render函数\n\n      1. createappapi会返回createapp函数\n      2. createapp函数接收rootcomponent对象，定义好app对象\n\n         ```js\n         export function createAppAPI(render) {\n           return function createApp(rootComponent) {\n             const app = {\n               _component: rootComponent,\n               mount(rootContainer) {\n                 console.log(\"基于根组件创建 vnode\");\n                 const vnode = createVNode(rootComponent);\n                 console.log(\"调用 render，基于 vnode 进行开箱\");\n                 render(vnode, rootContainer);\n               },\n             };\n\n             return app;\n           };\n         }\n         ```\n      3. app对象中的component包含render返回的虚拟dom\n      4. 同时含有mount方法接受rootcontainer的id选择器，用之前创建的createvnode方法传入返回虚拟vnode\n      5. 接下来调用render函数传入vnode和容器\n      6. 最终返回app对象\n   5. 调动mount方法，生成dom，createvnode的实现\n\n      ```js\n      export const createVNode = function (\n        type: any,\n        props?: any,\n        children?: string | Array<any>\n      ) {\n        // 注意 type 有可能是 string 也有可能是对象\n        // 如果是对象的话，那么就是用户设置的 options\n        // type 为 string 的时候\n        // createVNode(\"div\")\n        // type 为组件对象的时候\n        // createVNode(App)\n        const vnode = {\n          el: null,\n          component: null,\n          key: props?.key,\n          type,\n          props: props || {},\n          children,\n          shapeFlag: getShapeFlag(type),\n        };\n\n        // 基于 children 再次设置 shapeFlag\n        if (Array.isArray(children)) {\n          vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN;\n        } else if (typeof children === \"string\") {\n          vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN;\n        }\n\n        normalizeChildren(vnode, children);\n\n        return vnode;\n      };\n      ```\n   6. vnode包含el元素和component组件和key，type和props参数和children子节点数组\n   7. 如果children是数组则将vnode的shapeflag或一个ShapeFlags.ARRAY_CHILDREN变量\n   8. 之后调用normalizeChildren函数传入vnode和children\n\n      ```js\n      export function normalizeChildren(vnode, children) {\n        if (typeof children === \"object\") {\n          // 暂时主要是为了标识出 slots_children 这个类型来\n          // 暂时我们只有 element 类型和 component 类型的组件\n          // 所以我们这里除了 element ，那么只要是 component 的话，那么children 肯定就是 slots 了\n          if (vnode.shapeFlag & ShapeFlags.ELEMENT) {\n            // 如果是 element 类型的话，那么 children 肯定不是 slots\n          } else {\n            // 这里就必然是 component 了,\n            vnode.shapeFlag |= ShapeFlags.SLOTS_CHILDREN;\n          }\n        }\n      }\n      ```\n   9. 调用render函数传入vnode和rootcontainer\n\n      1. render会根据接收到的vnode和container进行path\n      2. patch会根据不同的类型做不同的处理，首先获取到变量中的type\n\n         ```js\n           function patch(\n             n1,\n             n2,\n             container = null,\n             anchor = null,\n             parentComponent = null\n           ) {\n             // 基于 n2 的类型来判断\n             // 因为 n2 是新的 vnode\n             const { type, shapeFlag } = n2;\n             switch (type) {\n               case Text:\n                 processText(n1, n2, container);\n                 break;\n               // 其中还有几个类型比如： static fragment comment\n               case Fragment:\n                 processFragment(n1, n2, container);\n                 break;\n               default:\n                 // 这里就基于 shapeFlag 来处理\n                 if (shapeFlag & ShapeFlags.ELEMENT) {\n                   console.log(\"处理 element\");\n                   processElement(n1, n2, container, anchor, parentComponent);\n                 } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n                   console.log(\"处理 component\");\n                   processComponent(n1, n2, container, parentComponent);\n                 }\n             }\n           }\n         ```\n      3. ```js\n           function processComponent(n1, n2, container, parentComponent) {\n             // 如果 n1 没有值的话，那么就是 mount\n             if (!n1) {\n               // 初始化 component\n               mountComponent(n2, container, parentComponent);\n             } else {\n               updateComponent(n1, n2, container);\n             }\n           }\n         ```\n      4.\n","source":"_posts/博客/框架原理/1_vue源码初探.md","raw":"---\ntitle: 'vue源码初探'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## vue创建与运行流程\n\n1. 每个vue文件都会编译成render函数，放在自身对象上，子组件会放在components对象中\n\n   ```json\n   {\n       \"name\": \"App\",\n       \"components\": {\n           \"HelloWorld\": {\n               \"name\": \"HelloWorld\",\n               \"__hmrId\": \"/src/components/HelloWorld.vue\",\n               \"__file\": \"C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\components\\\\HelloWorld.vue\"\n           }\n       },\n       \"__hmrId\": \"/src/App.vue\",\n       \"__file\": \"C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\App.vue\"\n   }\n   ```\n2. 创建app实例时传入上述对象，首先init初始化好工具函数，之后将组件实例放到component中\n\n## 从mini-vue看源码怎么实现的vue\n\n**源码运行流程以及ref的创建**\n\n1. 首先引入打包好的文件\n2. 打包文件中调用了将template方法传入一个将template转换成ast语法树的函数，并调用运行时dom返回render函数\n\n   ```js\n   function compileToFunction(template, options = {}) {\n     const { code } = baseCompile(template, options);\n\n     // 调用 compile 得到的代码在给封装到函数内，\n     // 这里会依赖 runtimeDom 的一些函数，所以在这里通过参数的形式注入进去\n     const render = new Function(\"Vue\", code)(runtimeDom);\n\n     return render;\n   }\n   ```\n3. 并且将该函数保存到compile中\n4. 引入好打包文件之后引入项目组件app.js，这里app.js中每个组件已经转换为对象的形式，包含名称，render函数，和setup函数\n5. 我们看一下这个创建响应式count数据的流程\n\n   ```js\n   const count = ref(0);\n   ```\n\n   1. 调用createRef方法传入value0\n   2. 调用RefImpl的接口，传入value返回一个ref对象\n\n      1. refimpl对象包含rawvalue，value，dep和__v_isRef为true的变量\n      2. 首先将传入的value变量为rawvalue变量赋值\n      3. 用convert函数转换该变量，如果该变量是一个对象就调用reactive函数，否则直接返回变量到value中\n      4. 调用createDep方法给dep变量赋值，传入空对象，该函数返回一个new Set的集合对象\n      5. 创建完refImpl对象了，将该变量返回给count，结束\n   3. RefImpl中提供了get value和setvalue的方法\n\n      1. get val中有`trackRefValue`函数，该函数接受前面传过来的this\n      2. 如果shouldTrack并且activeeffect被定义则调用 ，trackeffects，并传入之前的this.dep的集合变量\n      3. 该函数会将`activeEffect`添加到dep集合中\n   4. setvalue的流程\n\n      1. 该函数接受一个新值，如果该值和自己的ths.rawvalue不一样的话就调用convert方法传入新值并赋值给value，同时直接将新值赋值geinewvalue\n      2. 之后调用`triggerRefValue`方法，传入该变量的this，该函数会将this.dep变量传给`triggerEffects`的函数，`triggerEffects`会遍历传入的dep集合，如果这个集合中含有`scheduler`属性就调用该迭代变量的scheduler函数中，否则就调用run函数\n         ```js\n         function triggerEffects(dep) {\n             for (const effect of dep) {\n                 if (effect.scheduler) {\n                     effect.scheduler();\n                 }\n                 else {\n                     effect.run();\n                 }\n             }\n         }\n         ```\n   5. ref对象创建完毕，接下来我们可以用count.value获取到该值了，同时该值的getter与setter已经被我们截获，每次调用set值之后就会去dep中调用相应的订阅函数\n   6. 总体来讲就是我们创建一个count变量，为这个变量设置get和set方法，每次set之后我们还要记得给依赖该函数的变量进行重新计算赋值，dep就是谁依赖我了，谁用到我了，而不是我依赖谁了，谁用到我了，我修改之后要跟他说一声，该说的我都放到dep集合中了，每次set之后我都通知dep集合中的每一个对象，让他尽快改，相当于也调用他的set方法\n6. 将app中的组件返回，最终的结构是\n\n   ```js\n   {\n     name: \"App\",\n     setup() {},\n\n     render() {\n       return h(\"div\", { tId: 1 }, [h(\"p\", {}, \"主页\"), h(HelloWorld)]);\n     },\n   };\n   ```\n7. h函数会返回虚拟dom，如果传入的是对象则调用render方法，放到children中，否则就会根据tag，props，children创建虚拟dom\n8. 导入app.js完毕，现在获取到了所需的虚拟dom，将其传入createapp函数中\n\n   1. create函数将传入的app放到...args中，调用ensurerenderer函数返回的createapp函数\n   2. ensurerenderer返回renderer对象，如果该对象为空则返回createrenderer函数创建的对象，createrenderer会传入创建元素，文本，文字，插入，删除等所有dom操作方法放到options中解构使用\n\n      ```js\n      function ensureRenderer() {\n        // 如果 renderer 有值的话，那么以后都不会初始化了\n        return (\n          renderer ||\n          (renderer = createRenderer({\n            createElement,\n            createText,\n            setText,\n            setElementText,\n            patchProp,\n            insert,\n            remove,\n          }))\n        );\n      }\n      ```\n   3. createrenderer函数构建流程\n\n      1. 首先定义render函数，传入vnode，和container容器\n         render会调用patch传入null，vnode和container\n   4. 返回包含render和createapp函数的对象，createapp相当于createappapi函数，传入了render函数\n\n      1. createappapi会返回createapp函数\n      2. createapp函数接收rootcomponent对象，定义好app对象\n\n         ```js\n         export function createAppAPI(render) {\n           return function createApp(rootComponent) {\n             const app = {\n               _component: rootComponent,\n               mount(rootContainer) {\n                 console.log(\"基于根组件创建 vnode\");\n                 const vnode = createVNode(rootComponent);\n                 console.log(\"调用 render，基于 vnode 进行开箱\");\n                 render(vnode, rootContainer);\n               },\n             };\n\n             return app;\n           };\n         }\n         ```\n      3. app对象中的component包含render返回的虚拟dom\n      4. 同时含有mount方法接受rootcontainer的id选择器，用之前创建的createvnode方法传入返回虚拟vnode\n      5. 接下来调用render函数传入vnode和容器\n      6. 最终返回app对象\n   5. 调动mount方法，生成dom，createvnode的实现\n\n      ```js\n      export const createVNode = function (\n        type: any,\n        props?: any,\n        children?: string | Array<any>\n      ) {\n        // 注意 type 有可能是 string 也有可能是对象\n        // 如果是对象的话，那么就是用户设置的 options\n        // type 为 string 的时候\n        // createVNode(\"div\")\n        // type 为组件对象的时候\n        // createVNode(App)\n        const vnode = {\n          el: null,\n          component: null,\n          key: props?.key,\n          type,\n          props: props || {},\n          children,\n          shapeFlag: getShapeFlag(type),\n        };\n\n        // 基于 children 再次设置 shapeFlag\n        if (Array.isArray(children)) {\n          vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN;\n        } else if (typeof children === \"string\") {\n          vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN;\n        }\n\n        normalizeChildren(vnode, children);\n\n        return vnode;\n      };\n      ```\n   6. vnode包含el元素和component组件和key，type和props参数和children子节点数组\n   7. 如果children是数组则将vnode的shapeflag或一个ShapeFlags.ARRAY_CHILDREN变量\n   8. 之后调用normalizeChildren函数传入vnode和children\n\n      ```js\n      export function normalizeChildren(vnode, children) {\n        if (typeof children === \"object\") {\n          // 暂时主要是为了标识出 slots_children 这个类型来\n          // 暂时我们只有 element 类型和 component 类型的组件\n          // 所以我们这里除了 element ，那么只要是 component 的话，那么children 肯定就是 slots 了\n          if (vnode.shapeFlag & ShapeFlags.ELEMENT) {\n            // 如果是 element 类型的话，那么 children 肯定不是 slots\n          } else {\n            // 这里就必然是 component 了,\n            vnode.shapeFlag |= ShapeFlags.SLOTS_CHILDREN;\n          }\n        }\n      }\n      ```\n   9. 调用render函数传入vnode和rootcontainer\n\n      1. render会根据接收到的vnode和container进行path\n      2. patch会根据不同的类型做不同的处理，首先获取到变量中的type\n\n         ```js\n           function patch(\n             n1,\n             n2,\n             container = null,\n             anchor = null,\n             parentComponent = null\n           ) {\n             // 基于 n2 的类型来判断\n             // 因为 n2 是新的 vnode\n             const { type, shapeFlag } = n2;\n             switch (type) {\n               case Text:\n                 processText(n1, n2, container);\n                 break;\n               // 其中还有几个类型比如： static fragment comment\n               case Fragment:\n                 processFragment(n1, n2, container);\n                 break;\n               default:\n                 // 这里就基于 shapeFlag 来处理\n                 if (shapeFlag & ShapeFlags.ELEMENT) {\n                   console.log(\"处理 element\");\n                   processElement(n1, n2, container, anchor, parentComponent);\n                 } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n                   console.log(\"处理 component\");\n                   processComponent(n1, n2, container, parentComponent);\n                 }\n             }\n           }\n         ```\n      3. ```js\n           function processComponent(n1, n2, container, parentComponent) {\n             // 如果 n1 没有值的话，那么就是 mount\n             if (!n1) {\n               // 初始化 component\n               mountComponent(n2, container, parentComponent);\n             } else {\n               updateComponent(n1, n2, container);\n             }\n           }\n         ```\n      4.\n","slug":"博客/框架原理/1_vue源码初探","published":1,"updated":"2023-03-21T09:40:13.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6k001fo8hu92y3h4nj","content":"<h2 id=\"vue创建与运行流程\"><a href=\"#vue创建与运行流程\" class=\"headerlink\" title=\"vue创建与运行流程\"></a>vue创建与运行流程</h2><ol>\n<li><p>每个vue文件都会编译成render函数，放在自身对象上，子组件会放在components对象中</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;App&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;components&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;HelloWorld&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;HelloWorld&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__hmrId&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/src/components/HelloWorld.vue&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\components\\\\HelloWorld.vue&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__hmrId&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/src/App.vue&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\App.vue&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>创建app实例时传入上述对象，首先init初始化好工具函数，之后将组件实例放到component中</p>\n</li>\n</ol>\n<h2 id=\"从mini-vue看源码怎么实现的vue\"><a href=\"#从mini-vue看源码怎么实现的vue\" class=\"headerlink\" title=\"从mini-vue看源码怎么实现的vue\"></a>从mini-vue看源码怎么实现的vue</h2><p><strong>源码运行流程以及ref的创建</strong></p>\n<ol>\n<li><p>首先引入打包好的文件</p>\n</li>\n<li><p>打包文件中调用了将template方法传入一个将template转换成ast语法树的函数，并调用运行时dom返回render函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compileToFunction</span>(<span class=\"params\">template, options = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; code &#125; = <span class=\"title function_\">baseCompile</span>(template, options);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用 compile 得到的代码在给封装到函数内，</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里会依赖 runtimeDom 的一些函数，所以在这里通过参数的形式注入进去</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> render = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;Vue&quot;</span>, code)(runtimeDom);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> render;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>并且将该函数保存到compile中</p>\n</li>\n<li><p>引入好打包文件之后引入项目组件app.js，这里app.js中每个组件已经转换为对象的形式，包含名称，render函数，和setup函数</p>\n</li>\n<li><p>我们看一下这个创建响应式count数据的流程</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>调用createRef方法传入value0</p>\n</li>\n<li><p>调用RefImpl的接口，传入value返回一个ref对象</p>\n<ol>\n<li>refimpl对象包含rawvalue，value，dep和__v_isRef为true的变量</li>\n<li>首先将传入的value变量为rawvalue变量赋值</li>\n<li>用convert函数转换该变量，如果该变量是一个对象就调用reactive函数，否则直接返回变量到value中</li>\n<li>调用createDep方法给dep变量赋值，传入空对象，该函数返回一个new Set的集合对象</li>\n<li>创建完refImpl对象了，将该变量返回给count，结束</li>\n</ol>\n</li>\n<li><p>RefImpl中提供了get value和setvalue的方法</p>\n<ol>\n<li>get val中有<code>trackRefValue</code>函数，该函数接受前面传过来的this</li>\n<li>如果shouldTrack并且activeeffect被定义则调用 ，trackeffects，并传入之前的this.dep的集合变量</li>\n<li>该函数会将<code>activeEffect</code>添加到dep集合中</li>\n</ol>\n</li>\n<li><p>setvalue的流程</p>\n<ol>\n<li>该函数接受一个新值，如果该值和自己的ths.rawvalue不一样的话就调用convert方法传入新值并赋值给value，同时直接将新值赋值geinewvalue</li>\n<li>之后调用<code>triggerRefValue</code>方法，传入该变量的this，该函数会将this.dep变量传给<code>triggerEffects</code>的函数，<code>triggerEffects</code>会遍历传入的dep集合，如果这个集合中含有<code>scheduler</code>属性就调用该迭代变量的scheduler函数中，否则就调用run函数<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">triggerEffects</span>(<span class=\"params\">dep</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> effect <span class=\"keyword\">of</span> dep) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (effect.<span class=\"property\">scheduler</span>) &#123;</span><br><span class=\"line\">            effect.<span class=\"title function_\">scheduler</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            effect.<span class=\"title function_\">run</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>ref对象创建完毕，接下来我们可以用count.value获取到该值了，同时该值的getter与setter已经被我们截获，每次调用set值之后就会去dep中调用相应的订阅函数</p>\n</li>\n<li><p>总体来讲就是我们创建一个count变量，为这个变量设置get和set方法，每次set之后我们还要记得给依赖该函数的变量进行重新计算赋值，dep就是谁依赖我了，谁用到我了，而不是我依赖谁了，谁用到我了，我修改之后要跟他说一声，该说的我都放到dep集合中了，每次set之后我都通知dep集合中的每一个对象，让他尽快改，相当于也调用他的set方法</p>\n</li>\n</ol>\n</li>\n<li><p>将app中的组件返回，最终的结构是</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;App&quot;</span>,</span><br><span class=\"line\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">h</span>(<span class=\"string\">&quot;div&quot;</span>, &#123; <span class=\"attr\">tId</span>: <span class=\"number\">1</span> &#125;, [<span class=\"title function_\">h</span>(<span class=\"string\">&quot;p&quot;</span>, &#123;&#125;, <span class=\"string\">&quot;主页&quot;</span>), <span class=\"title function_\">h</span>(<span class=\"title class_\">HelloWorld</span>)]);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n<li><p>h函数会返回虚拟dom，如果传入的是对象则调用render方法，放到children中，否则就会根据tag，props，children创建虚拟dom</p>\n</li>\n<li><p>导入app.js完毕，现在获取到了所需的虚拟dom，将其传入createapp函数中</p>\n<ol>\n<li><p>create函数将传入的app放到…args中，调用ensurerenderer函数返回的createapp函数</p>\n</li>\n<li><p>ensurerenderer返回renderer对象，如果该对象为空则返回createrenderer函数创建的对象，createrenderer会传入创建元素，文本，文字，插入，删除等所有dom操作方法放到options中解构使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ensureRenderer</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果 renderer 有值的话，那么以后都不会初始化了</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    renderer ||</span><br><span class=\"line\">    (renderer = <span class=\"title function_\">createRenderer</span>(&#123;</span><br><span class=\"line\">      createElement,</span><br><span class=\"line\">      createText,</span><br><span class=\"line\">      setText,</span><br><span class=\"line\">      setElementText,</span><br><span class=\"line\">      patchProp,</span><br><span class=\"line\">      insert,</span><br><span class=\"line\">      remove,</span><br><span class=\"line\">    &#125;))</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>createrenderer函数构建流程</p>\n<ol>\n<li>首先定义render函数，传入vnode，和container容器<br>render会调用patch传入null，vnode和container</li>\n</ol>\n</li>\n<li><p>返回包含render和createapp函数的对象，createapp相当于createappapi函数，传入了render函数</p>\n<ol>\n<li><p>createappapi会返回createapp函数</p>\n</li>\n<li><p>createapp函数接收rootcomponent对象，定义好app对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createAppAPI</span>(<span class=\"params\">render</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createApp</span>(<span class=\"params\">rootComponent</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> app = &#123;</span><br><span class=\"line\">      <span class=\"attr\">_component</span>: rootComponent,</span><br><span class=\"line\">      <span class=\"title function_\">mount</span>(<span class=\"params\">rootContainer</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;基于根组件创建 vnode&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> vnode = <span class=\"title function_\">createVNode</span>(rootComponent);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;调用 render，基于 vnode 进行开箱&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">render</span>(vnode, rootContainer);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> app;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>app对象中的component包含render返回的虚拟dom</p>\n</li>\n<li><p>同时含有mount方法接受rootcontainer的id选择器，用之前创建的createvnode方法传入返回虚拟vnode</p>\n</li>\n<li><p>接下来调用render函数传入vnode和容器</p>\n</li>\n<li><p>最终返回app对象</p>\n</li>\n</ol>\n</li>\n<li><p>调动mount方法，生成dom，createvnode的实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> createVNode = <span class=\"keyword\">function</span> (<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  type: any,</span></span><br><span class=\"line\"><span class=\"params\">  props?: any,</span></span><br><span class=\"line\"><span class=\"params\">  children?: string | <span class=\"built_in\">Array</span>&lt;any&gt;</span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 注意 type 有可能是 string 也有可能是对象</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果是对象的话，那么就是用户设置的 options</span></span><br><span class=\"line\">  <span class=\"comment\">// type 为 string 的时候</span></span><br><span class=\"line\">  <span class=\"comment\">// createVNode(&quot;div&quot;)</span></span><br><span class=\"line\">  <span class=\"comment\">// type 为组件对象的时候</span></span><br><span class=\"line\">  <span class=\"comment\">// createVNode(App)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> vnode = &#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">key</span>: props?.<span class=\"property\">key</span>,</span><br><span class=\"line\">    type,</span><br><span class=\"line\">    <span class=\"attr\">props</span>: props || &#123;&#125;,</span><br><span class=\"line\">    children,</span><br><span class=\"line\">    <span class=\"attr\">shapeFlag</span>: <span class=\"title function_\">getShapeFlag</span>(type),</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 基于 children 再次设置 shapeFlag</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(children)) &#123;</span><br><span class=\"line\">    vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ARRAY_CHILDREN</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> children === <span class=\"string\">&quot;string&quot;</span>) &#123;</span><br><span class=\"line\">    vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">TEXT_CHILDREN</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">normalizeChildren</span>(vnode, children);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> vnode;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n<li><p>vnode包含el元素和component组件和key，type和props参数和children子节点数组</p>\n</li>\n<li><p>如果children是数组则将vnode的shapeflag或一个ShapeFlags.ARRAY_CHILDREN变量</p>\n</li>\n<li><p>之后调用normalizeChildren函数传入vnode和children</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">normalizeChildren</span>(<span class=\"params\">vnode, children</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> children === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 暂时主要是为了标识出 slots_children 这个类型来</span></span><br><span class=\"line\">    <span class=\"comment\">// 暂时我们只有 element 类型和 component 类型的组件</span></span><br><span class=\"line\">    <span class=\"comment\">// 所以我们这里除了 element ，那么只要是 component 的话，那么children 肯定就是 slots 了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (vnode.<span class=\"property\">shapeFlag</span> &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ELEMENT</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果是 element 类型的话，那么 children 肯定不是 slots</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里就必然是 component 了,</span></span><br><span class=\"line\">      vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">SLOTS_CHILDREN</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>调用render函数传入vnode和rootcontainer</p>\n<ol>\n<li><p>render会根据接收到的vnode和container进行path</p>\n</li>\n<li><p>patch会根据不同的类型做不同的处理，首先获取到变量中的type</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">patch</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  n1,</span></span><br><span class=\"line\"><span class=\"params\">  n2,</span></span><br><span class=\"line\"><span class=\"params\">  container = <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"params\">  anchor = <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"params\">  parentComponent = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 基于 n2 的类型来判断</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为 n2 是新的 vnode</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; type, shapeFlag &#125; = n2;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"title class_\">Text</span>:</span><br><span class=\"line\">      <span class=\"title function_\">processText</span>(n1, n2, container);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 其中还有几个类型比如： static fragment comment</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"title class_\">Fragment</span>:</span><br><span class=\"line\">      <span class=\"title function_\">processFragment</span>(n1, n2, container);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"comment\">// 这里就基于 shapeFlag 来处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (shapeFlag &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ELEMENT</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;处理 element&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">processElement</span>(n1, n2, container, anchor, parentComponent);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (shapeFlag &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">STATEFUL_COMPONENT</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;处理 component&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">processComponent</span>(n1, n2, container, parentComponent);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><pre><code class=\"js\">  function processComponent(n1, n2, container, parentComponent) &#123;\n    // 如果 n1 没有值的话，那么就是 mount\n    if (!n1) &#123;\n      // 初始化 component\n      mountComponent(n2, container, parentComponent);\n    &#125; else &#123;\n      updateComponent(n1, n2, container);\n    &#125;\n  &#125;\n</code></pre>\n</li>\n<li></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue创建与运行流程\"><a href=\"#vue创建与运行流程\" class=\"headerlink\" title=\"vue创建与运行流程\"></a>vue创建与运行流程</h2><ol>\n<li><p>每个vue文件都会编译成render函数，放在自身对象上，子组件会放在components对象中</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;App&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;components&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;HelloWorld&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;HelloWorld&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__hmrId&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/src/components/HelloWorld.vue&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\components\\\\HelloWorld.vue&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__hmrId&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/src/App.vue&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\study\\\\interview\\\\vue\\\\exercse1\\\\src\\\\App.vue&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>创建app实例时传入上述对象，首先init初始化好工具函数，之后将组件实例放到component中</p>\n</li>\n</ol>\n<h2 id=\"从mini-vue看源码怎么实现的vue\"><a href=\"#从mini-vue看源码怎么实现的vue\" class=\"headerlink\" title=\"从mini-vue看源码怎么实现的vue\"></a>从mini-vue看源码怎么实现的vue</h2><p><strong>源码运行流程以及ref的创建</strong></p>\n<ol>\n<li><p>首先引入打包好的文件</p>\n</li>\n<li><p>打包文件中调用了将template方法传入一个将template转换成ast语法树的函数，并调用运行时dom返回render函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compileToFunction</span>(<span class=\"params\">template, options = &#123;&#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; code &#125; = <span class=\"title function_\">baseCompile</span>(template, options);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用 compile 得到的代码在给封装到函数内，</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里会依赖 runtimeDom 的一些函数，所以在这里通过参数的形式注入进去</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> render = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(<span class=\"string\">&quot;Vue&quot;</span>, code)(runtimeDom);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> render;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>并且将该函数保存到compile中</p>\n</li>\n<li><p>引入好打包文件之后引入项目组件app.js，这里app.js中每个组件已经转换为对象的形式，包含名称，render函数，和setup函数</p>\n</li>\n<li><p>我们看一下这个创建响应式count数据的流程</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>调用createRef方法传入value0</p>\n</li>\n<li><p>调用RefImpl的接口，传入value返回一个ref对象</p>\n<ol>\n<li>refimpl对象包含rawvalue，value，dep和__v_isRef为true的变量</li>\n<li>首先将传入的value变量为rawvalue变量赋值</li>\n<li>用convert函数转换该变量，如果该变量是一个对象就调用reactive函数，否则直接返回变量到value中</li>\n<li>调用createDep方法给dep变量赋值，传入空对象，该函数返回一个new Set的集合对象</li>\n<li>创建完refImpl对象了，将该变量返回给count，结束</li>\n</ol>\n</li>\n<li><p>RefImpl中提供了get value和setvalue的方法</p>\n<ol>\n<li>get val中有<code>trackRefValue</code>函数，该函数接受前面传过来的this</li>\n<li>如果shouldTrack并且activeeffect被定义则调用 ，trackeffects，并传入之前的this.dep的集合变量</li>\n<li>该函数会将<code>activeEffect</code>添加到dep集合中</li>\n</ol>\n</li>\n<li><p>setvalue的流程</p>\n<ol>\n<li>该函数接受一个新值，如果该值和自己的ths.rawvalue不一样的话就调用convert方法传入新值并赋值给value，同时直接将新值赋值geinewvalue</li>\n<li>之后调用<code>triggerRefValue</code>方法，传入该变量的this，该函数会将this.dep变量传给<code>triggerEffects</code>的函数，<code>triggerEffects</code>会遍历传入的dep集合，如果这个集合中含有<code>scheduler</code>属性就调用该迭代变量的scheduler函数中，否则就调用run函数<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">triggerEffects</span>(<span class=\"params\">dep</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> effect <span class=\"keyword\">of</span> dep) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (effect.<span class=\"property\">scheduler</span>) &#123;</span><br><span class=\"line\">            effect.<span class=\"title function_\">scheduler</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            effect.<span class=\"title function_\">run</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>ref对象创建完毕，接下来我们可以用count.value获取到该值了，同时该值的getter与setter已经被我们截获，每次调用set值之后就会去dep中调用相应的订阅函数</p>\n</li>\n<li><p>总体来讲就是我们创建一个count变量，为这个变量设置get和set方法，每次set之后我们还要记得给依赖该函数的变量进行重新计算赋值，dep就是谁依赖我了，谁用到我了，而不是我依赖谁了，谁用到我了，我修改之后要跟他说一声，该说的我都放到dep集合中了，每次set之后我都通知dep集合中的每一个对象，让他尽快改，相当于也调用他的set方法</p>\n</li>\n</ol>\n</li>\n<li><p>将app中的组件返回，最终的结构是</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;App&quot;</span>,</span><br><span class=\"line\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">h</span>(<span class=\"string\">&quot;div&quot;</span>, &#123; <span class=\"attr\">tId</span>: <span class=\"number\">1</span> &#125;, [<span class=\"title function_\">h</span>(<span class=\"string\">&quot;p&quot;</span>, &#123;&#125;, <span class=\"string\">&quot;主页&quot;</span>), <span class=\"title function_\">h</span>(<span class=\"title class_\">HelloWorld</span>)]);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n<li><p>h函数会返回虚拟dom，如果传入的是对象则调用render方法，放到children中，否则就会根据tag，props，children创建虚拟dom</p>\n</li>\n<li><p>导入app.js完毕，现在获取到了所需的虚拟dom，将其传入createapp函数中</p>\n<ol>\n<li><p>create函数将传入的app放到…args中，调用ensurerenderer函数返回的createapp函数</p>\n</li>\n<li><p>ensurerenderer返回renderer对象，如果该对象为空则返回createrenderer函数创建的对象，createrenderer会传入创建元素，文本，文字，插入，删除等所有dom操作方法放到options中解构使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ensureRenderer</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果 renderer 有值的话，那么以后都不会初始化了</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    renderer ||</span><br><span class=\"line\">    (renderer = <span class=\"title function_\">createRenderer</span>(&#123;</span><br><span class=\"line\">      createElement,</span><br><span class=\"line\">      createText,</span><br><span class=\"line\">      setText,</span><br><span class=\"line\">      setElementText,</span><br><span class=\"line\">      patchProp,</span><br><span class=\"line\">      insert,</span><br><span class=\"line\">      remove,</span><br><span class=\"line\">    &#125;))</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>createrenderer函数构建流程</p>\n<ol>\n<li>首先定义render函数，传入vnode，和container容器<br>render会调用patch传入null，vnode和container</li>\n</ol>\n</li>\n<li><p>返回包含render和createapp函数的对象，createapp相当于createappapi函数，传入了render函数</p>\n<ol>\n<li><p>createappapi会返回createapp函数</p>\n</li>\n<li><p>createapp函数接收rootcomponent对象，定义好app对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createAppAPI</span>(<span class=\"params\">render</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">createApp</span>(<span class=\"params\">rootComponent</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> app = &#123;</span><br><span class=\"line\">      <span class=\"attr\">_component</span>: rootComponent,</span><br><span class=\"line\">      <span class=\"title function_\">mount</span>(<span class=\"params\">rootContainer</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;基于根组件创建 vnode&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> vnode = <span class=\"title function_\">createVNode</span>(rootComponent);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;调用 render，基于 vnode 进行开箱&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">render</span>(vnode, rootContainer);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> app;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>app对象中的component包含render返回的虚拟dom</p>\n</li>\n<li><p>同时含有mount方法接受rootcontainer的id选择器，用之前创建的createvnode方法传入返回虚拟vnode</p>\n</li>\n<li><p>接下来调用render函数传入vnode和容器</p>\n</li>\n<li><p>最终返回app对象</p>\n</li>\n</ol>\n</li>\n<li><p>调动mount方法，生成dom，createvnode的实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> createVNode = <span class=\"keyword\">function</span> (<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  type: any,</span></span><br><span class=\"line\"><span class=\"params\">  props?: any,</span></span><br><span class=\"line\"><span class=\"params\">  children?: string | <span class=\"built_in\">Array</span>&lt;any&gt;</span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 注意 type 有可能是 string 也有可能是对象</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果是对象的话，那么就是用户设置的 options</span></span><br><span class=\"line\">  <span class=\"comment\">// type 为 string 的时候</span></span><br><span class=\"line\">  <span class=\"comment\">// createVNode(&quot;div&quot;)</span></span><br><span class=\"line\">  <span class=\"comment\">// type 为组件对象的时候</span></span><br><span class=\"line\">  <span class=\"comment\">// createVNode(App)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> vnode = &#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">key</span>: props?.<span class=\"property\">key</span>,</span><br><span class=\"line\">    type,</span><br><span class=\"line\">    <span class=\"attr\">props</span>: props || &#123;&#125;,</span><br><span class=\"line\">    children,</span><br><span class=\"line\">    <span class=\"attr\">shapeFlag</span>: <span class=\"title function_\">getShapeFlag</span>(type),</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 基于 children 再次设置 shapeFlag</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(children)) &#123;</span><br><span class=\"line\">    vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ARRAY_CHILDREN</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> children === <span class=\"string\">&quot;string&quot;</span>) &#123;</span><br><span class=\"line\">    vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">TEXT_CHILDREN</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">normalizeChildren</span>(vnode, children);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> vnode;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n<li><p>vnode包含el元素和component组件和key，type和props参数和children子节点数组</p>\n</li>\n<li><p>如果children是数组则将vnode的shapeflag或一个ShapeFlags.ARRAY_CHILDREN变量</p>\n</li>\n<li><p>之后调用normalizeChildren函数传入vnode和children</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">normalizeChildren</span>(<span class=\"params\">vnode, children</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> children === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 暂时主要是为了标识出 slots_children 这个类型来</span></span><br><span class=\"line\">    <span class=\"comment\">// 暂时我们只有 element 类型和 component 类型的组件</span></span><br><span class=\"line\">    <span class=\"comment\">// 所以我们这里除了 element ，那么只要是 component 的话，那么children 肯定就是 slots 了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (vnode.<span class=\"property\">shapeFlag</span> &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ELEMENT</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果是 element 类型的话，那么 children 肯定不是 slots</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里就必然是 component 了,</span></span><br><span class=\"line\">      vnode.<span class=\"property\">shapeFlag</span> |= <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">SLOTS_CHILDREN</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>调用render函数传入vnode和rootcontainer</p>\n<ol>\n<li><p>render会根据接收到的vnode和container进行path</p>\n</li>\n<li><p>patch会根据不同的类型做不同的处理，首先获取到变量中的type</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">patch</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  n1,</span></span><br><span class=\"line\"><span class=\"params\">  n2,</span></span><br><span class=\"line\"><span class=\"params\">  container = <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"params\">  anchor = <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"params\">  parentComponent = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 基于 n2 的类型来判断</span></span><br><span class=\"line\">  <span class=\"comment\">// 因为 n2 是新的 vnode</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; type, shapeFlag &#125; = n2;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"title class_\">Text</span>:</span><br><span class=\"line\">      <span class=\"title function_\">processText</span>(n1, n2, container);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 其中还有几个类型比如： static fragment comment</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"title class_\">Fragment</span>:</span><br><span class=\"line\">      <span class=\"title function_\">processFragment</span>(n1, n2, container);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"comment\">// 这里就基于 shapeFlag 来处理</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (shapeFlag &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">ELEMENT</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;处理 element&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">processElement</span>(n1, n2, container, anchor, parentComponent);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (shapeFlag &amp; <span class=\"title class_\">ShapeFlags</span>.<span class=\"property\">STATEFUL_COMPONENT</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;处理 component&quot;</span>);</span><br><span class=\"line\">        <span class=\"title function_\">processComponent</span>(n1, n2, container, parentComponent);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><pre><code class=\"js\">  function processComponent(n1, n2, container, parentComponent) &#123;\n    // 如果 n1 没有值的话，那么就是 mount\n    if (!n1) &#123;\n      // 初始化 component\n      mountComponent(n2, container, parentComponent);\n    &#125; else &#123;\n      updateComponent(n1, n2, container);\n    &#125;\n  &#125;\n</code></pre>\n</li>\n<li></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n"},{"title":"感悟","date":"2022-10-15T02:06:51.000Z","_content":"\n## 你之所以困惑于现在\n\n> 是因为你的维度太低，只要你升维度就可以解决，\n>\n> 纠结的原因是弱小与恐惧，将原因让别人背锅\n>\n> 正确做法是主动出击，换位思考\n\n## acm做题\n\n- 心态不要着急，维持身体的能量才是最长久的\n- 维持好能量就可以随时处于不败之地（冥想，心态）\n- 拼装法做题\n- 龟系和兔系\n","source":"_posts/其他/感悟/1.md","raw":"---\ntitle: '感悟'\ndate: 2022-10-15 10:06:51\ntags: 思维\ncategories: 其他\n---\n\n## 你之所以困惑于现在\n\n> 是因为你的维度太低，只要你升维度就可以解决，\n>\n> 纠结的原因是弱小与恐惧，将原因让别人背锅\n>\n> 正确做法是主动出击，换位思考\n\n## acm做题\n\n- 心态不要着急，维持身体的能量才是最长久的\n- 维持好能量就可以随时处于不败之地（冥想，心态）\n- 拼装法做题\n- 龟系和兔系\n","slug":"其他/感悟/1","published":1,"updated":"2023-03-21T09:15:22.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6l001jo8hugy4ffgwi","content":"<h2 id=\"你之所以困惑于现在\"><a href=\"#你之所以困惑于现在\" class=\"headerlink\" title=\"你之所以困惑于现在\"></a>你之所以困惑于现在</h2><blockquote>\n<p>是因为你的维度太低，只要你升维度就可以解决，</p>\n<p>纠结的原因是弱小与恐惧，将原因让别人背锅</p>\n<p>正确做法是主动出击，换位思考</p>\n</blockquote>\n<h2 id=\"acm做题\"><a href=\"#acm做题\" class=\"headerlink\" title=\"acm做题\"></a>acm做题</h2><ul>\n<li>心态不要着急，维持身体的能量才是最长久的</li>\n<li>维持好能量就可以随时处于不败之地（冥想，心态）</li>\n<li>拼装法做题</li>\n<li>龟系和兔系</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"你之所以困惑于现在\"><a href=\"#你之所以困惑于现在\" class=\"headerlink\" title=\"你之所以困惑于现在\"></a>你之所以困惑于现在</h2><blockquote>\n<p>是因为你的维度太低，只要你升维度就可以解决，</p>\n<p>纠结的原因是弱小与恐惧，将原因让别人背锅</p>\n<p>正确做法是主动出击，换位思考</p>\n</blockquote>\n<h2 id=\"acm做题\"><a href=\"#acm做题\" class=\"headerlink\" title=\"acm做题\"></a>acm做题</h2><ul>\n<li>心态不要着急，维持身体的能量才是最长久的</li>\n<li>维持好能量就可以随时处于不败之地（冥想，心态）</li>\n<li>拼装法做题</li>\n<li>龟系和兔系</li>\n</ul>\n"},{"title":"强缓存协商缓存","date":"2022-10-15T02:06:51.000Z","_content":"\n## 强缓存\n\n1. 首先第一次请求，获取文件，返回expire过期时间，每次请求的时候判断该时间过不过期，不过期就命中缓存，从缓存读取\n2. 但是这种方式有缺陷，就是本地时间不准就完了\n3. 所以修改为，请求文件时携带一个cache-control:max-age:100;属性，代表缓存记录的时间，从第一次拿到该资源的时间向后保存100秒，如果100秒内仍然请求该文件就从缓存里拿\n\n## 协商缓存\n\n1. 原本的协商缓存是记录文件的修改时间，第一次请求该资源时将资源的last-modify属性设置为上次修改时间之后每次请求都会携带该修改时间到ifmodify-since属性中，如果服务器本地修改时间和ifmodifysince属性相同就返回缓存重定向状态码304让客户端去缓存中取，否则就返回新资源\n2. 但是这种方法也有缺陷，就是文件修改了两次，但是文件内容根本没有更改，那文件时间已经改了就会返回新文件，这种就浪费资源了，解决办法就是用一个实体标签的属性，叫etag，客户端第一次访问服务端文件时服务端会根据文件内容做一次哈希运算生成一个文件指纹标示文件，并且之后客户端继续请求之后会在if-none-match属性中携带该属性，如果服务端的资源文件做出来的哈希值和客户端携带的该属性相同就去缓存中拿，否则就返回新资源\n","source":"_posts/博客/前端基础/强缓存与协商缓存.md","raw":"---\ntitle: '强缓存协商缓存'\ndate: 2022-10-15 10:06:51\ntags: \n    - 随手记\n    - 基础\ncategories: 前端\n---\n\n## 强缓存\n\n1. 首先第一次请求，获取文件，返回expire过期时间，每次请求的时候判断该时间过不过期，不过期就命中缓存，从缓存读取\n2. 但是这种方式有缺陷，就是本地时间不准就完了\n3. 所以修改为，请求文件时携带一个cache-control:max-age:100;属性，代表缓存记录的时间，从第一次拿到该资源的时间向后保存100秒，如果100秒内仍然请求该文件就从缓存里拿\n\n## 协商缓存\n\n1. 原本的协商缓存是记录文件的修改时间，第一次请求该资源时将资源的last-modify属性设置为上次修改时间之后每次请求都会携带该修改时间到ifmodify-since属性中，如果服务器本地修改时间和ifmodifysince属性相同就返回缓存重定向状态码304让客户端去缓存中取，否则就返回新资源\n2. 但是这种方法也有缺陷，就是文件修改了两次，但是文件内容根本没有更改，那文件时间已经改了就会返回新文件，这种就浪费资源了，解决办法就是用一个实体标签的属性，叫etag，客户端第一次访问服务端文件时服务端会根据文件内容做一次哈希运算生成一个文件指纹标示文件，并且之后客户端继续请求之后会在if-none-match属性中携带该属性，如果服务端的资源文件做出来的哈希值和客户端携带的该属性相同就去缓存中拿，否则就返回新资源\n","slug":"博客/前端基础/强缓存与协商缓存","published":1,"updated":"2023-03-21T09:39:54.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6m001mo8hu9ebga0no","content":"<h2 id=\"强缓存\"><a href=\"#强缓存\" class=\"headerlink\" title=\"强缓存\"></a>强缓存</h2><ol>\n<li>首先第一次请求，获取文件，返回expire过期时间，每次请求的时候判断该时间过不过期，不过期就命中缓存，从缓存读取</li>\n<li>但是这种方式有缺陷，就是本地时间不准就完了</li>\n<li>所以修改为，请求文件时携带一个cache-control:max-age:100;属性，代表缓存记录的时间，从第一次拿到该资源的时间向后保存100秒，如果100秒内仍然请求该文件就从缓存里拿</li>\n</ol>\n<h2 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h2><ol>\n<li>原本的协商缓存是记录文件的修改时间，第一次请求该资源时将资源的last-modify属性设置为上次修改时间之后每次请求都会携带该修改时间到ifmodify-since属性中，如果服务器本地修改时间和ifmodifysince属性相同就返回缓存重定向状态码304让客户端去缓存中取，否则就返回新资源</li>\n<li>但是这种方法也有缺陷，就是文件修改了两次，但是文件内容根本没有更改，那文件时间已经改了就会返回新文件，这种就浪费资源了，解决办法就是用一个实体标签的属性，叫etag，客户端第一次访问服务端文件时服务端会根据文件内容做一次哈希运算生成一个文件指纹标示文件，并且之后客户端继续请求之后会在if-none-match属性中携带该属性，如果服务端的资源文件做出来的哈希值和客户端携带的该属性相同就去缓存中拿，否则就返回新资源</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"强缓存\"><a href=\"#强缓存\" class=\"headerlink\" title=\"强缓存\"></a>强缓存</h2><ol>\n<li>首先第一次请求，获取文件，返回expire过期时间，每次请求的时候判断该时间过不过期，不过期就命中缓存，从缓存读取</li>\n<li>但是这种方式有缺陷，就是本地时间不准就完了</li>\n<li>所以修改为，请求文件时携带一个cache-control:max-age:100;属性，代表缓存记录的时间，从第一次拿到该资源的时间向后保存100秒，如果100秒内仍然请求该文件就从缓存里拿</li>\n</ol>\n<h2 id=\"协商缓存\"><a href=\"#协商缓存\" class=\"headerlink\" title=\"协商缓存\"></a>协商缓存</h2><ol>\n<li>原本的协商缓存是记录文件的修改时间，第一次请求该资源时将资源的last-modify属性设置为上次修改时间之后每次请求都会携带该修改时间到ifmodify-since属性中，如果服务器本地修改时间和ifmodifysince属性相同就返回缓存重定向状态码304让客户端去缓存中取，否则就返回新资源</li>\n<li>但是这种方法也有缺陷，就是文件修改了两次，但是文件内容根本没有更改，那文件时间已经改了就会返回新文件，这种就浪费资源了，解决办法就是用一个实体标签的属性，叫etag，客户端第一次访问服务端文件时服务端会根据文件内容做一次哈希运算生成一个文件指纹标示文件，并且之后客户端继续请求之后会在if-none-match属性中携带该属性，如果服务端的资源文件做出来的哈希值和客户端携带的该属性相同就去缓存中拿，否则就返回新资源</li>\n</ol>\n"},{"title":"准大三暑假的学习计划","date":"2022-10-15T02:06:51.000Z","_content":"\n| 事情 | 计划                   | 每日内容       |\n| ------ | ------------------------ | ---------------- |\n| 算法 | 假期刷200道leetcode    | 每天三-六道题  |\n| 驾照 | 先练软件后去驾校       | 早起练习去驾校 |\n| 后端 | 跟字节跳动学习         | 完成课程       |\n| 面经 | 看牛客，看牛客社区内容 | 每天做10-20题  |\n\n## 作息\n\n早八点半起床\n\n晚上10点半睡觉\n\n中午午休一小时\n\n## 任务量\n\n驾照：\n\n刷四遍app\n\n去驾校7天学驾照\n\n考驾照\n\n英语：\n\n每天听英语\n\n学阅读\n\n做阅读\n\n算法：\n\n每天2道题\n\n然后酌情添加\n\n后端：\n\n每天看面经\n\n做笔记\n\n总结面试经验\n\n## 日程安排\n\n7.12-7.20：\n\n早上7点起床，练习软件一小时，八点去驾校\n\n8.00-11.00练车练三小时，中午吃饭睡觉\n\n中午11.00吃饭，睡觉\n\n13.00去驾校练到四点\n\n16.00-17.00 学英语\n\n17.00- 吃饭\n\n18.00-22.00学英语\n\n闲杂时间看面经，学算法\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/计划.md1685537.2829463.png)\n","source":"_posts/学校/准大三暑假/计划.md","raw":"---\ntitle: '准大三暑假的学习计划'\ndate: 2022-10-15 10:06:51\ntags: \n    - 计划\ncategories: 学校\n---\n\n| 事情 | 计划                   | 每日内容       |\n| ------ | ------------------------ | ---------------- |\n| 算法 | 假期刷200道leetcode    | 每天三-六道题  |\n| 驾照 | 先练软件后去驾校       | 早起练习去驾校 |\n| 后端 | 跟字节跳动学习         | 完成课程       |\n| 面经 | 看牛客，看牛客社区内容 | 每天做10-20题  |\n\n## 作息\n\n早八点半起床\n\n晚上10点半睡觉\n\n中午午休一小时\n\n## 任务量\n\n驾照：\n\n刷四遍app\n\n去驾校7天学驾照\n\n考驾照\n\n英语：\n\n每天听英语\n\n学阅读\n\n做阅读\n\n算法：\n\n每天2道题\n\n然后酌情添加\n\n后端：\n\n每天看面经\n\n做笔记\n\n总结面试经验\n\n## 日程安排\n\n7.12-7.20：\n\n早上7点起床，练习软件一小时，八点去驾校\n\n8.00-11.00练车练三小时，中午吃饭睡觉\n\n中午11.00吃饭，睡觉\n\n13.00去驾校练到四点\n\n16.00-17.00 学英语\n\n17.00- 吃饭\n\n18.00-22.00学英语\n\n闲杂时间看面经，学算法\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/计划.md1685537.2829463.png)\n","slug":"学校/准大三暑假/计划","published":1,"updated":"2023-03-21T09:42:46.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co6n001qo8hu0yrr8yl6","content":"<table>\n<thead>\n<tr>\n<th>事情</th>\n<th>计划</th>\n<th>每日内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>算法</td>\n<td>假期刷200道leetcode</td>\n<td>每天三-六道题</td>\n</tr>\n<tr>\n<td>驾照</td>\n<td>先练软件后去驾校</td>\n<td>早起练习去驾校</td>\n</tr>\n<tr>\n<td>后端</td>\n<td>跟字节跳动学习</td>\n<td>完成课程</td>\n</tr>\n<tr>\n<td>面经</td>\n<td>看牛客，看牛客社区内容</td>\n<td>每天做10-20题</td>\n</tr>\n</tbody></table>\n<h2 id=\"作息\"><a href=\"#作息\" class=\"headerlink\" title=\"作息\"></a>作息</h2><p>早八点半起床</p>\n<p>晚上10点半睡觉</p>\n<p>中午午休一小时</p>\n<h2 id=\"任务量\"><a href=\"#任务量\" class=\"headerlink\" title=\"任务量\"></a>任务量</h2><p>驾照：</p>\n<p>刷四遍app</p>\n<p>去驾校7天学驾照</p>\n<p>考驾照</p>\n<p>英语：</p>\n<p>每天听英语</p>\n<p>学阅读</p>\n<p>做阅读</p>\n<p>算法：</p>\n<p>每天2道题</p>\n<p>然后酌情添加</p>\n<p>后端：</p>\n<p>每天看面经</p>\n<p>做笔记</p>\n<p>总结面试经验</p>\n<h2 id=\"日程安排\"><a href=\"#日程安排\" class=\"headerlink\" title=\"日程安排\"></a>日程安排</h2><p>7.12-7.20：</p>\n<p>早上7点起床，练习软件一小时，八点去驾校</p>\n<p>8.00-11.00练车练三小时，中午吃饭睡觉</p>\n<p>中午11.00吃饭，睡觉</p>\n<p>13.00去驾校练到四点</p>\n<p>16.00-17.00 学英语</p>\n<p>17.00- 吃饭</p>\n<p>18.00-22.00学英语</p>\n<p>闲杂时间看面经，学算法</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/计划.md1685537.2829463.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>事情</th>\n<th>计划</th>\n<th>每日内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>算法</td>\n<td>假期刷200道leetcode</td>\n<td>每天三-六道题</td>\n</tr>\n<tr>\n<td>驾照</td>\n<td>先练软件后去驾校</td>\n<td>早起练习去驾校</td>\n</tr>\n<tr>\n<td>后端</td>\n<td>跟字节跳动学习</td>\n<td>完成课程</td>\n</tr>\n<tr>\n<td>面经</td>\n<td>看牛客，看牛客社区内容</td>\n<td>每天做10-20题</td>\n</tr>\n</tbody></table>\n<h2 id=\"作息\"><a href=\"#作息\" class=\"headerlink\" title=\"作息\"></a>作息</h2><p>早八点半起床</p>\n<p>晚上10点半睡觉</p>\n<p>中午午休一小时</p>\n<h2 id=\"任务量\"><a href=\"#任务量\" class=\"headerlink\" title=\"任务量\"></a>任务量</h2><p>驾照：</p>\n<p>刷四遍app</p>\n<p>去驾校7天学驾照</p>\n<p>考驾照</p>\n<p>英语：</p>\n<p>每天听英语</p>\n<p>学阅读</p>\n<p>做阅读</p>\n<p>算法：</p>\n<p>每天2道题</p>\n<p>然后酌情添加</p>\n<p>后端：</p>\n<p>每天看面经</p>\n<p>做笔记</p>\n<p>总结面试经验</p>\n<h2 id=\"日程安排\"><a href=\"#日程安排\" class=\"headerlink\" title=\"日程安排\"></a>日程安排</h2><p>7.12-7.20：</p>\n<p>早上7点起床，练习软件一小时，八点去驾校</p>\n<p>8.00-11.00练车练三小时，中午吃饭睡觉</p>\n<p>中午11.00吃饭，睡觉</p>\n<p>13.00去驾校练到四点</p>\n<p>16.00-17.00 学英语</p>\n<p>17.00- 吃饭</p>\n<p>18.00-22.00学英语</p>\n<p>闲杂时间看面经，学算法</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/计划.md1685537.2829463.png\"></p>\n"},{"title":"c++读写文件与容器操作","date":"2022-10-15T02:06:51.000Z","_content":"\n## 读写文件\n\n```c_cpp\n#include<stdio.h>\n#include<time.h>\n#include<stdlib.h>\nint main(){\n\tsrand(time(0));\n\tfreopen(\"1.in\",\"r\",stdin);\n\tint a[5];\n\tfor(int i=0;i<5;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfreopen(\"1.out\",\"w\",stdout);\n\tfor(int i=0;i<5;i++){\n\t\tprintf(\"%d\\n\",a[i]);\n\t}\n\treturn 0;\n} \n```\n\n## algorithm头文件\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tint a=2,b=4;\n\tcout<<max(2,3)<<endl;\n\tcout<<min(2,3)<<endl;\n\tcout<<a<<b<<endl;\n\tswap(a,b);\n\tcout<<a<<b<<endl;\n\treturn 0;\n} \n```\n\n## 引用\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tint a=10;\n\tint &b=a;\n\tcout<<b;\n\treturn 0;\n} \n```\n\n![](file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\57566894e9a8d95f5e8a57fd2b31e4f5.png)\n\n## 引用的使用（交换变量）\n\n```c_cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nvoid my_swap(int &a,int &b){\n\tint temp=a;\n\ta=b;\n\tb=temp;\n}\n\nint main(){\n\tint a=10;\n\tint b=12;\n\tcout<<a<<b<<endl;\n\tmy_swap(a,b);\n\tcout<<a<<b<<endl;\n\treturn 0;\n} \n```\n\n## 异或运算\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\t//异或就是先取反后或运算 \n\tint one=1;\n\tint zero=0;\n\tint res1=one^one;\n\tint res2=one^zero;\n\tint res3=zero^one;\n\tint res4=zero^zero;\n\tcout<<res1<<\" \"<<res2<<\" \"<<res3<<\" \"<<res4;\n\treturn 0;\n} \n```\n\n## c++中的string基本运算\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint main(){\n\tstring s=\"asdsad\";\n\ts.insert(1,\"super boy\");\n\tcout<<s<<endl;\n\ts.erase(1,9);\n\tcout<<s<<endl;\n\tstring s2=s.substr(1,10);\n\tcout<<s2.size()<<endl;\n\t//找到返回索引，找不到返回-1 \n\tint pos=s.find(\"sadasd\");\n\tcout<<pos<<endl;\n\tstring s3=\"11231231\";\n\tcout<<s3.find('1',3);//输出4 \n\tcout<<s3.find('1',6);//输出7 \n\treturn 0;\n} \n```\n\n## c++容器\n\n#### vector\n\n动态更新数组内存，底层实现是数组，可以按索引顺序访问，如果是插入和删除则需要内存区的拷贝\n\n**int初始化方式**\n\n\n| 代码                   | 解释                                   |\n| ------------------------ | ---------------------------------------- |\n| vector<int> a;         | 初始化一个名为a装有int值的vector容器   |\n| vector<int> b(a);      | 用a定义b(地址不一样，完全是两个vector) |\n| vector<int> a(100);    | 定义一个a，有100个数字0                |\n| vector<int> a(100,12); | 定义一个a，有100个数字6                |\n\n**string初始化方式**\n\n\n| vector<string> s;                    | 初始化一个名为s装有string值的vector容器 |\n| -------------------------------------- | ----------------------------------------- |\n| vector<string> s(s.begin(),s.end()); | 用s1定义s(地址不一样，完全是两个vector) |\n| vector<string> s(s1);                | 同上                                    |\n| vector<string> s(100,\"null\")；       | 初始化100个null                         |\n\n**妙用**\n\n\n| struct  point{int x,y;}\t\t\tvector<point> p; | p用来存放坐标 |\n| -------------------------------------------- | --------------- |\n| vector<int> a[MAXN]                        | 定义多维数组  |\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct point{\n\tint x,y;\n};\n\nint main(){\n\tvector<int> a;\n\tvector<int> b(a);\n\tcout<<&a<<\" \"<<&b<<endl; \n\tvector<string> s1;\n\tvector<string> s(s1);\n\tvector<string> s2(s1.begin(),s1.end());\n\tcout<<&s<<\" \"<<&s1<<\" \"<<&s2<<endl; \n\tvector<point> p();\n\tcout<<\"vector的各种操作\"<<endl;\n\treturn 0;\n}\n```\n\n![](file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\1a530934271b2c6784a1a0115a7cf661.png)\n\n**练习**\n\n初始化数值方式1：先定义空间大小，后循环访问\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tvector<int> a(100);\n\tcout<<\"vector的各种操作\"<<endl;\n\n\tfor(int i=0;i<10;i++){\n\t\ta[i]=i;\n\t\tcout<<a[i]<<endl;\n\t}\n\n\treturn 0;\n}\n```\n\n初始化数值方式2：直接初始化，不定义空间，然后push_back();\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tvector<int> a;\n\tfor(int i=0;i<10;i++){\n\t\ta.push_back(i);\n\t\tcout<<a[i]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n**汇总：**\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(vector<int>& a){\n\tif(!a.empty()){\n\t\tfor(int i=0;i<a.size();i++){\n\t\t\tcout<<a[i]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}else{\n\t\tcout<<\"您的vector为空!!\\n\"; \n\t}\n}\n\nint main(){\n\tvector<int> a;\n\tcout<<a.empty()<<endl; \n\tfor(int i=0;i<10;i++){\n\t\ta.push_back(i);\n\t}\n\tprint(a);\n\ta.insert(a.begin(),123);\n\tprint(a);\n\ta.insert(a.end(),123);\n\tprint(a);\n\ta.resize(10);\n\tprint(a);\n\ta.insert(a.end(),10,0);\n\tprint(a);\n\ta.insert(a.begin()+3,521);\n\tprint(a);\n\t                 \n\ta.erase(a.begin());\n\tprint(a);\n\tint i=0,j=1;\n\ta.erase(a.begin()+i,a.begin()+j);\n\tprint(a);\n\treverse(a.begin(),a.end());\n\tprint(a);\n\tsort(a.begin(),a.end());\n\tprint(a); \n\t/*\n\t用迭代器的，一般是区间，如vector的erase \n\t用数字的，一般是开头的个数，如string的substr \n\t预备知识\n\ta.begin()指向第一个元素，a.end()指向末尾，不是最后一个元素 \n\t1.判断是否为空a.empty(); \n\t2.插入元素a.insert(a.begin(),3);\n\t\t\t  a.insert(a.end(),10);\n\t\t\t  a.insert(a.begin()+i,12);//在索引为i的位置插入 \n\t\t\t  a.insert(a.begin(),10,0);//在a的末尾插入10个0 \n\t3.删除元素 a.erase(a.begin());//删除开头元素\n\t\t\t   a.erase(a.begin(),a.end());//删除所有元素 \n\t\t\t   a.erase(a.begin(),a.begin()+a.size());//删除所有元素 \n\t  pop_back()\n\t4.清空clear()\n\t5.翻转reverse(a.begin(),a.end()); \n\t*/\n\treturn 0;\n}\n```\n\n#### list\n\n**STL中的list是双向链表，在内存中地址不连续，通过指针来实现数据的访问，插入和删除的的时间复杂度是常数级**\n\n#### map\n\n**底层是平衡二叉搜索树，效率高**\n\n```c_cpp\n#include <iostream>\n#include <map>\n#include <string.h>\nusing namespace std;\n\nvoid translate(map<int,int> temp_map);//map直接作为参数传递\nvoid translate(map<int,int> *pMap);//传递map指针\nint main()\n{\n\t map<int,int> map1;\n\t map1.insert(map<int,int>::value_type(1,22));\n\t \n\t translate(map1);\n\t \n\t map<int,int> *pmap1;\n\t pmap1 = &map1;\n\t \n\t translate(pmap1);\n\t \n\t map<int,int> map2;\n\t map2 = map1;//直接赋值\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl;\n\t return 0;   \n}\n\nvoid translate(map<int,int> temp_map)\n{\n\t map<int,int> map2;\n\t map2 = temp_map;\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl;\n}\nvoid translate(map<int,int> *pMap)\n{\n\t map<int,int> map2;\n\t map2 = *pMap;\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl; \n}\n```\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(map<int,string> m){\n\tmap<int,string>::iterator it;\n\tfor(it=m.begin();it!=m.end();it++){\n\t\tcout<<it->first<<\" \"<<it->second<<endl;\n\t}\n}\nint main()\n{\n\tpair<int,string> p;\n\tp.first=1;\n\tp.second=\"123\";\n\tmap<int,string> m;\n\tm.insert(p);\n\tcout<<p.first<<\" \"<<p.second<<endl;\n\tmap<int,string>::iterator it;\n\n\tm[3]=\"234\";\n\tfor(it=m.begin();it!=m.end();it++){\n\t\tcout<<it->first<<\" \"<<it->second<<endl;\n\t}\n\tm.insert(make_pair(6,\"你好\"));\n\tcout<<m[0]<<endl;\n\tpair<int,string> p2;\n\tp2.first=12;\n\tp2.second=\"123123\";\n\tm.empty();\n\tprint(m);\n\tm.clear();\n\tprint(m);\n\tm.empty();\n\t/*\n\tm[i]可用于输出元素，还可用于创建元素 \n\t1.初始化 map<type,type> name;\n\t2.添加元素 m[key]=value;\n\t\t\t   pair<type,type> p;m.insert(p);//insert返回该元素的迭代器 \n\t3.输出元素 cout<<m[i] ;\n\t4.清空元素clear();\n\t5.判断是否为空empty(); \n\t*/\n\treturn 0;\n}\n```\n\n#### set\n\n**底层实现是二叉搜索树，在竞赛中很常见访问每个元素的时间复杂度是O(logn)**\n\n\n| 代码              | 解释                      |\n| ------------------- | --------------------------- |\n| set<int> s;       | 初始化一个set的集合       |\n| s.insert(item);   | 将item插入s中             |\n| s.erase();        | 将item删除,成功则1反之0   |\n| s.find(k);        | 查找k返回一个迭代器       |\n| s.count(k);       | 查找k存在返回1，不存在则0 |\n| s.clear();        | 清除s中的数据             |\n| s.empty();        | 判断s是否为空             |\n| s.lower_bound(k); | 返回不小于k的迭代器       |\n| s.upper_bound(k); | 返回不大于k的迭代器       |\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvoid p(set<int>& s){\n\tset<int>::iterator it;\n\tfor(it=s.begin();it!=s.end();it++){\n\t\tcout<<*it<<\" \";\n\t}\n\tcout<<endl;\n}\nint main()\n{\n\tvector<int> v;\n\tset<int> s;\n\tfor(int i=0;i<10;i++){\n\t\ts.insert(i);\n\t}\n\tset<int>::iterator it;\n\tp(s);\n\ts.count(10);\n\tp(s);\n\ts.erase(1);\n\tp(s);\n\tit=s.begin();\n\tit++;\n\tit++;\n\ts.erase(it,s.end());\n\tp(s);\n\treturn 0;\n}\n```\n\n#### dequeue\n\n#### queue\n\n**队列，先进先出，后进后出**\n\n\n| 代码          | 解释              |\n| --------------- | ------------------- |\n| queue<int> q; | 初始化一个q的队列 |\n| q.front();    | 返回队首元素      |\n| q.back();     | 返回队尾元素      |\n| q.pop();      | 队首元素出队      |\n| q.push(num);  | 把num放入队尾部   |\n| q.size();     | 返回队列的大小    |\n| q.empty();    | 判断队列是否为空  |\n\n#### priority_queue优先队列\n\n**底层实现是二叉堆，队里有自己的排序方式，每次入队都会将优先级最高的放在队首**\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tpriority_queue<int> q;\n\tfor(int i=0;i<10;i++){\n\t\tq.push(i);\n\t}\n\twhile(!q.empty()){\n\t\tcout<<q.front()<<endl;\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```\n\n上述结果是9,8,7----0，说明每次push,优先队列都会把最大的数字放到前面\n\nless会让队列从队首到队尾是高到低排列，也就是数字大的优先级越高（默认）\n\ngreater会让队列从队首到队尾是低到高排列，也就是数字小的优先级越高\n\n```c_cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue <int,vector<int>,less<int> > p;\npriority_queue <int,vector<int>,greater<int> > q;\nint a[5]={10,12,14,6,8};\nint main()\n{\n\tfor(int i=0;i<5;i++)\n\t\tp.push(a[i]),q.push(a[i]);\n\n\tprintf(\"less<int>:\");\n\twhile(!p.empty())\n\t\tprintf(\"%d \",p.top()),p.pop();\n\n\tprintf(\"\\ngreater<int>:\");\n\twhile(!q.empty())\n\t\tprintf(\"%d \",q.top()),q.pop();\n}\n```\n\n#### stack\n\n**先进后出的数据结构**\n\n\n| 代码            | 解释               |\n| ----------------- | -------------------- |\n| stack<int> sta; | 初始化一个sta的栈  |\n| sta.push(num);  | 把数字num放入sta中 |\n| sta.pop();      | 队首元素出栈       |\n| sta.top();      | 查看队首元素       |\n| sta.size();     | 返回栈的长度       |\n| sta.empty();    | 判断栈是否为空     |\n\n## 迭代器iterator\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tvector<int> v;\n\tset<int> s;\n\tfor(int i=0;i<10;i++){\n\t\ts.insert(i);\n\t}\n\tset<int>::iterator it;\n\tfor(it=s.begin();it!=s.end();it++){\n\t\tcout<<*it;\n\t}\n\treturn 0;\n}\n```\n\n## pair\n\n参考链接：[pair的使用](https://blog.csdn.net/sevenjoin/article/details/81937695)\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\tpair<int,string> p;\n\tp.first=1;\n\tp.second=\"123\";\n\tcout<<p.first<<\" \"<<p.second;\n\treturn 0;\n}\n```\n","source":"_posts/算法/c算法/c艹读写文件与容器操作.md","raw":"---\ntitle: 'c++读写文件与容器操作'\ndate: 2022-10-15 10:06:51\ntags: \n    - c\ncategories: 算法\n---\n\n## 读写文件\n\n```c_cpp\n#include<stdio.h>\n#include<time.h>\n#include<stdlib.h>\nint main(){\n\tsrand(time(0));\n\tfreopen(\"1.in\",\"r\",stdin);\n\tint a[5];\n\tfor(int i=0;i<5;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfreopen(\"1.out\",\"w\",stdout);\n\tfor(int i=0;i<5;i++){\n\t\tprintf(\"%d\\n\",a[i]);\n\t}\n\treturn 0;\n} \n```\n\n## algorithm头文件\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tint a=2,b=4;\n\tcout<<max(2,3)<<endl;\n\tcout<<min(2,3)<<endl;\n\tcout<<a<<b<<endl;\n\tswap(a,b);\n\tcout<<a<<b<<endl;\n\treturn 0;\n} \n```\n\n## 引用\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tint a=10;\n\tint &b=a;\n\tcout<<b;\n\treturn 0;\n} \n```\n\n![](file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\57566894e9a8d95f5e8a57fd2b31e4f5.png)\n\n## 引用的使用（交换变量）\n\n```c_cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nvoid my_swap(int &a,int &b){\n\tint temp=a;\n\ta=b;\n\tb=temp;\n}\n\nint main(){\n\tint a=10;\n\tint b=12;\n\tcout<<a<<b<<endl;\n\tmy_swap(a,b);\n\tcout<<a<<b<<endl;\n\treturn 0;\n} \n```\n\n## 异或运算\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\t//异或就是先取反后或运算 \n\tint one=1;\n\tint zero=0;\n\tint res1=one^one;\n\tint res2=one^zero;\n\tint res3=zero^one;\n\tint res4=zero^zero;\n\tcout<<res1<<\" \"<<res2<<\" \"<<res3<<\" \"<<res4;\n\treturn 0;\n} \n```\n\n## c++中的string基本运算\n\n```c_cpp\n#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint main(){\n\tstring s=\"asdsad\";\n\ts.insert(1,\"super boy\");\n\tcout<<s<<endl;\n\ts.erase(1,9);\n\tcout<<s<<endl;\n\tstring s2=s.substr(1,10);\n\tcout<<s2.size()<<endl;\n\t//找到返回索引，找不到返回-1 \n\tint pos=s.find(\"sadasd\");\n\tcout<<pos<<endl;\n\tstring s3=\"11231231\";\n\tcout<<s3.find('1',3);//输出4 \n\tcout<<s3.find('1',6);//输出7 \n\treturn 0;\n} \n```\n\n## c++容器\n\n#### vector\n\n动态更新数组内存，底层实现是数组，可以按索引顺序访问，如果是插入和删除则需要内存区的拷贝\n\n**int初始化方式**\n\n\n| 代码                   | 解释                                   |\n| ------------------------ | ---------------------------------------- |\n| vector<int> a;         | 初始化一个名为a装有int值的vector容器   |\n| vector<int> b(a);      | 用a定义b(地址不一样，完全是两个vector) |\n| vector<int> a(100);    | 定义一个a，有100个数字0                |\n| vector<int> a(100,12); | 定义一个a，有100个数字6                |\n\n**string初始化方式**\n\n\n| vector<string> s;                    | 初始化一个名为s装有string值的vector容器 |\n| -------------------------------------- | ----------------------------------------- |\n| vector<string> s(s.begin(),s.end()); | 用s1定义s(地址不一样，完全是两个vector) |\n| vector<string> s(s1);                | 同上                                    |\n| vector<string> s(100,\"null\")；       | 初始化100个null                         |\n\n**妙用**\n\n\n| struct  point{int x,y;}\t\t\tvector<point> p; | p用来存放坐标 |\n| -------------------------------------------- | --------------- |\n| vector<int> a[MAXN]                        | 定义多维数组  |\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct point{\n\tint x,y;\n};\n\nint main(){\n\tvector<int> a;\n\tvector<int> b(a);\n\tcout<<&a<<\" \"<<&b<<endl; \n\tvector<string> s1;\n\tvector<string> s(s1);\n\tvector<string> s2(s1.begin(),s1.end());\n\tcout<<&s<<\" \"<<&s1<<\" \"<<&s2<<endl; \n\tvector<point> p();\n\tcout<<\"vector的各种操作\"<<endl;\n\treturn 0;\n}\n```\n\n![](file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\1a530934271b2c6784a1a0115a7cf661.png)\n\n**练习**\n\n初始化数值方式1：先定义空间大小，后循环访问\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tvector<int> a(100);\n\tcout<<\"vector的各种操作\"<<endl;\n\n\tfor(int i=0;i<10;i++){\n\t\ta[i]=i;\n\t\tcout<<a[i]<<endl;\n\t}\n\n\treturn 0;\n}\n```\n\n初始化数值方式2：直接初始化，不定义空间，然后push_back();\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tvector<int> a;\n\tfor(int i=0;i<10;i++){\n\t\ta.push_back(i);\n\t\tcout<<a[i]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n**汇总：**\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(vector<int>& a){\n\tif(!a.empty()){\n\t\tfor(int i=0;i<a.size();i++){\n\t\t\tcout<<a[i]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}else{\n\t\tcout<<\"您的vector为空!!\\n\"; \n\t}\n}\n\nint main(){\n\tvector<int> a;\n\tcout<<a.empty()<<endl; \n\tfor(int i=0;i<10;i++){\n\t\ta.push_back(i);\n\t}\n\tprint(a);\n\ta.insert(a.begin(),123);\n\tprint(a);\n\ta.insert(a.end(),123);\n\tprint(a);\n\ta.resize(10);\n\tprint(a);\n\ta.insert(a.end(),10,0);\n\tprint(a);\n\ta.insert(a.begin()+3,521);\n\tprint(a);\n\t                 \n\ta.erase(a.begin());\n\tprint(a);\n\tint i=0,j=1;\n\ta.erase(a.begin()+i,a.begin()+j);\n\tprint(a);\n\treverse(a.begin(),a.end());\n\tprint(a);\n\tsort(a.begin(),a.end());\n\tprint(a); \n\t/*\n\t用迭代器的，一般是区间，如vector的erase \n\t用数字的，一般是开头的个数，如string的substr \n\t预备知识\n\ta.begin()指向第一个元素，a.end()指向末尾，不是最后一个元素 \n\t1.判断是否为空a.empty(); \n\t2.插入元素a.insert(a.begin(),3);\n\t\t\t  a.insert(a.end(),10);\n\t\t\t  a.insert(a.begin()+i,12);//在索引为i的位置插入 \n\t\t\t  a.insert(a.begin(),10,0);//在a的末尾插入10个0 \n\t3.删除元素 a.erase(a.begin());//删除开头元素\n\t\t\t   a.erase(a.begin(),a.end());//删除所有元素 \n\t\t\t   a.erase(a.begin(),a.begin()+a.size());//删除所有元素 \n\t  pop_back()\n\t4.清空clear()\n\t5.翻转reverse(a.begin(),a.end()); \n\t*/\n\treturn 0;\n}\n```\n\n#### list\n\n**STL中的list是双向链表，在内存中地址不连续，通过指针来实现数据的访问，插入和删除的的时间复杂度是常数级**\n\n#### map\n\n**底层是平衡二叉搜索树，效率高**\n\n```c_cpp\n#include <iostream>\n#include <map>\n#include <string.h>\nusing namespace std;\n\nvoid translate(map<int,int> temp_map);//map直接作为参数传递\nvoid translate(map<int,int> *pMap);//传递map指针\nint main()\n{\n\t map<int,int> map1;\n\t map1.insert(map<int,int>::value_type(1,22));\n\t \n\t translate(map1);\n\t \n\t map<int,int> *pmap1;\n\t pmap1 = &map1;\n\t \n\t translate(pmap1);\n\t \n\t map<int,int> map2;\n\t map2 = map1;//直接赋值\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl;\n\t return 0;   \n}\n\nvoid translate(map<int,int> temp_map)\n{\n\t map<int,int> map2;\n\t map2 = temp_map;\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl;\n}\nvoid translate(map<int,int> *pMap)\n{\n\t map<int,int> map2;\n\t map2 = *pMap;\n\t map<int,int>::iterator iter;\n\t iter = map2.begin();\n\t cout<<iter->second<<endl; \n}\n```\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(map<int,string> m){\n\tmap<int,string>::iterator it;\n\tfor(it=m.begin();it!=m.end();it++){\n\t\tcout<<it->first<<\" \"<<it->second<<endl;\n\t}\n}\nint main()\n{\n\tpair<int,string> p;\n\tp.first=1;\n\tp.second=\"123\";\n\tmap<int,string> m;\n\tm.insert(p);\n\tcout<<p.first<<\" \"<<p.second<<endl;\n\tmap<int,string>::iterator it;\n\n\tm[3]=\"234\";\n\tfor(it=m.begin();it!=m.end();it++){\n\t\tcout<<it->first<<\" \"<<it->second<<endl;\n\t}\n\tm.insert(make_pair(6,\"你好\"));\n\tcout<<m[0]<<endl;\n\tpair<int,string> p2;\n\tp2.first=12;\n\tp2.second=\"123123\";\n\tm.empty();\n\tprint(m);\n\tm.clear();\n\tprint(m);\n\tm.empty();\n\t/*\n\tm[i]可用于输出元素，还可用于创建元素 \n\t1.初始化 map<type,type> name;\n\t2.添加元素 m[key]=value;\n\t\t\t   pair<type,type> p;m.insert(p);//insert返回该元素的迭代器 \n\t3.输出元素 cout<<m[i] ;\n\t4.清空元素clear();\n\t5.判断是否为空empty(); \n\t*/\n\treturn 0;\n}\n```\n\n#### set\n\n**底层实现是二叉搜索树，在竞赛中很常见访问每个元素的时间复杂度是O(logn)**\n\n\n| 代码              | 解释                      |\n| ------------------- | --------------------------- |\n| set<int> s;       | 初始化一个set的集合       |\n| s.insert(item);   | 将item插入s中             |\n| s.erase();        | 将item删除,成功则1反之0   |\n| s.find(k);        | 查找k返回一个迭代器       |\n| s.count(k);       | 查找k存在返回1，不存在则0 |\n| s.clear();        | 清除s中的数据             |\n| s.empty();        | 判断s是否为空             |\n| s.lower_bound(k); | 返回不小于k的迭代器       |\n| s.upper_bound(k); | 返回不大于k的迭代器       |\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nvoid p(set<int>& s){\n\tset<int>::iterator it;\n\tfor(it=s.begin();it!=s.end();it++){\n\t\tcout<<*it<<\" \";\n\t}\n\tcout<<endl;\n}\nint main()\n{\n\tvector<int> v;\n\tset<int> s;\n\tfor(int i=0;i<10;i++){\n\t\ts.insert(i);\n\t}\n\tset<int>::iterator it;\n\tp(s);\n\ts.count(10);\n\tp(s);\n\ts.erase(1);\n\tp(s);\n\tit=s.begin();\n\tit++;\n\tit++;\n\ts.erase(it,s.end());\n\tp(s);\n\treturn 0;\n}\n```\n\n#### dequeue\n\n#### queue\n\n**队列，先进先出，后进后出**\n\n\n| 代码          | 解释              |\n| --------------- | ------------------- |\n| queue<int> q; | 初始化一个q的队列 |\n| q.front();    | 返回队首元素      |\n| q.back();     | 返回队尾元素      |\n| q.pop();      | 队首元素出队      |\n| q.push(num);  | 把num放入队尾部   |\n| q.size();     | 返回队列的大小    |\n| q.empty();    | 判断队列是否为空  |\n\n#### priority_queue优先队列\n\n**底层实现是二叉堆，队里有自己的排序方式，每次入队都会将优先级最高的放在队首**\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tpriority_queue<int> q;\n\tfor(int i=0;i<10;i++){\n\t\tq.push(i);\n\t}\n\twhile(!q.empty()){\n\t\tcout<<q.front()<<endl;\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```\n\n上述结果是9,8,7----0，说明每次push,优先队列都会把最大的数字放到前面\n\nless会让队列从队首到队尾是高到低排列，也就是数字大的优先级越高（默认）\n\ngreater会让队列从队首到队尾是低到高排列，也就是数字小的优先级越高\n\n```c_cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\npriority_queue <int,vector<int>,less<int> > p;\npriority_queue <int,vector<int>,greater<int> > q;\nint a[5]={10,12,14,6,8};\nint main()\n{\n\tfor(int i=0;i<5;i++)\n\t\tp.push(a[i]),q.push(a[i]);\n\n\tprintf(\"less<int>:\");\n\twhile(!p.empty())\n\t\tprintf(\"%d \",p.top()),p.pop();\n\n\tprintf(\"\\ngreater<int>:\");\n\twhile(!q.empty())\n\t\tprintf(\"%d \",q.top()),q.pop();\n}\n```\n\n#### stack\n\n**先进后出的数据结构**\n\n\n| 代码            | 解释               |\n| ----------------- | -------------------- |\n| stack<int> sta; | 初始化一个sta的栈  |\n| sta.push(num);  | 把数字num放入sta中 |\n| sta.pop();      | 队首元素出栈       |\n| sta.top();      | 查看队首元素       |\n| sta.size();     | 返回栈的长度       |\n| sta.empty();    | 判断栈是否为空     |\n\n## 迭代器iterator\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tvector<int> v;\n\tset<int> s;\n\tfor(int i=0;i<10;i++){\n\t\ts.insert(i);\n\t}\n\tset<int>::iterator it;\n\tfor(it=s.begin();it!=s.end();it++){\n\t\tcout<<*it;\n\t}\n\treturn 0;\n}\n```\n\n## pair\n\n参考链接：[pair的使用](https://blog.csdn.net/sevenjoin/article/details/81937695)\n\n```c_cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\tpair<int,string> p;\n\tp.first=1;\n\tp.second=\"123\";\n\tcout<<p.first<<\" \"<<p.second;\n\treturn 0;\n}\n```\n","slug":"算法/c算法/c艹读写文件与容器操作","published":1,"updated":"2023-03-21T09:19:15.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co72002ro8huhs814yje","content":"<h2 id=\"读写文件\"><a href=\"#读写文件\" class=\"headerlink\" title=\"读写文件\"></a>读写文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&lt;time.h&gt;</span><br><span class=\"line\">#include&lt;stdlib.h&gt;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tsrand(time(0));</span><br><span class=\"line\">\tfreopen(&quot;1.in&quot;,&quot;r&quot;,stdin);</span><br><span class=\"line\">\tint a[5];</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)&#123;</span><br><span class=\"line\">\t\tscanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfreopen(&quot;1.out&quot;,&quot;w&quot;,stdout);</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)&#123;</span><br><span class=\"line\">\t\tprintf(&quot;%d\\n&quot;,a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"algorithm头文件\"><a href=\"#algorithm头文件\" class=\"headerlink\" title=\"algorithm头文件\"></a>algorithm头文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=2,b=4;</span><br><span class=\"line\">\tcout&lt;&lt;max(2,3)&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;min(2,3)&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\tswap(a,b);</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=10;</span><br><span class=\"line\">\tint &amp;b=a;</span><br><span class=\"line\">\tcout&lt;&lt;b;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\57566894e9a8d95f5e8a57fd2b31e4f5.png\"></p>\n<h2 id=\"引用的使用（交换变量）\"><a href=\"#引用的使用（交换变量）\" class=\"headerlink\" title=\"引用的使用（交换变量）\"></a>引用的使用（交换变量）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void my_swap(int &amp;a,int &amp;b)&#123;</span><br><span class=\"line\">\tint temp=a;</span><br><span class=\"line\">\ta=b;</span><br><span class=\"line\">\tb=temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=10;</span><br><span class=\"line\">\tint b=12;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\tmy_swap(a,b);</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"异或运算\"><a href=\"#异或运算\" class=\"headerlink\" title=\"异或运算\"></a>异或运算</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\t//异或就是先取反后或运算 </span><br><span class=\"line\">\tint one=1;</span><br><span class=\"line\">\tint zero=0;</span><br><span class=\"line\">\tint res1=one^one;</span><br><span class=\"line\">\tint res2=one^zero;</span><br><span class=\"line\">\tint res3=zero^one;</span><br><span class=\"line\">\tint res4=zero^zero;</span><br><span class=\"line\">\tcout&lt;&lt;res1&lt;&lt;&quot; &quot;&lt;&lt;res2&lt;&lt;&quot; &quot;&lt;&lt;res3&lt;&lt;&quot; &quot;&lt;&lt;res4;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"c-中的string基本运算\"><a href=\"#c-中的string基本运算\" class=\"headerlink\" title=\"c++中的string基本运算\"></a>c++中的string基本运算</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">#include&lt;string&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tstring s=&quot;asdsad&quot;;</span><br><span class=\"line\">\ts.insert(1,&quot;super boy&quot;);</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\ts.erase(1,9);</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\tstring s2=s.substr(1,10);</span><br><span class=\"line\">\tcout&lt;&lt;s2.size()&lt;&lt;endl;</span><br><span class=\"line\">\t//找到返回索引，找不到返回-1 </span><br><span class=\"line\">\tint pos=s.find(&quot;sadasd&quot;);</span><br><span class=\"line\">\tcout&lt;&lt;pos&lt;&lt;endl;</span><br><span class=\"line\">\tstring s3=&quot;11231231&quot;;</span><br><span class=\"line\">\tcout&lt;&lt;s3.find(&#x27;1&#x27;,3);//输出4 </span><br><span class=\"line\">\tcout&lt;&lt;s3.find(&#x27;1&#x27;,6);//输出7 </span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"c-容器\"><a href=\"#c-容器\" class=\"headerlink\" title=\"c++容器\"></a>c++容器</h2><h4 id=\"vector\"><a href=\"#vector\" class=\"headerlink\" title=\"vector\"></a>vector</h4><p>动态更新数组内存，底层实现是数组，可以按索引顺序访问，如果是插入和删除则需要内存区的拷贝</p>\n<p><strong>int初始化方式</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<int> a;</td>\n<td>初始化一个名为a装有int值的vector容器</td>\n</tr>\n<tr>\n<td>vector<int> b(a);</td>\n<td>用a定义b(地址不一样，完全是两个vector)</td>\n</tr>\n<tr>\n<td>vector<int> a(100);</td>\n<td>定义一个a，有100个数字0</td>\n</tr>\n<tr>\n<td>vector<int> a(100,12);</td>\n<td>定义一个a，有100个数字6</td>\n</tr>\n</tbody></table>\n<p><strong>string初始化方式</strong></p>\n<table>\n<thead>\n<tr>\n<th>vector<string> s;</th>\n<th>初始化一个名为s装有string值的vector容器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<string> s(s.begin(),s.end());</td>\n<td>用s1定义s(地址不一样，完全是两个vector)</td>\n</tr>\n<tr>\n<td>vector<string> s(s1);</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>vector<string> s(100,”null”)；</td>\n<td>初始化100个null</td>\n</tr>\n</tbody></table>\n<p><strong>妙用</strong></p>\n<table>\n<thead>\n<tr>\n<th>struct  point{int x,y;}            vector<point> p;</th>\n<th>p用来存放坐标</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<int> a[MAXN]</td>\n<td>定义多维数组</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct point&#123;</span><br><span class=\"line\">\tint x,y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tvector&lt;int&gt; b(a);</span><br><span class=\"line\">\tcout&lt;&lt;&amp;a&lt;&lt;&quot; &quot;&lt;&lt;&amp;b&lt;&lt;endl; </span><br><span class=\"line\">\tvector&lt;string&gt; s1;</span><br><span class=\"line\">\tvector&lt;string&gt; s(s1);</span><br><span class=\"line\">\tvector&lt;string&gt; s2(s1.begin(),s1.end());</span><br><span class=\"line\">\tcout&lt;&lt;&amp;s&lt;&lt;&quot; &quot;&lt;&lt;&amp;s1&lt;&lt;&quot; &quot;&lt;&lt;&amp;s2&lt;&lt;endl; </span><br><span class=\"line\">\tvector&lt;point&gt; p();</span><br><span class=\"line\">\tcout&lt;&lt;&quot;vector的各种操作&quot;&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\1a530934271b2c6784a1a0115a7cf661.png\"></p>\n<p><strong>练习</strong></p>\n<p>初始化数值方式1：先定义空间大小，后循环访问</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a(100);</span><br><span class=\"line\">\tcout&lt;&lt;&quot;vector的各种操作&quot;&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta[i]=i;</span><br><span class=\"line\">\t\tcout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化数值方式2：直接初始化，不定义空间，然后push_back();</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta.push_back(i);</span><br><span class=\"line\">\t\tcout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>汇总：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void print(vector&lt;int&gt;&amp; a)&#123;</span><br><span class=\"line\">\tif(!a.empty())&#123;</span><br><span class=\"line\">\t\tfor(int i=0;i&lt;a.size();i++)&#123;</span><br><span class=\"line\">\t\t\tcout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;else&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;&quot;您的vector为空!!\\n&quot;; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tcout&lt;&lt;a.empty()&lt;&lt;endl; </span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta.push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.begin(),123);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.end(),123);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.resize(10);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.end(),10,0);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.begin()+3,521);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\t                 </span><br><span class=\"line\">\ta.erase(a.begin());</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\tint i=0,j=1;</span><br><span class=\"line\">\ta.erase(a.begin()+i,a.begin()+j);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\treverse(a.begin(),a.end());</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\tsort(a.begin(),a.end());</span><br><span class=\"line\">\tprint(a); </span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t用迭代器的，一般是区间，如vector的erase </span><br><span class=\"line\">\t用数字的，一般是开头的个数，如string的substr </span><br><span class=\"line\">\t预备知识</span><br><span class=\"line\">\ta.begin()指向第一个元素，a.end()指向末尾，不是最后一个元素 </span><br><span class=\"line\">\t1.判断是否为空a.empty(); </span><br><span class=\"line\">\t2.插入元素a.insert(a.begin(),3);</span><br><span class=\"line\">\t\t\t  a.insert(a.end(),10);</span><br><span class=\"line\">\t\t\t  a.insert(a.begin()+i,12);//在索引为i的位置插入 </span><br><span class=\"line\">\t\t\t  a.insert(a.begin(),10,0);//在a的末尾插入10个0 </span><br><span class=\"line\">\t3.删除元素 a.erase(a.begin());//删除开头元素</span><br><span class=\"line\">\t\t\t   a.erase(a.begin(),a.end());//删除所有元素 </span><br><span class=\"line\">\t\t\t   a.erase(a.begin(),a.begin()+a.size());//删除所有元素 </span><br><span class=\"line\">\t  pop_back()</span><br><span class=\"line\">\t4.清空clear()</span><br><span class=\"line\">\t5.翻转reverse(a.begin(),a.end()); </span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h4><p><strong>STL中的list是双向链表，在内存中地址不连续，通过指针来实现数据的访问，插入和删除的的时间复杂度是常数级</strong></p>\n<h4 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h4><p><strong>底层是平衡二叉搜索树，效率高</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;map&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void translate(map&lt;int,int&gt; temp_map);//map直接作为参数传递</span><br><span class=\"line\">void translate(map&lt;int,int&gt; *pMap);//传递map指针</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map1;</span><br><span class=\"line\">\t map1.insert(map&lt;int,int&gt;::value_type(1,22));</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t translate(map1);</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t map&lt;int,int&gt; *pmap1;</span><br><span class=\"line\">\t pmap1 = &amp;map1;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t translate(pmap1);</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = map1;//直接赋值</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t return 0;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void translate(map&lt;int,int&gt; temp_map)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = temp_map;</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void translate(map&lt;int,int&gt; *pMap)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = *pMap;</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void print(map&lt;int,string&gt; m)&#123;</span><br><span class=\"line\">\tmap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=m.begin();it!=m.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;it-&gt;first&lt;&lt;&quot; &quot;&lt;&lt;it-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p;</span><br><span class=\"line\">\tp.first=1;</span><br><span class=\"line\">\tp.second=&quot;123&quot;;</span><br><span class=\"line\">\tmap&lt;int,string&gt; m;</span><br><span class=\"line\">\tm.insert(p);</span><br><span class=\"line\">\tcout&lt;&lt;p.first&lt;&lt;&quot; &quot;&lt;&lt;p.second&lt;&lt;endl;</span><br><span class=\"line\">\tmap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\"></span><br><span class=\"line\">\tm[3]=&quot;234&quot;;</span><br><span class=\"line\">\tfor(it=m.begin();it!=m.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;it-&gt;first&lt;&lt;&quot; &quot;&lt;&lt;it-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tm.insert(make_pair(6,&quot;你好&quot;));</span><br><span class=\"line\">\tcout&lt;&lt;m[0]&lt;&lt;endl;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p2;</span><br><span class=\"line\">\tp2.first=12;</span><br><span class=\"line\">\tp2.second=&quot;123123&quot;;</span><br><span class=\"line\">\tm.empty();</span><br><span class=\"line\">\tprint(m);</span><br><span class=\"line\">\tm.clear();</span><br><span class=\"line\">\tprint(m);</span><br><span class=\"line\">\tm.empty();</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\tm[i]可用于输出元素，还可用于创建元素 </span><br><span class=\"line\">\t1.初始化 map&lt;type,type&gt; name;</span><br><span class=\"line\">\t2.添加元素 m[key]=value;</span><br><span class=\"line\">\t\t\t   pair&lt;type,type&gt; p;m.insert(p);//insert返回该元素的迭代器 </span><br><span class=\"line\">\t3.输出元素 cout&lt;&lt;m[i] ;</span><br><span class=\"line\">\t4.清空元素clear();</span><br><span class=\"line\">\t5.判断是否为空empty(); </span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><p><strong>底层实现是二叉搜索树，在竞赛中很常见访问每个元素的时间复杂度是O(logn)</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>set<int> s;</td>\n<td>初始化一个set的集合</td>\n</tr>\n<tr>\n<td>s.insert(item);</td>\n<td>将item插入s中</td>\n</tr>\n<tr>\n<td>s.erase();</td>\n<td>将item删除,成功则1反之0</td>\n</tr>\n<tr>\n<td>s.find(k);</td>\n<td>查找k返回一个迭代器</td>\n</tr>\n<tr>\n<td>s.count(k);</td>\n<td>查找k存在返回1，不存在则0</td>\n</tr>\n<tr>\n<td>s.clear();</td>\n<td>清除s中的数据</td>\n</tr>\n<tr>\n<td>s.empty();</td>\n<td>判断s是否为空</td>\n</tr>\n<tr>\n<td>s.lower_bound(k);</td>\n<td>返回不小于k的迭代器</td>\n</tr>\n<tr>\n<td>s.upper_bound(k);</td>\n<td>返回不大于k的迭代器</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void p(set&lt;int&gt;&amp; s)&#123;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=s.begin();it!=s.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;*it&lt;&lt;&quot; &quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; v;</span><br><span class=\"line\">\tset&lt;int&gt; s;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ts.insert(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\ts.count(10);</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\ts.erase(1);</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\tit=s.begin();</span><br><span class=\"line\">\tit++;</span><br><span class=\"line\">\tit++;</span><br><span class=\"line\">\ts.erase(it,s.end());</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"dequeue\"><a href=\"#dequeue\" class=\"headerlink\" title=\"dequeue\"></a>dequeue</h4><h4 id=\"queue\"><a href=\"#queue\" class=\"headerlink\" title=\"queue\"></a>queue</h4><p><strong>队列，先进先出，后进后出</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>queue<int> q;</td>\n<td>初始化一个q的队列</td>\n</tr>\n<tr>\n<td>q.front();</td>\n<td>返回队首元素</td>\n</tr>\n<tr>\n<td>q.back();</td>\n<td>返回队尾元素</td>\n</tr>\n<tr>\n<td>q.pop();</td>\n<td>队首元素出队</td>\n</tr>\n<tr>\n<td>q.push(num);</td>\n<td>把num放入队尾部</td>\n</tr>\n<tr>\n<td>q.size();</td>\n<td>返回队列的大小</td>\n</tr>\n<tr>\n<td>q.empty();</td>\n<td>判断队列是否为空</td>\n</tr>\n</tbody></table>\n<h4 id=\"priority-queue优先队列\"><a href=\"#priority-queue优先队列\" class=\"headerlink\" title=\"priority_queue优先队列\"></a>priority_queue优先队列</h4><p><strong>底层实现是二叉堆，队里有自己的排序方式，每次入队都会将优先级最高的放在队首</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tpriority_queue&lt;int&gt; q;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\tq.push(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile(!q.empty())&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;q.front()&lt;&lt;endl;</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述结果是9,8,7—-0，说明每次push,优先队列都会把最大的数字放到前面</p>\n<p>less会让队列从队首到队尾是高到低排列，也就是数字大的优先级越高（默认）</p>\n<p>greater会让队列从队首到队尾是低到高排列，也就是数字小的优先级越高</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;queue&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">priority_queue &lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt; p;</span><br><span class=\"line\">priority_queue &lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q;</span><br><span class=\"line\">int a[5]=&#123;10,12,14,6,8&#125;;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)</span><br><span class=\"line\">\t\tp.push(a[i]),q.push(a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">\tprintf(&quot;less&lt;int&gt;:&quot;);</span><br><span class=\"line\">\twhile(!p.empty())</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;,p.top()),p.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">\tprintf(&quot;\\ngreater&lt;int&gt;:&quot;);</span><br><span class=\"line\">\twhile(!q.empty())</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;,q.top()),q.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h4><p><strong>先进后出的数据结构</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>stack<int> sta;</td>\n<td>初始化一个sta的栈</td>\n</tr>\n<tr>\n<td>sta.push(num);</td>\n<td>把数字num放入sta中</td>\n</tr>\n<tr>\n<td>sta.pop();</td>\n<td>队首元素出栈</td>\n</tr>\n<tr>\n<td>sta.top();</td>\n<td>查看队首元素</td>\n</tr>\n<tr>\n<td>sta.size();</td>\n<td>返回栈的长度</td>\n</tr>\n<tr>\n<td>sta.empty();</td>\n<td>判断栈是否为空</td>\n</tr>\n</tbody></table>\n<h2 id=\"迭代器iterator\"><a href=\"#迭代器iterator\" class=\"headerlink\" title=\"迭代器iterator\"></a>迭代器iterator</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; v;</span><br><span class=\"line\">\tset&lt;int&gt; s;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ts.insert(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=s.begin();it!=s.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;*it;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pair\"><a href=\"#pair\" class=\"headerlink\" title=\"pair\"></a>pair</h2><p>参考链接：<a href=\"https://blog.csdn.net/sevenjoin/article/details/81937695\">pair的使用</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p;</span><br><span class=\"line\">\tp.first=1;</span><br><span class=\"line\">\tp.second=&quot;123&quot;;</span><br><span class=\"line\">\tcout&lt;&lt;p.first&lt;&lt;&quot; &quot;&lt;&lt;p.second;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"读写文件\"><a href=\"#读写文件\" class=\"headerlink\" title=\"读写文件\"></a>读写文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">#include&lt;time.h&gt;</span><br><span class=\"line\">#include&lt;stdlib.h&gt;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tsrand(time(0));</span><br><span class=\"line\">\tfreopen(&quot;1.in&quot;,&quot;r&quot;,stdin);</span><br><span class=\"line\">\tint a[5];</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)&#123;</span><br><span class=\"line\">\t\tscanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfreopen(&quot;1.out&quot;,&quot;w&quot;,stdout);</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)&#123;</span><br><span class=\"line\">\t\tprintf(&quot;%d\\n&quot;,a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"algorithm头文件\"><a href=\"#algorithm头文件\" class=\"headerlink\" title=\"algorithm头文件\"></a>algorithm头文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=2,b=4;</span><br><span class=\"line\">\tcout&lt;&lt;max(2,3)&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;min(2,3)&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\tswap(a,b);</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=10;</span><br><span class=\"line\">\tint &amp;b=a;</span><br><span class=\"line\">\tcout&lt;&lt;b;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\57566894e9a8d95f5e8a57fd2b31e4f5.png\"></p>\n<h2 id=\"引用的使用（交换变量）\"><a href=\"#引用的使用（交换变量）\" class=\"headerlink\" title=\"引用的使用（交换变量）\"></a>引用的使用（交换变量）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void my_swap(int &amp;a,int &amp;b)&#123;</span><br><span class=\"line\">\tint temp=a;</span><br><span class=\"line\">\ta=b;</span><br><span class=\"line\">\tb=temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint a=10;</span><br><span class=\"line\">\tint b=12;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\tmy_swap(a,b);</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;b&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"异或运算\"><a href=\"#异或运算\" class=\"headerlink\" title=\"异或运算\"></a>异或运算</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\t//异或就是先取反后或运算 </span><br><span class=\"line\">\tint one=1;</span><br><span class=\"line\">\tint zero=0;</span><br><span class=\"line\">\tint res1=one^one;</span><br><span class=\"line\">\tint res2=one^zero;</span><br><span class=\"line\">\tint res3=zero^one;</span><br><span class=\"line\">\tint res4=zero^zero;</span><br><span class=\"line\">\tcout&lt;&lt;res1&lt;&lt;&quot; &quot;&lt;&lt;res2&lt;&lt;&quot; &quot;&lt;&lt;res3&lt;&lt;&quot; &quot;&lt;&lt;res4;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"c-中的string基本运算\"><a href=\"#c-中的string基本运算\" class=\"headerlink\" title=\"c++中的string基本运算\"></a>c++中的string基本运算</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">#include&lt;string&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tstring s=&quot;asdsad&quot;;</span><br><span class=\"line\">\ts.insert(1,&quot;super boy&quot;);</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\ts.erase(1,9);</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\tstring s2=s.substr(1,10);</span><br><span class=\"line\">\tcout&lt;&lt;s2.size()&lt;&lt;endl;</span><br><span class=\"line\">\t//找到返回索引，找不到返回-1 </span><br><span class=\"line\">\tint pos=s.find(&quot;sadasd&quot;);</span><br><span class=\"line\">\tcout&lt;&lt;pos&lt;&lt;endl;</span><br><span class=\"line\">\tstring s3=&quot;11231231&quot;;</span><br><span class=\"line\">\tcout&lt;&lt;s3.find(&#x27;1&#x27;,3);//输出4 </span><br><span class=\"line\">\tcout&lt;&lt;s3.find(&#x27;1&#x27;,6);//输出7 </span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"c-容器\"><a href=\"#c-容器\" class=\"headerlink\" title=\"c++容器\"></a>c++容器</h2><h4 id=\"vector\"><a href=\"#vector\" class=\"headerlink\" title=\"vector\"></a>vector</h4><p>动态更新数组内存，底层实现是数组，可以按索引顺序访问，如果是插入和删除则需要内存区的拷贝</p>\n<p><strong>int初始化方式</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<int> a;</td>\n<td>初始化一个名为a装有int值的vector容器</td>\n</tr>\n<tr>\n<td>vector<int> b(a);</td>\n<td>用a定义b(地址不一样，完全是两个vector)</td>\n</tr>\n<tr>\n<td>vector<int> a(100);</td>\n<td>定义一个a，有100个数字0</td>\n</tr>\n<tr>\n<td>vector<int> a(100,12);</td>\n<td>定义一个a，有100个数字6</td>\n</tr>\n</tbody></table>\n<p><strong>string初始化方式</strong></p>\n<table>\n<thead>\n<tr>\n<th>vector<string> s;</th>\n<th>初始化一个名为s装有string值的vector容器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<string> s(s.begin(),s.end());</td>\n<td>用s1定义s(地址不一样，完全是两个vector)</td>\n</tr>\n<tr>\n<td>vector<string> s(s1);</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>vector<string> s(100,”null”)；</td>\n<td>初始化100个null</td>\n</tr>\n</tbody></table>\n<p><strong>妙用</strong></p>\n<table>\n<thead>\n<tr>\n<th>struct  point{int x,y;}            vector<point> p;</th>\n<th>p用来存放坐标</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vector<int> a[MAXN]</td>\n<td>定义多维数组</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct point&#123;</span><br><span class=\"line\">\tint x,y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tvector&lt;int&gt; b(a);</span><br><span class=\"line\">\tcout&lt;&lt;&amp;a&lt;&lt;&quot; &quot;&lt;&lt;&amp;b&lt;&lt;endl; </span><br><span class=\"line\">\tvector&lt;string&gt; s1;</span><br><span class=\"line\">\tvector&lt;string&gt; s(s1);</span><br><span class=\"line\">\tvector&lt;string&gt; s2(s1.begin(),s1.end());</span><br><span class=\"line\">\tcout&lt;&lt;&amp;s&lt;&lt;&quot; &quot;&lt;&lt;&amp;s1&lt;&lt;&quot; &quot;&lt;&lt;&amp;s2&lt;&lt;endl; </span><br><span class=\"line\">\tvector&lt;point&gt; p();</span><br><span class=\"line\">\tcout&lt;&lt;&quot;vector的各种操作&quot;&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Desktop\\c++读写文件，容器操作\\1a530934271b2c6784a1a0115a7cf661.png\"></p>\n<p><strong>练习</strong></p>\n<p>初始化数值方式1：先定义空间大小，后循环访问</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a(100);</span><br><span class=\"line\">\tcout&lt;&lt;&quot;vector的各种操作&quot;&lt;&lt;endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta[i]=i;</span><br><span class=\"line\">\t\tcout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>初始化数值方式2：直接初始化，不定义空间，然后push_back();</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta.push_back(i);</span><br><span class=\"line\">\t\tcout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>汇总：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void print(vector&lt;int&gt;&amp; a)&#123;</span><br><span class=\"line\">\tif(!a.empty())&#123;</span><br><span class=\"line\">\t\tfor(int i=0;i&lt;a.size();i++)&#123;</span><br><span class=\"line\">\t\t\tcout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;else&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;&quot;您的vector为空!!\\n&quot;; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; a;</span><br><span class=\"line\">\tcout&lt;&lt;a.empty()&lt;&lt;endl; </span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ta.push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.begin(),123);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.end(),123);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.resize(10);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.end(),10,0);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\ta.insert(a.begin()+3,521);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\t                 </span><br><span class=\"line\">\ta.erase(a.begin());</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\tint i=0,j=1;</span><br><span class=\"line\">\ta.erase(a.begin()+i,a.begin()+j);</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\treverse(a.begin(),a.end());</span><br><span class=\"line\">\tprint(a);</span><br><span class=\"line\">\tsort(a.begin(),a.end());</span><br><span class=\"line\">\tprint(a); </span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t用迭代器的，一般是区间，如vector的erase </span><br><span class=\"line\">\t用数字的，一般是开头的个数，如string的substr </span><br><span class=\"line\">\t预备知识</span><br><span class=\"line\">\ta.begin()指向第一个元素，a.end()指向末尾，不是最后一个元素 </span><br><span class=\"line\">\t1.判断是否为空a.empty(); </span><br><span class=\"line\">\t2.插入元素a.insert(a.begin(),3);</span><br><span class=\"line\">\t\t\t  a.insert(a.end(),10);</span><br><span class=\"line\">\t\t\t  a.insert(a.begin()+i,12);//在索引为i的位置插入 </span><br><span class=\"line\">\t\t\t  a.insert(a.begin(),10,0);//在a的末尾插入10个0 </span><br><span class=\"line\">\t3.删除元素 a.erase(a.begin());//删除开头元素</span><br><span class=\"line\">\t\t\t   a.erase(a.begin(),a.end());//删除所有元素 </span><br><span class=\"line\">\t\t\t   a.erase(a.begin(),a.begin()+a.size());//删除所有元素 </span><br><span class=\"line\">\t  pop_back()</span><br><span class=\"line\">\t4.清空clear()</span><br><span class=\"line\">\t5.翻转reverse(a.begin(),a.end()); </span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h4><p><strong>STL中的list是双向链表，在内存中地址不连续，通过指针来实现数据的访问，插入和删除的的时间复杂度是常数级</strong></p>\n<h4 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h4><p><strong>底层是平衡二叉搜索树，效率高</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;map&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void translate(map&lt;int,int&gt; temp_map);//map直接作为参数传递</span><br><span class=\"line\">void translate(map&lt;int,int&gt; *pMap);//传递map指针</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map1;</span><br><span class=\"line\">\t map1.insert(map&lt;int,int&gt;::value_type(1,22));</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t translate(map1);</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t map&lt;int,int&gt; *pmap1;</span><br><span class=\"line\">\t pmap1 = &amp;map1;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t translate(pmap1);</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = map1;//直接赋值</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t return 0;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void translate(map&lt;int,int&gt; temp_map)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = temp_map;</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void translate(map&lt;int,int&gt; *pMap)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t map&lt;int,int&gt; map2;</span><br><span class=\"line\">\t map2 = *pMap;</span><br><span class=\"line\">\t map&lt;int,int&gt;::iterator iter;</span><br><span class=\"line\">\t iter = map2.begin();</span><br><span class=\"line\">\t cout&lt;&lt;iter-&gt;second&lt;&lt;endl; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void print(map&lt;int,string&gt; m)&#123;</span><br><span class=\"line\">\tmap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=m.begin();it!=m.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;it-&gt;first&lt;&lt;&quot; &quot;&lt;&lt;it-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p;</span><br><span class=\"line\">\tp.first=1;</span><br><span class=\"line\">\tp.second=&quot;123&quot;;</span><br><span class=\"line\">\tmap&lt;int,string&gt; m;</span><br><span class=\"line\">\tm.insert(p);</span><br><span class=\"line\">\tcout&lt;&lt;p.first&lt;&lt;&quot; &quot;&lt;&lt;p.second&lt;&lt;endl;</span><br><span class=\"line\">\tmap&lt;int,string&gt;::iterator it;</span><br><span class=\"line\"></span><br><span class=\"line\">\tm[3]=&quot;234&quot;;</span><br><span class=\"line\">\tfor(it=m.begin();it!=m.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;it-&gt;first&lt;&lt;&quot; &quot;&lt;&lt;it-&gt;second&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tm.insert(make_pair(6,&quot;你好&quot;));</span><br><span class=\"line\">\tcout&lt;&lt;m[0]&lt;&lt;endl;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p2;</span><br><span class=\"line\">\tp2.first=12;</span><br><span class=\"line\">\tp2.second=&quot;123123&quot;;</span><br><span class=\"line\">\tm.empty();</span><br><span class=\"line\">\tprint(m);</span><br><span class=\"line\">\tm.clear();</span><br><span class=\"line\">\tprint(m);</span><br><span class=\"line\">\tm.empty();</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\tm[i]可用于输出元素，还可用于创建元素 </span><br><span class=\"line\">\t1.初始化 map&lt;type,type&gt; name;</span><br><span class=\"line\">\t2.添加元素 m[key]=value;</span><br><span class=\"line\">\t\t\t   pair&lt;type,type&gt; p;m.insert(p);//insert返回该元素的迭代器 </span><br><span class=\"line\">\t3.输出元素 cout&lt;&lt;m[i] ;</span><br><span class=\"line\">\t4.清空元素clear();</span><br><span class=\"line\">\t5.判断是否为空empty(); </span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><p><strong>底层实现是二叉搜索树，在竞赛中很常见访问每个元素的时间复杂度是O(logn)</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>set<int> s;</td>\n<td>初始化一个set的集合</td>\n</tr>\n<tr>\n<td>s.insert(item);</td>\n<td>将item插入s中</td>\n</tr>\n<tr>\n<td>s.erase();</td>\n<td>将item删除,成功则1反之0</td>\n</tr>\n<tr>\n<td>s.find(k);</td>\n<td>查找k返回一个迭代器</td>\n</tr>\n<tr>\n<td>s.count(k);</td>\n<td>查找k存在返回1，不存在则0</td>\n</tr>\n<tr>\n<td>s.clear();</td>\n<td>清除s中的数据</td>\n</tr>\n<tr>\n<td>s.empty();</td>\n<td>判断s是否为空</td>\n</tr>\n<tr>\n<td>s.lower_bound(k);</td>\n<td>返回不小于k的迭代器</td>\n</tr>\n<tr>\n<td>s.upper_bound(k);</td>\n<td>返回不大于k的迭代器</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void p(set&lt;int&gt;&amp; s)&#123;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=s.begin();it!=s.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;*it&lt;&lt;&quot; &quot;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; v;</span><br><span class=\"line\">\tset&lt;int&gt; s;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ts.insert(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\ts.count(10);</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\ts.erase(1);</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\tit=s.begin();</span><br><span class=\"line\">\tit++;</span><br><span class=\"line\">\tit++;</span><br><span class=\"line\">\ts.erase(it,s.end());</span><br><span class=\"line\">\tp(s);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"dequeue\"><a href=\"#dequeue\" class=\"headerlink\" title=\"dequeue\"></a>dequeue</h4><h4 id=\"queue\"><a href=\"#queue\" class=\"headerlink\" title=\"queue\"></a>queue</h4><p><strong>队列，先进先出，后进后出</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>queue<int> q;</td>\n<td>初始化一个q的队列</td>\n</tr>\n<tr>\n<td>q.front();</td>\n<td>返回队首元素</td>\n</tr>\n<tr>\n<td>q.back();</td>\n<td>返回队尾元素</td>\n</tr>\n<tr>\n<td>q.pop();</td>\n<td>队首元素出队</td>\n</tr>\n<tr>\n<td>q.push(num);</td>\n<td>把num放入队尾部</td>\n</tr>\n<tr>\n<td>q.size();</td>\n<td>返回队列的大小</td>\n</tr>\n<tr>\n<td>q.empty();</td>\n<td>判断队列是否为空</td>\n</tr>\n</tbody></table>\n<h4 id=\"priority-queue优先队列\"><a href=\"#priority-queue优先队列\" class=\"headerlink\" title=\"priority_queue优先队列\"></a>priority_queue优先队列</h4><p><strong>底层实现是二叉堆，队里有自己的排序方式，每次入队都会将优先级最高的放在队首</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tpriority_queue&lt;int&gt; q;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\tq.push(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile(!q.empty())&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;q.front()&lt;&lt;endl;</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述结果是9,8,7—-0，说明每次push,优先队列都会把最大的数字放到前面</p>\n<p>less会让队列从队首到队尾是高到低排列，也就是数字大的优先级越高（默认）</p>\n<p>greater会让队列从队首到队尾是低到高排列，也就是数字小的优先级越高</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;queue&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">priority_queue &lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt; p;</span><br><span class=\"line\">priority_queue &lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q;</span><br><span class=\"line\">int a[5]=&#123;10,12,14,6,8&#125;;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tfor(int i=0;i&lt;5;i++)</span><br><span class=\"line\">\t\tp.push(a[i]),q.push(a[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">\tprintf(&quot;less&lt;int&gt;:&quot;);</span><br><span class=\"line\">\twhile(!p.empty())</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;,p.top()),p.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">\tprintf(&quot;\\ngreater&lt;int&gt;:&quot;);</span><br><span class=\"line\">\twhile(!q.empty())</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;,q.top()),q.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h4><p><strong>先进后出的数据结构</strong></p>\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>stack<int> sta;</td>\n<td>初始化一个sta的栈</td>\n</tr>\n<tr>\n<td>sta.push(num);</td>\n<td>把数字num放入sta中</td>\n</tr>\n<tr>\n<td>sta.pop();</td>\n<td>队首元素出栈</td>\n</tr>\n<tr>\n<td>sta.top();</td>\n<td>查看队首元素</td>\n</tr>\n<tr>\n<td>sta.size();</td>\n<td>返回栈的长度</td>\n</tr>\n<tr>\n<td>sta.empty();</td>\n<td>判断栈是否为空</td>\n</tr>\n</tbody></table>\n<h2 id=\"迭代器iterator\"><a href=\"#迭代器iterator\" class=\"headerlink\" title=\"迭代器iterator\"></a>迭代器iterator</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; v;</span><br><span class=\"line\">\tset&lt;int&gt; s;</span><br><span class=\"line\">\tfor(int i=0;i&lt;10;i++)&#123;</span><br><span class=\"line\">\t\ts.insert(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tset&lt;int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it=s.begin();it!=s.end();it++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;*it;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pair\"><a href=\"#pair\" class=\"headerlink\" title=\"pair\"></a>pair</h2><p>参考链接：<a href=\"https://blog.csdn.net/sevenjoin/article/details/81937695\">pair的使用</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpair&lt;int,string&gt; p;</span><br><span class=\"line\">\tp.first=1;</span><br><span class=\"line\">\tp.second=&quot;123&quot;;</span><br><span class=\"line\">\tcout&lt;&lt;p.first&lt;&lt;&quot; &quot;&lt;&lt;p.second;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"acm训练总结","date":"2022-10-15T02:06:51.000Z","_content":"\n## 先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\n\n## 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n\n## 思考自己成功过的经历，而不是失败的\n\n## 先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\n\n## 如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\n\n## 如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\n\n## 掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\n\n## 提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\n","source":"_posts/学校/大二下/acm.md","raw":"---\ntitle: 'acm训练总结'\ndate: 2022-10-15 10:06:51\ntags: \n    - 算法\ncategories: 算法\n---\n\n## 先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\n\n## 学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\n\n## 思考自己成功过的经历，而不是失败的\n\n## 先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\n\n## 如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\n\n## 如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\n\n## 掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\n\n## 提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\n","slug":"学校/大二下/acm","published":1,"updated":"2023-03-21T09:52:55.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co73002so8hugd7a9u9c","content":"<h2 id=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"><a href=\"#先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\" class=\"headerlink\" title=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"></a>先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己</h2><h2 id=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"><a href=\"#学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\" class=\"headerlink\" title=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"></a>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</h2><h2 id=\"思考自己成功过的经历，而不是失败的\"><a href=\"#思考自己成功过的经历，而不是失败的\" class=\"headerlink\" title=\"思考自己成功过的经历，而不是失败的\"></a>思考自己成功过的经历，而不是失败的</h2><h2 id=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"><a href=\"#先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\" class=\"headerlink\" title=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"></a>先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验</h2><h2 id=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"><a href=\"#如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\" class=\"headerlink\" title=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"></a>如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数</h2><h2 id=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"><a href=\"#如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\" class=\"headerlink\" title=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"></a>如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）</h2><h2 id=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"><a href=\"#掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\" class=\"headerlink\" title=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"></a>掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处</h2><h2 id=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"><a href=\"#提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\" class=\"headerlink\" title=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"></a>提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"><a href=\"#先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\" class=\"headerlink\" title=\"先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己\"></a>先看大佬写的代码，多看，记住一些题目的小窍门和小解法，省得怀疑自己</h2><h2 id=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"><a href=\"#学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\" class=\"headerlink\" title=\"学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学\"></a>学理论和实践，学习效率最好的是实践过程中的猜想和摸索验证，还有学理论过程中思考怎么灵活运用理论，不然就是学了白学</h2><h2 id=\"思考自己成功过的经历，而不是失败的\"><a href=\"#思考自己成功过的经历，而不是失败的\" class=\"headerlink\" title=\"思考自己成功过的经历，而不是失败的\"></a>思考自己成功过的经历，而不是失败的</h2><h2 id=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"><a href=\"#先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\" class=\"headerlink\" title=\"先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验\"></a>先学理论，然后主动思考摸索，出现问题在哪，如果遇到槛就百度，等寻找答案，想着怎么灵活运用，形成自己的经验</h2><h2 id=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"><a href=\"#如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\" class=\"headerlink\" title=\"如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数\"></a>如果不理解就赋予实际含义，比如计算一个数字二进制数有几个1，就等同于计算当前权值数计算权值更高的数字的个数</h2><h2 id=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"><a href=\"#如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\" class=\"headerlink\" title=\"如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）\"></a>如果是两个区间移动为边界条件，你会发现边界总是一个，因为他们都是相对靠近或者相对原理，数组一直靠近，那么就是左大于右为边界条件，如果是一直远离，那么就是右大于左为边界条件（根本原因在相对运用状态）</h2><h2 id=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"><a href=\"#掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\" class=\"headerlink\" title=\"掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处\"></a>掌握信息源头的能力，知道一个信息，查到了，然后找信息的出处</h2><h2 id=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"><a href=\"#提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\" class=\"headerlink\" title=\"提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步\"></a>提升数学题的能力就是自己手算几遍，提升数感，不算就会越来越差，只调试让机器思考会退步</h2>"},{"title":"准备好的感谢信模板","date":"2022-10-15T02:06:51.000Z","_content":"\n亲爱的xxxx公司HR\n\n您好！\n\n由衷地感谢公司对本人的关注和支持。公司的福利待遇和人才培养政策给我留下了深刻的印象。\n\n面对众多优秀公司，我经常难以扶择。经过慎重的考虑，我觉得目前公司的职位暂时和我不太匹配，希望您可以理解我的安排。目前公司的资料已经被列入我的公司储备库，希望您一如既往地支持我，期待与您的再次相遇！\n\n祝您生活愉快，万事如意！\n","source":"_posts/学校/找工作/感谢信.md","raw":"---\ntitle: '准备好的感谢信模板'\ndate: 2022-10-15 10:06:51\ntags: \n    - 人际\ncategories: 修身\n---\n\n亲爱的xxxx公司HR\n\n您好！\n\n由衷地感谢公司对本人的关注和支持。公司的福利待遇和人才培养政策给我留下了深刻的印象。\n\n面对众多优秀公司，我经常难以扶择。经过慎重的考虑，我觉得目前公司的职位暂时和我不太匹配，希望您可以理解我的安排。目前公司的资料已经被列入我的公司储备库，希望您一如既往地支持我，期待与您的再次相遇！\n\n祝您生活愉快，万事如意！\n","slug":"学校/找工作/感谢信","published":1,"updated":"2023-03-21T09:56:03.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co74002uo8hu9iwsaf09","content":"<p>亲爱的xxxx公司HR</p>\n<p>您好！</p>\n<p>由衷地感谢公司对本人的关注和支持。公司的福利待遇和人才培养政策给我留下了深刻的印象。</p>\n<p>面对众多优秀公司，我经常难以扶择。经过慎重的考虑，我觉得目前公司的职位暂时和我不太匹配，希望您可以理解我的安排。目前公司的资料已经被列入我的公司储备库，希望您一如既往地支持我，期待与您的再次相遇！</p>\n<p>祝您生活愉快，万事如意！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>亲爱的xxxx公司HR</p>\n<p>您好！</p>\n<p>由衷地感谢公司对本人的关注和支持。公司的福利待遇和人才培养政策给我留下了深刻的印象。</p>\n<p>面对众多优秀公司，我经常难以扶择。经过慎重的考虑，我觉得目前公司的职位暂时和我不太匹配，希望您可以理解我的安排。目前公司的资料已经被列入我的公司储备库，希望您一如既往地支持我，期待与您的再次相遇！</p>\n<p>祝您生活愉快，万事如意！</p>\n"},{"title":"cstring","date":"2022-10-15T02:06:51.000Z","_content":"\n[c语言字符串操作](https://blog.csdn.net/yunmao2882/article/details/88962329)\n\n[string类全解](http://c.biancheng.net/view/400.html)\n\n```c\n#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[]={'a','b','\\0','c'};\n\tchar b[10];\n\tprintf(\"%s\\n\",a);\n\tstrcpy(b,a);\n\tint i=0;\n\tprintf(\"%s\\n\",b);\n\n\tstrcat(a,b);\n\tprintf(\"%s\\n\",a);\n\n\tprintf(\"%d\\n\",strcmp(a,b));\n\n\tprintf(\"%d\",strchr(a,'a'));\n\treturn 0;\n}\n```\n\n## substr\n\n> substr有2种用法：\n> 假设：string s = \"0123456789\";\n\n> string sub1 = s.substr(5); //只有一个数字5表示从下标为5开始一直到结尾：sub1 = \"56789\"\n\n> string sub2 = s.substr(5, 3); //从下标为5开始截取长度为3位：sub2 = \"567\"\n","source":"_posts/算法/c算法/cstring.md","raw":"---\ntitle: 'cstring'\ndate: 2022-10-15 10:06:51\ntags: \n    - c\ncategories: 算法\n---\n\n[c语言字符串操作](https://blog.csdn.net/yunmao2882/article/details/88962329)\n\n[string类全解](http://c.biancheng.net/view/400.html)\n\n```c\n#include<stdio.h>\n#include<string.h>\nint main(){\n\tchar a[]={'a','b','\\0','c'};\n\tchar b[10];\n\tprintf(\"%s\\n\",a);\n\tstrcpy(b,a);\n\tint i=0;\n\tprintf(\"%s\\n\",b);\n\n\tstrcat(a,b);\n\tprintf(\"%s\\n\",a);\n\n\tprintf(\"%d\\n\",strcmp(a,b));\n\n\tprintf(\"%d\",strchr(a,'a'));\n\treturn 0;\n}\n```\n\n## substr\n\n> substr有2种用法：\n> 假设：string s = \"0123456789\";\n\n> string sub1 = s.substr(5); //只有一个数字5表示从下标为5开始一直到结尾：sub1 = \"56789\"\n\n> string sub2 = s.substr(5, 3); //从下标为5开始截取长度为3位：sub2 = \"567\"\n","slug":"算法/c算法/cstring","published":1,"updated":"2023-03-21T09:18:43.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co75002wo8hufqx3fvmf","content":"<p><a href=\"https://blog.csdn.net/yunmao2882/article/details/88962329\">c语言字符串操作</a></p>\n<p><a href=\"http://c.biancheng.net/view/400.html\">string类全解</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> a[]=&#123;<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;\\0&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">char</span> b[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,a);</span><br><span class=\"line\">\t<span class=\"built_in\">strcpy</span>(b,a);</span><br><span class=\"line\">\t<span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,b);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">strcat</span>(a,b);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,a);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,<span class=\"built_in\">strcmp</span>(a,b));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,<span class=\"built_in\">strchr</span>(a,<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"substr\"><a href=\"#substr\" class=\"headerlink\" title=\"substr\"></a>substr</h2><blockquote>\n<p>substr有2种用法：<br>假设：string s = “0123456789”;</p>\n</blockquote>\n<blockquote>\n<p>string sub1 = s.substr(5); //只有一个数字5表示从下标为5开始一直到结尾：sub1 = “56789”</p>\n</blockquote>\n<blockquote>\n<p>string sub2 = s.substr(5, 3); //从下标为5开始截取长度为3位：sub2 = “567”</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://blog.csdn.net/yunmao2882/article/details/88962329\">c语言字符串操作</a></p>\n<p><a href=\"http://c.biancheng.net/view/400.html\">string类全解</a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> a[]=&#123;<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;\\0&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">char</span> b[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,a);</span><br><span class=\"line\">\t<span class=\"built_in\">strcpy</span>(b,a);</span><br><span class=\"line\">\t<span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,b);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">strcat</span>(a,b);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,a);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,<span class=\"built_in\">strcmp</span>(a,b));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,<span class=\"built_in\">strchr</span>(a,<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"substr\"><a href=\"#substr\" class=\"headerlink\" title=\"substr\"></a>substr</h2><blockquote>\n<p>substr有2种用法：<br>假设：string s = “0123456789”;</p>\n</blockquote>\n<blockquote>\n<p>string sub1 = s.substr(5); //只有一个数字5表示从下标为5开始一直到结尾：sub1 = “56789”</p>\n</blockquote>\n<blockquote>\n<p>string sub2 = s.substr(5, 3); //从下标为5开始截取长度为3位：sub2 = “567”</p>\n</blockquote>\n"},{"title":"数组字符串","date":"2022-10-15T02:06:51.000Z","_content":"\n## 三角形面积\n\n$$\n\\sqrt{p(p-a)(p-b)(p-c)}\n\n$$\n\n$$\np=\\frac{1}{2}(a+b+c)\n\n$$\n","source":"_posts/算法/c算法/数组字符串刷题.md","raw":"---\ntitle: '数组字符串'\ndate: 2022-10-15 10:06:51\ntags: \n    - c\ncategories: 算法\n---\n\n## 三角形面积\n\n$$\n\\sqrt{p(p-a)(p-b)(p-c)}\n\n$$\n\n$$\np=\\frac{1}{2}(a+b+c)\n\n$$\n","slug":"算法/c算法/数组字符串刷题","published":1,"updated":"2023-03-21T09:20:13.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co76002yo8hu45yyfpov","content":"<h2 id=\"三角形面积\"><a href=\"#三角形面积\" class=\"headerlink\" title=\"三角形面积\"></a>三角形面积</h2><p>$$<br>\\sqrt{p(p-a)(p-b)(p-c)}</p>\n<p>$$</p>\n<p>$$<br>p=\\frac{1}{2}(a+b+c)</p>\n<p>$$</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"三角形面积\"><a href=\"#三角形面积\" class=\"headerlink\" title=\"三角形面积\"></a>三角形面积</h2><p>$$<br>\\sqrt{p(p-a)(p-b)(p-c)}</p>\n<p>$$</p>\n<p>$$<br>p=\\frac{1}{2}(a+b+c)</p>\n<p>$$</p>\n"},{"title":"记录一次数组越界的bug","date":"2022-10-15T02:06:51.000Z","_content":"\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<string>\nusing namespace std;\n\nclass Solution {\npublic:\n    int n;\n    string ss;\n    void fn(vector<int>& v,int i){\n        if(i<0||i>=n)return ;\n        int index=i;\n        i--;\n        while(i>=0&&i<n){\n        \t//cout<<i<<endl;\n            if(v[i]!=0){\n            \t//cout<<index<<endl;\n            \tif(i>0&&i<n-1){\n                \tv[i]=(v[i+1]<v[i-1]?v[i+1]:v[i-1])+1;\n\t            }else if(i==0){\n\t                v[i]=v[i+1]+1;\n\t            }else if(i==n-1){\n\t                v[i]=v[i-1]+1;\n\t            }else{\n                    break;\n                }\n\t            i=i--;\n\t            if(i==-1)return ;\n\t            cout<<i<<endl;\n\t\t\t}else break;\n        }\n        index++;\n        while(index>=0&&index<n){\n        \t//cout<<index<<endl;\n            if(v[index]!=0){\n            \t//cout<<index<<endl;\n            \tif(index>0&&index<n-1){\n                \tv[i]=(v[index+1]<v[index-1]?v[index+1]:v[index-1])+1;\n\t            }else if(index==0){\n\t                v[index]=v[index+1]+1;\n\t            }else if(index==n-1){\n\t                v[index]=v[index-1]+1;\n\t            }else{\n                    break;\n                }\n\t            index++;\n\t\t\t}else break;\n        }\n\n    }\n    vector<int> shortestToChar(string s, char c) {\n        ss=s;\n        queue<int> que;\n        n=s.length();\n        cout<<n<<endl;\n        vector<int> v(20,20);\n//        for(int i=0;i<v.size();i++){\n//\t\t\tcout<<v[i]<<\" \";\n//\t\t} \n        for(int i=0;i<n;i++){\n            if(s[i]==c){\n                v[i]=0;\n                que.push(i);\n            }\n        }\n        while(!que.empty()){\n            fn(v,que.front());\n            que.pop();\n        }\n        return v;\n    }\n};\nint main(){\n\tSolution *s = new Solution();\n\tvector<int> v = s->shortestToChar(\"loveleetcode\",'e');\n\tfor(int i=0;i<v.size();i++){\n\t\tcout<<v[i]<<\" \";\n\t} \n\treturn 0;\n} \n```\n","source":"_posts/算法/c算法/搞不懂的题目数组越界.md","raw":"---\ntitle: '记录一次数组越界的bug'\ndate: 2022-10-15 10:06:51\ntags: \n    - c\ncategories: 算法\n---\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<string>\nusing namespace std;\n\nclass Solution {\npublic:\n    int n;\n    string ss;\n    void fn(vector<int>& v,int i){\n        if(i<0||i>=n)return ;\n        int index=i;\n        i--;\n        while(i>=0&&i<n){\n        \t//cout<<i<<endl;\n            if(v[i]!=0){\n            \t//cout<<index<<endl;\n            \tif(i>0&&i<n-1){\n                \tv[i]=(v[i+1]<v[i-1]?v[i+1]:v[i-1])+1;\n\t            }else if(i==0){\n\t                v[i]=v[i+1]+1;\n\t            }else if(i==n-1){\n\t                v[i]=v[i-1]+1;\n\t            }else{\n                    break;\n                }\n\t            i=i--;\n\t            if(i==-1)return ;\n\t            cout<<i<<endl;\n\t\t\t}else break;\n        }\n        index++;\n        while(index>=0&&index<n){\n        \t//cout<<index<<endl;\n            if(v[index]!=0){\n            \t//cout<<index<<endl;\n            \tif(index>0&&index<n-1){\n                \tv[i]=(v[index+1]<v[index-1]?v[index+1]:v[index-1])+1;\n\t            }else if(index==0){\n\t                v[index]=v[index+1]+1;\n\t            }else if(index==n-1){\n\t                v[index]=v[index-1]+1;\n\t            }else{\n                    break;\n                }\n\t            index++;\n\t\t\t}else break;\n        }\n\n    }\n    vector<int> shortestToChar(string s, char c) {\n        ss=s;\n        queue<int> que;\n        n=s.length();\n        cout<<n<<endl;\n        vector<int> v(20,20);\n//        for(int i=0;i<v.size();i++){\n//\t\t\tcout<<v[i]<<\" \";\n//\t\t} \n        for(int i=0;i<n;i++){\n            if(s[i]==c){\n                v[i]=0;\n                que.push(i);\n            }\n        }\n        while(!que.empty()){\n            fn(v,que.front());\n            que.pop();\n        }\n        return v;\n    }\n};\nint main(){\n\tSolution *s = new Solution();\n\tvector<int> v = s->shortestToChar(\"loveleetcode\",'e');\n\tfor(int i=0;i<v.size();i++){\n\t\tcout<<v[i]<<\" \";\n\t} \n\treturn 0;\n} \n```\n","slug":"算法/c算法/搞不懂的题目数组越界","published":1,"updated":"2023-03-21T09:20:03.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co770032o8hucpebch67","content":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    string ss;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fn</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v,<span class=\"type\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">0</span>||i&gt;=n)<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">        <span class=\"type\">int</span> index=i;</span><br><span class=\"line\">        i--;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i&gt;=<span class=\"number\">0</span>&amp;&amp;i&lt;n)&#123;</span><br><span class=\"line\">        \t<span class=\"comment\">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v[i]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            \t<span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span>&amp;&amp;i&lt;n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                \tv[i]=(v[i+<span class=\"number\">1</span>]&lt;v[i<span class=\"number\">-1</span>]?v[i+<span class=\"number\">1</span>]:v[i<span class=\"number\">-1</span>])+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t                v[i]=v[i+<span class=\"number\">1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t                v[i]=v[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">\t            i=i--;</span><br><span class=\"line\">\t            <span class=\"keyword\">if</span>(i==<span class=\"number\">-1</span>)<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t            cout&lt;&lt;i&lt;&lt;endl;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(index&gt;=<span class=\"number\">0</span>&amp;&amp;index&lt;n)&#123;</span><br><span class=\"line\">        \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v[index]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            \t<span class=\"keyword\">if</span>(index&gt;<span class=\"number\">0</span>&amp;&amp;index&lt;n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                \tv[i]=(v[index+<span class=\"number\">1</span>]&lt;v[index<span class=\"number\">-1</span>]?v[index+<span class=\"number\">1</span>]:v[index<span class=\"number\">-1</span>])+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t                v[index]=v[index+<span class=\"number\">1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t                v[index]=v[index<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">\t            index++;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">shortestToChar</span><span class=\"params\">(string s, <span class=\"type\">char</span> c)</span> </span>&#123;</span><br><span class=\"line\">        ss=s;</span><br><span class=\"line\">        queue&lt;<span class=\"type\">int</span>&gt; que;</span><br><span class=\"line\">        n=s.<span class=\"built_in\">length</span>();</span><br><span class=\"line\">        cout&lt;&lt;n&lt;&lt;endl;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">20</span>,<span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//        for(int i=0;i&lt;v.size();i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\tcout&lt;&lt;v[i]&lt;&lt;&quot; &quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t&#125; </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i]==c)&#123;</span><br><span class=\"line\">                v[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                que.<span class=\"built_in\">push</span>(i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!que.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">            <span class=\"built_in\">fn</span>(v,que.<span class=\"built_in\">front</span>());</span><br><span class=\"line\">            que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tSolution *s = <span class=\"keyword\">new</span> <span class=\"built_in\">Solution</span>();</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v = s-&gt;<span class=\"built_in\">shortestToChar</span>(<span class=\"string\">&quot;loveleetcode&quot;</span>,<span class=\"string\">&#x27;e&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;v.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;v[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    string ss;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">fn</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v,<span class=\"type\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">0</span>||i&gt;=n)<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">        <span class=\"type\">int</span> index=i;</span><br><span class=\"line\">        i--;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i&gt;=<span class=\"number\">0</span>&amp;&amp;i&lt;n)&#123;</span><br><span class=\"line\">        \t<span class=\"comment\">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v[i]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            \t<span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span>&amp;&amp;i&lt;n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                \tv[i]=(v[i+<span class=\"number\">1</span>]&lt;v[i<span class=\"number\">-1</span>]?v[i+<span class=\"number\">1</span>]:v[i<span class=\"number\">-1</span>])+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t                v[i]=v[i+<span class=\"number\">1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t                v[i]=v[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">\t            i=i--;</span><br><span class=\"line\">\t            <span class=\"keyword\">if</span>(i==<span class=\"number\">-1</span>)<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t            cout&lt;&lt;i&lt;&lt;endl;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(index&gt;=<span class=\"number\">0</span>&amp;&amp;index&lt;n)&#123;</span><br><span class=\"line\">        \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v[index]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            \t<span class=\"comment\">//cout&lt;&lt;index&lt;&lt;endl;</span></span><br><span class=\"line\">            \t<span class=\"keyword\">if</span>(index&gt;<span class=\"number\">0</span>&amp;&amp;index&lt;n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                \tv[i]=(v[index+<span class=\"number\">1</span>]&lt;v[index<span class=\"number\">-1</span>]?v[index+<span class=\"number\">1</span>]:v[index<span class=\"number\">-1</span>])+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t                v[index]=v[index+<span class=\"number\">1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t                v[index]=v[index<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">\t            index++;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">shortestToChar</span><span class=\"params\">(string s, <span class=\"type\">char</span> c)</span> </span>&#123;</span><br><span class=\"line\">        ss=s;</span><br><span class=\"line\">        queue&lt;<span class=\"type\">int</span>&gt; que;</span><br><span class=\"line\">        n=s.<span class=\"built_in\">length</span>();</span><br><span class=\"line\">        cout&lt;&lt;n&lt;&lt;endl;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v</span><span class=\"params\">(<span class=\"number\">20</span>,<span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//        for(int i=0;i&lt;v.size();i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\tcout&lt;&lt;v[i]&lt;&lt;&quot; &quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t&#125; </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i]==c)&#123;</span><br><span class=\"line\">                v[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                que.<span class=\"built_in\">push</span>(i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!que.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">            <span class=\"built_in\">fn</span>(v,que.<span class=\"built_in\">front</span>());</span><br><span class=\"line\">            que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tSolution *s = <span class=\"keyword\">new</span> <span class=\"built_in\">Solution</span>();</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v = s-&gt;<span class=\"built_in\">shortestToChar</span>(<span class=\"string\">&quot;loveleetcode&quot;</span>,<span class=\"string\">&#x27;e&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;v.<span class=\"built_in\">size</span>();i++)&#123;</span><br><span class=\"line\">\t\tcout&lt;&lt;v[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n"},{"title":"高级程序设计笔记","date":"2022-10-15T02:06:51.000Z","_content":"\n## 4.1原始值与引用值\n\n```javascript\nlet obj1=new Object();\nlet obj2=obj1;\nobj1.name=\"axian\";\nconsole.log(obj2.name);//\"axian\"\n```\n\n## 4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\n\n> undefined保存在undefined类型里\n>\n> null保存到object类型里\n>\n> 2保存在number里\n>\n> true保存在boolean里\n>\n> “zxczx”保存在字符串里\n\n## 4.3垃圾回收问题\n\n> 垃圾回收问题基本内容就是周期性的确认某个变量不会被使用，然后及时释放这个变量所占的内存\n>\n> 但是垃圾回收是一个近似且不完美的方案，因为判断某块内存是否还有用属于“不可判定问题”，意味靠算法是解决不了的\n\n## 解决垃圾回收问题的方法：标记清理和引用计数。\n\n> 标记清理：在垃圾回收机制运行时，首先会将内存中所有的变量都进行标记，然后会将上下文的变量和所有上下文引用的变量的标记都进行清理，接下来标记的变量就是要删除的变量了\n\n> 引用计数：就是对每个值都记录被引用的次数，如果一个变量被创建并初始化一个引用值时，那么这个值的引用就是1，如果还有别的变量用到这个值，那么引用数+1，如果引用这个值的变量被覆盖，那个引用数-1，当这个引用值为0时，就说明没办法引用这个值了，说明可以清理这个变量的内存了\n\n## 6.2 Array\n\n**创建数组的几种方式**\n\n```javascript\nlet a1=new Array();\nlet a2=new Array(10);//创建一个有是个元素的数组，内容都是undefined\nlet a3=Array();//与第一种相同\nlet a4=new Array(1,2,3,4);//形成一个内容为1,2,3,4的数组\nlet a5=new Array(\"a\",\"b\",\"c\");\n```\n\n**Array.from()和Array.of()方法**\n\n```javascript\nlet m=new Map().set(1,2).set(2,3);\nlet a1=Array.from(m);//[[1,2],[2,3]]\n\nlet s=new Set().add(1).add(2);\nlet a2=Array.from(s);//[1,2]\n\nlet a3=Array.from(\"asdasdasd\");//相当于split\n\nlet a4=Array.from([1,2,3,4],x=>x**2);\n\n//of替代了.call.apply(null,arguments);\n//相当于new Array(1,2,3,4);\nlet a5=Array.of(1,2,3,4);\n```\n\n**Array的其他操作**\n\n> 对象解构和数组遍历\n\n```javascript\nlet aa=[1,2,3,4];\nlet res=Array.from(aa.entries());\nfor(var [index,val] of res){\n    console.log(index,val);\n}\n```\n\n> 修改数组的length来进行插入删除\n\n```javascript\nvar cc=[1,2,3];\ncc.length=1;\ncc[cc.length]=cc.length;\n```\n\n## 数组操作\n\n**concat（拼接新数组）**\n\n**slice（切片）**\n\n> 相当于字符串的substring，只不过操作对象是数组\n\n**splice（粘接，可用于删除，插入，修改）**\n\n## Set,Map\n\n```javascript\nlet s=new Set([1,2,3]);\n\nlet m=new Map([\n    [1,2],\n    [2,3]\n]);\n```\n","source":"_posts/编程语言/JavaScript/javascript高级程序设计.md","raw":"---\ntitle: '高级程序设计笔记'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: js\n---\n\n## 4.1原始值与引用值\n\n```javascript\nlet obj1=new Object();\nlet obj2=obj1;\nobj1.name=\"axian\";\nconsole.log(obj2.name);//\"axian\"\n```\n\n## 4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\n\n> undefined保存在undefined类型里\n>\n> null保存到object类型里\n>\n> 2保存在number里\n>\n> true保存在boolean里\n>\n> “zxczx”保存在字符串里\n\n## 4.3垃圾回收问题\n\n> 垃圾回收问题基本内容就是周期性的确认某个变量不会被使用，然后及时释放这个变量所占的内存\n>\n> 但是垃圾回收是一个近似且不完美的方案，因为判断某块内存是否还有用属于“不可判定问题”，意味靠算法是解决不了的\n\n## 解决垃圾回收问题的方法：标记清理和引用计数。\n\n> 标记清理：在垃圾回收机制运行时，首先会将内存中所有的变量都进行标记，然后会将上下文的变量和所有上下文引用的变量的标记都进行清理，接下来标记的变量就是要删除的变量了\n\n> 引用计数：就是对每个值都记录被引用的次数，如果一个变量被创建并初始化一个引用值时，那么这个值的引用就是1，如果还有别的变量用到这个值，那么引用数+1，如果引用这个值的变量被覆盖，那个引用数-1，当这个引用值为0时，就说明没办法引用这个值了，说明可以清理这个变量的内存了\n\n## 6.2 Array\n\n**创建数组的几种方式**\n\n```javascript\nlet a1=new Array();\nlet a2=new Array(10);//创建一个有是个元素的数组，内容都是undefined\nlet a3=Array();//与第一种相同\nlet a4=new Array(1,2,3,4);//形成一个内容为1,2,3,4的数组\nlet a5=new Array(\"a\",\"b\",\"c\");\n```\n\n**Array.from()和Array.of()方法**\n\n```javascript\nlet m=new Map().set(1,2).set(2,3);\nlet a1=Array.from(m);//[[1,2],[2,3]]\n\nlet s=new Set().add(1).add(2);\nlet a2=Array.from(s);//[1,2]\n\nlet a3=Array.from(\"asdasdasd\");//相当于split\n\nlet a4=Array.from([1,2,3,4],x=>x**2);\n\n//of替代了.call.apply(null,arguments);\n//相当于new Array(1,2,3,4);\nlet a5=Array.of(1,2,3,4);\n```\n\n**Array的其他操作**\n\n> 对象解构和数组遍历\n\n```javascript\nlet aa=[1,2,3,4];\nlet res=Array.from(aa.entries());\nfor(var [index,val] of res){\n    console.log(index,val);\n}\n```\n\n> 修改数组的length来进行插入删除\n\n```javascript\nvar cc=[1,2,3];\ncc.length=1;\ncc[cc.length]=cc.length;\n```\n\n## 数组操作\n\n**concat（拼接新数组）**\n\n**slice（切片）**\n\n> 相当于字符串的substring，只不过操作对象是数组\n\n**splice（粘接，可用于删除，插入，修改）**\n\n## Set,Map\n\n```javascript\nlet s=new Set([1,2,3]);\n\nlet m=new Map([\n    [1,2],\n    [2,3]\n]);\n```\n","slug":"编程语言/JavaScript/javascript高级程序设计","published":1,"updated":"2023-03-21T09:26:23.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co770035o8hufwl58n0s","content":"<h2 id=\"4-1原始值与引用值\"><a href=\"#4-1原始值与引用值\" class=\"headerlink\" title=\"4.1原始值与引用值\"></a>4.1原始值与引用值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2=obj1;</span><br><span class=\"line\">obj1.<span class=\"property\">name</span>=<span class=\"string\">&quot;axian&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj2.<span class=\"property\">name</span>);<span class=\"comment\">//&quot;axian&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\"><a href=\"#4-2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\" class=\"headerlink\" title=\"4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\"></a>4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针</h2><blockquote>\n<p>undefined保存在undefined类型里</p>\n<p>null保存到object类型里</p>\n<p>2保存在number里</p>\n<p>true保存在boolean里</p>\n<p>“zxczx”保存在字符串里</p>\n</blockquote>\n<h2 id=\"4-3垃圾回收问题\"><a href=\"#4-3垃圾回收问题\" class=\"headerlink\" title=\"4.3垃圾回收问题\"></a>4.3垃圾回收问题</h2><blockquote>\n<p>垃圾回收问题基本内容就是周期性的确认某个变量不会被使用，然后及时释放这个变量所占的内存</p>\n<p>但是垃圾回收是一个近似且不完美的方案，因为判断某块内存是否还有用属于“不可判定问题”，意味靠算法是解决不了的</p>\n</blockquote>\n<h2 id=\"解决垃圾回收问题的方法：标记清理和引用计数。\"><a href=\"#解决垃圾回收问题的方法：标记清理和引用计数。\" class=\"headerlink\" title=\"解决垃圾回收问题的方法：标记清理和引用计数。\"></a>解决垃圾回收问题的方法：标记清理和引用计数。</h2><blockquote>\n<p>标记清理：在垃圾回收机制运行时，首先会将内存中所有的变量都进行标记，然后会将上下文的变量和所有上下文引用的变量的标记都进行清理，接下来标记的变量就是要删除的变量了</p>\n</blockquote>\n<blockquote>\n<p>引用计数：就是对每个值都记录被引用的次数，如果一个变量被创建并初始化一个引用值时，那么这个值的引用就是1，如果还有别的变量用到这个值，那么引用数+1，如果引用这个值的变量被覆盖，那个引用数-1，当这个引用值为0时，就说明没办法引用这个值了，说明可以清理这个变量的内存了</p>\n</blockquote>\n<h2 id=\"6-2-Array\"><a href=\"#6-2-Array\" class=\"headerlink\" title=\"6.2 Array\"></a>6.2 Array</h2><p><strong>创建数组的几种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a1=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> a2=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">10</span>);<span class=\"comment\">//创建一个有是个元素的数组，内容都是undefined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a3=<span class=\"title class_\">Array</span>();<span class=\"comment\">//与第一种相同</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a4=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>);<span class=\"comment\">//形成一个内容为1,2,3,4的数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a5=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Array.from()和Array.of()方法</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> m=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>().<span class=\"title function_\">set</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>).<span class=\"title function_\">set</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> a1=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(m);<span class=\"comment\">//[[1,2],[2,3]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>().<span class=\"title function_\">add</span>(<span class=\"number\">1</span>).<span class=\"title function_\">add</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> a2=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(s);<span class=\"comment\">//[1,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a3=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"string\">&quot;asdasdasd&quot;</span>);<span class=\"comment\">//相当于split</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a4=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],<span class=\"function\"><span class=\"params\">x</span>=&gt;</span>x**<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//of替代了.call.apply(null,arguments);</span></span><br><span class=\"line\"><span class=\"comment\">//相当于new Array(1,2,3,4);</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a5=<span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Array的其他操作</strong></p>\n<blockquote>\n<p>对象解构和数组遍历</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> aa=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(aa.<span class=\"title function_\">entries</span>());</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> [index,val] <span class=\"keyword\">of</span> res)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index,val);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改数组的length来进行插入删除</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cc=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">cc.<span class=\"property\">length</span>=<span class=\"number\">1</span>;</span><br><span class=\"line\">cc[cc.<span class=\"property\">length</span>]=cc.<span class=\"property\">length</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组操作\"><a href=\"#数组操作\" class=\"headerlink\" title=\"数组操作\"></a>数组操作</h2><p><strong>concat（拼接新数组）</strong></p>\n<p><strong>slice（切片）</strong></p>\n<blockquote>\n<p>相当于字符串的substring，只不过操作对象是数组</p>\n</blockquote>\n<p><strong>splice（粘接，可用于删除，插入，修改）</strong></p>\n<h2 id=\"Set-Map\"><a href=\"#Set-Map\" class=\"headerlink\" title=\"Set,Map\"></a>Set,Map</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> m=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>([</span><br><span class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">    [<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"4-1原始值与引用值\"><a href=\"#4-1原始值与引用值\" class=\"headerlink\" title=\"4.1原始值与引用值\"></a>4.1原始值与引用值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2=obj1;</span><br><span class=\"line\">obj1.<span class=\"property\">name</span>=<span class=\"string\">&quot;axian&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj2.<span class=\"property\">name</span>);<span class=\"comment\">//&quot;axian&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\"><a href=\"#4-2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\" class=\"headerlink\" title=\"4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针\"></a>4.2形式参数如果拷贝的是值那么就会复制一份，如果是引用，那么就拷贝地址，传递指针</h2><blockquote>\n<p>undefined保存在undefined类型里</p>\n<p>null保存到object类型里</p>\n<p>2保存在number里</p>\n<p>true保存在boolean里</p>\n<p>“zxczx”保存在字符串里</p>\n</blockquote>\n<h2 id=\"4-3垃圾回收问题\"><a href=\"#4-3垃圾回收问题\" class=\"headerlink\" title=\"4.3垃圾回收问题\"></a>4.3垃圾回收问题</h2><blockquote>\n<p>垃圾回收问题基本内容就是周期性的确认某个变量不会被使用，然后及时释放这个变量所占的内存</p>\n<p>但是垃圾回收是一个近似且不完美的方案，因为判断某块内存是否还有用属于“不可判定问题”，意味靠算法是解决不了的</p>\n</blockquote>\n<h2 id=\"解决垃圾回收问题的方法：标记清理和引用计数。\"><a href=\"#解决垃圾回收问题的方法：标记清理和引用计数。\" class=\"headerlink\" title=\"解决垃圾回收问题的方法：标记清理和引用计数。\"></a>解决垃圾回收问题的方法：标记清理和引用计数。</h2><blockquote>\n<p>标记清理：在垃圾回收机制运行时，首先会将内存中所有的变量都进行标记，然后会将上下文的变量和所有上下文引用的变量的标记都进行清理，接下来标记的变量就是要删除的变量了</p>\n</blockquote>\n<blockquote>\n<p>引用计数：就是对每个值都记录被引用的次数，如果一个变量被创建并初始化一个引用值时，那么这个值的引用就是1，如果还有别的变量用到这个值，那么引用数+1，如果引用这个值的变量被覆盖，那个引用数-1，当这个引用值为0时，就说明没办法引用这个值了，说明可以清理这个变量的内存了</p>\n</blockquote>\n<h2 id=\"6-2-Array\"><a href=\"#6-2-Array\" class=\"headerlink\" title=\"6.2 Array\"></a>6.2 Array</h2><p><strong>创建数组的几种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a1=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> a2=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">10</span>);<span class=\"comment\">//创建一个有是个元素的数组，内容都是undefined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a3=<span class=\"title class_\">Array</span>();<span class=\"comment\">//与第一种相同</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a4=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>);<span class=\"comment\">//形成一个内容为1,2,3,4的数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a5=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Array.from()和Array.of()方法</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> m=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>().<span class=\"title function_\">set</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>).<span class=\"title function_\">set</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> a1=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(m);<span class=\"comment\">//[[1,2],[2,3]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>().<span class=\"title function_\">add</span>(<span class=\"number\">1</span>).<span class=\"title function_\">add</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> a2=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(s);<span class=\"comment\">//[1,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a3=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"string\">&quot;asdasdasd&quot;</span>);<span class=\"comment\">//相当于split</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a4=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],<span class=\"function\"><span class=\"params\">x</span>=&gt;</span>x**<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//of替代了.call.apply(null,arguments);</span></span><br><span class=\"line\"><span class=\"comment\">//相当于new Array(1,2,3,4);</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a5=<span class=\"title class_\">Array</span>.<span class=\"title function_\">of</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Array的其他操作</strong></p>\n<blockquote>\n<p>对象解构和数组遍历</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> aa=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res=<span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(aa.<span class=\"title function_\">entries</span>());</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> [index,val] <span class=\"keyword\">of</span> res)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index,val);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>修改数组的length来进行插入删除</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cc=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">cc.<span class=\"property\">length</span>=<span class=\"number\">1</span>;</span><br><span class=\"line\">cc[cc.<span class=\"property\">length</span>]=cc.<span class=\"property\">length</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数组操作\"><a href=\"#数组操作\" class=\"headerlink\" title=\"数组操作\"></a>数组操作</h2><p><strong>concat（拼接新数组）</strong></p>\n<p><strong>slice（切片）</strong></p>\n<blockquote>\n<p>相当于字符串的substring，只不过操作对象是数组</p>\n</blockquote>\n<p><strong>splice（粘接，可用于删除，插入，修改）</strong></p>\n<h2 id=\"Set-Map\"><a href=\"#Set-Map\" class=\"headerlink\" title=\"Set,Map\"></a>Set,Map</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> m=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>([</span><br><span class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">    [<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n"},{"title":"摸底题目讲解","date":"2022-10-15T02:06:51.000Z","_content":"\n## 数据库操作\n\n```cpp\n#include<stdio.h>\n\nchar s[5],s1[5],s2[5];\nint main(){\n\tscanf(\"%s%s%s\",&s,&s1,&s2);\n\tint num=(s[0]=='r')+(s1[0]=='r')+(s2[0]=='r');\n\tif(num>1){\n\t\tputs(\"NO\");\n\t}else{\n\t\tputs(\"Yes\");\n\t\tif((s[0]=='r'))puts(\"u1\");\n\t\telse if(s1[0]=='r')puts(\"u2\");\n\t\telse puts(\"u3\")\n\t}\n\treturn 0;\n} \n```\n","source":"_posts/算法/学校acm培训/c语言摸底题目讲解.md","raw":"---\ntitle: '摸底题目讲解'\ndate: 2022-10-15 10:06:51\ntags: \n    - 数据结构\n    - 算法\ncategories: 算法\n---\n\n## 数据库操作\n\n```cpp\n#include<stdio.h>\n\nchar s[5],s1[5],s2[5];\nint main(){\n\tscanf(\"%s%s%s\",&s,&s1,&s2);\n\tint num=(s[0]=='r')+(s1[0]=='r')+(s2[0]=='r');\n\tif(num>1){\n\t\tputs(\"NO\");\n\t}else{\n\t\tputs(\"Yes\");\n\t\tif((s[0]=='r'))puts(\"u1\");\n\t\telse if(s1[0]=='r')puts(\"u2\");\n\t\telse puts(\"u3\")\n\t}\n\treturn 0;\n} \n```\n","slug":"算法/学校acm培训/c语言摸底题目讲解","published":1,"updated":"2023-03-21T09:16:10.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co790038o8huctuwe8xf","content":"<h2 id=\"数据库操作\"><a href=\"#数据库操作\" class=\"headerlink\" title=\"数据库操作\"></a>数据库操作</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> s[<span class=\"number\">5</span>],s1[<span class=\"number\">5</span>],s2[<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s%s&quot;</span>,&amp;s,&amp;s1,&amp;s2);</span><br><span class=\"line\">\t<span class=\"type\">int</span> num=(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)+(s1[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)+(s2[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(num&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>))<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u1&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s1[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u2&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u3&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据库操作\"><a href=\"#数据库操作\" class=\"headerlink\" title=\"数据库操作\"></a>数据库操作</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> s[<span class=\"number\">5</span>],s1[<span class=\"number\">5</span>],s2[<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s%s&quot;</span>,&amp;s,&amp;s1,&amp;s2);</span><br><span class=\"line\">\t<span class=\"type\">int</span> num=(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)+(s1[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)+(s2[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(num&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Yes&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>))<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u1&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s1[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;r&#x27;</span>)<span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u2&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;u3&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n"},{"title":"手写","date":"2022-10-15T02:06:51.000Z","_content":"\n# js之join方法实现\n\n```javascript\nvar arr=[1,2,3];\nvar newArr=arr.join('=');\nArray.prototype.newJoin=function (){\n  var s=\"\";\n  for(let i=0;i<this.length;i++){\n    if(this[i]===null||this[i]===undefined){\n      this[i]=\"\";\n    }\n    if(arguments!==undefined&&i!=this.length-1){\n      s+=this[i]+arguments;\n    }else{\n      s+=this[i];\n    }\n  }\n  return s;\n}\n```\n\n# js之find方法实现\n\n```javascript\nvar arr=[1,2,3,4,5,6];\narr.find(function(){\n  return arr>=arguments[0];\n});\nArray.prototype.newFind=function (func){\n  if(typeof func!==\"function\"){\n    throw new Error(`${func}不是一个函数`);\n  }\n  if(this===null||this===undefined){\n    return this;\n  }\n  for(let i=0;i<this.length;i++){\n    if(func(this[i],i,this)){\n      return this[i];\n    }\n  }\n  return undefined;\n}\n```\n\n# js之push方法实现\n\n```javascript\n<script>\n  var arr=[1,2,3,4,5,6];\n  var newArr=arr.push(3,2,1);\n  console.log(newArr);\n  Array.prototype.newPush=function (){\n    var lenThis=this.length;\n    var legArgu=arguments.length;\n    lenThis===0?return arguments:;\n    lenArgu===0?return this:;\n    for(let i=0;i<lenArgu;i++){\n      this[lenThis+i]=arguments[i];\n    }\n  }\n</script>\n```\n\n## js插入\n\n```javascript\narrays.splice(pos,num,...arr);\narrays.splice(3,0,...arr);\n```\n","source":"_posts/编程语言/JavaScript/js算法.md","raw":"---\ntitle: '手写'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: js\n---\n\n# js之join方法实现\n\n```javascript\nvar arr=[1,2,3];\nvar newArr=arr.join('=');\nArray.prototype.newJoin=function (){\n  var s=\"\";\n  for(let i=0;i<this.length;i++){\n    if(this[i]===null||this[i]===undefined){\n      this[i]=\"\";\n    }\n    if(arguments!==undefined&&i!=this.length-1){\n      s+=this[i]+arguments;\n    }else{\n      s+=this[i];\n    }\n  }\n  return s;\n}\n```\n\n# js之find方法实现\n\n```javascript\nvar arr=[1,2,3,4,5,6];\narr.find(function(){\n  return arr>=arguments[0];\n});\nArray.prototype.newFind=function (func){\n  if(typeof func!==\"function\"){\n    throw new Error(`${func}不是一个函数`);\n  }\n  if(this===null||this===undefined){\n    return this;\n  }\n  for(let i=0;i<this.length;i++){\n    if(func(this[i],i,this)){\n      return this[i];\n    }\n  }\n  return undefined;\n}\n```\n\n# js之push方法实现\n\n```javascript\n<script>\n  var arr=[1,2,3,4,5,6];\n  var newArr=arr.push(3,2,1);\n  console.log(newArr);\n  Array.prototype.newPush=function (){\n    var lenThis=this.length;\n    var legArgu=arguments.length;\n    lenThis===0?return arguments:;\n    lenArgu===0?return this:;\n    for(let i=0;i<lenArgu;i++){\n      this[lenThis+i]=arguments[i];\n    }\n  }\n</script>\n```\n\n## js插入\n\n```javascript\narrays.splice(pos,num,...arr);\narrays.splice(3,0,...arr);\n```\n","slug":"编程语言/JavaScript/js算法","published":1,"updated":"2023-03-21T09:27:02.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7a003co8hue9lyfptw","content":"<h1 id=\"js之join方法实现\"><a href=\"#js之join方法实现\" class=\"headerlink\" title=\"js之join方法实现\"></a>js之join方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newJoin</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>[i]===<span class=\"literal\">null</span>||<span class=\"variable language_\">this</span>[i]===<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>[i]=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">arguments</span>!==<span class=\"literal\">undefined</span>&amp;&amp;i!=<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      s+=<span class=\"variable language_\">this</span>[i]+<span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      s+=<span class=\"variable language_\">this</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"js之find方法实现\"><a href=\"#js之find方法实现\" class=\"headerlink\" title=\"js之find方法实现\"></a>js之find方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">arr.<span class=\"title function_\">find</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr&gt;=<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newFind</span>=<span class=\"keyword\">function</span> (<span class=\"params\">func</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> func!==<span class=\"string\">&quot;function&quot;</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;func&#125;</span>不是一个函数`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>===<span class=\"literal\">null</span>||<span class=\"variable language_\">this</span>===<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_\">func</span>(<span class=\"variable language_\">this</span>[i],i,<span class=\"variable language_\">this</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"js之push方法实现\"><a href=\"#js之push方法实现\" class=\"headerlink\" title=\"js之push方法实现\"></a>js之push方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr=arr.<span class=\"title function_\">push</span>(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newArr);</span><br><span class=\"line\">  <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newPush</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lenThis=<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> legArgu=<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    lenThis===<span class=\"number\">0</span>?<span class=\"keyword\">return</span> <span class=\"attr\">arguments</span>:;</span><br><span class=\"line\">    lenArgu===<span class=\"number\">0</span>?<span class=\"keyword\">return</span> <span class=\"attr\">this</span>:;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;lenArgu;i++)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>[lenThis+i]=<span class=\"variable language_\">arguments</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js插入\"><a href=\"#js插入\" class=\"headerlink\" title=\"js插入\"></a>js插入</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arrays.<span class=\"title function_\">splice</span>(pos,num,...arr);</span><br><span class=\"line\">arrays.<span class=\"title function_\">splice</span>(<span class=\"number\">3</span>,<span class=\"number\">0</span>,...arr);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"js之join方法实现\"><a href=\"#js之join方法实现\" class=\"headerlink\" title=\"js之join方法实现\"></a>js之join方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=arr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newJoin</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>[i]===<span class=\"literal\">null</span>||<span class=\"variable language_\">this</span>[i]===<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>[i]=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">arguments</span>!==<span class=\"literal\">undefined</span>&amp;&amp;i!=<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      s+=<span class=\"variable language_\">this</span>[i]+<span class=\"variable language_\">arguments</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      s+=<span class=\"variable language_\">this</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"js之find方法实现\"><a href=\"#js之find方法实现\" class=\"headerlink\" title=\"js之find方法实现\"></a>js之find方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">arr.<span class=\"title function_\">find</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr&gt;=<span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newFind</span>=<span class=\"keyword\">function</span> (<span class=\"params\">func</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> func!==<span class=\"string\">&quot;function&quot;</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;func&#125;</span>不是一个函数`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>===<span class=\"literal\">null</span>||<span class=\"variable language_\">this</span>===<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_\">func</span>(<span class=\"variable language_\">this</span>[i],i,<span class=\"variable language_\">this</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"js之push方法实现\"><a href=\"#js之push方法实现\" class=\"headerlink\" title=\"js之push方法实现\"></a>js之push方法实现</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr=arr.<span class=\"title function_\">push</span>(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newArr);</span><br><span class=\"line\">  <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">newPush</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lenThis=<span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> legArgu=<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    lenThis===<span class=\"number\">0</span>?<span class=\"keyword\">return</span> <span class=\"attr\">arguments</span>:;</span><br><span class=\"line\">    lenArgu===<span class=\"number\">0</span>?<span class=\"keyword\">return</span> <span class=\"attr\">this</span>:;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;lenArgu;i++)&#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>[lenThis+i]=<span class=\"variable language_\">arguments</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js插入\"><a href=\"#js插入\" class=\"headerlink\" title=\"js插入\"></a>js插入</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arrays.<span class=\"title function_\">splice</span>(pos,num,...arr);</span><br><span class=\"line\">arrays.<span class=\"title function_\">splice</span>(<span class=\"number\">3</span>,<span class=\"number\">0</span>,...arr);</span><br></pre></td></tr></table></figure>\n"},{"title":"基本doc命令","date":"2022-10-15T02:06:51.000Z","_content":"\n`\\?`查看帮助\n\n## echo\n\n`echo on/of`\n\n开启，取消回显\n\n`echo 内容`\n\n输出内容\n\n## del\n\n`del 路径`\n\n可以删除文件\n\n`\\F`\n\n强制删除\n\n`\\P`\n\n删除前需要确认\n\n`\\S`\n\n删除所有子目录下的文件\n\n`\\Q`\n\n安静模式，不需要确认\n\n**垃圾清理例子**\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md24309.6640686.png)\n\n## REM命令和::\n\n> 注释的作用\n\n`@rem aaaaaaaaaa `\n\n## call和set的使用\n\n```shell\n@echo off\nset aa=123123\nset str=echo %aa%\ncall %str%\npause\n```\n\n## start 命令\n\n```shell\nstart explorer c:\\\n@rem 打开c盘\n```\n\n## goto命令\n\n```shell\n@echo off\n:start\nset /a var+=1\necho %var%\nif %var% leq 3 goto start\npause\n```\n\n> leq是小于的意思\n\n## @取消回显,dir列出文件目录\n\n```shell\n@echo off\ndir c:\\\npause\n```\n\n## >覆盖>>追加\n\n## &与执行，前面的无效不影响后面\n\n## cls清屏\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md27611.2343393.png)\n\n```shell\ntree c:\\\nmd 123\nrd 123\n```\n\n## path添加文件路径名\n\n```shell\n@echo off\npath=C:\\Personal\\Desktop\n1.txt\npause\n```\n\n## copy\n\n> 拷贝文件\n>\n> copy [file1] [file2]\n\n## move\n\n> 移动文件\n>\n> move [file] [directory]\n>\n> 修改目录\n>\n> move [dir1] [dir2]\n\n## ren\n\n> 修改文件名字\n>\n> ren 1.txt 2.txt\n\n## ping\n\n```shell\nping 域名 /t     ...参数\n```\n\n## net\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md30465.8998462.png)\n\n```shell\nnet share   ::查看共享命令\nnetstat -ano|findstr 3306\n\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md30833.0647414.png)\n\n## type查看某个文件\n\n## xcopy 复制\n\n## taskkill\n\n## tasklist\n\n## reg\n\n## if\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md33990.2925189.png)\n\n## %date%  %time%\n\n## if exist\n\n## for\n\n```shell\n@echo off\nfor %%i in (1,2,3,4,5) do echo %%i\npause\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md34887.9539284.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md35092.5947733.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md35168.0603045.png)\n","source":"_posts/编程语言/doc命令/bat.md","raw":"---\ntitle: '基本doc命令'\ndate: 2022-10-15 10:06:51\ntags: doc\ncategories: doc\n---\n\n`\\?`查看帮助\n\n## echo\n\n`echo on/of`\n\n开启，取消回显\n\n`echo 内容`\n\n输出内容\n\n## del\n\n`del 路径`\n\n可以删除文件\n\n`\\F`\n\n强制删除\n\n`\\P`\n\n删除前需要确认\n\n`\\S`\n\n删除所有子目录下的文件\n\n`\\Q`\n\n安静模式，不需要确认\n\n**垃圾清理例子**\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md24309.6640686.png)\n\n## REM命令和::\n\n> 注释的作用\n\n`@rem aaaaaaaaaa `\n\n## call和set的使用\n\n```shell\n@echo off\nset aa=123123\nset str=echo %aa%\ncall %str%\npause\n```\n\n## start 命令\n\n```shell\nstart explorer c:\\\n@rem 打开c盘\n```\n\n## goto命令\n\n```shell\n@echo off\n:start\nset /a var+=1\necho %var%\nif %var% leq 3 goto start\npause\n```\n\n> leq是小于的意思\n\n## @取消回显,dir列出文件目录\n\n```shell\n@echo off\ndir c:\\\npause\n```\n\n## >覆盖>>追加\n\n## &与执行，前面的无效不影响后面\n\n## cls清屏\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md27611.2343393.png)\n\n```shell\ntree c:\\\nmd 123\nrd 123\n```\n\n## path添加文件路径名\n\n```shell\n@echo off\npath=C:\\Personal\\Desktop\n1.txt\npause\n```\n\n## copy\n\n> 拷贝文件\n>\n> copy [file1] [file2]\n\n## move\n\n> 移动文件\n>\n> move [file] [directory]\n>\n> 修改目录\n>\n> move [dir1] [dir2]\n\n## ren\n\n> 修改文件名字\n>\n> ren 1.txt 2.txt\n\n## ping\n\n```shell\nping 域名 /t     ...参数\n```\n\n## net\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md30465.8998462.png)\n\n```shell\nnet share   ::查看共享命令\nnetstat -ano|findstr 3306\n\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md30833.0647414.png)\n\n## type查看某个文件\n\n## xcopy 复制\n\n## taskkill\n\n## tasklist\n\n## reg\n\n## if\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md33990.2925189.png)\n\n## %date%  %time%\n\n## if exist\n\n## for\n\n```shell\n@echo off\nfor %%i in (1,2,3,4,5) do echo %%i\npause\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md34887.9539284.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md35092.5947733.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\bat.md35168.0603045.png)\n","slug":"编程语言/doc命令/bat","published":1,"updated":"2023-03-21T09:21:26.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7b003fo8huhed41hxe","content":"<p><code>\\?</code>查看帮助</p>\n<h2 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"echo\"></a>echo</h2><p><code>echo on/of</code></p>\n<p>开启，取消回显</p>\n<p><code>echo 内容</code></p>\n<p>输出内容</p>\n<h2 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a>del</h2><p><code>del 路径</code></p>\n<p>可以删除文件</p>\n<p><code>\\F</code></p>\n<p>强制删除</p>\n<p><code>\\P</code></p>\n<p>删除前需要确认</p>\n<p><code>\\S</code></p>\n<p>删除所有子目录下的文件</p>\n<p><code>\\Q</code></p>\n<p>安静模式，不需要确认</p>\n<p><strong>垃圾清理例子</strong></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md24309.6640686.png\"></p>\n<h2 id=\"REM命令和\"><a href=\"#REM命令和\" class=\"headerlink\" title=\"REM命令和::\"></a>REM命令和::</h2><blockquote>\n<p>注释的作用</p>\n</blockquote>\n<p><code>@rem aaaaaaaaaa </code></p>\n<h2 id=\"call和set的使用\"><a href=\"#call和set的使用\" class=\"headerlink\" title=\"call和set的使用\"></a>call和set的使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">set aa=123123</span><br><span class=\"line\">set str=echo %aa%</span><br><span class=\"line\">call %str%</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"start-命令\"><a href=\"#start-命令\" class=\"headerlink\" title=\"start 命令\"></a>start 命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start explorer c:\\</span><br><span class=\"line\">@rem 打开c盘</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"goto命令\"><a href=\"#goto命令\" class=\"headerlink\" title=\"goto命令\"></a>goto命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">:start</span><br><span class=\"line\">set /a var+=1</span><br><span class=\"line\">echo %var%</span><br><span class=\"line\">if %var% leq 3 goto start</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>leq是小于的意思</p>\n</blockquote>\n<h2 id=\"取消回显-dir列出文件目录\"><a href=\"#取消回显-dir列出文件目录\" class=\"headerlink\" title=\"@取消回显,dir列出文件目录\"></a>@取消回显,dir列出文件目录</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">dir c:\\</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"gt-覆盖-gt-gt-追加\"><a href=\"#gt-覆盖-gt-gt-追加\" class=\"headerlink\" title=\"&gt;覆盖&gt;&gt;追加\"></a>&gt;覆盖&gt;&gt;追加</h2><h2 id=\"amp-与执行，前面的无效不影响后面\"><a href=\"#amp-与执行，前面的无效不影响后面\" class=\"headerlink\" title=\"&amp;与执行，前面的无效不影响后面\"></a>&amp;与执行，前面的无效不影响后面</h2><h2 id=\"cls清屏\"><a href=\"#cls清屏\" class=\"headerlink\" title=\"cls清屏\"></a>cls清屏</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md27611.2343393.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree c:\\</span><br><span class=\"line\">md 123</span><br><span class=\"line\">rd 123</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"path添加文件路径名\"><a href=\"#path添加文件路径名\" class=\"headerlink\" title=\"path添加文件路径名\"></a>path添加文件路径名</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">path=C:\\Personal\\Desktop</span><br><span class=\"line\">1.txt</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h2><blockquote>\n<p>拷贝文件</p>\n<p>copy [file1] [file2]</p>\n</blockquote>\n<h2 id=\"move\"><a href=\"#move\" class=\"headerlink\" title=\"move\"></a>move</h2><blockquote>\n<p>移动文件</p>\n<p>move [file] [directory]</p>\n<p>修改目录</p>\n<p>move [dir1] [dir2]</p>\n</blockquote>\n<h2 id=\"ren\"><a href=\"#ren\" class=\"headerlink\" title=\"ren\"></a>ren</h2><blockquote>\n<p>修改文件名字</p>\n<p>ren 1.txt 2.txt</p>\n</blockquote>\n<h2 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping 域名 /t     ...参数</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"net\"><a href=\"#net\" class=\"headerlink\" title=\"net\"></a>net</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md30465.8998462.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net share   ::查看共享命令</span><br><span class=\"line\">netstat -ano|findstr 3306</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md30833.0647414.png\"></p>\n<h2 id=\"type查看某个文件\"><a href=\"#type查看某个文件\" class=\"headerlink\" title=\"type查看某个文件\"></a>type查看某个文件</h2><h2 id=\"xcopy-复制\"><a href=\"#xcopy-复制\" class=\"headerlink\" title=\"xcopy 复制\"></a>xcopy 复制</h2><h2 id=\"taskkill\"><a href=\"#taskkill\" class=\"headerlink\" title=\"taskkill\"></a>taskkill</h2><h2 id=\"tasklist\"><a href=\"#tasklist\" class=\"headerlink\" title=\"tasklist\"></a>tasklist</h2><h2 id=\"reg\"><a href=\"#reg\" class=\"headerlink\" title=\"reg\"></a>reg</h2><h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md33990.2925189.png\"></p>\n<h2 id=\"date-time\"><a href=\"#date-time\" class=\"headerlink\" title=\"%date%  %time%\"></a>%date%  %time%</h2><h2 id=\"if-exist\"><a href=\"#if-exist\" class=\"headerlink\" title=\"if exist\"></a>if exist</h2><h2 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">for %%i in (1,2,3,4,5) do echo %%i</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md34887.9539284.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md35092.5947733.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md35168.0603045.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><code>\\?</code>查看帮助</p>\n<h2 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"echo\"></a>echo</h2><p><code>echo on/of</code></p>\n<p>开启，取消回显</p>\n<p><code>echo 内容</code></p>\n<p>输出内容</p>\n<h2 id=\"del\"><a href=\"#del\" class=\"headerlink\" title=\"del\"></a>del</h2><p><code>del 路径</code></p>\n<p>可以删除文件</p>\n<p><code>\\F</code></p>\n<p>强制删除</p>\n<p><code>\\P</code></p>\n<p>删除前需要确认</p>\n<p><code>\\S</code></p>\n<p>删除所有子目录下的文件</p>\n<p><code>\\Q</code></p>\n<p>安静模式，不需要确认</p>\n<p><strong>垃圾清理例子</strong></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md24309.6640686.png\"></p>\n<h2 id=\"REM命令和\"><a href=\"#REM命令和\" class=\"headerlink\" title=\"REM命令和::\"></a>REM命令和::</h2><blockquote>\n<p>注释的作用</p>\n</blockquote>\n<p><code>@rem aaaaaaaaaa </code></p>\n<h2 id=\"call和set的使用\"><a href=\"#call和set的使用\" class=\"headerlink\" title=\"call和set的使用\"></a>call和set的使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">set aa=123123</span><br><span class=\"line\">set str=echo %aa%</span><br><span class=\"line\">call %str%</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"start-命令\"><a href=\"#start-命令\" class=\"headerlink\" title=\"start 命令\"></a>start 命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start explorer c:\\</span><br><span class=\"line\">@rem 打开c盘</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"goto命令\"><a href=\"#goto命令\" class=\"headerlink\" title=\"goto命令\"></a>goto命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">:start</span><br><span class=\"line\">set /a var+=1</span><br><span class=\"line\">echo %var%</span><br><span class=\"line\">if %var% leq 3 goto start</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>leq是小于的意思</p>\n</blockquote>\n<h2 id=\"取消回显-dir列出文件目录\"><a href=\"#取消回显-dir列出文件目录\" class=\"headerlink\" title=\"@取消回显,dir列出文件目录\"></a>@取消回显,dir列出文件目录</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">dir c:\\</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"gt-覆盖-gt-gt-追加\"><a href=\"#gt-覆盖-gt-gt-追加\" class=\"headerlink\" title=\"&gt;覆盖&gt;&gt;追加\"></a>&gt;覆盖&gt;&gt;追加</h2><h2 id=\"amp-与执行，前面的无效不影响后面\"><a href=\"#amp-与执行，前面的无效不影响后面\" class=\"headerlink\" title=\"&amp;与执行，前面的无效不影响后面\"></a>&amp;与执行，前面的无效不影响后面</h2><h2 id=\"cls清屏\"><a href=\"#cls清屏\" class=\"headerlink\" title=\"cls清屏\"></a>cls清屏</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md27611.2343393.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree c:\\</span><br><span class=\"line\">md 123</span><br><span class=\"line\">rd 123</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"path添加文件路径名\"><a href=\"#path添加文件路径名\" class=\"headerlink\" title=\"path添加文件路径名\"></a>path添加文件路径名</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">path=C:\\Personal\\Desktop</span><br><span class=\"line\">1.txt</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h2><blockquote>\n<p>拷贝文件</p>\n<p>copy [file1] [file2]</p>\n</blockquote>\n<h2 id=\"move\"><a href=\"#move\" class=\"headerlink\" title=\"move\"></a>move</h2><blockquote>\n<p>移动文件</p>\n<p>move [file] [directory]</p>\n<p>修改目录</p>\n<p>move [dir1] [dir2]</p>\n</blockquote>\n<h2 id=\"ren\"><a href=\"#ren\" class=\"headerlink\" title=\"ren\"></a>ren</h2><blockquote>\n<p>修改文件名字</p>\n<p>ren 1.txt 2.txt</p>\n</blockquote>\n<h2 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping 域名 /t     ...参数</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"net\"><a href=\"#net\" class=\"headerlink\" title=\"net\"></a>net</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md30465.8998462.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net share   ::查看共享命令</span><br><span class=\"line\">netstat -ano|findstr 3306</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md30833.0647414.png\"></p>\n<h2 id=\"type查看某个文件\"><a href=\"#type查看某个文件\" class=\"headerlink\" title=\"type查看某个文件\"></a>type查看某个文件</h2><h2 id=\"xcopy-复制\"><a href=\"#xcopy-复制\" class=\"headerlink\" title=\"xcopy 复制\"></a>xcopy 复制</h2><h2 id=\"taskkill\"><a href=\"#taskkill\" class=\"headerlink\" title=\"taskkill\"></a>taskkill</h2><h2 id=\"tasklist\"><a href=\"#tasklist\" class=\"headerlink\" title=\"tasklist\"></a>tasklist</h2><h2 id=\"reg\"><a href=\"#reg\" class=\"headerlink\" title=\"reg\"></a>reg</h2><h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md33990.2925189.png\"></p>\n<h2 id=\"date-time\"><a href=\"#date-time\" class=\"headerlink\" title=\"%date%  %time%\"></a>%date%  %time%</h2><h2 id=\"if-exist\"><a href=\"#if-exist\" class=\"headerlink\" title=\"if exist\"></a>if exist</h2><h2 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@echo off</span><br><span class=\"line\">for %%i in (1,2,3,4,5) do echo %%i</span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md34887.9539284.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md35092.5947733.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\bat.md35168.0603045.png\"></p>\n"},{"title":"java io操作","date":"2022-10-15T02:06:51.000Z","_content":"\n# File类\n\n## 创建文件，删除文件\n\n```java\nFile file=new File(\"C:\\\\1.txt\");\nfile.createNewFile();\nfile.delete();\n```\n\n## 创建文件夹\n\n```java\nfile.mkdir();\n```\n\n## 常用方法\n\n```java\n.getNmae();\n.length();//长度，汉字占两个字节，字母占一个字节\n.idDirectory();\n```\n\n> file类能将字符串封装成一个文件，来代表一个文件，供流使用\n\n# io流\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md112225.8044385.png)\n\n```java\nFile file=new File(\"C:\\\\1.txt\");\nString str=\"你好\";\nFileOutputStream fos = new FileOutputStream(file);\nfos.write(str.getBytes());//用append可以不用覆盖\nfos.close();\n```\n\n## 乱码问题\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md113308.6995954.png)\n\n## 复制文件\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md114167.4566158.png)\n\n```java\nString s1=\"c...\";\nString s2=\"d...\";\nFileInputStream fis = new FileInputStream(s1);\nFileOutputStream fos = new FileOutputStream(s2);\nint len=0;\nwhile ((len=fis.read())!=-1){\n    fos.write(len);\n}\nfis.close();\nfos.close();\n```\n\n## 加速版本bufferinputstream\n\n```java\nString s1=\"c...\";\nString s2=\"d...\";\nFileInputStream fis = new FileInputStream(s1);\nBufferedInputStream bis = new BufferedInputStream(fis);\nFileOutputStream fos = new FileOutputStream(s2);\nBufferedOutputStream bos = new BufferedOutputStream(fos);\nbyte[] bytes = new byte[1024];\nint len=0;\nwhile ((len=bis.read(bytes))!=-1){\n    bos.write(bytes,0,len);\n}\nbis.close();\nfis.close();\nfos.close();\nbos.close();\n```\n\n## 什么是序列化\n\n> 就是将对象流化，就是将对象变成字节\n\n## 读取文件内容\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nchar[] car=new char[1024];\nint len=0;\nwhile ((len=fr.read())!=-1){\n    System.out.println(String.valueOf((char)len));\n}\nfr.close();\n```\n\n## 字符流读取\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedReader br = new BufferedReader(fr,);\nString line=null;\nwhile ((line=br.readLine())!=null){\n    System.out.println(line);\n}\nfr.close();\n```\n\n# 字符流能操作文本，字节流能操作几乎任意\n\n```mindmap\n- io\n  - 字节\n    - fileinputstream\n    - 改乱码inputstreamreader\n    - bufferinputstream\n  - 字符\n    - filereader\n    - bufferedreader\n  \n```\n\n## 最终的读入文件解决办法\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nInputStreamReader isr = new InputStreamReader(fis, \"UTF-8\");\nBufferedReader br = new BufferedReader(isr);\nString s=null;\nwhile ((s=br.readLine())!=null){\n    System.out.println(s);\n}\nbr.close();\nisr.close();\nfis.close();\n```\n\n> 走的时候用车，来的时候没有车\n","source":"_posts/编程语言/java/io.md","raw":"---\ntitle: 'java io操作'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: java\n---\n\n# File类\n\n## 创建文件，删除文件\n\n```java\nFile file=new File(\"C:\\\\1.txt\");\nfile.createNewFile();\nfile.delete();\n```\n\n## 创建文件夹\n\n```java\nfile.mkdir();\n```\n\n## 常用方法\n\n```java\n.getNmae();\n.length();//长度，汉字占两个字节，字母占一个字节\n.idDirectory();\n```\n\n> file类能将字符串封装成一个文件，来代表一个文件，供流使用\n\n# io流\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md112225.8044385.png)\n\n```java\nFile file=new File(\"C:\\\\1.txt\");\nString str=\"你好\";\nFileOutputStream fos = new FileOutputStream(file);\nfos.write(str.getBytes());//用append可以不用覆盖\nfos.close();\n```\n\n## 乱码问题\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md113308.6995954.png)\n\n## 复制文件\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\io.md114167.4566158.png)\n\n```java\nString s1=\"c...\";\nString s2=\"d...\";\nFileInputStream fis = new FileInputStream(s1);\nFileOutputStream fos = new FileOutputStream(s2);\nint len=0;\nwhile ((len=fis.read())!=-1){\n    fos.write(len);\n}\nfis.close();\nfos.close();\n```\n\n## 加速版本bufferinputstream\n\n```java\nString s1=\"c...\";\nString s2=\"d...\";\nFileInputStream fis = new FileInputStream(s1);\nBufferedInputStream bis = new BufferedInputStream(fis);\nFileOutputStream fos = new FileOutputStream(s2);\nBufferedOutputStream bos = new BufferedOutputStream(fos);\nbyte[] bytes = new byte[1024];\nint len=0;\nwhile ((len=bis.read(bytes))!=-1){\n    bos.write(bytes,0,len);\n}\nbis.close();\nfis.close();\nfos.close();\nbos.close();\n```\n\n## 什么是序列化\n\n> 就是将对象流化，就是将对象变成字节\n\n## 读取文件内容\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nchar[] car=new char[1024];\nint len=0;\nwhile ((len=fr.read())!=-1){\n    System.out.println(String.valueOf((char)len));\n}\nfr.close();\n```\n\n## 字符流读取\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedReader br = new BufferedReader(fr,);\nString line=null;\nwhile ((line=br.readLine())!=null){\n    System.out.println(line);\n}\nfr.close();\n```\n\n# 字符流能操作文本，字节流能操作几乎任意\n\n```mindmap\n- io\n  - 字节\n    - fileinputstream\n    - 改乱码inputstreamreader\n    - bufferinputstream\n  - 字符\n    - filereader\n    - bufferedreader\n  \n```\n\n## 最终的读入文件解决办法\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nInputStreamReader isr = new InputStreamReader(fis, \"UTF-8\");\nBufferedReader br = new BufferedReader(isr);\nString s=null;\nwhile ((s=br.readLine())!=null){\n    System.out.println(s);\n}\nbr.close();\nisr.close();\nfis.close();\n```\n\n> 走的时候用车，来的时候没有车\n","slug":"编程语言/java/io","published":1,"updated":"2023-03-21T09:24:29.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7b003ho8hu47lra96o","content":"<h1 id=\"File类\"><a href=\"#File类\" class=\"headerlink\" title=\"File类\"></a>File类</h1><h2 id=\"创建文件，删除文件\"><a href=\"#创建文件，删除文件\" class=\"headerlink\" title=\"创建文件，删除文件\"></a>创建文件，删除文件</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File file=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;C:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">file.createNewFile();</span><br><span class=\"line\">file.delete();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file.mkdir();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.getNmae();</span><br><span class=\"line\">.length();<span class=\"comment\">//长度，汉字占两个字节，字母占一个字节</span></span><br><span class=\"line\">.idDirectory();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>file类能将字符串封装成一个文件，来代表一个文件，供流使用</p>\n</blockquote>\n<h1 id=\"io流\"><a href=\"#io流\" class=\"headerlink\" title=\"io流\"></a>io流</h1><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md112225.8044385.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File file=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;C:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">String str=<span class=\"string\">&quot;你好&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(file);</span><br><span class=\"line\">fos.write(str.getBytes());<span class=\"comment\">//用append可以不用覆盖</span></span><br><span class=\"line\">fos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"乱码问题\"><a href=\"#乱码问题\" class=\"headerlink\" title=\"乱码问题\"></a>乱码问题</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md113308.6995954.png\"></p>\n<h2 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md114167.4566158.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1=<span class=\"string\">&quot;c...&quot;</span>;</span><br><span class=\"line\">String s2=<span class=\"string\">&quot;d...&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(s1);</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(s2);</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=fis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    fos.write(len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br><span class=\"line\">fos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加速版本bufferinputstream\"><a href=\"#加速版本bufferinputstream\" class=\"headerlink\" title=\"加速版本bufferinputstream\"></a>加速版本bufferinputstream</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1=<span class=\"string\">&quot;c...&quot;</span>;</span><br><span class=\"line\">String s2=<span class=\"string\">&quot;d...&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(s1);</span><br><span class=\"line\"><span class=\"type\">BufferedInputStream</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedInputStream</span>(fis);</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(s2);</span><br><span class=\"line\"><span class=\"type\">BufferedOutputStream</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedOutputStream</span>(fos);</span><br><span class=\"line\"><span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=bis.read(bytes))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    bos.write(bytes,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">bis.close();</span><br><span class=\"line\">fis.close();</span><br><span class=\"line\">fos.close();</span><br><span class=\"line\">bos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"什么是序列化\"><a href=\"#什么是序列化\" class=\"headerlink\" title=\"什么是序列化\"></a>什么是序列化</h2><blockquote>\n<p>就是将对象流化，就是将对象变成字节</p>\n</blockquote>\n<h2 id=\"读取文件内容\"><a href=\"#读取文件内容\" class=\"headerlink\" title=\"读取文件内容\"></a>读取文件内容</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">char</span>[] car=<span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=fr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println(String.valueOf((<span class=\"type\">char</span>)len));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符流读取\"><a href=\"#字符流读取\" class=\"headerlink\" title=\"字符流读取\"></a>字符流读取</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(fr,);</span><br><span class=\"line\">String line=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((line=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(line);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字符流能操作文本，字节流能操作几乎任意\"><a href=\"#字符流能操作文本，字节流能操作几乎任意\" class=\"headerlink\" title=\"字符流能操作文本，字节流能操作几乎任意\"></a>字符流能操作文本，字节流能操作几乎任意</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- io</span><br><span class=\"line\">  - 字节</span><br><span class=\"line\">    - fileinputstream</span><br><span class=\"line\">    - 改乱码inputstreamreader</span><br><span class=\"line\">    - bufferinputstream</span><br><span class=\"line\">  - 字符</span><br><span class=\"line\">    - filereader</span><br><span class=\"line\">    - bufferedreader</span><br><span class=\"line\">  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最终的读入文件解决办法\"><a href=\"#最终的读入文件解决办法\" class=\"headerlink\" title=\"最终的读入文件解决办法\"></a>最终的读入文件解决办法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">InputStreamReader</span> <span class=\"variable\">isr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(fis, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(isr);</span><br><span class=\"line\">String s=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((s=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">br.close();</span><br><span class=\"line\">isr.close();</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>走的时候用车，来的时候没有车</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"File类\"><a href=\"#File类\" class=\"headerlink\" title=\"File类\"></a>File类</h1><h2 id=\"创建文件，删除文件\"><a href=\"#创建文件，删除文件\" class=\"headerlink\" title=\"创建文件，删除文件\"></a>创建文件，删除文件</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File file=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;C:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">file.createNewFile();</span><br><span class=\"line\">file.delete();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file.mkdir();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.getNmae();</span><br><span class=\"line\">.length();<span class=\"comment\">//长度，汉字占两个字节，字母占一个字节</span></span><br><span class=\"line\">.idDirectory();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>file类能将字符串封装成一个文件，来代表一个文件，供流使用</p>\n</blockquote>\n<h1 id=\"io流\"><a href=\"#io流\" class=\"headerlink\" title=\"io流\"></a>io流</h1><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md112225.8044385.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File file=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;C:\\\\1.txt&quot;</span>);</span><br><span class=\"line\">String str=<span class=\"string\">&quot;你好&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(file);</span><br><span class=\"line\">fos.write(str.getBytes());<span class=\"comment\">//用append可以不用覆盖</span></span><br><span class=\"line\">fos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"乱码问题\"><a href=\"#乱码问题\" class=\"headerlink\" title=\"乱码问题\"></a>乱码问题</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md113308.6995954.png\"></p>\n<h2 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\io.md114167.4566158.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1=<span class=\"string\">&quot;c...&quot;</span>;</span><br><span class=\"line\">String s2=<span class=\"string\">&quot;d...&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(s1);</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(s2);</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=fis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    fos.write(len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br><span class=\"line\">fos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加速版本bufferinputstream\"><a href=\"#加速版本bufferinputstream\" class=\"headerlink\" title=\"加速版本bufferinputstream\"></a>加速版本bufferinputstream</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s1=<span class=\"string\">&quot;c...&quot;</span>;</span><br><span class=\"line\">String s2=<span class=\"string\">&quot;d...&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(s1);</span><br><span class=\"line\"><span class=\"type\">BufferedInputStream</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedInputStream</span>(fis);</span><br><span class=\"line\"><span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(s2);</span><br><span class=\"line\"><span class=\"type\">BufferedOutputStream</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedOutputStream</span>(fos);</span><br><span class=\"line\"><span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=bis.read(bytes))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    bos.write(bytes,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">bis.close();</span><br><span class=\"line\">fis.close();</span><br><span class=\"line\">fos.close();</span><br><span class=\"line\">bos.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"什么是序列化\"><a href=\"#什么是序列化\" class=\"headerlink\" title=\"什么是序列化\"></a>什么是序列化</h2><blockquote>\n<p>就是将对象流化，就是将对象变成字节</p>\n</blockquote>\n<h2 id=\"读取文件内容\"><a href=\"#读取文件内容\" class=\"headerlink\" title=\"读取文件内容\"></a>读取文件内容</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">char</span>[] car=<span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((len=fr.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println(String.valueOf((<span class=\"type\">char</span>)len));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符流读取\"><a href=\"#字符流读取\" class=\"headerlink\" title=\"字符流读取\"></a>字符流读取</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(fr,);</span><br><span class=\"line\">String line=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((line=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(line);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字符流能操作文本，字节流能操作几乎任意\"><a href=\"#字符流能操作文本，字节流能操作几乎任意\" class=\"headerlink\" title=\"字符流能操作文本，字节流能操作几乎任意\"></a>字符流能操作文本，字节流能操作几乎任意</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- io</span><br><span class=\"line\">  - 字节</span><br><span class=\"line\">    - fileinputstream</span><br><span class=\"line\">    - 改乱码inputstreamreader</span><br><span class=\"line\">    - bufferinputstream</span><br><span class=\"line\">  - 字符</span><br><span class=\"line\">    - filereader</span><br><span class=\"line\">    - bufferedreader</span><br><span class=\"line\">  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最终的读入文件解决办法\"><a href=\"#最终的读入文件解决办法\" class=\"headerlink\" title=\"最终的读入文件解决办法\"></a>最终的读入文件解决办法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">InputStreamReader</span> <span class=\"variable\">isr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(fis, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(isr);</span><br><span class=\"line\">String s=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ((s=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">br.close();</span><br><span class=\"line\">isr.close();</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>走的时候用车，来的时候没有车</p>\n</blockquote>\n"},{"title":"数据库小思考","date":"2022-10-15T02:06:51.000Z","_content":"\n## 数据库设计\n\n- 多的对一和一对多，和多对多\n- 多对一则设计两个表\n- 多对多则设计三个表\n\n```mindmap\n- 人\n  - 多个文章\n    - 多个评论\n```\n\n\n\n| id | name | password |\n| ---- | ------ | ---------- |\n| 1  | xxx  | sss      |\n| 2  | xxx  | sss      |\n\n\n| id | title | content |\n| ---- | ------- | --------- |\n| 1  | xx    | xxxx    |\n| 2  | xxx   | xxxx    |\n\n\n| id | time | content |\n| ---- | ------ | --------- |\n| 1  | xx   | xx      |\n| 2  | xxxx | xxx     |\n","source":"_posts/编程语言/java/数据库.md","raw":"---\ntitle: '数据库小思考'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: java\n---\n\n## 数据库设计\n\n- 多的对一和一对多，和多对多\n- 多对一则设计两个表\n- 多对多则设计三个表\n\n```mindmap\n- 人\n  - 多个文章\n    - 多个评论\n```\n\n\n\n| id | name | password |\n| ---- | ------ | ---------- |\n| 1  | xxx  | sss      |\n| 2  | xxx  | sss      |\n\n\n| id | title | content |\n| ---- | ------- | --------- |\n| 1  | xx    | xxxx    |\n| 2  | xxx   | xxxx    |\n\n\n| id | time | content |\n| ---- | ------ | --------- |\n| 1  | xx   | xx      |\n| 2  | xxxx | xxx     |\n","slug":"编程语言/java/数据库","published":1,"updated":"2023-03-21T09:25:47.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7c003mo8hud8awbskg","content":"<h2 id=\"数据库设计\"><a href=\"#数据库设计\" class=\"headerlink\" title=\"数据库设计\"></a>数据库设计</h2><ul>\n<li>多的对一和一对多，和多对多</li>\n<li>多对一则设计两个表</li>\n<li>多对多则设计三个表</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 人</span><br><span class=\"line\">  - 多个文章</span><br><span class=\"line\">    - 多个评论</span><br></pre></td></tr></table></figure>\n\n\n\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>name</th>\n<th>password</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xxx</td>\n<td>sss</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxx</td>\n<td>sss</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xx</td>\n<td>xxxx</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxx</td>\n<td>xxxx</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>time</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xx</td>\n<td>xx</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxxx</td>\n<td>xxx</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据库设计\"><a href=\"#数据库设计\" class=\"headerlink\" title=\"数据库设计\"></a>数据库设计</h2><ul>\n<li>多的对一和一对多，和多对多</li>\n<li>多对一则设计两个表</li>\n<li>多对多则设计三个表</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 人</span><br><span class=\"line\">  - 多个文章</span><br><span class=\"line\">    - 多个评论</span><br></pre></td></tr></table></figure>\n\n\n\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>name</th>\n<th>password</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xxx</td>\n<td>sss</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxx</td>\n<td>sss</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xx</td>\n<td>xxxx</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxx</td>\n<td>xxxx</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>time</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>xx</td>\n<td>xx</td>\n</tr>\n<tr>\n<td>2</td>\n<td>xxxx</td>\n<td>xxx</td>\n</tr>\n</tbody></table>\n"},{"title":"vue3问题","date":"2022-10-15T02:06:51.000Z","_content":"\n## 问题\n\n1. h函数和ref函数的作用\n2. vue2和vue3响应式原理\n3. setup执行周期\n4. 怎么在setup接收父组件信息\n5. setup计算属性\n6. watch\n7. vue3生命周期\n8. 自定义hook\n9. toref\n10. shallowReactive,shallowRef\n11. provide,inject\n12. isref，isreadonly，isproxy\n13. fragment，teleport\n14. transform\n15. defineasynccomponent ， suspense\n16. directive\n17. 全局api\n\n## 答案\n\n1. h函数接受标签和内容，返回dom，可以覆盖页面的template，ref可以将数据变为响应式的数据，修改之后页面刷新，ref帮你管理\n\n   ```js\n   setup(){\n       return () => h('h1','pkq')\n     }\n   ```\n2. 一个是object.defineproperty一个是proxy传入对象和配置proxy能接收到源对象和操作属性，新增deleteproperty set增加,底层使用reflect因为reflect可以返回一个函数判断是否成功，方便我们操作，而不需要用try，catch这种繁杂的操作\n\n   ```js\n   let obj = {\n         name:\"张三\",\n         age:12\n       }\n       let o = {}\n       Object.defineProperty(o,'name',{\n         set(val){\n           obj.name = val\n         },\n         get(){\n           return obj.name\n         }\n       })\n       let newObj = new Proxy(obj,{\n         set(target, prop, val){\n           console.log(\"set\");\n           target[prop] = val\n         },\n         get(target, prop){\n           console.log(\"get\");\n           return target[prop]\n         },\n         deleteProperty(target, prop){\n           console.log(\"delete\");\n           return delete target[prop]\n         }\n       })\n   ```\n3. 在beforecreate生命周期之前执行一次，this是undefined，也就是说你用不了this\n4. props定义数组之后传入props对象\n5. 传入computed之后传入函数返回值，或者传入对象和get与set方法返回设置新值\n6. watch(变量，（new,old）=>{变量逻辑},{immediate:true,deep:true})，但是reacttive无法接收旧对象\n7. setup，onbeforemount，onmount，onbeforeupdate，onbeforeupdate，onbforeunmount，onunmount\n8. 核心就是逻辑复用，将逻辑封装到一个文件或者函数里，暴露最终需要响应式的对象给setup就可以了\n9. toref将数据变为响应式，ref返回新的响应式数据，给新数据添加get set方法，toref是在原数据添加set和get方法，返回新的对象一个是用自己建的一个是new的，toref（val，'name'） ...torefs(person)\n10. 将第一层对象变为响应式，shallowref只能传入对象\n11. provide传入k-v数据，inject可以get provide属性\n12. fragment碎片化节点，teleport闪现传送，到别的任意属性to(选择器)\n13.\n14. translate(-50%,-50%)\n15. 异步引入，先出来的先引入，不需要等全出来后引入，不会被阻塞，传入箭头函数引入，suspense可以给异步引入腾出空间，有点像switch\n16. app.directive('名字',{钩子和钩子函数  insert:el=>el.focus()})\n17. 可以混入，可以directive，可以use，mixin，prototype ，config.globalproperties\n","source":"_posts/前端/学习/vue3/尚桂谷.md","raw":"---\ntitle: 'vue3问题'\ndate: 2022-10-15 10:06:51\ntags: 练习\ncategories: 前端\n---\n\n## 问题\n\n1. h函数和ref函数的作用\n2. vue2和vue3响应式原理\n3. setup执行周期\n4. 怎么在setup接收父组件信息\n5. setup计算属性\n6. watch\n7. vue3生命周期\n8. 自定义hook\n9. toref\n10. shallowReactive,shallowRef\n11. provide,inject\n12. isref，isreadonly，isproxy\n13. fragment，teleport\n14. transform\n15. defineasynccomponent ， suspense\n16. directive\n17. 全局api\n\n## 答案\n\n1. h函数接受标签和内容，返回dom，可以覆盖页面的template，ref可以将数据变为响应式的数据，修改之后页面刷新，ref帮你管理\n\n   ```js\n   setup(){\n       return () => h('h1','pkq')\n     }\n   ```\n2. 一个是object.defineproperty一个是proxy传入对象和配置proxy能接收到源对象和操作属性，新增deleteproperty set增加,底层使用reflect因为reflect可以返回一个函数判断是否成功，方便我们操作，而不需要用try，catch这种繁杂的操作\n\n   ```js\n   let obj = {\n         name:\"张三\",\n         age:12\n       }\n       let o = {}\n       Object.defineProperty(o,'name',{\n         set(val){\n           obj.name = val\n         },\n         get(){\n           return obj.name\n         }\n       })\n       let newObj = new Proxy(obj,{\n         set(target, prop, val){\n           console.log(\"set\");\n           target[prop] = val\n         },\n         get(target, prop){\n           console.log(\"get\");\n           return target[prop]\n         },\n         deleteProperty(target, prop){\n           console.log(\"delete\");\n           return delete target[prop]\n         }\n       })\n   ```\n3. 在beforecreate生命周期之前执行一次，this是undefined，也就是说你用不了this\n4. props定义数组之后传入props对象\n5. 传入computed之后传入函数返回值，或者传入对象和get与set方法返回设置新值\n6. watch(变量，（new,old）=>{变量逻辑},{immediate:true,deep:true})，但是reacttive无法接收旧对象\n7. setup，onbeforemount，onmount，onbeforeupdate，onbeforeupdate，onbforeunmount，onunmount\n8. 核心就是逻辑复用，将逻辑封装到一个文件或者函数里，暴露最终需要响应式的对象给setup就可以了\n9. toref将数据变为响应式，ref返回新的响应式数据，给新数据添加get set方法，toref是在原数据添加set和get方法，返回新的对象一个是用自己建的一个是new的，toref（val，'name'） ...torefs(person)\n10. 将第一层对象变为响应式，shallowref只能传入对象\n11. provide传入k-v数据，inject可以get provide属性\n12. fragment碎片化节点，teleport闪现传送，到别的任意属性to(选择器)\n13.\n14. translate(-50%,-50%)\n15. 异步引入，先出来的先引入，不需要等全出来后引入，不会被阻塞，传入箭头函数引入，suspense可以给异步引入腾出空间，有点像switch\n16. app.directive('名字',{钩子和钩子函数  insert:el=>el.focus()})\n17. 可以混入，可以directive，可以use，mixin，prototype ，config.globalproperties\n","slug":"前端/学习/vue3/尚桂谷","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7d003oo8hu2uipbg1r","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li>h函数和ref函数的作用</li>\n<li>vue2和vue3响应式原理</li>\n<li>setup执行周期</li>\n<li>怎么在setup接收父组件信息</li>\n<li>setup计算属性</li>\n<li>watch</li>\n<li>vue3生命周期</li>\n<li>自定义hook</li>\n<li>toref</li>\n<li>shallowReactive,shallowRef</li>\n<li>provide,inject</li>\n<li>isref，isreadonly，isproxy</li>\n<li>fragment，teleport</li>\n<li>transform</li>\n<li>defineasynccomponent ， suspense</li>\n<li>directive</li>\n<li>全局api</li>\n</ol>\n<h2 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h2><ol>\n<li><p>h函数接受标签和内容，返回dom，可以覆盖页面的template，ref可以将数据变为响应式的数据，修改之后页面刷新，ref帮你管理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setup</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"string\">&#x27;h1&#x27;</span>,<span class=\"string\">&#x27;pkq&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>一个是object.defineproperty一个是proxy传入对象和配置proxy能接收到源对象和操作属性，新增deleteproperty set增加,底层使用reflect因为reflect可以返回一个函数判断是否成功，方便我们操作，而不需要用try，catch这种繁杂的操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>:<span class=\"string\">&quot;张三&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">age</span>:<span class=\"number\">12</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> o = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(o,<span class=\"string\">&#x27;name&#x27;</span>,&#123;</span><br><span class=\"line\">      <span class=\"title function_\">set</span>(<span class=\"params\">val</span>)&#123;</span><br><span class=\"line\">        obj.<span class=\"property\">name</span> = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj.<span class=\"property\">name</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newObj = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(obj,&#123;</span><br><span class=\"line\">      <span class=\"title function_\">set</span>(<span class=\"params\">target, prop, val</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;set&quot;</span>);</span><br><span class=\"line\">        target[prop] = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">get</span>(<span class=\"params\">target, prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;get&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> target[prop]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">deleteProperty</span>(<span class=\"params\">target, prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;delete&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">delete</span> target[prop]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>在beforecreate生命周期之前执行一次，this是undefined，也就是说你用不了this</p>\n</li>\n<li><p>props定义数组之后传入props对象</p>\n</li>\n<li><p>传入computed之后传入函数返回值，或者传入对象和get与set方法返回设置新值</p>\n</li>\n<li><p>watch(变量，（new,old）=&gt;{变量逻辑},{immediate:true,deep:true})，但是reacttive无法接收旧对象</p>\n</li>\n<li><p>setup，onbeforemount，onmount，onbeforeupdate，onbeforeupdate，onbforeunmount，onunmount</p>\n</li>\n<li><p>核心就是逻辑复用，将逻辑封装到一个文件或者函数里，暴露最终需要响应式的对象给setup就可以了</p>\n</li>\n<li><p>toref将数据变为响应式，ref返回新的响应式数据，给新数据添加get set方法，toref是在原数据添加set和get方法，返回新的对象一个是用自己建的一个是new的，toref（val，’name’） …torefs(person)</p>\n</li>\n<li><p>将第一层对象变为响应式，shallowref只能传入对象</p>\n</li>\n<li><p>provide传入k-v数据，inject可以get provide属性</p>\n</li>\n<li><p>fragment碎片化节点，teleport闪现传送，到别的任意属性to(选择器)</p>\n</li>\n<li></li>\n<li><p>translate(-50%,-50%)</p>\n</li>\n<li><p>异步引入，先出来的先引入，不需要等全出来后引入，不会被阻塞，传入箭头函数引入，suspense可以给异步引入腾出空间，有点像switch</p>\n</li>\n<li><p>app.directive(‘名字’,{钩子和钩子函数  insert:el=&gt;el.focus()})</p>\n</li>\n<li><p>可以混入，可以directive，可以use，mixin，prototype ，config.globalproperties</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li>h函数和ref函数的作用</li>\n<li>vue2和vue3响应式原理</li>\n<li>setup执行周期</li>\n<li>怎么在setup接收父组件信息</li>\n<li>setup计算属性</li>\n<li>watch</li>\n<li>vue3生命周期</li>\n<li>自定义hook</li>\n<li>toref</li>\n<li>shallowReactive,shallowRef</li>\n<li>provide,inject</li>\n<li>isref，isreadonly，isproxy</li>\n<li>fragment，teleport</li>\n<li>transform</li>\n<li>defineasynccomponent ， suspense</li>\n<li>directive</li>\n<li>全局api</li>\n</ol>\n<h2 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h2><ol>\n<li><p>h函数接受标签和内容，返回dom，可以覆盖页面的template，ref可以将数据变为响应式的数据，修改之后页面刷新，ref帮你管理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setup</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> <span class=\"title function_\">h</span>(<span class=\"string\">&#x27;h1&#x27;</span>,<span class=\"string\">&#x27;pkq&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>一个是object.defineproperty一个是proxy传入对象和配置proxy能接收到源对象和操作属性，新增deleteproperty set增加,底层使用reflect因为reflect可以返回一个函数判断是否成功，方便我们操作，而不需要用try，catch这种繁杂的操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>:<span class=\"string\">&quot;张三&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">age</span>:<span class=\"number\">12</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> o = &#123;&#125;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(o,<span class=\"string\">&#x27;name&#x27;</span>,&#123;</span><br><span class=\"line\">      <span class=\"title function_\">set</span>(<span class=\"params\">val</span>)&#123;</span><br><span class=\"line\">        obj.<span class=\"property\">name</span> = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj.<span class=\"property\">name</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newObj = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(obj,&#123;</span><br><span class=\"line\">      <span class=\"title function_\">set</span>(<span class=\"params\">target, prop, val</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;set&quot;</span>);</span><br><span class=\"line\">        target[prop] = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">get</span>(<span class=\"params\">target, prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;get&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> target[prop]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">deleteProperty</span>(<span class=\"params\">target, prop</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;delete&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">delete</span> target[prop]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>在beforecreate生命周期之前执行一次，this是undefined，也就是说你用不了this</p>\n</li>\n<li><p>props定义数组之后传入props对象</p>\n</li>\n<li><p>传入computed之后传入函数返回值，或者传入对象和get与set方法返回设置新值</p>\n</li>\n<li><p>watch(变量，（new,old）=&gt;{变量逻辑},{immediate:true,deep:true})，但是reacttive无法接收旧对象</p>\n</li>\n<li><p>setup，onbeforemount，onmount，onbeforeupdate，onbeforeupdate，onbforeunmount，onunmount</p>\n</li>\n<li><p>核心就是逻辑复用，将逻辑封装到一个文件或者函数里，暴露最终需要响应式的对象给setup就可以了</p>\n</li>\n<li><p>toref将数据变为响应式，ref返回新的响应式数据，给新数据添加get set方法，toref是在原数据添加set和get方法，返回新的对象一个是用自己建的一个是new的，toref（val，’name’） …torefs(person)</p>\n</li>\n<li><p>将第一层对象变为响应式，shallowref只能传入对象</p>\n</li>\n<li><p>provide传入k-v数据，inject可以get provide属性</p>\n</li>\n<li><p>fragment碎片化节点，teleport闪现传送，到别的任意属性to(选择器)</p>\n</li>\n<li></li>\n<li><p>translate(-50%,-50%)</p>\n</li>\n<li><p>异步引入，先出来的先引入，不需要等全出来后引入，不会被阻塞，传入箭头函数引入，suspense可以给异步引入腾出空间，有点像switch</p>\n</li>\n<li><p>app.directive(‘名字’,{钩子和钩子函数  insert:el=&gt;el.focus()})</p>\n</li>\n<li><p>可以混入，可以directive，可以use，mixin，prototype ，config.globalproperties</p>\n</li>\n</ol>\n"},{"title":"io汇总","date":"2022-10-15T02:06:51.000Z","_content":"\n## 字节流输入\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nint len=0;\nwhile((len=fis.read())!=-1){\n    System.out.println((char) len);\n}\nfis.close();\n```\n\n## 缓冲字符流输入\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedInputStream bis = new BufferedInputStream(fis);\nbyte[] b=new byte[1024];\nint len=0;\nwhile((len=bis.read())!=-1){\n    System.out.println((char) len);\n}\nfis.close();\n```\n\n## 缓冲字符流输入\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedReader br = new BufferedReader(fr);\nString s=null;\nwhile((s=br.readLine())!=null){\n    System.out.println(s);\n}\nbr.close();\nfr.close();\n```\n\n> reader是读取字符的父类\n>\n> stream是读取字节的父类\n>\n> inputstreamreader是沟通字节与字符的桥梁\n","source":"_posts/编程语言/java/io汇总.md","raw":"---\ntitle: 'io汇总'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: java\n---\n\n## 字节流输入\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nint len=0;\nwhile((len=fis.read())!=-1){\n    System.out.println((char) len);\n}\nfis.close();\n```\n\n## 缓冲字符流输入\n\n```java\nFileInputStream fis = new FileInputStream(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedInputStream bis = new BufferedInputStream(fis);\nbyte[] b=new byte[1024];\nint len=0;\nwhile((len=bis.read())!=-1){\n    System.out.println((char) len);\n}\nfis.close();\n```\n\n## 缓冲字符流输入\n\n```java\nFileReader fr = new FileReader(\"C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt\");\nBufferedReader br = new BufferedReader(fr);\nString s=null;\nwhile((s=br.readLine())!=null){\n    System.out.println(s);\n}\nbr.close();\nfr.close();\n```\n\n> reader是读取字符的父类\n>\n> stream是读取字节的父类\n>\n> inputstreamreader是沟通字节与字符的桥梁\n","slug":"编程语言/java/io汇总","published":1,"updated":"2023-03-21T09:24:51.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7e003so8hufog070ik","content":"<h2 id=\"字节流输入\"><a href=\"#字节流输入\" class=\"headerlink\" title=\"字节流输入\"></a>字节流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((len=fis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println((<span class=\"type\">char</span>) len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"缓冲字符流输入\"><a href=\"#缓冲字符流输入\" class=\"headerlink\" title=\"缓冲字符流输入\"></a>缓冲字符流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedInputStream</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedInputStream</span>(fis);</span><br><span class=\"line\"><span class=\"type\">byte</span>[] b=<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((len=bis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println((<span class=\"type\">char</span>) len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"缓冲字符流输入-1\"><a href=\"#缓冲字符流输入-1\" class=\"headerlink\" title=\"缓冲字符流输入\"></a>缓冲字符流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(fr);</span><br><span class=\"line\">String s=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((s=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">br.close();</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>reader是读取字符的父类</p>\n<p>stream是读取字节的父类</p>\n<p>inputstreamreader是沟通字节与字符的桥梁</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"字节流输入\"><a href=\"#字节流输入\" class=\"headerlink\" title=\"字节流输入\"></a>字节流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((len=fis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println((<span class=\"type\">char</span>) len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"缓冲字符流输入\"><a href=\"#缓冲字符流输入\" class=\"headerlink\" title=\"缓冲字符流输入\"></a>缓冲字符流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedInputStream</span> <span class=\"variable\">bis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedInputStream</span>(fis);</span><br><span class=\"line\"><span class=\"type\">byte</span>[] b=<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((len=bis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println((<span class=\"type\">char</span>) len);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fis.close();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"缓冲字符流输入-1\"><a href=\"#缓冲字符流输入-1\" class=\"headerlink\" title=\"缓冲字符流输入\"></a>缓冲字符流输入</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">FileReader</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(<span class=\"string\">&quot;C:\\\\Personal\\\\Desktop\\\\自己做的游戏\\\\彩虹屁生成器\\\\1.txt&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(fr);</span><br><span class=\"line\">String s=<span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>((s=br.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">    System.out.println(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">br.close();</span><br><span class=\"line\">fr.close();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>reader是读取字符的父类</p>\n<p>stream是读取字节的父类</p>\n<p>inputstreamreader是沟通字节与字符的桥梁</p>\n</blockquote>\n"},{"title":"w3cschol","date":"2022-10-15T02:06:51.000Z","_content":"\n## 标题\n\n```html\n<span class=\"h1\">你好</span>\n<span class=\"h2\">这是标题</span>\n<span class=\"h3\">这是标题</span>\n<span class=\"h4\">这是标题</span>\n<span class=\"h5\">这是标题</span>\n<span class=\"h6\">这是标题</span>\n<h1>主标题<small>副标题</small></h1>\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md862.4771198.png)\n\n## 页面主体\n\n```html\nBootstrap 将页面主体设置默认为：\n\nfont-size:14px；\n\nline-height:20px\n\n<p>标签行高:10px\n\n颜色:#333；\n```\n\n## 文本类\n\n```html\n<p>Bootstrap 框架</p>\n<p class=\"lead\">Bootstrap 框架</p>\n<p>Bootstrap 框架</p>\n<p class=\"text-left\">Bootstrap 框架</p>\n<p class=\"text-justify\">Bootstrap 框架</p>\n<p class=\"text-lowercase\">小写hello WORLD</p>\n<p class=\"text-uppercase\">大写hello WORLD</p>\n<p class=\"text-capitalize\">首字母大写hello WORLD</p>\n```\n\n> 突出显示\n\n> 注：\n> text-left：向左对齐\n> text-right：向右对齐\n> text-center：居中对齐\n> text-justify：两端对齐\n\n## 略缩语\n\n```html\n<abbr title=\"World Wide Web\">WWW</abbr>\n<abbr title=\"World Wide Web\" class=\"initialism\">WWW</abbr>\n```\n\n## 引用文本\n\n```html\n<blockquote>\n    <p>Bootstrap 框架 - W3Cschool </p>\n</blockquote>\n```\n\n```html\n<!--实现右对齐-->\n<blockquote class=\"blockquote-reverse\">\n    <p>Bootstrap 框架 - W3Cschool </p>\n</blockquote>\n```\n\n## 列表样式\n\n![](https://www.w3cschool.cn/attachments/image/20190524/1558684098864274.png)\n\n## 显示代码\n\n> 用code或者pre\n\n## 表格\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md1746.5527591.png)\n\n```html\n<table class=\"table  table-bordered\">\n\n    <thead>\n\n    <tr>\n\n        <th>产品</th>\n\n        <th>付款日期</th>\n\n        <th>状态</th>\n\n    </tr>\n\n    </thead>\n\n    <tbody>\n\n    <tr>\n\n        <td>产品1</td>\n\n        <td>23/05/2019</td>\n\n        <td>待发货</td>\n\n    </tr>\n\n    <tr>\n\n        <td>产品2</td>\n\n        <td>13/05/2019</td>\n\n        <td>发货中</td>\n\n    </tr>\n\n    </tbody>\n\n</table>\n```\n\n## 表格状态类\n\n![QQ图片20190525140350](https://www.w3cschool.cn/attachments/image/20190525/1558764249596906.png)\n\n```html\n<table class=\"table table-hover table-bordered\">\n    <caption>表格布局</caption>\n    <thead>\n    <tr>\n        <th>产品</th>\n        <th>付款日期</th>\n        <th>状态</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"active\">\n        <td>产品1</td>\n        <td>23/05/2019</td>\n        <td>待发货</td>\n    </tr>\n    <tr class=\"success\">\n        <td>产品2</td>\n        <td>13/05/2019</td>\n        <td>发货中</td>\n    </tr>\n    <tr  class=\"warning\">\n        <td>产品3</td>\n        <td>23/02/2019</td>\n        <td>待确认</td>\n    </tr>\n\n    <tr  class=\"danger\">\n        <td>产品4</td>\n        <td>23/05/2018</td>\n        <td>已退货</td>\n    </tr>\n    </tbody>\n</table>\n```\n\n## 按钮\n\n```html\n<a href=\"###\" class=\"btn btn-default\">Link</a>\n<button class=\"btn btn-default\">Button</button>\n<input type=\"button\" class=\"btn btn-default\" value=\"input\">\n```\n\n> btn-default 默认样式        btn-success 成功样式\n> btn-warning 警告样式      btn-danger 危险样式\n> btn-primary 首选项样式   btn-link 链接样式  btn-info 信息样式\n\n```html\n<button type=\"button\" class=\"btn btn-default\">默认按钮</button>\n\n<button type=\"button\" class=\"btn btn-primary\">原始按钮</button>\n\n<!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 -->\n\n<button type=\"button\" class=\"btn btn-link\">链接按钮</button>\n\n<button type=\"button\" class=\"btn btn-success\">成功按钮</button>\n\n<button type=\"button\" class=\"btn btn-info\">信息按钮</button>\n\n<button type=\"button\" class=\"btn btn-warning\">警告按钮</button>\n\n<button type=\"button\" class=\"btn btn-danger\">危险按钮</button>\n```\n\n## 尺寸大小\n\n```html\n<button class=\"btn btn-lg\">Button</button>\n<button class=\"btn\">Button</button>\n<button class=\"btn btn-sm\">Button</button>\n<button class=\"btn btn-xs\">Button</button>\n```\n\n## 基本样式\n\n```html\n<body>\n\n<!-- 标准的按钮 -->\n<button type=\"button\" class=\"btn btn-default btn-lg\">大的默认按钮</button>\n<button type=\"button\" class=\"btn btn-default btn-lg active\">大的激活的默认按钮</button>\n\n<!-- 提供额外的视觉效果，标识一组按钮中的原始动作 -->\n<button type=\"button\" class=\"btn btn-primary btn-sm\">小的原始按钮</button>\n<!-- 表示一个成功的或积极的动作 -->\n<button type=\"button\" class=\"btn btn-success btn-xs\">特小的成功按钮</button>\n<!-- 信息警告消息的上下文按钮 -->\n<button type=\"button\" class=\"btn btn-info btn-lg btn-block\">块级的信息按钮</button>\n<!-- 表示应谨慎采取的动作 -->\n<button type=\"button\" class=\"btn btn-warning \">警告按钮</button>\n<!-- 表示一个危险的或潜在的负面动作 -->\n<button type=\"button\" class=\"btn btn-danger disabled\">禁用的危险按钮</button>\n<!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 -->\n<button type=\"button\" class=\"btn btn-link\">链接按钮</button>\n```\n\n## 栅格系统\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md2723.7273675.png)\n\n![12351521412412412421](https://www.w3cschool.cn/attachments/image/20190614/1560500254470961.png)\n","source":"_posts/前端/学习/BootStrap/w3cschol.md","raw":"---\ntitle: 'w3cschol'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: 前端\n---\n\n## 标题\n\n```html\n<span class=\"h1\">你好</span>\n<span class=\"h2\">这是标题</span>\n<span class=\"h3\">这是标题</span>\n<span class=\"h4\">这是标题</span>\n<span class=\"h5\">这是标题</span>\n<span class=\"h6\">这是标题</span>\n<h1>主标题<small>副标题</small></h1>\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md862.4771198.png)\n\n## 页面主体\n\n```html\nBootstrap 将页面主体设置默认为：\n\nfont-size:14px；\n\nline-height:20px\n\n<p>标签行高:10px\n\n颜色:#333；\n```\n\n## 文本类\n\n```html\n<p>Bootstrap 框架</p>\n<p class=\"lead\">Bootstrap 框架</p>\n<p>Bootstrap 框架</p>\n<p class=\"text-left\">Bootstrap 框架</p>\n<p class=\"text-justify\">Bootstrap 框架</p>\n<p class=\"text-lowercase\">小写hello WORLD</p>\n<p class=\"text-uppercase\">大写hello WORLD</p>\n<p class=\"text-capitalize\">首字母大写hello WORLD</p>\n```\n\n> 突出显示\n\n> 注：\n> text-left：向左对齐\n> text-right：向右对齐\n> text-center：居中对齐\n> text-justify：两端对齐\n\n## 略缩语\n\n```html\n<abbr title=\"World Wide Web\">WWW</abbr>\n<abbr title=\"World Wide Web\" class=\"initialism\">WWW</abbr>\n```\n\n## 引用文本\n\n```html\n<blockquote>\n    <p>Bootstrap 框架 - W3Cschool </p>\n</blockquote>\n```\n\n```html\n<!--实现右对齐-->\n<blockquote class=\"blockquote-reverse\">\n    <p>Bootstrap 框架 - W3Cschool </p>\n</blockquote>\n```\n\n## 列表样式\n\n![](https://www.w3cschool.cn/attachments/image/20190524/1558684098864274.png)\n\n## 显示代码\n\n> 用code或者pre\n\n## 表格\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md1746.5527591.png)\n\n```html\n<table class=\"table  table-bordered\">\n\n    <thead>\n\n    <tr>\n\n        <th>产品</th>\n\n        <th>付款日期</th>\n\n        <th>状态</th>\n\n    </tr>\n\n    </thead>\n\n    <tbody>\n\n    <tr>\n\n        <td>产品1</td>\n\n        <td>23/05/2019</td>\n\n        <td>待发货</td>\n\n    </tr>\n\n    <tr>\n\n        <td>产品2</td>\n\n        <td>13/05/2019</td>\n\n        <td>发货中</td>\n\n    </tr>\n\n    </tbody>\n\n</table>\n```\n\n## 表格状态类\n\n![QQ图片20190525140350](https://www.w3cschool.cn/attachments/image/20190525/1558764249596906.png)\n\n```html\n<table class=\"table table-hover table-bordered\">\n    <caption>表格布局</caption>\n    <thead>\n    <tr>\n        <th>产品</th>\n        <th>付款日期</th>\n        <th>状态</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"active\">\n        <td>产品1</td>\n        <td>23/05/2019</td>\n        <td>待发货</td>\n    </tr>\n    <tr class=\"success\">\n        <td>产品2</td>\n        <td>13/05/2019</td>\n        <td>发货中</td>\n    </tr>\n    <tr  class=\"warning\">\n        <td>产品3</td>\n        <td>23/02/2019</td>\n        <td>待确认</td>\n    </tr>\n\n    <tr  class=\"danger\">\n        <td>产品4</td>\n        <td>23/05/2018</td>\n        <td>已退货</td>\n    </tr>\n    </tbody>\n</table>\n```\n\n## 按钮\n\n```html\n<a href=\"###\" class=\"btn btn-default\">Link</a>\n<button class=\"btn btn-default\">Button</button>\n<input type=\"button\" class=\"btn btn-default\" value=\"input\">\n```\n\n> btn-default 默认样式        btn-success 成功样式\n> btn-warning 警告样式      btn-danger 危险样式\n> btn-primary 首选项样式   btn-link 链接样式  btn-info 信息样式\n\n```html\n<button type=\"button\" class=\"btn btn-default\">默认按钮</button>\n\n<button type=\"button\" class=\"btn btn-primary\">原始按钮</button>\n\n<!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 -->\n\n<button type=\"button\" class=\"btn btn-link\">链接按钮</button>\n\n<button type=\"button\" class=\"btn btn-success\">成功按钮</button>\n\n<button type=\"button\" class=\"btn btn-info\">信息按钮</button>\n\n<button type=\"button\" class=\"btn btn-warning\">警告按钮</button>\n\n<button type=\"button\" class=\"btn btn-danger\">危险按钮</button>\n```\n\n## 尺寸大小\n\n```html\n<button class=\"btn btn-lg\">Button</button>\n<button class=\"btn\">Button</button>\n<button class=\"btn btn-sm\">Button</button>\n<button class=\"btn btn-xs\">Button</button>\n```\n\n## 基本样式\n\n```html\n<body>\n\n<!-- 标准的按钮 -->\n<button type=\"button\" class=\"btn btn-default btn-lg\">大的默认按钮</button>\n<button type=\"button\" class=\"btn btn-default btn-lg active\">大的激活的默认按钮</button>\n\n<!-- 提供额外的视觉效果，标识一组按钮中的原始动作 -->\n<button type=\"button\" class=\"btn btn-primary btn-sm\">小的原始按钮</button>\n<!-- 表示一个成功的或积极的动作 -->\n<button type=\"button\" class=\"btn btn-success btn-xs\">特小的成功按钮</button>\n<!-- 信息警告消息的上下文按钮 -->\n<button type=\"button\" class=\"btn btn-info btn-lg btn-block\">块级的信息按钮</button>\n<!-- 表示应谨慎采取的动作 -->\n<button type=\"button\" class=\"btn btn-warning \">警告按钮</button>\n<!-- 表示一个危险的或潜在的负面动作 -->\n<button type=\"button\" class=\"btn btn-danger disabled\">禁用的危险按钮</button>\n<!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 -->\n<button type=\"button\" class=\"btn btn-link\">链接按钮</button>\n```\n\n## 栅格系统\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\w3cschol.md2723.7273675.png)\n\n![12351521412412412421](https://www.w3cschool.cn/attachments/image/20190614/1560500254470961.png)\n","slug":"前端/学习/BootStrap/w3cschol","published":1,"updated":"2023-03-21T09:15:22.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7f003vo8hub7kqb1fx","content":"<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h1&quot;</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h2&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h3&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h4&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h5&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h6&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>主标题<span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>副标题<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md862.4771198.png\"></p>\n<h2 id=\"页面主体\"><a href=\"#页面主体\" class=\"headerlink\" title=\"页面主体\"></a>页面主体</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bootstrap 将页面主体设置默认为：</span><br><span class=\"line\"></span><br><span class=\"line\">font-size:14px；</span><br><span class=\"line\"></span><br><span class=\"line\">line-height:20px</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>标签行高:10px</span><br><span class=\"line\"></span><br><span class=\"line\">颜色:#333；</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文本类\"><a href=\"#文本类\" class=\"headerlink\" title=\"文本类\"></a>文本类</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;lead&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-left&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-justify&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-lowercase&quot;</span>&gt;</span>小写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-uppercase&quot;</span>&gt;</span>大写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-capitalize&quot;</span>&gt;</span>首字母大写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>突出显示</p>\n</blockquote>\n<blockquote>\n<p>注：<br>text-left：向左对齐<br>text-right：向右对齐<br>text-center：居中对齐<br>text-justify：两端对齐</p>\n</blockquote>\n<h2 id=\"略缩语\"><a href=\"#略缩语\" class=\"headerlink\" title=\"略缩语\"></a>略缩语</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;World Wide Web&quot;</span>&gt;</span>WWW<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;World Wide Web&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;initialism&quot;</span>&gt;</span>WWW<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用文本\"><a href=\"#引用文本\" class=\"headerlink\" title=\"引用文本\"></a>引用文本</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架 - W3Cschool <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--实现右对齐--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;blockquote-reverse&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架 - W3Cschool <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表样式\"><a href=\"#列表样式\" class=\"headerlink\" title=\"列表样式\"></a>列表样式</h2><p><img src=\"https://www.w3cschool.cn/attachments/image/20190524/1558684098864274.png\"></p>\n<h2 id=\"显示代码\"><a href=\"#显示代码\" class=\"headerlink\" title=\"显示代码\"></a>显示代码</h2><blockquote>\n<p>用code或者pre</p>\n</blockquote>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md1746.5527591.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table  table-bordered&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>产品<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>付款日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待发货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>13/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>发货中<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"表格状态类\"><a href=\"#表格状态类\" class=\"headerlink\" title=\"表格状态类\"></a>表格状态类</h2><p><img src=\"https://www.w3cschool.cn/attachments/image/20190525/1558764249596906.png\" alt=\"QQ图片20190525140350\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table table-hover table-bordered&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>表格布局<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>产品<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>付款日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待发货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;success&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>13/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>发货中<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>  <span class=\"attr\">class</span>=<span class=\"string\">&quot;warning&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/02/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待确认<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>  <span class=\"attr\">class</span>=<span class=\"string\">&quot;danger&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2018<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>已退货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>Link<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>btn-default 默认样式        btn-success 成功样式<br>btn-warning 警告样式      btn-danger 危险样式<br>btn-primary 首选项样式   btn-link 链接样式  btn-info 信息样式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>原始按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-link&quot;</span>&gt;</span>链接按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success&quot;</span>&gt;</span>成功按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info&quot;</span>&gt;</span>信息按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger&quot;</span>&gt;</span>危险按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"尺寸大小\"><a href=\"#尺寸大小\" class=\"headerlink\" title=\"尺寸大小\"></a>尺寸大小</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-lg&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-sm&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-xs&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本样式\"><a href=\"#基本样式\" class=\"headerlink\" title=\"基本样式\"></a>基本样式</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 标准的按钮 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default btn-lg&quot;</span>&gt;</span>大的默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default btn-lg active&quot;</span>&gt;</span>大的激活的默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 提供额外的视觉效果，标识一组按钮中的原始动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary btn-sm&quot;</span>&gt;</span>小的原始按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示一个成功的或积极的动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success btn-xs&quot;</span>&gt;</span>特小的成功按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 信息警告消息的上下文按钮 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info btn-lg btn-block&quot;</span>&gt;</span>块级的信息按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示应谨慎采取的动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning &quot;</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示一个危险的或潜在的负面动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger disabled&quot;</span>&gt;</span>禁用的危险按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-link&quot;</span>&gt;</span>链接按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"栅格系统\"><a href=\"#栅格系统\" class=\"headerlink\" title=\"栅格系统\"></a>栅格系统</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md2723.7273675.png\"></p>\n<p><img src=\"https://www.w3cschool.cn/attachments/image/20190614/1560500254470961.png\" alt=\"12351521412412412421\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h1&quot;</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h2&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h3&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h4&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h5&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h6&quot;</span>&gt;</span>这是标题<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>主标题<span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>副标题<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md862.4771198.png\"></p>\n<h2 id=\"页面主体\"><a href=\"#页面主体\" class=\"headerlink\" title=\"页面主体\"></a>页面主体</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bootstrap 将页面主体设置默认为：</span><br><span class=\"line\"></span><br><span class=\"line\">font-size:14px；</span><br><span class=\"line\"></span><br><span class=\"line\">line-height:20px</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>标签行高:10px</span><br><span class=\"line\"></span><br><span class=\"line\">颜色:#333；</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文本类\"><a href=\"#文本类\" class=\"headerlink\" title=\"文本类\"></a>文本类</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;lead&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-left&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-justify&quot;</span>&gt;</span>Bootstrap 框架<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-lowercase&quot;</span>&gt;</span>小写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-uppercase&quot;</span>&gt;</span>大写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-capitalize&quot;</span>&gt;</span>首字母大写hello WORLD<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>突出显示</p>\n</blockquote>\n<blockquote>\n<p>注：<br>text-left：向左对齐<br>text-right：向右对齐<br>text-center：居中对齐<br>text-justify：两端对齐</p>\n</blockquote>\n<h2 id=\"略缩语\"><a href=\"#略缩语\" class=\"headerlink\" title=\"略缩语\"></a>略缩语</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;World Wide Web&quot;</span>&gt;</span>WWW<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;World Wide Web&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;initialism&quot;</span>&gt;</span>WWW<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用文本\"><a href=\"#引用文本\" class=\"headerlink\" title=\"引用文本\"></a>引用文本</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架 - W3Cschool <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--实现右对齐--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;blockquote-reverse&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Bootstrap 框架 - W3Cschool <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表样式\"><a href=\"#列表样式\" class=\"headerlink\" title=\"列表样式\"></a>列表样式</h2><p><img src=\"https://www.w3cschool.cn/attachments/image/20190524/1558684098864274.png\"></p>\n<h2 id=\"显示代码\"><a href=\"#显示代码\" class=\"headerlink\" title=\"显示代码\"></a>显示代码</h2><blockquote>\n<p>用code或者pre</p>\n</blockquote>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md1746.5527591.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table  table-bordered&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>产品<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>付款日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待发货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>13/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>发货中<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"表格状态类\"><a href=\"#表格状态类\" class=\"headerlink\" title=\"表格状态类\"></a>表格状态类</h2><p><img src=\"https://www.w3cschool.cn/attachments/image/20190525/1558764249596906.png\" alt=\"QQ图片20190525140350\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table table-hover table-bordered&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>表格布局<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>产品<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>付款日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待发货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;success&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>13/05/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>发货中<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>  <span class=\"attr\">class</span>=<span class=\"string\">&quot;warning&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/02/2019<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>待确认<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>  <span class=\"attr\">class</span>=<span class=\"string\">&quot;danger&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>产品4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23/05/2018<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>已退货<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;###&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>Link<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>btn-default 默认样式        btn-success 成功样式<br>btn-warning 警告样式      btn-danger 危险样式<br>btn-primary 首选项样式   btn-link 链接样式  btn-info 信息样式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default&quot;</span>&gt;</span>默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span>&gt;</span>原始按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-link&quot;</span>&gt;</span>链接按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success&quot;</span>&gt;</span>成功按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info&quot;</span>&gt;</span>信息按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning&quot;</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger&quot;</span>&gt;</span>危险按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"尺寸大小\"><a href=\"#尺寸大小\" class=\"headerlink\" title=\"尺寸大小\"></a>尺寸大小</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-lg&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-sm&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-xs&quot;</span>&gt;</span>Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本样式\"><a href=\"#基本样式\" class=\"headerlink\" title=\"基本样式\"></a>基本样式</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 标准的按钮 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default btn-lg&quot;</span>&gt;</span>大的默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-default btn-lg active&quot;</span>&gt;</span>大的激活的默认按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 提供额外的视觉效果，标识一组按钮中的原始动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary btn-sm&quot;</span>&gt;</span>小的原始按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示一个成功的或积极的动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success btn-xs&quot;</span>&gt;</span>特小的成功按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 信息警告消息的上下文按钮 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info btn-lg btn-block&quot;</span>&gt;</span>块级的信息按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示应谨慎采取的动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-warning &quot;</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表示一个危险的或潜在的负面动作 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger disabled&quot;</span>&gt;</span>禁用的危险按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-link&quot;</span>&gt;</span>链接按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"栅格系统\"><a href=\"#栅格系统\" class=\"headerlink\" title=\"栅格系统\"></a>栅格系统</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\w3cschol.md2723.7273675.png\"></p>\n<p><img src=\"https://www.w3cschool.cn/attachments/image/20190614/1560500254470961.png\" alt=\"12351521412412412421\"></p>\n"},{"title":"强哥题库","date":"2023-03-15T02:06:51.000Z","_content":"\n\n<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000\" />\n  <a href=\"https://github.com/Sunny-117/js-challenges\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n  </a>\n  <a href=\"https://twitter.com/zhiqiangfu6sun\" target=\"_blank\">\n    <img alt=\"Twitter: zhiqiangfu6sun\" src=\"https://img.shields.io/twitter/follow/zhiqiangfu6sun.svg?style=social\" />\n  </a>\n</p>\n\n\n> 集锦大厂面试常考的 前端手写题和leetcode算法题\n\n### 🏠 [Homepage](https://github.com/Sunny-117/js-challenges)\n\n# CONTENT\n\n前端手写题集锦 use js 记录大厂**笔试，面试常考**手写题，2022年前端面试中常见的 leetcode 算法题, 致力打造最全的前端JavaScript手写题题库和答案的最优解\n\n> 题目来源：总结了牛客截止到2022年10月的所有大厂手写题[100%]，掘金部分出名的手写题文章，备战前端春招，秋招好友的总结好的题目(github), 就不一一列举链接啦，总之此项目题目来源于社区，答案也由社区讨论后merge，也完全服务于社区。\n\n谢谢您的star，您的star是我更新的动力🥳\n\n**里面有答案，为了让你们有一个参考，不过非常希望你们能提供自己的思路，指出答案中存在的问题，复杂度优化等等， 期待你们的contribute, 想来一起维护这个项目，可以联系我，成为contributor**\n\n**最后我把社区的好的答案汇总到一个目录下，答案专栏，方便刷题**\n\n# 前端 JavaScript 手写题\n\n## JavaScript HOT 100 题\n\n> 中大厂面试，最常考的100个题，每一题都非常具有代表性，想要准备面试突击的同学，优先看这些题，祝在座的每一位都能拿到满意的offer\n\n- [实现Promise.all](https://github.com/Sunny-117/Front-end-handwritten-question/issues/1)\n- [JSON2DOM = react的render函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/37)\n- [树形结构转成列表](https://github.com/Sunny-117/Front-end-handwritten-question/issues/40)\n- [列表转成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/41)\n- [Array.prototype.flat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/9)\n- [instanceof](https://github.com/Sunny-117/Front-end-handwritten-question/issues/32)\n- [call apply bind](https://github.com/Sunny-117/Front-end-handwritten-question/issues/30)\n- [Array.prototype.map](https://github.com/Sunny-117/Front-end-handwritten-question/issues/11)\n- [正则表达式模版字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/48)\n- [lodash.get](https://github.com/Sunny-117/Front-end-handwritten-question/issues/20)\n- [深拷贝](https://github.com/Sunny-117/Front-end-handwritten-question/issues/58)\n- [寄生组合式继承](https://github.com/Sunny-117/Front-end-handwritten-question/issues/59)\n- [发布订阅者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/60)\n\n## 实现 Promise （hot）\n\n- [完整实现Promise A+](https://github.com/Sunny-117/Front-end-handwritten-question/issues/8)\n- [实现Promise.all](https://github.com/Sunny-117/Front-end-handwritten-question/issues/1)\n- [实现Promise.prototype.finally](https://github.com/Sunny-117/Front-end-handwritten-question/issues/2)\n- [实现Promise.allSettled](https://github.com/Sunny-117/Front-end-handwritten-question/issues/3)\n- [实现Promise.race](https://github.com/Sunny-117/Front-end-handwritten-question/issues/4)\n- [实现 Promise.prototype.catch](https://github.com/Sunny-117/Front-end-handwritten-question/issues/5)\n- [Promise.resolve ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/6)\n- [Promise.reject](https://github.com/Sunny-117/Front-end-handwritten-question/issues/7)\n\n## Promise 周边场景题（hot）\n\n- [交通灯](https://github.com/Sunny-117/Front-end-handwritten-question/issues/164)\n- [封装异步的fetch，使用async await方式来使用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/163)\n- [repeat(console.log, 5, 1000)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/162)\n- [封装一个工具函数输入一个promiseA返回一个promiseB如果超过1s没返回则抛出异常如果正常则输出正确的值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/161)\n- [请求5s未完成就终止](https://github.com/Sunny-117/Front-end-handwritten-question/issues/160)\n- [实现一个sleep函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/159)\n- [js每隔一秒打印1,2,3,4,5](https://github.com/Sunny-117/Front-end-handwritten-question/issues/158)\n- [使用 setTimeout 实现 setInterval](https://github.com/Sunny-117/Front-end-handwritten-question/issues/156)\n- [promise实现图片异步加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/155)\n- [使用Promise封装AJAX请求](https://github.com/Sunny-117/Front-end-handwritten-question/issues/154)\n- [我们能反过来使用 setinterval 模拟实现 settimeout 吗？ ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/157)\n- [异步任务：依次发送3次网络请求，拿到服务器数据](https://github.com/Sunny-117/Front-end-handwritten-question/issues/172)\n- [实现网络请求超时判断，超过三秒视为超时](https://github.com/Sunny-117/Front-end-handwritten-question/issues/171)\n- [promise中断请求](https://github.com/Sunny-117/Front-end-handwritten-question/issues/170)\n- [给定一系列的api，测量上传速度（实现的时候用的GET请求）并选择一个加载时间最短的api](https://github.com/Sunny-117/Front-end-handwritten-question/issues/169)\n- [settimeout系统补偿时间](https://github.com/Sunny-117/Front-end-handwritten-question/issues/168)\n- [setTimeout准时](https://github.com/Sunny-117/Front-end-handwritten-question/issues/167)\n- [请求五秒未完成则终止](https://github.com/Sunny-117/Front-end-handwritten-question/issues/166)\n- [并发多个请求，返回先得到response的。函数输入为url数组，输出为第一个返回的response的结果](https://github.com/Sunny-117/Front-end-handwritten-question/issues/165)\n- [JS异步数据流，实现并发异步请求，结果顺序输出](https://github.com/Sunny-117/Front-end-handwritten-question/issues/153)\n- [Promise串行](https://github.com/Sunny-117/Front-end-handwritten-question/issues/152)\n- [处理高并发, 100 条数据，带宽为 10， 跑满带宽](https://github.com/Sunny-117/Front-end-handwritten-question/issues/151)\n- [设计一个简单的任务队列, 要求分别在 1,3,4 秒后打印出 \"1\", \"2\", \"3\"；](https://github.com/Sunny-117/Front-end-handwritten-question/issues/150)\n- [实现有并行限制的 Promise 调度器](https://github.com/Sunny-117/Front-end-handwritten-question/issues/149)\n- [实现 Scheduler](https://github.com/Sunny-117/Front-end-handwritten-question/issues/148)\n- [有并发限制的Promise.all(ts类型) ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/147)\n- [实现 如果上一次的没请求完，之后的就无响应](https://github.com/Sunny-117/Front-end-handwritten-question/issues/146)\n- [使用 Promise 实现每隔三秒输出时间](https://github.com/Sunny-117/Front-end-handwritten-question/issues/145)\n- [使用 Promise 改写回调地狱](https://github.com/Sunny-117/Front-end-handwritten-question/issues/144)\n- [设计一个函数，该函数的参数为可同时发送请求的大小，返回一个函数，该函数的参数为要请求的url。 实现的效果为，同时发送n个请求，当有请求返回后往请求队列里push新的请求，并输出刚刚结束的请求的返回值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/143)\n- [Promise.retry 超时重新请求，并在重试一定次数依然失败时输出缓存内容](https://github.com/Sunny-117/Front-end-handwritten-question/issues/142)\n- [写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal](https://github.com/Sunny-117/Front-end-handwritten-question/issues/141)\n\n## JavaScript 常考手写题\n\n- [产生一个不重复的随机数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/140)\n- [await async 如何实现 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/139)\n- [使用递归完成 1 到 100 的累加 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/138)\n- [打印出 1~10000 以内的对称数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/137)\n- [实现一个字符串匹配算法indexOf](https://github.com/Sunny-117/Front-end-handwritten-question/issues/136)\n- [请实现一个模块 math，支持链式调用math.add(2,4).minus(3).times(2); ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/135)\n- [手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴2020）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/134)\n- [有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90） ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/133)\n- [之字形打印矩阵](https://github.com/Sunny-117/Front-end-handwritten-question/issues/132)\n- [数组中的最大值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/131)\n- [尾递归（斐波那契数列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/130)\n- [实现简单路由 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/129)\n- [封装一个localstorage的setItem和getItem方法](https://github.com/Sunny-117/Front-end-handwritten-question/issues/128)\n- [1-1000回文数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/127)\n- [随机生成字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/126)\n- [判断一个字符串是否为驼峰字符串， judge('ByteDance','BD') -> true judge('Bytedance','BD') -> false](https://github.com/Sunny-117/Front-end-handwritten-question/issues/125)\n- [压缩字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/124)\n- [Map场景题 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/123)\n- [输入50a6we8y20x 输出50个a，6个we，8个y，20个x](https://github.com/Sunny-117/Front-end-handwritten-question/issues/122)\n- [手写defineProperty](https://github.com/Sunny-117/Front-end-handwritten-question/issues/121)\n- [String string 值一样返回true Object Object 返回true function function 都是声明的一个新的变量 返回false](https://github.com/Sunny-117/Front-end-handwritten-question/issues/120)\n- [对输入的字符串：去除其中的字符'b'；去除相邻的'a'和'c'](https://github.com/Sunny-117/Front-end-handwritten-question/issues/119)\n- [用一行代码，将数组中的字符串和字符串对象(new String(123))直接判定出来](https://github.com/Sunny-117/Front-end-handwritten-question/issues/118)\n- [before](https://github.com/Sunny-117/Front-end-handwritten-question/issues/117)\n- [实现一下 console.log ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/116)\n- [实现(5).add(3).minus(2)功能](https://github.com/Sunny-117/Front-end-handwritten-question/issues/115)\n- [将十进制数字转为二进制数字字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/114)\n- [封装remove child.remove()销毁自身](https://github.com/Sunny-117/Front-end-handwritten-question/issues/113)\n- [字符串中字母的出现次数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/112)\n- [输出一个等腰三角形](https://github.com/Sunny-117/Front-end-handwritten-question/issues/111)\n- [实现一个函数a，使其奇数次调用时返回1，偶数次调用时返回2（不能使用全局变量）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/110)\n- [求 最接近的值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/109)\n- [不用循环求和](https://github.com/Sunny-117/Front-end-handwritten-question/issues/108)\n- [连续赋值操作](https://github.com/Sunny-117/Front-end-handwritten-question/issues/107)\n- [输入一串字符串，根据字符串求出每个字母的数量并返回结果对象。（数字为1时可省略](https://github.com/Sunny-117/Front-end-handwritten-question/issues/106)\n- [创建包含10个1的数组 多种方法](https://github.com/Sunny-117/Front-end-handwritten-question/issues/105)\n- [['zm', 'za', 'b', 'lm', 'ln', 'k'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/104)\n- [[\"0->2\", \"4->5\", \"7\", \"13\", \"15->16\"] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/103)\n- [['ab', 'c', 'ab', 'd', 'c'] => ['ab1', 'c1' ,'ab2', 'd', 'c2'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/102)\n- [移除空属性](https://github.com/Sunny-117/Front-end-handwritten-question/issues/101)\n- [判断两个对象是否相等](https://github.com/Sunny-117/Front-end-handwritten-question/issues/100)\n- [一个数组，找出每个数组元素右侧第一个比当前数大的数的下标，时间复杂度O(N)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/98)\n- [寻找出现次数最多的三个标签](https://github.com/Sunny-117/Front-end-handwritten-question/issues/97)\n- [素数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/96)\n- [实现日期格式化函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/95)\n- [实现 jsonp](https://github.com/Sunny-117/Front-end-handwritten-question/issues/94)\n- [URL反转 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/93)\n- [解析 URL Params 为对象](https://github.com/Sunny-117/Front-end-handwritten-question/issues/92)\n- [调用计数器（支持重置）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/91)\n- [颜色生成](https://github.com/Sunny-117/Front-end-handwritten-question/issues/90)\n- [JavaScript怎么清空数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/89)\n- [判断A、B数组的包含关系（值和数量），A属于B返回1，B属于A返回2，两者相等返回0，其他返回-1](https://github.com/Sunny-117/Front-end-handwritten-question/issues/88)\n- [对象的合并](https://github.com/Sunny-117/Front-end-handwritten-question/issues/87)\n- [实现一个 无限延伸数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/86))\n- [多行字符串转二维数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/85)\n- [请实现一个通用的Array解构赋值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/84)\n- [数组合并](https://github.com/Sunny-117/Front-end-handwritten-question/issues/83)\n- [数组交集，并集，差集](https://github.com/Sunny-117/Front-end-handwritten-question/issues/82)\n- [多维数组全排列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/81)\n- [判断对象是否存在循环引用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/80)\n- [实现函数solution(arr, k)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/79)\n- [逆对象扁平](https://github.com/Sunny-117/Front-end-handwritten-question/issues/78)\n- [对象扁平化](https://github.com/Sunny-117/Front-end-handwritten-question/issues/77)\n- [实现 执行一次的函数 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/76)\n- [链式调用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/75)\n- [偏函数 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/74)\n- [实现管道函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/73)\n- [手写事件代理（委托） ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/72)\n- [数据类型判断](https://github.com/Sunny-117/Front-end-handwritten-question/issues/71)\n- [类数组转数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/70)\n- [预加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/69)\n- [图片懒加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/68)\n- [数组去重](https://github.com/Sunny-117/Front-end-handwritten-question/issues/67)\n- [防抖 节流](https://github.com/Sunny-117/Front-end-handwritten-question/issues/66)\n- [函数组合 compose redux-saga koa 洋葱模型](https://github.com/Sunny-117/Front-end-handwritten-question/issues/65)\n- [sum(x,y)和sum(x)(y)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/64)\n- [curry柯里化](https://github.com/Sunny-117/Front-end-handwritten-question/issues/63)\n- [实现xxx时间之前的函数](https://github.com/Sunny-117/js-challenges/issues/252)\n- [n个2的n次方之和](https://github.com/Sunny-117/js-challenges/issues/253)\n- [无限动画](https://github.com/Sunny-117/js-challenges/issues/254)\n- [瀑布流](https://github.com/Sunny-117/js-challenges/issues/255)\n- [匹配 \"a*c\", \"abcaacc\" ](https://github.com/Sunny-117/js-challenges/issues/256)\n- [一个字符串中是否出现某串字符,出现的话返回索引](https://github.com/Sunny-117/js-challenges/issues/257)\n- [实现一个属性选择器](https://github.com/Sunny-117/js-challenges/issues/258)\n- [字符串转数字](https://github.com/Sunny-117/js-challenges/issues/259)\n- [实现一个跨浏览器事件工具](https://github.com/Sunny-117/js-challenges/issues/260)\n- [12 调用计数器（支持重置）](https://github.com/Sunny-117/js-challenges/issues/261)\n- [实现内存函数缓存函数调用结果](https://github.com/Sunny-117/js-challenges/issues/262)\n- [返回给定七个扑克牌是否有同花顺，数据结构 [{num: 1, hua: 's'}, ...]](https://github.com/Sunny-117/js-challenges/issues/263)\n- [JS定义一个 log 方法 ](https://github.com/Sunny-117/js-challenges/issues/264)\n- [阿拉伯数字专汉字(偏难)](https://github.com/Sunny-117/js-challenges/issues/265)\n- [用代码实现把字符串转换成base64编码](https://github.com/Sunny-117/js-challenges/issues/266)\n- [设计LRU缓存结构](https://github.com/Sunny-117/js-challenges/issues/272)\n\n## 设计模式相关\n\n- [观察者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/62)\n- [发布订阅者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/60)\n\n## 树-场景题（hot）\n\n- [DOM2JSON](https://github.com/Sunny-117/Front-end-handwritten-question/issues/36)\n- [JSON2DOM = react的render函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/37)\n- [计算目录树的深度](https://github.com/Sunny-117/Front-end-handwritten-question/issues/38)\n- [树形结构获取路径名](https://github.com/Sunny-117/Front-end-handwritten-question/issues/39)\n- [树形结构转成列表](https://github.com/Sunny-117/Front-end-handwritten-question/issues/40)\n- [列表转成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/41)\n- [对象树遍历](https://github.com/Sunny-117/Front-end-handwritten-question/issues/42)\n- [获取树对象属性](https://github.com/Sunny-117/Front-end-handwritten-question/issues/43)\n- [查找json中的children路径](https://github.com/Sunny-117/Front-end-handwritten-question/issues/44)\n- [对象字符串转化成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/45)\n- [判断有无符合路径和 -> 打印所有路径](https://github.com/Sunny-117/Front-end-handwritten-question/issues/46)\n- [获取树结构中的name：getName](https://github.com/Sunny-117/Front-end-handwritten-question/issues/47)\n\n## 实现 JS 原生方法\n\n- [Array.prototype.flat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/9)\n- [Array.prototype.forEach](https://github.com/Sunny-117/Front-end-handwritten-question/issues/10)\n- [Array.prototype.map](https://github.com/Sunny-117/Front-end-handwritten-question/issues/11)\n- [Array.prototype.filter](https://github.com/Sunny-117/Front-end-handwritten-question/issues/12)\n- [Array.prototype.reduce](https://github.com/Sunny-117/Front-end-handwritten-question/issues/13)\n- [Array.prototype.fill](https://github.com/Sunny-117/Front-end-handwritten-question/issues/14)\n- [Array.prototype.includes](https://github.com/Sunny-117/Front-end-handwritten-question/issues/15)\n- [Array.prototype.push](https://github.com/Sunny-117/Front-end-handwritten-question/issues/16)\n- [Array.prototype.unshift](https://github.com/Sunny-117/Front-end-handwritten-question/issues/17)\n- [Array.prototype.copy](https://github.com/Sunny-117/Front-end-handwritten-question/issues/18)\n- [Array.prototype.getLevel](https://github.com/Sunny-117/Front-end-handwritten-question/issues/19)\n- [实现es6的set集合](https://github.com/Sunny-117/Front-end-handwritten-question/issues/21)\n- [实现es6的map集合](https://github.com/Sunny-117/Front-end-handwritten-question/issues/22)\n- [String.prototype.zpadStart](https://github.com/Sunny-117/Front-end-handwritten-question/issues/23)\n- [Object.assign](https://github.com/Sunny-117/Front-end-handwritten-question/issues/25)\n- [Object.is](https://github.com/Sunny-117/Front-end-handwritten-question/issues/26)\n- [JSON.stringify](https://github.com/Sunny-117/Front-end-handwritten-question/issues/28)\n- [JSON.parse](https://github.com/Sunny-117/Front-end-handwritten-question/issues/29)\n- [call apply bind](https://github.com/Sunny-117/Front-end-handwritten-question/issues/30)\n- [instanceof](https://github.com/Sunny-117/Front-end-handwritten-question/issues/32)\n- [trim](https://github.com/Sunny-117/Front-end-handwritten-question/issues/33)\n- [实现new](https://github.com/Sunny-117/Front-end-handwritten-question/issues/34)\n- [String.prototype.repeat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/35)\n- [String.prototype.includes](https://github.com/Sunny-117/Front-end-handwritten-question/issues/204)\n\n## JS 库函数实现\n\n- [lodash.get](https://github.com/Sunny-117/Front-end-handwritten-question/issues/20)\n- [lodash.chunk](https://github.com/Sunny-117/Front-end-handwritten-question/issues/99)\n- [lodash.once](https://github.com/Sunny-117/js-challenges/issues/222)\n- [classnames](https://github.com/Sunny-117/js-challenges/issues/216)\n\n## js utils\n\n- [判断一个对象是否是isPlainObject](https://github.com/Sunny-117/Front-end-handwritten-question/issues/24)\n\n## 手写 nodejs 模块\n\n- [promisify](https://github.com/Sunny-117/Front-end-handwritten-question/issues/31)\n\n## 正则相关\n\n- [正则表达式模版字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/48)\n- [正则判断手机号，qq，颜色，邮箱](https://github.com/Sunny-117/Front-end-handwritten-question/issues/49)\n- [字符串的大小写取反](https://github.com/Sunny-117/Front-end-handwritten-question/issues/50)\n- [检验字符串首尾是否含有数字](https://github.com/Sunny-117/Front-end-handwritten-question/issues/51)\n- [去除字符串空格](https://github.com/Sunny-117/Front-end-handwritten-question/issues/52)\n- [去除字符串中的字母](https://github.com/Sunny-117/Front-end-handwritten-question/issues/53)\n- [正则 驼峰转换](https://github.com/Sunny-117/Front-end-handwritten-question/issues/54)\n- [对象key的驼峰转下划线](https://github.com/Sunny-117/Front-end-handwritten-question/issues/55)\n- [判断字符串中是否存在连续的三个数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/56)\n- [((2+3)+(3*4))+2---->['(2 + 3)+(3 * 4)', '2 + 3', '3 * 4'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/57)\n\n## 排序算法\n\n- [冒泡排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/193)\n- [选择排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/194)\n- [快速排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/195)\n- [插入排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/196)\n- [归并排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/197)\n- [基数排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/202)\n- [计数排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/201)\n- [希尔排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/200)\n- [桶排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/199)\n- [堆排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/198)\n\n## 实现自定义HOOK\n\n- [Hooks怎么封装手势逻辑](https://github.com/Sunny-117/Front-end-handwritten-question/issues/192)\n- [Hooks实现移动端的滑动轮播插件 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/191)\n- [如何用 Hooks 模拟 componentDidMount 与componentWillUnmount](https://github.com/Sunny-117/Front-end-handwritten-question/issues/190)\n- [实现一个useBodyScrollLock ，当出现弹窗时 阻止背景滚动](https://github.com/Sunny-117/Front-end-handwritten-question/issues/189)\n- [ts 实现 hooks: useInterval](https://github.com/Sunny-117/Front-end-handwritten-question/issues/188)\n- [实现 useQuery](https://github.com/Sunny-117/Front-end-handwritten-question/issues/187)\n- [实现useRequest](https://github.com/Sunny-117/Front-end-handwritten-question/issues/186)\n\n## 组件设计题（Vue/React/JS均可）\n\n- [全选](https://github.com/Sunny-117/Front-end-handwritten-question/issues/178)\n- [轮播图](https://github.com/Sunny-117/Front-end-handwritten-question/issues/177)\n- [根据response渲染table](https://github.com/Sunny-117/Front-end-handwritten-question/issues/176)\n- [歌词滚动功能(hot)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/175)\n- [实现一个 百度搜索框 （搜索提示）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/174)\n- [实现todos](https://github.com/Sunny-117/Front-end-handwritten-question/issues/173)\n- [计时器或倒计时组件](https://github.com/Sunny-117/Front-end-handwritten-question/issues/185)\n- [设计一个公会入驻信息提交页](https://github.com/Sunny-117/Front-end-handwritten-question/issues/184)\n- [编码实现宽高不相同图片的自适配排列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/183)\n- [列表子元素顺序反转](https://github.com/Sunny-117/Front-end-handwritten-question/issues/182)\n- [遍历树组件](https://github.com/Sunny-117/Front-end-handwritten-question/issues/181)\n- [选项卡](https://github.com/Sunny-117/Front-end-handwritten-question/issues/180)\n- [拖拽](https://github.com/Sunny-117/Front-end-handwritten-question/issues/179)\n\n## HTML CSS 手写题\n\n- [实现圆形环状进度条](https://github.com/Sunny-117/Front-end-handwritten-question/issues/203)\n- [等边三角形](https://github.com/Sunny-117/js-challenges/issues/224)\n- [实现 扇形](https://github.com/Sunny-117/js-challenges/issues/225)\n- [实现平行四边形](https://github.com/Sunny-117/js-challenges/issues/226)\n- [实现 九宫格](https://github.com/Sunny-117/js-challenges/issues/227)\n- [实现一个秒针绕一点转动的效果](https://github.com/Sunny-117/js-challenges/issues/228)\n- [实现一个 球 字节](https://github.com/Sunny-117/js-challenges/issues/229)\n- [圆弧旋转](https://github.com/Sunny-117/js-challenges/issues/230)\n- [使用div和css实现一个圆形，红色部分站60%，绿色40%](https://github.com/Sunny-117/js-challenges/issues/231)\n- [现在有一个进度条，进度条中间有一串文字，当我的进度条覆盖了文字之后，文字要去进度条反色，怎么实现？](https://github.com/Sunny-117/js-challenges/issues/232)\n- [shadowDOM实现css隔离](https://github.com/Sunny-117/js-challenges/issues/233)\n- [两烂布局](https://github.com/Sunny-117/js-challenges/issues/234)\n- [宽高自适应正方形](https://github.com/Sunny-117/js-challenges/issues/235)\n- [1px问题](https://github.com/Sunny-117/js-challenges/issues/236)\n- [实现 筛子 ](https://github.com/Sunny-117/js-challenges/issues/237)\n- [css3实现多行文字截断处理](https://github.com/Sunny-117/js-challenges/issues/238)\n- [三栏布局移动优先设计](https://github.com/Sunny-117/js-challenges/issues/239)\n- [css 实现一个自适应搜索框](https://github.com/Sunny-117/js-challenges/issues/240)\n- [css书卡布局](https://github.com/Sunny-117/js-challenges/issues/241)\n\n## JS 实现基本数据结构\n\n- [队列结构](https://github.com/Sunny-117/js-challenges/issues/242)\n- [哈希表](https://github.com/Sunny-117/js-challenges/issues/243)\n- [实现集合](https://github.com/Sunny-117/js-challenges/issues/244)\n- [用Javascript创建一个单链表](https://github.com/Sunny-117/js-challenges/issues/245)\n- [树结构](https://github.com/Sunny-117/js-challenges/issues/246)\n- [图结构](https://github.com/Sunny-117/js-challenges/issues/247)\n- [栈结构](https://github.com/Sunny-117/js-challenges/issues/248)\n- [js实现 堆](https://github.com/Sunny-117/js-challenges/issues/249)\n- [实现 Trie (前缀树)](https://github.com/Sunny-117/js-challenges/issues/250)\n- [top K](https://github.com/Sunny-117/js-challenges/issues/251)\n\n# 前端常考 leetcode 算法题\n\n## 前端 HOT 100题\n\n## 矩阵相关\n\n- [打印一个螺旋矩阵](https://github.com/Sunny-117/js-challenges/issues/217)\n\n## 数组\n\n- [买卖股票的最佳时机](https://github.com/Sunny-117/js-challenges/issues/268)\n\n## 链表\n\n## 二叉树\n\n# 更新中\n\n# 后续计划\n\n- [ ]  做成OJ判题系统\n- [ ]  区分题目难易程度\n- [ ]  单元测试\n- [ ]  正确答案集合merge\n\n大家可以给仓库一些建议，本仓库资源来源于社区，也完全服务于社区\n\n社区建议收集区：https://github.com/Sunny-117/js-challenges/discussions\n\n## Show your support\n\nGive a ⭐️ if this project helped you!\n\n## 📝 License\n\nCopyright © 2022 [sunny-117](https://github.com/sunny-117).<br />\nThis project is [MIT](https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89) licensed.\n\n---\n\n_This README was generated with ❤️ by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_\n","source":"_posts/前端/学习/js基础/强哥题库.md","raw":"---\ntitle: 强哥题库\ndate: 2023-03-15 10:06:51\ntags: 基础\ncategories: js\n---\n\n\n<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000\" />\n  <a href=\"https://github.com/Sunny-117/js-challenges\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n  </a>\n  <a href=\"https://twitter.com/zhiqiangfu6sun\" target=\"_blank\">\n    <img alt=\"Twitter: zhiqiangfu6sun\" src=\"https://img.shields.io/twitter/follow/zhiqiangfu6sun.svg?style=social\" />\n  </a>\n</p>\n\n\n> 集锦大厂面试常考的 前端手写题和leetcode算法题\n\n### 🏠 [Homepage](https://github.com/Sunny-117/js-challenges)\n\n# CONTENT\n\n前端手写题集锦 use js 记录大厂**笔试，面试常考**手写题，2022年前端面试中常见的 leetcode 算法题, 致力打造最全的前端JavaScript手写题题库和答案的最优解\n\n> 题目来源：总结了牛客截止到2022年10月的所有大厂手写题[100%]，掘金部分出名的手写题文章，备战前端春招，秋招好友的总结好的题目(github), 就不一一列举链接啦，总之此项目题目来源于社区，答案也由社区讨论后merge，也完全服务于社区。\n\n谢谢您的star，您的star是我更新的动力🥳\n\n**里面有答案，为了让你们有一个参考，不过非常希望你们能提供自己的思路，指出答案中存在的问题，复杂度优化等等， 期待你们的contribute, 想来一起维护这个项目，可以联系我，成为contributor**\n\n**最后我把社区的好的答案汇总到一个目录下，答案专栏，方便刷题**\n\n# 前端 JavaScript 手写题\n\n## JavaScript HOT 100 题\n\n> 中大厂面试，最常考的100个题，每一题都非常具有代表性，想要准备面试突击的同学，优先看这些题，祝在座的每一位都能拿到满意的offer\n\n- [实现Promise.all](https://github.com/Sunny-117/Front-end-handwritten-question/issues/1)\n- [JSON2DOM = react的render函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/37)\n- [树形结构转成列表](https://github.com/Sunny-117/Front-end-handwritten-question/issues/40)\n- [列表转成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/41)\n- [Array.prototype.flat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/9)\n- [instanceof](https://github.com/Sunny-117/Front-end-handwritten-question/issues/32)\n- [call apply bind](https://github.com/Sunny-117/Front-end-handwritten-question/issues/30)\n- [Array.prototype.map](https://github.com/Sunny-117/Front-end-handwritten-question/issues/11)\n- [正则表达式模版字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/48)\n- [lodash.get](https://github.com/Sunny-117/Front-end-handwritten-question/issues/20)\n- [深拷贝](https://github.com/Sunny-117/Front-end-handwritten-question/issues/58)\n- [寄生组合式继承](https://github.com/Sunny-117/Front-end-handwritten-question/issues/59)\n- [发布订阅者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/60)\n\n## 实现 Promise （hot）\n\n- [完整实现Promise A+](https://github.com/Sunny-117/Front-end-handwritten-question/issues/8)\n- [实现Promise.all](https://github.com/Sunny-117/Front-end-handwritten-question/issues/1)\n- [实现Promise.prototype.finally](https://github.com/Sunny-117/Front-end-handwritten-question/issues/2)\n- [实现Promise.allSettled](https://github.com/Sunny-117/Front-end-handwritten-question/issues/3)\n- [实现Promise.race](https://github.com/Sunny-117/Front-end-handwritten-question/issues/4)\n- [实现 Promise.prototype.catch](https://github.com/Sunny-117/Front-end-handwritten-question/issues/5)\n- [Promise.resolve ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/6)\n- [Promise.reject](https://github.com/Sunny-117/Front-end-handwritten-question/issues/7)\n\n## Promise 周边场景题（hot）\n\n- [交通灯](https://github.com/Sunny-117/Front-end-handwritten-question/issues/164)\n- [封装异步的fetch，使用async await方式来使用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/163)\n- [repeat(console.log, 5, 1000)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/162)\n- [封装一个工具函数输入一个promiseA返回一个promiseB如果超过1s没返回则抛出异常如果正常则输出正确的值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/161)\n- [请求5s未完成就终止](https://github.com/Sunny-117/Front-end-handwritten-question/issues/160)\n- [实现一个sleep函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/159)\n- [js每隔一秒打印1,2,3,4,5](https://github.com/Sunny-117/Front-end-handwritten-question/issues/158)\n- [使用 setTimeout 实现 setInterval](https://github.com/Sunny-117/Front-end-handwritten-question/issues/156)\n- [promise实现图片异步加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/155)\n- [使用Promise封装AJAX请求](https://github.com/Sunny-117/Front-end-handwritten-question/issues/154)\n- [我们能反过来使用 setinterval 模拟实现 settimeout 吗？ ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/157)\n- [异步任务：依次发送3次网络请求，拿到服务器数据](https://github.com/Sunny-117/Front-end-handwritten-question/issues/172)\n- [实现网络请求超时判断，超过三秒视为超时](https://github.com/Sunny-117/Front-end-handwritten-question/issues/171)\n- [promise中断请求](https://github.com/Sunny-117/Front-end-handwritten-question/issues/170)\n- [给定一系列的api，测量上传速度（实现的时候用的GET请求）并选择一个加载时间最短的api](https://github.com/Sunny-117/Front-end-handwritten-question/issues/169)\n- [settimeout系统补偿时间](https://github.com/Sunny-117/Front-end-handwritten-question/issues/168)\n- [setTimeout准时](https://github.com/Sunny-117/Front-end-handwritten-question/issues/167)\n- [请求五秒未完成则终止](https://github.com/Sunny-117/Front-end-handwritten-question/issues/166)\n- [并发多个请求，返回先得到response的。函数输入为url数组，输出为第一个返回的response的结果](https://github.com/Sunny-117/Front-end-handwritten-question/issues/165)\n- [JS异步数据流，实现并发异步请求，结果顺序输出](https://github.com/Sunny-117/Front-end-handwritten-question/issues/153)\n- [Promise串行](https://github.com/Sunny-117/Front-end-handwritten-question/issues/152)\n- [处理高并发, 100 条数据，带宽为 10， 跑满带宽](https://github.com/Sunny-117/Front-end-handwritten-question/issues/151)\n- [设计一个简单的任务队列, 要求分别在 1,3,4 秒后打印出 \"1\", \"2\", \"3\"；](https://github.com/Sunny-117/Front-end-handwritten-question/issues/150)\n- [实现有并行限制的 Promise 调度器](https://github.com/Sunny-117/Front-end-handwritten-question/issues/149)\n- [实现 Scheduler](https://github.com/Sunny-117/Front-end-handwritten-question/issues/148)\n- [有并发限制的Promise.all(ts类型) ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/147)\n- [实现 如果上一次的没请求完，之后的就无响应](https://github.com/Sunny-117/Front-end-handwritten-question/issues/146)\n- [使用 Promise 实现每隔三秒输出时间](https://github.com/Sunny-117/Front-end-handwritten-question/issues/145)\n- [使用 Promise 改写回调地狱](https://github.com/Sunny-117/Front-end-handwritten-question/issues/144)\n- [设计一个函数，该函数的参数为可同时发送请求的大小，返回一个函数，该函数的参数为要请求的url。 实现的效果为，同时发送n个请求，当有请求返回后往请求队列里push新的请求，并输出刚刚结束的请求的返回值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/143)\n- [Promise.retry 超时重新请求，并在重试一定次数依然失败时输出缓存内容](https://github.com/Sunny-117/Front-end-handwritten-question/issues/142)\n- [写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal](https://github.com/Sunny-117/Front-end-handwritten-question/issues/141)\n\n## JavaScript 常考手写题\n\n- [产生一个不重复的随机数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/140)\n- [await async 如何实现 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/139)\n- [使用递归完成 1 到 100 的累加 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/138)\n- [打印出 1~10000 以内的对称数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/137)\n- [实现一个字符串匹配算法indexOf](https://github.com/Sunny-117/Front-end-handwritten-question/issues/136)\n- [请实现一个模块 math，支持链式调用math.add(2,4).minus(3).times(2); ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/135)\n- [手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴2020）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/134)\n- [有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90） ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/133)\n- [之字形打印矩阵](https://github.com/Sunny-117/Front-end-handwritten-question/issues/132)\n- [数组中的最大值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/131)\n- [尾递归（斐波那契数列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/130)\n- [实现简单路由 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/129)\n- [封装一个localstorage的setItem和getItem方法](https://github.com/Sunny-117/Front-end-handwritten-question/issues/128)\n- [1-1000回文数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/127)\n- [随机生成字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/126)\n- [判断一个字符串是否为驼峰字符串， judge('ByteDance','BD') -> true judge('Bytedance','BD') -> false](https://github.com/Sunny-117/Front-end-handwritten-question/issues/125)\n- [压缩字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/124)\n- [Map场景题 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/123)\n- [输入50a6we8y20x 输出50个a，6个we，8个y，20个x](https://github.com/Sunny-117/Front-end-handwritten-question/issues/122)\n- [手写defineProperty](https://github.com/Sunny-117/Front-end-handwritten-question/issues/121)\n- [String string 值一样返回true Object Object 返回true function function 都是声明的一个新的变量 返回false](https://github.com/Sunny-117/Front-end-handwritten-question/issues/120)\n- [对输入的字符串：去除其中的字符'b'；去除相邻的'a'和'c'](https://github.com/Sunny-117/Front-end-handwritten-question/issues/119)\n- [用一行代码，将数组中的字符串和字符串对象(new String(123))直接判定出来](https://github.com/Sunny-117/Front-end-handwritten-question/issues/118)\n- [before](https://github.com/Sunny-117/Front-end-handwritten-question/issues/117)\n- [实现一下 console.log ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/116)\n- [实现(5).add(3).minus(2)功能](https://github.com/Sunny-117/Front-end-handwritten-question/issues/115)\n- [将十进制数字转为二进制数字字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/114)\n- [封装remove child.remove()销毁自身](https://github.com/Sunny-117/Front-end-handwritten-question/issues/113)\n- [字符串中字母的出现次数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/112)\n- [输出一个等腰三角形](https://github.com/Sunny-117/Front-end-handwritten-question/issues/111)\n- [实现一个函数a，使其奇数次调用时返回1，偶数次调用时返回2（不能使用全局变量）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/110)\n- [求 最接近的值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/109)\n- [不用循环求和](https://github.com/Sunny-117/Front-end-handwritten-question/issues/108)\n- [连续赋值操作](https://github.com/Sunny-117/Front-end-handwritten-question/issues/107)\n- [输入一串字符串，根据字符串求出每个字母的数量并返回结果对象。（数字为1时可省略](https://github.com/Sunny-117/Front-end-handwritten-question/issues/106)\n- [创建包含10个1的数组 多种方法](https://github.com/Sunny-117/Front-end-handwritten-question/issues/105)\n- [['zm', 'za', 'b', 'lm', 'ln', 'k'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/104)\n- [[\"0->2\", \"4->5\", \"7\", \"13\", \"15->16\"] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/103)\n- [['ab', 'c', 'ab', 'd', 'c'] => ['ab1', 'c1' ,'ab2', 'd', 'c2'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/102)\n- [移除空属性](https://github.com/Sunny-117/Front-end-handwritten-question/issues/101)\n- [判断两个对象是否相等](https://github.com/Sunny-117/Front-end-handwritten-question/issues/100)\n- [一个数组，找出每个数组元素右侧第一个比当前数大的数的下标，时间复杂度O(N)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/98)\n- [寻找出现次数最多的三个标签](https://github.com/Sunny-117/Front-end-handwritten-question/issues/97)\n- [素数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/96)\n- [实现日期格式化函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/95)\n- [实现 jsonp](https://github.com/Sunny-117/Front-end-handwritten-question/issues/94)\n- [URL反转 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/93)\n- [解析 URL Params 为对象](https://github.com/Sunny-117/Front-end-handwritten-question/issues/92)\n- [调用计数器（支持重置）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/91)\n- [颜色生成](https://github.com/Sunny-117/Front-end-handwritten-question/issues/90)\n- [JavaScript怎么清空数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/89)\n- [判断A、B数组的包含关系（值和数量），A属于B返回1，B属于A返回2，两者相等返回0，其他返回-1](https://github.com/Sunny-117/Front-end-handwritten-question/issues/88)\n- [对象的合并](https://github.com/Sunny-117/Front-end-handwritten-question/issues/87)\n- [实现一个 无限延伸数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/86))\n- [多行字符串转二维数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/85)\n- [请实现一个通用的Array解构赋值](https://github.com/Sunny-117/Front-end-handwritten-question/issues/84)\n- [数组合并](https://github.com/Sunny-117/Front-end-handwritten-question/issues/83)\n- [数组交集，并集，差集](https://github.com/Sunny-117/Front-end-handwritten-question/issues/82)\n- [多维数组全排列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/81)\n- [判断对象是否存在循环引用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/80)\n- [实现函数solution(arr, k)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/79)\n- [逆对象扁平](https://github.com/Sunny-117/Front-end-handwritten-question/issues/78)\n- [对象扁平化](https://github.com/Sunny-117/Front-end-handwritten-question/issues/77)\n- [实现 执行一次的函数 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/76)\n- [链式调用](https://github.com/Sunny-117/Front-end-handwritten-question/issues/75)\n- [偏函数 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/74)\n- [实现管道函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/73)\n- [手写事件代理（委托） ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/72)\n- [数据类型判断](https://github.com/Sunny-117/Front-end-handwritten-question/issues/71)\n- [类数组转数组](https://github.com/Sunny-117/Front-end-handwritten-question/issues/70)\n- [预加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/69)\n- [图片懒加载](https://github.com/Sunny-117/Front-end-handwritten-question/issues/68)\n- [数组去重](https://github.com/Sunny-117/Front-end-handwritten-question/issues/67)\n- [防抖 节流](https://github.com/Sunny-117/Front-end-handwritten-question/issues/66)\n- [函数组合 compose redux-saga koa 洋葱模型](https://github.com/Sunny-117/Front-end-handwritten-question/issues/65)\n- [sum(x,y)和sum(x)(y)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/64)\n- [curry柯里化](https://github.com/Sunny-117/Front-end-handwritten-question/issues/63)\n- [实现xxx时间之前的函数](https://github.com/Sunny-117/js-challenges/issues/252)\n- [n个2的n次方之和](https://github.com/Sunny-117/js-challenges/issues/253)\n- [无限动画](https://github.com/Sunny-117/js-challenges/issues/254)\n- [瀑布流](https://github.com/Sunny-117/js-challenges/issues/255)\n- [匹配 \"a*c\", \"abcaacc\" ](https://github.com/Sunny-117/js-challenges/issues/256)\n- [一个字符串中是否出现某串字符,出现的话返回索引](https://github.com/Sunny-117/js-challenges/issues/257)\n- [实现一个属性选择器](https://github.com/Sunny-117/js-challenges/issues/258)\n- [字符串转数字](https://github.com/Sunny-117/js-challenges/issues/259)\n- [实现一个跨浏览器事件工具](https://github.com/Sunny-117/js-challenges/issues/260)\n- [12 调用计数器（支持重置）](https://github.com/Sunny-117/js-challenges/issues/261)\n- [实现内存函数缓存函数调用结果](https://github.com/Sunny-117/js-challenges/issues/262)\n- [返回给定七个扑克牌是否有同花顺，数据结构 [{num: 1, hua: 's'}, ...]](https://github.com/Sunny-117/js-challenges/issues/263)\n- [JS定义一个 log 方法 ](https://github.com/Sunny-117/js-challenges/issues/264)\n- [阿拉伯数字专汉字(偏难)](https://github.com/Sunny-117/js-challenges/issues/265)\n- [用代码实现把字符串转换成base64编码](https://github.com/Sunny-117/js-challenges/issues/266)\n- [设计LRU缓存结构](https://github.com/Sunny-117/js-challenges/issues/272)\n\n## 设计模式相关\n\n- [观察者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/62)\n- [发布订阅者模式](https://github.com/Sunny-117/Front-end-handwritten-question/issues/60)\n\n## 树-场景题（hot）\n\n- [DOM2JSON](https://github.com/Sunny-117/Front-end-handwritten-question/issues/36)\n- [JSON2DOM = react的render函数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/37)\n- [计算目录树的深度](https://github.com/Sunny-117/Front-end-handwritten-question/issues/38)\n- [树形结构获取路径名](https://github.com/Sunny-117/Front-end-handwritten-question/issues/39)\n- [树形结构转成列表](https://github.com/Sunny-117/Front-end-handwritten-question/issues/40)\n- [列表转成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/41)\n- [对象树遍历](https://github.com/Sunny-117/Front-end-handwritten-question/issues/42)\n- [获取树对象属性](https://github.com/Sunny-117/Front-end-handwritten-question/issues/43)\n- [查找json中的children路径](https://github.com/Sunny-117/Front-end-handwritten-question/issues/44)\n- [对象字符串转化成树形结构](https://github.com/Sunny-117/Front-end-handwritten-question/issues/45)\n- [判断有无符合路径和 -> 打印所有路径](https://github.com/Sunny-117/Front-end-handwritten-question/issues/46)\n- [获取树结构中的name：getName](https://github.com/Sunny-117/Front-end-handwritten-question/issues/47)\n\n## 实现 JS 原生方法\n\n- [Array.prototype.flat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/9)\n- [Array.prototype.forEach](https://github.com/Sunny-117/Front-end-handwritten-question/issues/10)\n- [Array.prototype.map](https://github.com/Sunny-117/Front-end-handwritten-question/issues/11)\n- [Array.prototype.filter](https://github.com/Sunny-117/Front-end-handwritten-question/issues/12)\n- [Array.prototype.reduce](https://github.com/Sunny-117/Front-end-handwritten-question/issues/13)\n- [Array.prototype.fill](https://github.com/Sunny-117/Front-end-handwritten-question/issues/14)\n- [Array.prototype.includes](https://github.com/Sunny-117/Front-end-handwritten-question/issues/15)\n- [Array.prototype.push](https://github.com/Sunny-117/Front-end-handwritten-question/issues/16)\n- [Array.prototype.unshift](https://github.com/Sunny-117/Front-end-handwritten-question/issues/17)\n- [Array.prototype.copy](https://github.com/Sunny-117/Front-end-handwritten-question/issues/18)\n- [Array.prototype.getLevel](https://github.com/Sunny-117/Front-end-handwritten-question/issues/19)\n- [实现es6的set集合](https://github.com/Sunny-117/Front-end-handwritten-question/issues/21)\n- [实现es6的map集合](https://github.com/Sunny-117/Front-end-handwritten-question/issues/22)\n- [String.prototype.zpadStart](https://github.com/Sunny-117/Front-end-handwritten-question/issues/23)\n- [Object.assign](https://github.com/Sunny-117/Front-end-handwritten-question/issues/25)\n- [Object.is](https://github.com/Sunny-117/Front-end-handwritten-question/issues/26)\n- [JSON.stringify](https://github.com/Sunny-117/Front-end-handwritten-question/issues/28)\n- [JSON.parse](https://github.com/Sunny-117/Front-end-handwritten-question/issues/29)\n- [call apply bind](https://github.com/Sunny-117/Front-end-handwritten-question/issues/30)\n- [instanceof](https://github.com/Sunny-117/Front-end-handwritten-question/issues/32)\n- [trim](https://github.com/Sunny-117/Front-end-handwritten-question/issues/33)\n- [实现new](https://github.com/Sunny-117/Front-end-handwritten-question/issues/34)\n- [String.prototype.repeat](https://github.com/Sunny-117/Front-end-handwritten-question/issues/35)\n- [String.prototype.includes](https://github.com/Sunny-117/Front-end-handwritten-question/issues/204)\n\n## JS 库函数实现\n\n- [lodash.get](https://github.com/Sunny-117/Front-end-handwritten-question/issues/20)\n- [lodash.chunk](https://github.com/Sunny-117/Front-end-handwritten-question/issues/99)\n- [lodash.once](https://github.com/Sunny-117/js-challenges/issues/222)\n- [classnames](https://github.com/Sunny-117/js-challenges/issues/216)\n\n## js utils\n\n- [判断一个对象是否是isPlainObject](https://github.com/Sunny-117/Front-end-handwritten-question/issues/24)\n\n## 手写 nodejs 模块\n\n- [promisify](https://github.com/Sunny-117/Front-end-handwritten-question/issues/31)\n\n## 正则相关\n\n- [正则表达式模版字符串](https://github.com/Sunny-117/Front-end-handwritten-question/issues/48)\n- [正则判断手机号，qq，颜色，邮箱](https://github.com/Sunny-117/Front-end-handwritten-question/issues/49)\n- [字符串的大小写取反](https://github.com/Sunny-117/Front-end-handwritten-question/issues/50)\n- [检验字符串首尾是否含有数字](https://github.com/Sunny-117/Front-end-handwritten-question/issues/51)\n- [去除字符串空格](https://github.com/Sunny-117/Front-end-handwritten-question/issues/52)\n- [去除字符串中的字母](https://github.com/Sunny-117/Front-end-handwritten-question/issues/53)\n- [正则 驼峰转换](https://github.com/Sunny-117/Front-end-handwritten-question/issues/54)\n- [对象key的驼峰转下划线](https://github.com/Sunny-117/Front-end-handwritten-question/issues/55)\n- [判断字符串中是否存在连续的三个数](https://github.com/Sunny-117/Front-end-handwritten-question/issues/56)\n- [((2+3)+(3*4))+2---->['(2 + 3)+(3 * 4)', '2 + 3', '3 * 4'] ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/57)\n\n## 排序算法\n\n- [冒泡排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/193)\n- [选择排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/194)\n- [快速排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/195)\n- [插入排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/196)\n- [归并排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/197)\n- [基数排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/202)\n- [计数排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/201)\n- [希尔排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/200)\n- [桶排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/199)\n- [堆排序](https://github.com/Sunny-117/Front-end-handwritten-question/issues/198)\n\n## 实现自定义HOOK\n\n- [Hooks怎么封装手势逻辑](https://github.com/Sunny-117/Front-end-handwritten-question/issues/192)\n- [Hooks实现移动端的滑动轮播插件 ](https://github.com/Sunny-117/Front-end-handwritten-question/issues/191)\n- [如何用 Hooks 模拟 componentDidMount 与componentWillUnmount](https://github.com/Sunny-117/Front-end-handwritten-question/issues/190)\n- [实现一个useBodyScrollLock ，当出现弹窗时 阻止背景滚动](https://github.com/Sunny-117/Front-end-handwritten-question/issues/189)\n- [ts 实现 hooks: useInterval](https://github.com/Sunny-117/Front-end-handwritten-question/issues/188)\n- [实现 useQuery](https://github.com/Sunny-117/Front-end-handwritten-question/issues/187)\n- [实现useRequest](https://github.com/Sunny-117/Front-end-handwritten-question/issues/186)\n\n## 组件设计题（Vue/React/JS均可）\n\n- [全选](https://github.com/Sunny-117/Front-end-handwritten-question/issues/178)\n- [轮播图](https://github.com/Sunny-117/Front-end-handwritten-question/issues/177)\n- [根据response渲染table](https://github.com/Sunny-117/Front-end-handwritten-question/issues/176)\n- [歌词滚动功能(hot)](https://github.com/Sunny-117/Front-end-handwritten-question/issues/175)\n- [实现一个 百度搜索框 （搜索提示）](https://github.com/Sunny-117/Front-end-handwritten-question/issues/174)\n- [实现todos](https://github.com/Sunny-117/Front-end-handwritten-question/issues/173)\n- [计时器或倒计时组件](https://github.com/Sunny-117/Front-end-handwritten-question/issues/185)\n- [设计一个公会入驻信息提交页](https://github.com/Sunny-117/Front-end-handwritten-question/issues/184)\n- [编码实现宽高不相同图片的自适配排列](https://github.com/Sunny-117/Front-end-handwritten-question/issues/183)\n- [列表子元素顺序反转](https://github.com/Sunny-117/Front-end-handwritten-question/issues/182)\n- [遍历树组件](https://github.com/Sunny-117/Front-end-handwritten-question/issues/181)\n- [选项卡](https://github.com/Sunny-117/Front-end-handwritten-question/issues/180)\n- [拖拽](https://github.com/Sunny-117/Front-end-handwritten-question/issues/179)\n\n## HTML CSS 手写题\n\n- [实现圆形环状进度条](https://github.com/Sunny-117/Front-end-handwritten-question/issues/203)\n- [等边三角形](https://github.com/Sunny-117/js-challenges/issues/224)\n- [实现 扇形](https://github.com/Sunny-117/js-challenges/issues/225)\n- [实现平行四边形](https://github.com/Sunny-117/js-challenges/issues/226)\n- [实现 九宫格](https://github.com/Sunny-117/js-challenges/issues/227)\n- [实现一个秒针绕一点转动的效果](https://github.com/Sunny-117/js-challenges/issues/228)\n- [实现一个 球 字节](https://github.com/Sunny-117/js-challenges/issues/229)\n- [圆弧旋转](https://github.com/Sunny-117/js-challenges/issues/230)\n- [使用div和css实现一个圆形，红色部分站60%，绿色40%](https://github.com/Sunny-117/js-challenges/issues/231)\n- [现在有一个进度条，进度条中间有一串文字，当我的进度条覆盖了文字之后，文字要去进度条反色，怎么实现？](https://github.com/Sunny-117/js-challenges/issues/232)\n- [shadowDOM实现css隔离](https://github.com/Sunny-117/js-challenges/issues/233)\n- [两烂布局](https://github.com/Sunny-117/js-challenges/issues/234)\n- [宽高自适应正方形](https://github.com/Sunny-117/js-challenges/issues/235)\n- [1px问题](https://github.com/Sunny-117/js-challenges/issues/236)\n- [实现 筛子 ](https://github.com/Sunny-117/js-challenges/issues/237)\n- [css3实现多行文字截断处理](https://github.com/Sunny-117/js-challenges/issues/238)\n- [三栏布局移动优先设计](https://github.com/Sunny-117/js-challenges/issues/239)\n- [css 实现一个自适应搜索框](https://github.com/Sunny-117/js-challenges/issues/240)\n- [css书卡布局](https://github.com/Sunny-117/js-challenges/issues/241)\n\n## JS 实现基本数据结构\n\n- [队列结构](https://github.com/Sunny-117/js-challenges/issues/242)\n- [哈希表](https://github.com/Sunny-117/js-challenges/issues/243)\n- [实现集合](https://github.com/Sunny-117/js-challenges/issues/244)\n- [用Javascript创建一个单链表](https://github.com/Sunny-117/js-challenges/issues/245)\n- [树结构](https://github.com/Sunny-117/js-challenges/issues/246)\n- [图结构](https://github.com/Sunny-117/js-challenges/issues/247)\n- [栈结构](https://github.com/Sunny-117/js-challenges/issues/248)\n- [js实现 堆](https://github.com/Sunny-117/js-challenges/issues/249)\n- [实现 Trie (前缀树)](https://github.com/Sunny-117/js-challenges/issues/250)\n- [top K](https://github.com/Sunny-117/js-challenges/issues/251)\n\n# 前端常考 leetcode 算法题\n\n## 前端 HOT 100题\n\n## 矩阵相关\n\n- [打印一个螺旋矩阵](https://github.com/Sunny-117/js-challenges/issues/217)\n\n## 数组\n\n- [买卖股票的最佳时机](https://github.com/Sunny-117/js-challenges/issues/268)\n\n## 链表\n\n## 二叉树\n\n# 更新中\n\n# 后续计划\n\n- [ ]  做成OJ判题系统\n- [ ]  区分题目难易程度\n- [ ]  单元测试\n- [ ]  正确答案集合merge\n\n大家可以给仓库一些建议，本仓库资源来源于社区，也完全服务于社区\n\n社区建议收集区：https://github.com/Sunny-117/js-challenges/discussions\n\n## Show your support\n\nGive a ⭐️ if this project helped you!\n\n## 📝 License\n\nCopyright © 2022 [sunny-117](https://github.com/sunny-117).<br />\nThis project is [MIT](https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89) licensed.\n\n---\n\n_This README was generated with ❤️ by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_\n","slug":"前端/学习/js基础/强哥题库","published":1,"updated":"2023-03-21T08:59:43.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7g003zo8hu3ipbgbi8","content":"<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000\" />\n  <a href=\"https://github.com/Sunny-117/js-challenges\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n  </a>\n  <a href=\"https://twitter.com/zhiqiangfu6sun\" target=\"_blank\">\n    <img alt=\"Twitter: zhiqiangfu6sun\" src=\"https://img.shields.io/twitter/follow/zhiqiangfu6sun.svg?style=social\" />\n  </a>\n</p>\n\n\n<blockquote>\n<p>集锦大厂面试常考的 前端手写题和leetcode算法题</p>\n</blockquote>\n<h3 id=\"🏠-Homepage\"><a href=\"#🏠-Homepage\" class=\"headerlink\" title=\"🏠 Homepage\"></a>🏠 <a href=\"https://github.com/Sunny-117/js-challenges\">Homepage</a></h3><h1 id=\"CONTENT\"><a href=\"#CONTENT\" class=\"headerlink\" title=\"CONTENT\"></a>CONTENT</h1><p>前端手写题集锦 use js 记录大厂<strong>笔试，面试常考</strong>手写题，2022年前端面试中常见的 leetcode 算法题, 致力打造最全的前端JavaScript手写题题库和答案的最优解</p>\n<blockquote>\n<p>题目来源：总结了牛客截止到2022年10月的所有大厂手写题[100%]，掘金部分出名的手写题文章，备战前端春招，秋招好友的总结好的题目(github), 就不一一列举链接啦，总之此项目题目来源于社区，答案也由社区讨论后merge，也完全服务于社区。</p>\n</blockquote>\n<p>谢谢您的star，您的star是我更新的动力🥳</p>\n<p><strong>里面有答案，为了让你们有一个参考，不过非常希望你们能提供自己的思路，指出答案中存在的问题，复杂度优化等等， 期待你们的contribute, 想来一起维护这个项目，可以联系我，成为contributor</strong></p>\n<p><strong>最后我把社区的好的答案汇总到一个目录下，答案专栏，方便刷题</strong></p>\n<h1 id=\"前端-JavaScript-手写题\"><a href=\"#前端-JavaScript-手写题\" class=\"headerlink\" title=\"前端 JavaScript 手写题\"></a>前端 JavaScript 手写题</h1><h2 id=\"JavaScript-HOT-100-题\"><a href=\"#JavaScript-HOT-100-题\" class=\"headerlink\" title=\"JavaScript HOT 100 题\"></a>JavaScript HOT 100 题</h2><blockquote>\n<p>中大厂面试，最常考的100个题，每一题都非常具有代表性，想要准备面试突击的同学，优先看这些题，祝在座的每一位都能拿到满意的offer</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/1\">实现Promise.all</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/37\">JSON2DOM = react的render函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/40\">树形结构转成列表</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/41\">列表转成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/9\">Array.prototype.flat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/32\">instanceof</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/30\">call apply bind</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/11\">Array.prototype.map</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/48\">正则表达式模版字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/20\">lodash.get</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/58\">深拷贝</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/59\">寄生组合式继承</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/60\">发布订阅者模式</a></li>\n</ul>\n<h2 id=\"实现-Promise-（hot）\"><a href=\"#实现-Promise-（hot）\" class=\"headerlink\" title=\"实现 Promise （hot）\"></a>实现 Promise （hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/8\">完整实现Promise A+</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/1\">实现Promise.all</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/2\">实现Promise.prototype.finally</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/3\">实现Promise.allSettled</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/4\">实现Promise.race</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/5\">实现 Promise.prototype.catch</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/6\">Promise.resolve </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/7\">Promise.reject</a></li>\n</ul>\n<h2 id=\"Promise-周边场景题（hot）\"><a href=\"#Promise-周边场景题（hot）\" class=\"headerlink\" title=\"Promise 周边场景题（hot）\"></a>Promise 周边场景题（hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/164\">交通灯</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/163\">封装异步的fetch，使用async await方式来使用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/162\">repeat(console.log, 5, 1000)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/161\">封装一个工具函数输入一个promiseA返回一个promiseB如果超过1s没返回则抛出异常如果正常则输出正确的值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/160\">请求5s未完成就终止</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/159\">实现一个sleep函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/158\">js每隔一秒打印1,2,3,4,5</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/156\">使用 setTimeout 实现 setInterval</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/155\">promise实现图片异步加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/154\">使用Promise封装AJAX请求</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/157\">我们能反过来使用 setinterval 模拟实现 settimeout 吗？ </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/172\">异步任务：依次发送3次网络请求，拿到服务器数据</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/171\">实现网络请求超时判断，超过三秒视为超时</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/170\">promise中断请求</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/169\">给定一系列的api，测量上传速度（实现的时候用的GET请求）并选择一个加载时间最短的api</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/168\">settimeout系统补偿时间</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/167\">setTimeout准时</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/166\">请求五秒未完成则终止</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/165\">并发多个请求，返回先得到response的。函数输入为url数组，输出为第一个返回的response的结果</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/153\">JS异步数据流，实现并发异步请求，结果顺序输出</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/152\">Promise串行</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/151\">处理高并发, 100 条数据，带宽为 10， 跑满带宽</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/150\">设计一个简单的任务队列, 要求分别在 1,3,4 秒后打印出 “1”, “2”, “3”；</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/149\">实现有并行限制的 Promise 调度器</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/148\">实现 Scheduler</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/147\">有并发限制的Promise.all(ts类型) </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/146\">实现 如果上一次的没请求完，之后的就无响应</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/145\">使用 Promise 实现每隔三秒输出时间</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/144\">使用 Promise 改写回调地狱</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/143\">设计一个函数，该函数的参数为可同时发送请求的大小，返回一个函数，该函数的参数为要请求的url。 实现的效果为，同时发送n个请求，当有请求返回后往请求队列里push新的请求，并输出刚刚结束的请求的返回值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/142\">Promise.retry 超时重新请求，并在重试一定次数依然失败时输出缓存内容</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/141\">写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal</a></li>\n</ul>\n<h2 id=\"JavaScript-常考手写题\"><a href=\"#JavaScript-常考手写题\" class=\"headerlink\" title=\"JavaScript 常考手写题\"></a>JavaScript 常考手写题</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/140\">产生一个不重复的随机数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/139\">await async 如何实现 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/138\">使用递归完成 1 到 100 的累加 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/137\">打印出 1~10000 以内的对称数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/136\">实现一个字符串匹配算法indexOf</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/135\">请实现一个模块 math，支持链式调用math.add(2,4).minus(3).times(2); </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/134\">手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴2020）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/133\">有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90） </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/132\">之字形打印矩阵</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/131\">数组中的最大值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/130\">尾递归（斐波那契数列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/129\">实现简单路由 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/128\">封装一个localstorage的setItem和getItem方法</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/127\">1-1000回文数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/126\">随机生成字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/125\">判断一个字符串是否为驼峰字符串， judge(‘ByteDance’,’BD’) -&gt; true judge(‘Bytedance’,’BD’) -&gt; false</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/124\">压缩字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/123\">Map场景题 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/122\">输入50a6we8y20x 输出50个a，6个we，8个y，20个x</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/121\">手写defineProperty</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/120\">String string 值一样返回true Object Object 返回true function function 都是声明的一个新的变量 返回false</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/119\">对输入的字符串：去除其中的字符’b’；去除相邻的’a’和’c’</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/118\">用一行代码，将数组中的字符串和字符串对象(new String(123))直接判定出来</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/117\">before</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/116\">实现一下 console.log </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/115\">实现(5).add(3).minus(2)功能</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/114\">将十进制数字转为二进制数字字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/113\">封装remove child.remove()销毁自身</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/112\">字符串中字母的出现次数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/111\">输出一个等腰三角形</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/110\">实现一个函数a，使其奇数次调用时返回1，偶数次调用时返回2（不能使用全局变量）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/109\">求 最接近的值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/108\">不用循环求和</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/107\">连续赋值操作</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/106\">输入一串字符串，根据字符串求出每个字母的数量并返回结果对象。（数字为1时可省略</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/105\">创建包含10个1的数组 多种方法</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/104\">[‘zm’, ‘za’, ‘b’, ‘lm’, ‘ln’, ‘k’] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/103\">[“0-&gt;2”, “4-&gt;5”, “7”, “13”, “15-&gt;16”] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/102\">[‘ab’, ‘c’, ‘ab’, ‘d’, ‘c’] =&gt; [‘ab1’, ‘c1’ ,’ab2’, ‘d’, ‘c2’] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/101\">移除空属性</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/100\">判断两个对象是否相等</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/98\">一个数组，找出每个数组元素右侧第一个比当前数大的数的下标，时间复杂度O(N)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/97\">寻找出现次数最多的三个标签</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/96\">素数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/95\">实现日期格式化函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/94\">实现 jsonp</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/93\">URL反转 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/92\">解析 URL Params 为对象</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/91\">调用计数器（支持重置）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/90\">颜色生成</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/89\">JavaScript怎么清空数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/88\">判断A、B数组的包含关系（值和数量），A属于B返回1，B属于A返回2，两者相等返回0，其他返回-1</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/87\">对象的合并</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/86\">实现一个 无限延伸数组</a>)</li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/85\">多行字符串转二维数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/84\">请实现一个通用的Array解构赋值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/83\">数组合并</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/82\">数组交集，并集，差集</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/81\">多维数组全排列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/80\">判断对象是否存在循环引用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/79\">实现函数solution(arr, k)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/78\">逆对象扁平</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/77\">对象扁平化</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/76\">实现 执行一次的函数 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/75\">链式调用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/74\">偏函数 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/73\">实现管道函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/72\">手写事件代理（委托） </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/71\">数据类型判断</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/70\">类数组转数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/69\">预加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/68\">图片懒加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/67\">数组去重</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/66\">防抖 节流</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/65\">函数组合 compose redux-saga koa 洋葱模型</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/64\">sum(x,y)和sum(x)(y)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/63\">curry柯里化</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/252\">实现xxx时间之前的函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/253\">n个2的n次方之和</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/254\">无限动画</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/255\">瀑布流</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/256\">匹配 “a*c”, “abcaacc” </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/257\">一个字符串中是否出现某串字符,出现的话返回索引</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/258\">实现一个属性选择器</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/259\">字符串转数字</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/260\">实现一个跨浏览器事件工具</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/261\">12 调用计数器（支持重置）</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/262\">实现内存函数缓存函数调用结果</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/263\">返回给定七个扑克牌是否有同花顺，数据结构 [{num: 1, hua: ‘s’}, …]</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/264\">JS定义一个 log 方法 </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/265\">阿拉伯数字专汉字(偏难)</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/266\">用代码实现把字符串转换成base64编码</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/272\">设计LRU缓存结构</a></li>\n</ul>\n<h2 id=\"设计模式相关\"><a href=\"#设计模式相关\" class=\"headerlink\" title=\"设计模式相关\"></a>设计模式相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/62\">观察者模式</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/60\">发布订阅者模式</a></li>\n</ul>\n<h2 id=\"树-场景题（hot）\"><a href=\"#树-场景题（hot）\" class=\"headerlink\" title=\"树-场景题（hot）\"></a>树-场景题（hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/36\">DOM2JSON</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/37\">JSON2DOM = react的render函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/38\">计算目录树的深度</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/39\">树形结构获取路径名</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/40\">树形结构转成列表</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/41\">列表转成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/42\">对象树遍历</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/43\">获取树对象属性</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/44\">查找json中的children路径</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/45\">对象字符串转化成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/46\">判断有无符合路径和 -&gt; 打印所有路径</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/47\">获取树结构中的name：getName</a></li>\n</ul>\n<h2 id=\"实现-JS-原生方法\"><a href=\"#实现-JS-原生方法\" class=\"headerlink\" title=\"实现 JS 原生方法\"></a>实现 JS 原生方法</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/9\">Array.prototype.flat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/10\">Array.prototype.forEach</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/11\">Array.prototype.map</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/12\">Array.prototype.filter</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/13\">Array.prototype.reduce</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/14\">Array.prototype.fill</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/15\">Array.prototype.includes</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/16\">Array.prototype.push</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/17\">Array.prototype.unshift</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/18\">Array.prototype.copy</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/19\">Array.prototype.getLevel</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/21\">实现es6的set集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/22\">实现es6的map集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/23\">String.prototype.zpadStart</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/25\">Object.assign</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/26\">Object.is</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/28\">JSON.stringify</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/29\">JSON.parse</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/30\">call apply bind</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/32\">instanceof</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/33\">trim</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/34\">实现new</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/35\">String.prototype.repeat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/204\">String.prototype.includes</a></li>\n</ul>\n<h2 id=\"JS-库函数实现\"><a href=\"#JS-库函数实现\" class=\"headerlink\" title=\"JS 库函数实现\"></a>JS 库函数实现</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/20\">lodash.get</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/99\">lodash.chunk</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/222\">lodash.once</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/216\">classnames</a></li>\n</ul>\n<h2 id=\"js-utils\"><a href=\"#js-utils\" class=\"headerlink\" title=\"js utils\"></a>js utils</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/24\">判断一个对象是否是isPlainObject</a></li>\n</ul>\n<h2 id=\"手写-nodejs-模块\"><a href=\"#手写-nodejs-模块\" class=\"headerlink\" title=\"手写 nodejs 模块\"></a>手写 nodejs 模块</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/31\">promisify</a></li>\n</ul>\n<h2 id=\"正则相关\"><a href=\"#正则相关\" class=\"headerlink\" title=\"正则相关\"></a>正则相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/48\">正则表达式模版字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/49\">正则判断手机号，qq，颜色，邮箱</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/50\">字符串的大小写取反</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/51\">检验字符串首尾是否含有数字</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/52\">去除字符串空格</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/53\">去除字符串中的字母</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/54\">正则 驼峰转换</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/55\">对象key的驼峰转下划线</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/56\">判断字符串中是否存在连续的三个数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/57\">((2+3)+(3*4))+2—-&gt;[‘(2 + 3)+(3 * 4)’, ‘2 + 3’, ‘3 * 4’] </a></li>\n</ul>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/193\">冒泡排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/194\">选择排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/195\">快速排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/196\">插入排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/197\">归并排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/202\">基数排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/201\">计数排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/200\">希尔排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/199\">桶排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/198\">堆排序</a></li>\n</ul>\n<h2 id=\"实现自定义HOOK\"><a href=\"#实现自定义HOOK\" class=\"headerlink\" title=\"实现自定义HOOK\"></a>实现自定义HOOK</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/192\">Hooks怎么封装手势逻辑</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/191\">Hooks实现移动端的滑动轮播插件 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/190\">如何用 Hooks 模拟 componentDidMount 与componentWillUnmount</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/189\">实现一个useBodyScrollLock ，当出现弹窗时 阻止背景滚动</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/188\">ts 实现 hooks: useInterval</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/187\">实现 useQuery</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/186\">实现useRequest</a></li>\n</ul>\n<h2 id=\"组件设计题（Vue-React-JS均可）\"><a href=\"#组件设计题（Vue-React-JS均可）\" class=\"headerlink\" title=\"组件设计题（Vue/React/JS均可）\"></a>组件设计题（Vue/React/JS均可）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/178\">全选</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/177\">轮播图</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/176\">根据response渲染table</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/175\">歌词滚动功能(hot)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/174\">实现一个 百度搜索框 （搜索提示）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/173\">实现todos</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/185\">计时器或倒计时组件</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/184\">设计一个公会入驻信息提交页</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/183\">编码实现宽高不相同图片的自适配排列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/182\">列表子元素顺序反转</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/181\">遍历树组件</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/180\">选项卡</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/179\">拖拽</a></li>\n</ul>\n<h2 id=\"HTML-CSS-手写题\"><a href=\"#HTML-CSS-手写题\" class=\"headerlink\" title=\"HTML CSS 手写题\"></a>HTML CSS 手写题</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/203\">实现圆形环状进度条</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/224\">等边三角形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/225\">实现 扇形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/226\">实现平行四边形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/227\">实现 九宫格</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/228\">实现一个秒针绕一点转动的效果</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/229\">实现一个 球 字节</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/230\">圆弧旋转</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/231\">使用div和css实现一个圆形，红色部分站60%，绿色40%</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/232\">现在有一个进度条，进度条中间有一串文字，当我的进度条覆盖了文字之后，文字要去进度条反色，怎么实现？</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/233\">shadowDOM实现css隔离</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/234\">两烂布局</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/235\">宽高自适应正方形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/236\">1px问题</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/237\">实现 筛子 </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/238\">css3实现多行文字截断处理</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/239\">三栏布局移动优先设计</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/240\">css 实现一个自适应搜索框</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/241\">css书卡布局</a></li>\n</ul>\n<h2 id=\"JS-实现基本数据结构\"><a href=\"#JS-实现基本数据结构\" class=\"headerlink\" title=\"JS 实现基本数据结构\"></a>JS 实现基本数据结构</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/242\">队列结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/243\">哈希表</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/244\">实现集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/245\">用Javascript创建一个单链表</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/246\">树结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/247\">图结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/248\">栈结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/249\">js实现 堆</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/250\">实现 Trie (前缀树)</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/251\">top K</a></li>\n</ul>\n<h1 id=\"前端常考-leetcode-算法题\"><a href=\"#前端常考-leetcode-算法题\" class=\"headerlink\" title=\"前端常考 leetcode 算法题\"></a>前端常考 leetcode 算法题</h1><h2 id=\"前端-HOT-100题\"><a href=\"#前端-HOT-100题\" class=\"headerlink\" title=\"前端 HOT 100题\"></a>前端 HOT 100题</h2><h2 id=\"矩阵相关\"><a href=\"#矩阵相关\" class=\"headerlink\" title=\"矩阵相关\"></a>矩阵相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/217\">打印一个螺旋矩阵</a></li>\n</ul>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/268\">买卖股票的最佳时机</a></li>\n</ul>\n<h2 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h2><h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><h1 id=\"更新中\"><a href=\"#更新中\" class=\"headerlink\" title=\"更新中\"></a>更新中</h1><h1 id=\"后续计划\"><a href=\"#后续计划\" class=\"headerlink\" title=\"后续计划\"></a>后续计划</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 做成OJ判题系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 区分题目难易程度</li>\n<li><input disabled=\"\" type=\"checkbox\"> 单元测试</li>\n<li><input disabled=\"\" type=\"checkbox\"> 正确答案集合merge</li>\n</ul>\n<p>大家可以给仓库一些建议，本仓库资源来源于社区，也完全服务于社区</p>\n<p>社区建议收集区：<a href=\"https://github.com/Sunny-117/js-challenges/discussions\">https://github.com/Sunny-117/js-challenges/discussions</a></p>\n<h2 id=\"Show-your-support\"><a href=\"#Show-your-support\" class=\"headerlink\" title=\"Show your support\"></a>Show your support</h2><p>Give a ⭐️ if this project helped you!</p>\n<h2 id=\"📝-License\"><a href=\"#📝-License\" class=\"headerlink\" title=\"📝 License\"></a>📝 License</h2><p>Copyright © 2022 <a href=\"https://github.com/sunny-117\">sunny-117</a>.<br /><br>This project is <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\">MIT</a> licensed.</p>\n<hr>\n<p><em>This README was generated with ❤️ by <a href=\"https://github.com/kefranabg/readme-md-generator\">readme-md-generator</a></em></p>\n","site":{"data":{}},"excerpt":"","more":"<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000\" />\n  <a href=\"https://github.com/Sunny-117/js-challenges\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n  </a>\n  <a href=\"https://twitter.com/zhiqiangfu6sun\" target=\"_blank\">\n    <img alt=\"Twitter: zhiqiangfu6sun\" src=\"https://img.shields.io/twitter/follow/zhiqiangfu6sun.svg?style=social\" />\n  </a>\n</p>\n\n\n<blockquote>\n<p>集锦大厂面试常考的 前端手写题和leetcode算法题</p>\n</blockquote>\n<h3 id=\"🏠-Homepage\"><a href=\"#🏠-Homepage\" class=\"headerlink\" title=\"🏠 Homepage\"></a>🏠 <a href=\"https://github.com/Sunny-117/js-challenges\">Homepage</a></h3><h1 id=\"CONTENT\"><a href=\"#CONTENT\" class=\"headerlink\" title=\"CONTENT\"></a>CONTENT</h1><p>前端手写题集锦 use js 记录大厂<strong>笔试，面试常考</strong>手写题，2022年前端面试中常见的 leetcode 算法题, 致力打造最全的前端JavaScript手写题题库和答案的最优解</p>\n<blockquote>\n<p>题目来源：总结了牛客截止到2022年10月的所有大厂手写题[100%]，掘金部分出名的手写题文章，备战前端春招，秋招好友的总结好的题目(github), 就不一一列举链接啦，总之此项目题目来源于社区，答案也由社区讨论后merge，也完全服务于社区。</p>\n</blockquote>\n<p>谢谢您的star，您的star是我更新的动力🥳</p>\n<p><strong>里面有答案，为了让你们有一个参考，不过非常希望你们能提供自己的思路，指出答案中存在的问题，复杂度优化等等， 期待你们的contribute, 想来一起维护这个项目，可以联系我，成为contributor</strong></p>\n<p><strong>最后我把社区的好的答案汇总到一个目录下，答案专栏，方便刷题</strong></p>\n<h1 id=\"前端-JavaScript-手写题\"><a href=\"#前端-JavaScript-手写题\" class=\"headerlink\" title=\"前端 JavaScript 手写题\"></a>前端 JavaScript 手写题</h1><h2 id=\"JavaScript-HOT-100-题\"><a href=\"#JavaScript-HOT-100-题\" class=\"headerlink\" title=\"JavaScript HOT 100 题\"></a>JavaScript HOT 100 题</h2><blockquote>\n<p>中大厂面试，最常考的100个题，每一题都非常具有代表性，想要准备面试突击的同学，优先看这些题，祝在座的每一位都能拿到满意的offer</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/1\">实现Promise.all</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/37\">JSON2DOM = react的render函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/40\">树形结构转成列表</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/41\">列表转成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/9\">Array.prototype.flat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/32\">instanceof</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/30\">call apply bind</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/11\">Array.prototype.map</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/48\">正则表达式模版字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/20\">lodash.get</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/58\">深拷贝</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/59\">寄生组合式继承</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/60\">发布订阅者模式</a></li>\n</ul>\n<h2 id=\"实现-Promise-（hot）\"><a href=\"#实现-Promise-（hot）\" class=\"headerlink\" title=\"实现 Promise （hot）\"></a>实现 Promise （hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/8\">完整实现Promise A+</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/1\">实现Promise.all</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/2\">实现Promise.prototype.finally</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/3\">实现Promise.allSettled</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/4\">实现Promise.race</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/5\">实现 Promise.prototype.catch</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/6\">Promise.resolve </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/7\">Promise.reject</a></li>\n</ul>\n<h2 id=\"Promise-周边场景题（hot）\"><a href=\"#Promise-周边场景题（hot）\" class=\"headerlink\" title=\"Promise 周边场景题（hot）\"></a>Promise 周边场景题（hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/164\">交通灯</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/163\">封装异步的fetch，使用async await方式来使用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/162\">repeat(console.log, 5, 1000)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/161\">封装一个工具函数输入一个promiseA返回一个promiseB如果超过1s没返回则抛出异常如果正常则输出正确的值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/160\">请求5s未完成就终止</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/159\">实现一个sleep函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/158\">js每隔一秒打印1,2,3,4,5</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/156\">使用 setTimeout 实现 setInterval</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/155\">promise实现图片异步加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/154\">使用Promise封装AJAX请求</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/157\">我们能反过来使用 setinterval 模拟实现 settimeout 吗？ </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/172\">异步任务：依次发送3次网络请求，拿到服务器数据</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/171\">实现网络请求超时判断，超过三秒视为超时</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/170\">promise中断请求</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/169\">给定一系列的api，测量上传速度（实现的时候用的GET请求）并选择一个加载时间最短的api</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/168\">settimeout系统补偿时间</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/167\">setTimeout准时</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/166\">请求五秒未完成则终止</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/165\">并发多个请求，返回先得到response的。函数输入为url数组，输出为第一个返回的response的结果</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/153\">JS异步数据流，实现并发异步请求，结果顺序输出</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/152\">Promise串行</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/151\">处理高并发, 100 条数据，带宽为 10， 跑满带宽</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/150\">设计一个简单的任务队列, 要求分别在 1,3,4 秒后打印出 “1”, “2”, “3”；</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/149\">实现有并行限制的 Promise 调度器</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/148\">实现 Scheduler</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/147\">有并发限制的Promise.all(ts类型) </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/146\">实现 如果上一次的没请求完，之后的就无响应</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/145\">使用 Promise 实现每隔三秒输出时间</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/144\">使用 Promise 改写回调地狱</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/143\">设计一个函数，该函数的参数为可同时发送请求的大小，返回一个函数，该函数的参数为要请求的url。 实现的效果为，同时发送n个请求，当有请求返回后往请求队列里push新的请求，并输出刚刚结束的请求的返回值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/142\">Promise.retry 超时重新请求，并在重试一定次数依然失败时输出缓存内容</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/141\">写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal</a></li>\n</ul>\n<h2 id=\"JavaScript-常考手写题\"><a href=\"#JavaScript-常考手写题\" class=\"headerlink\" title=\"JavaScript 常考手写题\"></a>JavaScript 常考手写题</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/140\">产生一个不重复的随机数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/139\">await async 如何实现 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/138\">使用递归完成 1 到 100 的累加 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/137\">打印出 1~10000 以内的对称数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/136\">实现一个字符串匹配算法indexOf</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/135\">请实现一个模块 math，支持链式调用math.add(2,4).minus(3).times(2); </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/134\">手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴2020）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/133\">有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90） </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/132\">之字形打印矩阵</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/131\">数组中的最大值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/130\">尾递归（斐波那契数列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/129\">实现简单路由 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/128\">封装一个localstorage的setItem和getItem方法</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/127\">1-1000回文数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/126\">随机生成字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/125\">判断一个字符串是否为驼峰字符串， judge(‘ByteDance’,’BD’) -&gt; true judge(‘Bytedance’,’BD’) -&gt; false</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/124\">压缩字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/123\">Map场景题 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/122\">输入50a6we8y20x 输出50个a，6个we，8个y，20个x</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/121\">手写defineProperty</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/120\">String string 值一样返回true Object Object 返回true function function 都是声明的一个新的变量 返回false</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/119\">对输入的字符串：去除其中的字符’b’；去除相邻的’a’和’c’</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/118\">用一行代码，将数组中的字符串和字符串对象(new String(123))直接判定出来</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/117\">before</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/116\">实现一下 console.log </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/115\">实现(5).add(3).minus(2)功能</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/114\">将十进制数字转为二进制数字字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/113\">封装remove child.remove()销毁自身</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/112\">字符串中字母的出现次数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/111\">输出一个等腰三角形</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/110\">实现一个函数a，使其奇数次调用时返回1，偶数次调用时返回2（不能使用全局变量）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/109\">求 最接近的值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/108\">不用循环求和</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/107\">连续赋值操作</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/106\">输入一串字符串，根据字符串求出每个字母的数量并返回结果对象。（数字为1时可省略</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/105\">创建包含10个1的数组 多种方法</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/104\">[‘zm’, ‘za’, ‘b’, ‘lm’, ‘ln’, ‘k’] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/103\">[“0-&gt;2”, “4-&gt;5”, “7”, “13”, “15-&gt;16”] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/102\">[‘ab’, ‘c’, ‘ab’, ‘d’, ‘c’] =&gt; [‘ab1’, ‘c1’ ,’ab2’, ‘d’, ‘c2’] </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/101\">移除空属性</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/100\">判断两个对象是否相等</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/98\">一个数组，找出每个数组元素右侧第一个比当前数大的数的下标，时间复杂度O(N)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/97\">寻找出现次数最多的三个标签</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/96\">素数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/95\">实现日期格式化函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/94\">实现 jsonp</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/93\">URL反转 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/92\">解析 URL Params 为对象</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/91\">调用计数器（支持重置）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/90\">颜色生成</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/89\">JavaScript怎么清空数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/88\">判断A、B数组的包含关系（值和数量），A属于B返回1，B属于A返回2，两者相等返回0，其他返回-1</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/87\">对象的合并</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/86\">实现一个 无限延伸数组</a>)</li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/85\">多行字符串转二维数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/84\">请实现一个通用的Array解构赋值</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/83\">数组合并</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/82\">数组交集，并集，差集</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/81\">多维数组全排列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/80\">判断对象是否存在循环引用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/79\">实现函数solution(arr, k)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/78\">逆对象扁平</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/77\">对象扁平化</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/76\">实现 执行一次的函数 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/75\">链式调用</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/74\">偏函数 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/73\">实现管道函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/72\">手写事件代理（委托） </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/71\">数据类型判断</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/70\">类数组转数组</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/69\">预加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/68\">图片懒加载</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/67\">数组去重</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/66\">防抖 节流</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/65\">函数组合 compose redux-saga koa 洋葱模型</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/64\">sum(x,y)和sum(x)(y)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/63\">curry柯里化</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/252\">实现xxx时间之前的函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/253\">n个2的n次方之和</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/254\">无限动画</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/255\">瀑布流</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/256\">匹配 “a*c”, “abcaacc” </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/257\">一个字符串中是否出现某串字符,出现的话返回索引</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/258\">实现一个属性选择器</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/259\">字符串转数字</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/260\">实现一个跨浏览器事件工具</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/261\">12 调用计数器（支持重置）</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/262\">实现内存函数缓存函数调用结果</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/263\">返回给定七个扑克牌是否有同花顺，数据结构 [{num: 1, hua: ‘s’}, …]</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/264\">JS定义一个 log 方法 </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/265\">阿拉伯数字专汉字(偏难)</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/266\">用代码实现把字符串转换成base64编码</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/272\">设计LRU缓存结构</a></li>\n</ul>\n<h2 id=\"设计模式相关\"><a href=\"#设计模式相关\" class=\"headerlink\" title=\"设计模式相关\"></a>设计模式相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/62\">观察者模式</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/60\">发布订阅者模式</a></li>\n</ul>\n<h2 id=\"树-场景题（hot）\"><a href=\"#树-场景题（hot）\" class=\"headerlink\" title=\"树-场景题（hot）\"></a>树-场景题（hot）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/36\">DOM2JSON</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/37\">JSON2DOM = react的render函数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/38\">计算目录树的深度</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/39\">树形结构获取路径名</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/40\">树形结构转成列表</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/41\">列表转成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/42\">对象树遍历</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/43\">获取树对象属性</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/44\">查找json中的children路径</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/45\">对象字符串转化成树形结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/46\">判断有无符合路径和 -&gt; 打印所有路径</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/47\">获取树结构中的name：getName</a></li>\n</ul>\n<h2 id=\"实现-JS-原生方法\"><a href=\"#实现-JS-原生方法\" class=\"headerlink\" title=\"实现 JS 原生方法\"></a>实现 JS 原生方法</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/9\">Array.prototype.flat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/10\">Array.prototype.forEach</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/11\">Array.prototype.map</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/12\">Array.prototype.filter</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/13\">Array.prototype.reduce</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/14\">Array.prototype.fill</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/15\">Array.prototype.includes</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/16\">Array.prototype.push</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/17\">Array.prototype.unshift</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/18\">Array.prototype.copy</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/19\">Array.prototype.getLevel</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/21\">实现es6的set集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/22\">实现es6的map集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/23\">String.prototype.zpadStart</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/25\">Object.assign</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/26\">Object.is</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/28\">JSON.stringify</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/29\">JSON.parse</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/30\">call apply bind</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/32\">instanceof</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/33\">trim</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/34\">实现new</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/35\">String.prototype.repeat</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/204\">String.prototype.includes</a></li>\n</ul>\n<h2 id=\"JS-库函数实现\"><a href=\"#JS-库函数实现\" class=\"headerlink\" title=\"JS 库函数实现\"></a>JS 库函数实现</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/20\">lodash.get</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/99\">lodash.chunk</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/222\">lodash.once</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/216\">classnames</a></li>\n</ul>\n<h2 id=\"js-utils\"><a href=\"#js-utils\" class=\"headerlink\" title=\"js utils\"></a>js utils</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/24\">判断一个对象是否是isPlainObject</a></li>\n</ul>\n<h2 id=\"手写-nodejs-模块\"><a href=\"#手写-nodejs-模块\" class=\"headerlink\" title=\"手写 nodejs 模块\"></a>手写 nodejs 模块</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/31\">promisify</a></li>\n</ul>\n<h2 id=\"正则相关\"><a href=\"#正则相关\" class=\"headerlink\" title=\"正则相关\"></a>正则相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/48\">正则表达式模版字符串</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/49\">正则判断手机号，qq，颜色，邮箱</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/50\">字符串的大小写取反</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/51\">检验字符串首尾是否含有数字</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/52\">去除字符串空格</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/53\">去除字符串中的字母</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/54\">正则 驼峰转换</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/55\">对象key的驼峰转下划线</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/56\">判断字符串中是否存在连续的三个数</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/57\">((2+3)+(3*4))+2—-&gt;[‘(2 + 3)+(3 * 4)’, ‘2 + 3’, ‘3 * 4’] </a></li>\n</ul>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/193\">冒泡排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/194\">选择排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/195\">快速排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/196\">插入排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/197\">归并排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/202\">基数排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/201\">计数排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/200\">希尔排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/199\">桶排序</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/198\">堆排序</a></li>\n</ul>\n<h2 id=\"实现自定义HOOK\"><a href=\"#实现自定义HOOK\" class=\"headerlink\" title=\"实现自定义HOOK\"></a>实现自定义HOOK</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/192\">Hooks怎么封装手势逻辑</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/191\">Hooks实现移动端的滑动轮播插件 </a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/190\">如何用 Hooks 模拟 componentDidMount 与componentWillUnmount</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/189\">实现一个useBodyScrollLock ，当出现弹窗时 阻止背景滚动</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/188\">ts 实现 hooks: useInterval</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/187\">实现 useQuery</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/186\">实现useRequest</a></li>\n</ul>\n<h2 id=\"组件设计题（Vue-React-JS均可）\"><a href=\"#组件设计题（Vue-React-JS均可）\" class=\"headerlink\" title=\"组件设计题（Vue/React/JS均可）\"></a>组件设计题（Vue/React/JS均可）</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/178\">全选</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/177\">轮播图</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/176\">根据response渲染table</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/175\">歌词滚动功能(hot)</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/174\">实现一个 百度搜索框 （搜索提示）</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/173\">实现todos</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/185\">计时器或倒计时组件</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/184\">设计一个公会入驻信息提交页</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/183\">编码实现宽高不相同图片的自适配排列</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/182\">列表子元素顺序反转</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/181\">遍历树组件</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/180\">选项卡</a></li>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/179\">拖拽</a></li>\n</ul>\n<h2 id=\"HTML-CSS-手写题\"><a href=\"#HTML-CSS-手写题\" class=\"headerlink\" title=\"HTML CSS 手写题\"></a>HTML CSS 手写题</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/Front-end-handwritten-question/issues/203\">实现圆形环状进度条</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/224\">等边三角形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/225\">实现 扇形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/226\">实现平行四边形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/227\">实现 九宫格</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/228\">实现一个秒针绕一点转动的效果</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/229\">实现一个 球 字节</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/230\">圆弧旋转</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/231\">使用div和css实现一个圆形，红色部分站60%，绿色40%</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/232\">现在有一个进度条，进度条中间有一串文字，当我的进度条覆盖了文字之后，文字要去进度条反色，怎么实现？</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/233\">shadowDOM实现css隔离</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/234\">两烂布局</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/235\">宽高自适应正方形</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/236\">1px问题</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/237\">实现 筛子 </a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/238\">css3实现多行文字截断处理</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/239\">三栏布局移动优先设计</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/240\">css 实现一个自适应搜索框</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/241\">css书卡布局</a></li>\n</ul>\n<h2 id=\"JS-实现基本数据结构\"><a href=\"#JS-实现基本数据结构\" class=\"headerlink\" title=\"JS 实现基本数据结构\"></a>JS 实现基本数据结构</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/242\">队列结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/243\">哈希表</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/244\">实现集合</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/245\">用Javascript创建一个单链表</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/246\">树结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/247\">图结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/248\">栈结构</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/249\">js实现 堆</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/250\">实现 Trie (前缀树)</a></li>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/251\">top K</a></li>\n</ul>\n<h1 id=\"前端常考-leetcode-算法题\"><a href=\"#前端常考-leetcode-算法题\" class=\"headerlink\" title=\"前端常考 leetcode 算法题\"></a>前端常考 leetcode 算法题</h1><h2 id=\"前端-HOT-100题\"><a href=\"#前端-HOT-100题\" class=\"headerlink\" title=\"前端 HOT 100题\"></a>前端 HOT 100题</h2><h2 id=\"矩阵相关\"><a href=\"#矩阵相关\" class=\"headerlink\" title=\"矩阵相关\"></a>矩阵相关</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/217\">打印一个螺旋矩阵</a></li>\n</ul>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><ul>\n<li><a href=\"https://github.com/Sunny-117/js-challenges/issues/268\">买卖股票的最佳时机</a></li>\n</ul>\n<h2 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h2><h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><h1 id=\"更新中\"><a href=\"#更新中\" class=\"headerlink\" title=\"更新中\"></a>更新中</h1><h1 id=\"后续计划\"><a href=\"#后续计划\" class=\"headerlink\" title=\"后续计划\"></a>后续计划</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 做成OJ判题系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 区分题目难易程度</li>\n<li><input disabled=\"\" type=\"checkbox\"> 单元测试</li>\n<li><input disabled=\"\" type=\"checkbox\"> 正确答案集合merge</li>\n</ul>\n<p>大家可以给仓库一些建议，本仓库资源来源于社区，也完全服务于社区</p>\n<p>社区建议收集区：<a href=\"https://github.com/Sunny-117/js-challenges/discussions\">https://github.com/Sunny-117/js-challenges/discussions</a></p>\n<h2 id=\"Show-your-support\"><a href=\"#Show-your-support\" class=\"headerlink\" title=\"Show your support\"></a>Show your support</h2><p>Give a ⭐️ if this project helped you!</p>\n<h2 id=\"📝-License\"><a href=\"#📝-License\" class=\"headerlink\" title=\"📝 License\"></a>📝 License</h2><p>Copyright © 2022 <a href=\"https://github.com/sunny-117\">sunny-117</a>.<br /><br>This project is <a href=\"https://zh.wikipedia.org/zh-cn/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89\">MIT</a> licensed.</p>\n<hr>\n<p><em>This README was generated with ❤️ by <a href=\"https://github.com/kefranabg/readme-md-generator\">readme-md-generator</a></em></p>\n"},{"title":"获取网页中的文字节点","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nvar array = [];\nvar allText = \"\"\nlet res = \"\"\nfunction onload() {\n    var tags = document.body.getElementsByTagName('*');\n    for (var i = 0; i < tags.length; i++) {\n        if (tags[i].nodeName != \"SCRIPT\" && tags[i].nodeName != \"STYLE\" && tags[i].nodeName != \"TEXTAREA\") {\n            //过滤script、style和textarea标签\n            array.push(getText(tags[i]));\n        }\n    }\n}\nvar getText = function (dom) {\n    allText = dom.innerHTML\n    allText = allText.replace(/<\\/?.+?\\/?>/g, '')//去除标签\n    allText = allText.replace(/\\s+/g, '');//去除空格\n    if (allText == \"\") return;\n    res += allText\n    // console.log(allText)\n    return allText;\n}\nonload();\nconsole.log(array.join(\" \"));\n```\n\n党的二十大制定了当前和今后一个时期党和国家的大政方针，描绘了以中国式现代化全面推进中华民族伟大复兴的宏伟蓝图。中央和国家机关广大干部表示，在学习中，深刻理解全面建设社会主义现代化国家战略布局的科学性和必然性，增强了贯彻落实的自觉性和坚定性。\n","source":"_posts/前端/学习/js基础/获取网页中的文字节点.md","raw":"---\ntitle: '获取网页中的文字节点'\ndate: 2022-10-15 10:06:51\ntags: 练习\ncategories: js\n---\n\n```javascript\nvar array = [];\nvar allText = \"\"\nlet res = \"\"\nfunction onload() {\n    var tags = document.body.getElementsByTagName('*');\n    for (var i = 0; i < tags.length; i++) {\n        if (tags[i].nodeName != \"SCRIPT\" && tags[i].nodeName != \"STYLE\" && tags[i].nodeName != \"TEXTAREA\") {\n            //过滤script、style和textarea标签\n            array.push(getText(tags[i]));\n        }\n    }\n}\nvar getText = function (dom) {\n    allText = dom.innerHTML\n    allText = allText.replace(/<\\/?.+?\\/?>/g, '')//去除标签\n    allText = allText.replace(/\\s+/g, '');//去除空格\n    if (allText == \"\") return;\n    res += allText\n    // console.log(allText)\n    return allText;\n}\nonload();\nconsole.log(array.join(\" \"));\n```\n\n党的二十大制定了当前和今后一个时期党和国家的大政方针，描绘了以中国式现代化全面推进中华民族伟大复兴的宏伟蓝图。中央和国家机关广大干部表示，在学习中，深刻理解全面建设社会主义现代化国家战略布局的科学性和必然性，增强了贯彻落实的自觉性和坚定性。\n","slug":"前端/学习/js基础/获取网页中的文字节点","published":1,"updated":"2023-03-21T09:15:22.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7i0046o8huf0ue7gzs","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> allText = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tags = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tags.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;SCRIPT&quot;</span> &amp;&amp; tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;STYLE&quot;</span> &amp;&amp; tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;TEXTAREA&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//过滤script、style和textarea标签</span></span><br><span class=\"line\">            array.<span class=\"title function_\">push</span>(<span class=\"title function_\">getText</span>(tags[i]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> getText = <span class=\"keyword\">function</span> (<span class=\"params\">dom</span>) &#123;</span><br><span class=\"line\">    allText = dom.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">    allText = allText.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;\\/?.+?\\/?&gt;/g</span>, <span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">//去除标签</span></span><br><span class=\"line\">    allText = allText.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">&#x27;&#x27;</span>);<span class=\"comment\">//去除空格</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (allText == <span class=\"string\">&quot;&quot;</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    res += allText</span><br><span class=\"line\">    <span class=\"comment\">// console.log(allText)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> allText;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">onload</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array.<span class=\"title function_\">join</span>(<span class=\"string\">&quot; &quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>党的二十大制定了当前和今后一个时期党和国家的大政方针，描绘了以中国式现代化全面推进中华民族伟大复兴的宏伟蓝图。中央和国家机关广大干部表示，在学习中，深刻理解全面建设社会主义现代化国家战略布局的科学性和必然性，增强了贯彻落实的自觉性和坚定性。</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> allText = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onload</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tags = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tags.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;SCRIPT&quot;</span> &amp;&amp; tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;STYLE&quot;</span> &amp;&amp; tags[i].<span class=\"property\">nodeName</span> != <span class=\"string\">&quot;TEXTAREA&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//过滤script、style和textarea标签</span></span><br><span class=\"line\">            array.<span class=\"title function_\">push</span>(<span class=\"title function_\">getText</span>(tags[i]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> getText = <span class=\"keyword\">function</span> (<span class=\"params\">dom</span>) &#123;</span><br><span class=\"line\">    allText = dom.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">    allText = allText.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;\\/?.+?\\/?&gt;/g</span>, <span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">//去除标签</span></span><br><span class=\"line\">    allText = allText.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\s+/g</span>, <span class=\"string\">&#x27;&#x27;</span>);<span class=\"comment\">//去除空格</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (allText == <span class=\"string\">&quot;&quot;</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    res += allText</span><br><span class=\"line\">    <span class=\"comment\">// console.log(allText)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> allText;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">onload</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(array.<span class=\"title function_\">join</span>(<span class=\"string\">&quot; &quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>党的二十大制定了当前和今后一个时期党和国家的大政方针，描绘了以中国式现代化全面推进中华民族伟大复兴的宏伟蓝图。中央和国家机关广大干部表示，在学习中，深刻理解全面建设社会主义现代化国家战略布局的科学性和必然性，增强了贯彻落实的自觉性和坚定性。</p>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 手写call函数\n\n```javascript\nFunction.prototype.myCall = function (context,...args) {\n    var context = context || window;\n    context.fn=this;\n    var res=(args!=null&&args!=undefined)?context.fn(...args):context.fn();\n    delete context.fn;\n    return res;\n}\nfunction test(){\n    console.log(this);\n}\ntest.myCall({name:'lili'});\n```\n\n## 手写apply函数\n\n```javascript\nFunction.prototype.myBind=function(obj,...args){\n    obj=obj||windows;\n    fn=this;\n    return function(params){\n        fn.apply(obj,params);\n    }\n}\n```\n","source":"_posts/前端/学习/前端面试讲题/301手写call.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: 手写\ncategories: js\n---\n\n## 手写call函数\n\n```javascript\nFunction.prototype.myCall = function (context,...args) {\n    var context = context || window;\n    context.fn=this;\n    var res=(args!=null&&args!=undefined)?context.fn(...args):context.fn();\n    delete context.fn;\n    return res;\n}\nfunction test(){\n    console.log(this);\n}\ntest.myCall({name:'lili'});\n```\n\n## 手写apply函数\n\n```javascript\nFunction.prototype.myBind=function(obj,...args){\n    obj=obj||windows;\n    fn=this;\n    return function(params){\n        fn.apply(obj,params);\n    }\n}\n```\n","slug":"前端/学习/前端面试讲题/301手写call","published":1,"updated":"2023-03-21T09:06:44.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7j004ao8hu1cmo2ifi","content":"<h2 id=\"手写call函数\"><a href=\"#手写call函数\" class=\"headerlink\" title=\"手写call函数\"></a>手写call函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myCall</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context,...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">    context.<span class=\"property\">fn</span>=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res=(args!=<span class=\"literal\">null</span>&amp;&amp;args!=<span class=\"literal\">undefined</span>)?context.<span class=\"title function_\">fn</span>(...args):context.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test.<span class=\"title function_\">myCall</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lili&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"手写apply函数\"><a href=\"#手写apply函数\" class=\"headerlink\" title=\"手写apply函数\"></a>手写apply函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myBind</span>=<span class=\"keyword\">function</span>(<span class=\"params\">obj,...args</span>)&#123;</span><br><span class=\"line\">    obj=obj||windows;</span><br><span class=\"line\">    fn=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">params</span>)&#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(obj,params);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"手写call函数\"><a href=\"#手写call函数\" class=\"headerlink\" title=\"手写call函数\"></a>手写call函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myCall</span> = <span class=\"keyword\">function</span> (<span class=\"params\">context,...args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = context || <span class=\"variable language_\">window</span>;</span><br><span class=\"line\">    context.<span class=\"property\">fn</span>=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res=(args!=<span class=\"literal\">null</span>&amp;&amp;args!=<span class=\"literal\">undefined</span>)?context.<span class=\"title function_\">fn</span>(...args):context.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> context.<span class=\"property\">fn</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test.<span class=\"title function_\">myCall</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lili&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"手写apply函数\"><a href=\"#手写apply函数\" class=\"headerlink\" title=\"手写apply函数\"></a>手写apply函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">myBind</span>=<span class=\"keyword\">function</span>(<span class=\"params\">obj,...args</span>)&#123;</span><br><span class=\"line\">    obj=obj||windows;</span><br><span class=\"line\">    fn=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\">params</span>)&#123;</span><br><span class=\"line\">        fn.<span class=\"title function_\">apply</span>(obj,params);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"react demo","date":"2022-10-15T02:06:51.000Z","_content":"\n```\n<div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/demo1.md129034.0160372.png)\n","source":"_posts/前端/学习/react/demo1.md","raw":"---\ntitle: 'react demo'\ndate: 2022-10-15 10:06:51\ntags: \n  - 练习\n  - react\ncategories: 前端\n---\n\n```\n<div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/demo1.md129034.0160372.png)\n","slug":"前端/学习/react/demo1","published":1,"updated":"2023-03-21T09:15:22.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7k004eo8hugk37dduu","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div className=&quot;App&quot;&gt;</span><br><span class=\"line\">      &lt;header className=&quot;App-header&quot;&gt;</span><br><span class=\"line\">        &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">          Edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">        &lt;a</span><br><span class=\"line\">          className=&quot;App-link&quot;</span><br><span class=\"line\">          href=&quot;https://reactjs.org&quot;</span><br><span class=\"line\">          target=&quot;_blank&quot;</span><br><span class=\"line\">          rel=&quot;noopener noreferrer&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          Learn React</span><br><span class=\"line\">        &lt;/a&gt;</span><br><span class=\"line\">      &lt;/header&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/demo1.md129034.0160372.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div className=&quot;App&quot;&gt;</span><br><span class=\"line\">      &lt;header className=&quot;App-header&quot;&gt;</span><br><span class=\"line\">        &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">          Edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">        &lt;a</span><br><span class=\"line\">          className=&quot;App-link&quot;</span><br><span class=\"line\">          href=&quot;https://reactjs.org&quot;</span><br><span class=\"line\">          target=&quot;_blank&quot;</span><br><span class=\"line\">          rel=&quot;noopener noreferrer&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          Learn React</span><br><span class=\"line\">        &lt;/a&gt;</span><br><span class=\"line\">      &lt;/header&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/demo1.md129034.0160372.png\"></p>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 题目目录\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md416261.3726985.png)\n\n> 方法一是用toLocalString方法\n>\n> 另一种就是逐个遍历最后把小数点后的数字拼上\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md414826.36603.png)\n\n## 函数柯里化\n\n**实现add(1)(2)(3)**\n\n1. 暴力版\n\n```javascript\nfunction add(a){\n    return function (b){\n        return function (c){\n            return a+b+c;\n        }\n    }\n}\n```\n\n2. 非暴力版\n\n   ```javascript\n   function add(a) {\n       let sum = a\n       const inner = function (b) {\n           console.log(sum);\n           sum += b\n           return inner;\n       }\n       inner.toString = function () {\n           return sum;\n       }\n       return inner;\n   }\n   add(1)(2)(3).toString();\n   ```\n3. 解决多个参数问题\n\n   ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md418753.1240793.png)\n4. 解决必须用toString的缺点，这次必须在末尾多个括号\n\n   ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md418839.1179297.png)\n5. ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md420522.8053669.png)\n\n## 最大数字展示\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422058.2758218.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422108.356915.png)\n\n## 大数相加\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422046.0170795.png)\n\n```javascript\nfunction bsum(a,b){\n    var aa=(a+'').split('');\n    var bb=(b+'').split('');\n    var temp=0;\n    let res='';\n    while(aa.length>0||bb.length>0||temp){\n        let now=~~aa.pop()+~~bb.pop()+temp;\n        res=now+res;\n        temp=parseInt(now/10);\n    }\n    return res;\n}\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md434984.9319526.png)\n\n## 树形结构\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md435927.9342887.png)\n\n## 循环点亮红绿黄\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md437037.7123088.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md437506.4447353.png)\n","source":"_posts/前端/学习/前端面试讲题/302js题目.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: 手写\ncategories: js\n---\n\n## 题目目录\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md416261.3726985.png)\n\n> 方法一是用toLocalString方法\n>\n> 另一种就是逐个遍历最后把小数点后的数字拼上\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md414826.36603.png)\n\n## 函数柯里化\n\n**实现add(1)(2)(3)**\n\n1. 暴力版\n\n```javascript\nfunction add(a){\n    return function (b){\n        return function (c){\n            return a+b+c;\n        }\n    }\n}\n```\n\n2. 非暴力版\n\n   ```javascript\n   function add(a) {\n       let sum = a\n       const inner = function (b) {\n           console.log(sum);\n           sum += b\n           return inner;\n       }\n       inner.toString = function () {\n           return sum;\n       }\n       return inner;\n   }\n   add(1)(2)(3).toString();\n   ```\n3. 解决多个参数问题\n\n   ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md418753.1240793.png)\n4. 解决必须用toString的缺点，这次必须在末尾多个括号\n\n   ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md418839.1179297.png)\n5. ![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md420522.8053669.png)\n\n## 最大数字展示\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422058.2758218.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422108.356915.png)\n\n## 大数相加\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\原型题目1.md422046.0170795.png)\n\n```javascript\nfunction bsum(a,b){\n    var aa=(a+'').split('');\n    var bb=(b+'').split('');\n    var temp=0;\n    let res='';\n    while(aa.length>0||bb.length>0||temp){\n        let now=~~aa.pop()+~~bb.pop()+temp;\n        res=now+res;\n        temp=parseInt(now/10);\n    }\n    return res;\n}\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md434984.9319526.png)\n\n## 树形结构\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md435927.9342887.png)\n\n## 循环点亮红绿黄\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md437037.7123088.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\302js题目.md437506.4447353.png)\n","slug":"前端/学习/前端面试讲题/302js题目","published":1,"updated":"2023-03-21T09:07:25.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7l004ho8hu2h3w6p9l","content":"<h2 id=\"题目目录\"><a href=\"#题目目录\" class=\"headerlink\" title=\"题目目录\"></a>题目目录</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md416261.3726985.png\"></p>\n<blockquote>\n<p>方法一是用toLocalString方法</p>\n<p>另一种就是逐个遍历最后把小数点后的数字拼上</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md414826.36603.png\"></p>\n<h2 id=\"函数柯里化\"><a href=\"#函数柯里化\" class=\"headerlink\" title=\"函数柯里化\"></a>函数柯里化</h2><p><strong>实现add(1)(2)(3)</strong></p>\n<ol>\n<li>暴力版</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">c</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b+c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>非暴力版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = a</span><br><span class=\"line\">    <span class=\"keyword\">const</span> inner = <span class=\"keyword\">function</span> (<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sum);</span><br><span class=\"line\">        sum += b</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    inner.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>).<span class=\"title function_\">toString</span>();</span><br></pre></td></tr></table></figure></li>\n<li><p>解决多个参数问题</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md418753.1240793.png\"></p>\n</li>\n<li><p>解决必须用toString的缺点，这次必须在末尾多个括号</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md418839.1179297.png\"></p>\n</li>\n<li><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md420522.8053669.png\"></p>\n</li>\n</ol>\n<h2 id=\"最大数字展示\"><a href=\"#最大数字展示\" class=\"headerlink\" title=\"最大数字展示\"></a>最大数字展示</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422058.2758218.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422108.356915.png\"></p>\n<h2 id=\"大数相加\"><a href=\"#大数相加\" class=\"headerlink\" title=\"大数相加\"></a>大数相加</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422046.0170795.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">bsum</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> aa=(a+<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bb=(b+<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(aa.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>||bb.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>||temp)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> now=~~aa.<span class=\"title function_\">pop</span>()+~~bb.<span class=\"title function_\">pop</span>()+temp;</span><br><span class=\"line\">        res=now+res;</span><br><span class=\"line\">        temp=<span class=\"built_in\">parseInt</span>(now/<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md434984.9319526.png\"></p>\n<h2 id=\"树形结构\"><a href=\"#树形结构\" class=\"headerlink\" title=\"树形结构\"></a>树形结构</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md435927.9342887.png\"></p>\n<h2 id=\"循环点亮红绿黄\"><a href=\"#循环点亮红绿黄\" class=\"headerlink\" title=\"循环点亮红绿黄\"></a>循环点亮红绿黄</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md437037.7123088.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md437506.4447353.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目目录\"><a href=\"#题目目录\" class=\"headerlink\" title=\"题目目录\"></a>题目目录</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md416261.3726985.png\"></p>\n<blockquote>\n<p>方法一是用toLocalString方法</p>\n<p>另一种就是逐个遍历最后把小数点后的数字拼上</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md414826.36603.png\"></p>\n<h2 id=\"函数柯里化\"><a href=\"#函数柯里化\" class=\"headerlink\" title=\"函数柯里化\"></a>函数柯里化</h2><p><strong>实现add(1)(2)(3)</strong></p>\n<ol>\n<li>暴力版</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">c</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a+b+c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>非暴力版</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = a</span><br><span class=\"line\">    <span class=\"keyword\">const</span> inner = <span class=\"keyword\">function</span> (<span class=\"params\">b</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sum);</span><br><span class=\"line\">        sum += b</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    inner.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">add</span>(<span class=\"number\">1</span>)(<span class=\"number\">2</span>)(<span class=\"number\">3</span>).<span class=\"title function_\">toString</span>();</span><br></pre></td></tr></table></figure></li>\n<li><p>解决多个参数问题</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md418753.1240793.png\"></p>\n</li>\n<li><p>解决必须用toString的缺点，这次必须在末尾多个括号</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md418839.1179297.png\"></p>\n</li>\n<li><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md420522.8053669.png\"></p>\n</li>\n</ol>\n<h2 id=\"最大数字展示\"><a href=\"#最大数字展示\" class=\"headerlink\" title=\"最大数字展示\"></a>最大数字展示</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422058.2758218.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422108.356915.png\"></p>\n<h2 id=\"大数相加\"><a href=\"#大数相加\" class=\"headerlink\" title=\"大数相加\"></a>大数相加</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\原型题目1.md422046.0170795.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">bsum</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> aa=(a+<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bb=(b+<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(aa.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>||bb.<span class=\"property\">length</span>&gt;<span class=\"number\">0</span>||temp)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> now=~~aa.<span class=\"title function_\">pop</span>()+~~bb.<span class=\"title function_\">pop</span>()+temp;</span><br><span class=\"line\">        res=now+res;</span><br><span class=\"line\">        temp=<span class=\"built_in\">parseInt</span>(now/<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md434984.9319526.png\"></p>\n<h2 id=\"树形结构\"><a href=\"#树形结构\" class=\"headerlink\" title=\"树形结构\"></a>树形结构</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md435927.9342887.png\"></p>\n<h2 id=\"循环点亮红绿黄\"><a href=\"#循环点亮红绿黄\" class=\"headerlink\" title=\"循环点亮红绿黄\"></a>循环点亮红绿黄</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md437037.7123088.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\302js题目.md437506.4447353.png\"></p>\n"},{"title":"webpack","date":"2022-10-15T02:06:51.000Z","_content":"\n**ast学习**\n\nhttps://search.bilibili.com/all?vt=49614777&keyword=ast&from_source=webtop_search&spm_id_from=333.1007&search_source=5\n\n**编译原理**\n\nhttps://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click\n\n**微信读书**\n\nhttps://weread.qq.com/web/reader/845323407299950f8450b99\n\n**源码**\n\nhttps://github1s.com/webpack/webpack\n\n**手写webpack**\n\nhttps://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&from_source=webtop_search&spm_id_from=333.788&search_source=5\n","source":"_posts/前端/学习/前端工程化/webpack.md","raw":"---\ntitle: 'webpack'\ndate: 2022-10-15 10:06:51\ntags: 工程化\ncategories: 前端\n---\n\n**ast学习**\n\nhttps://search.bilibili.com/all?vt=49614777&keyword=ast&from_source=webtop_search&spm_id_from=333.1007&search_source=5\n\n**编译原理**\n\nhttps://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click\n\n**微信读书**\n\nhttps://weread.qq.com/web/reader/845323407299950f8450b99\n\n**源码**\n\nhttps://github1s.com/webpack/webpack\n\n**手写webpack**\n\nhttps://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&from_source=webtop_search&spm_id_from=333.788&search_source=5\n","slug":"前端/学习/前端工程化/webpack","published":1,"updated":"2023-03-21T09:06:16.058Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7n004ko8hug73m33p5","content":"<p><strong>ast学习</strong></p>\n<p><a href=\"https://search.bilibili.com/all?vt=49614777&amp;keyword=ast&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5\">https://search.bilibili.com/all?vt=49614777&amp;keyword=ast&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5</a></p>\n<p><strong>编译原理</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click\">https://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click</a></p>\n<p><strong>微信读书</strong></p>\n<p><a href=\"https://weread.qq.com/web/reader/845323407299950f8450b99\">https://weread.qq.com/web/reader/845323407299950f8450b99</a></p>\n<p><strong>源码</strong></p>\n<p><a href=\"https://github1s.com/webpack/webpack\">https://github1s.com/webpack/webpack</a></p>\n<p><strong>手写webpack</strong></p>\n<p><a href=\"https://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&amp;from_source=webtop_search&amp;spm_id_from=333.788&amp;search_source=5\">https://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&amp;from_source=webtop_search&amp;spm_id_from=333.788&amp;search_source=5</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>ast学习</strong></p>\n<p><a href=\"https://search.bilibili.com/all?vt=49614777&amp;keyword=ast&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5\">https://search.bilibili.com/all?vt=49614777&amp;keyword=ast&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5</a></p>\n<p><strong>编译原理</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click\">https://www.bilibili.com/video/BV12a41167j9/?spm_id_from=333.880.my_history.page.click</a></p>\n<p><strong>微信读书</strong></p>\n<p><a href=\"https://weread.qq.com/web/reader/845323407299950f8450b99\">https://weread.qq.com/web/reader/845323407299950f8450b99</a></p>\n<p><strong>源码</strong></p>\n<p><a href=\"https://github1s.com/webpack/webpack\">https://github1s.com/webpack/webpack</a></p>\n<p><strong>手写webpack</strong></p>\n<p><a href=\"https://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&amp;from_source=webtop_search&amp;spm_id_from=333.788&amp;search_source=5\">https://search.bilibili.com/all?keyword=%E6%89%8B%E5%86%99webpack&amp;from_source=webtop_search&amp;spm_id_from=333.788&amp;search_source=5</a></p>\n"},{"title":"5. 正则 2","date":"2022-10-15T02:06:51.000Z","_content":"\n## 用法\n\n1. 可用于字符串匹配\n2. 效率高\n\n## 写法\n\n1. ```javascript\n   var reg=/abc/;\n   var str=\"abcdefg\";\n   var result=reg.exec(str);//execute执行\n   console.log(result);\n   ```\n2. ```javascript\n   var reg=new RegExp('abc');\n   ```\n\n## {}的作用\n\n> 匹配数量\n\n```javascript\nvar reg=new RegExp('c{2}','g');\nconsole.log(reg.exec(\"cccccccc\"));\n```\n\n**匹配手机号**\n\n```javascript\nvar reg=new RegExp('\\\\d{3}[0123456789]{8}','g');\nconsole.log(reg.exec(\"15331860803\"));\n```\n\n**c{m,n}匹配连续的m到n个(包含m，n)c,如果同时符合，就匹配尽可能多的那个**\n\n```javascript\nvar reg=/c{3,4}/;\nconsole.log(reg.exec(\"ccccccc\"));\n```\n\n**c{m,}匹配大于等于m个c，尽可能找多的**\n\n```javascript\nvar reg=/c{3,}/;\nconsole.log(reg.exec(\"cccccccaaaaa\"));\n```\n\n## []作用\n\n1. ```javascript\n   //划分一个规则集合\n   var reg=/[123,]/;\n   console.log(reg.exec(\"123123,12323\"));\n   ```\n2. ```javascript\n   //可以用-来在区间定义多个条件\n   var reg=/[a-z]/;\n   console.log(reg.exec('Ah'));\n   ```\n\n## *,+,?\n\n***是匹配0个或多个，相当于{0,}**\n\n```javascript\nvar reg=/c*/;\nconsole.log(reg.exec('cccc'));\n```\n\n**+是匹配1个或多个，相当于{1,}**\n\n```javascript\nvar reg=/c+/;\nconsole.log(reg.exec('ccccaaa'));\n```\n\n**?是匹配0个或1个，相当于{0,1}**\n\n```javascript\nvar reg=/c?/;\nconsole.log(reg.exec('ccccaaa'));\n```\n\n**+,*默认贪婪，匹配数量尽可能多，非贪婪模式需要加一个？**\n\n```javascript\nvar reg=/c*?/;\nconsole.log(reg.exec('ccccaaa'));//\"\"\n```\n\n**^c匹配以c为开始**\n\n```javascript\nvar reg=/^c/;\nconsole.log(reg.exec('ccccaaa'));//\"c\"\nconsole.log(reg.exec('accccaaa'));//null\n```\n\n**c$匹配以c为结尾**\n\n```javascript\nvar reg=/c$/;\nconsole.log(reg.exec('cccc'));//\"c\"\nconsole.log(reg.exec('旺仔小c'));//\"c\"\n```\n\n**.匹配任意字符，只有一个**\n\n```javascript\nvar reg=/./;\nconsole.log(reg.exec('cccc'));//\"c\"\n\nvar reg=/.+/;\nconsole.log(reg.exec('你好cccc'));//\"你好cccc\"\n\nvar reg=/.{2,3}/;\nconsole.log(reg.exec('你好cccc'));//\"你好c\"\n```\n\n**|或者，优先级高于^**\n\n**\\b是边界的意思,但是遇到中文或者特殊符号会有问题**\n\n```javascript\nvar reg=/\\bc/;\nconsole.log(reg.exec('asd cccc'));//\"c\"\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('asdcccc'));//null\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('asdc'));//null\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('你好c'));//\"c\"\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('c c'));//\"c\"\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月10日正则表达式.md","raw":"---\ntitle: '5. 正则 2'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 用法\n\n1. 可用于字符串匹配\n2. 效率高\n\n## 写法\n\n1. ```javascript\n   var reg=/abc/;\n   var str=\"abcdefg\";\n   var result=reg.exec(str);//execute执行\n   console.log(result);\n   ```\n2. ```javascript\n   var reg=new RegExp('abc');\n   ```\n\n## {}的作用\n\n> 匹配数量\n\n```javascript\nvar reg=new RegExp('c{2}','g');\nconsole.log(reg.exec(\"cccccccc\"));\n```\n\n**匹配手机号**\n\n```javascript\nvar reg=new RegExp('\\\\d{3}[0123456789]{8}','g');\nconsole.log(reg.exec(\"15331860803\"));\n```\n\n**c{m,n}匹配连续的m到n个(包含m，n)c,如果同时符合，就匹配尽可能多的那个**\n\n```javascript\nvar reg=/c{3,4}/;\nconsole.log(reg.exec(\"ccccccc\"));\n```\n\n**c{m,}匹配大于等于m个c，尽可能找多的**\n\n```javascript\nvar reg=/c{3,}/;\nconsole.log(reg.exec(\"cccccccaaaaa\"));\n```\n\n## []作用\n\n1. ```javascript\n   //划分一个规则集合\n   var reg=/[123,]/;\n   console.log(reg.exec(\"123123,12323\"));\n   ```\n2. ```javascript\n   //可以用-来在区间定义多个条件\n   var reg=/[a-z]/;\n   console.log(reg.exec('Ah'));\n   ```\n\n## *,+,?\n\n***是匹配0个或多个，相当于{0,}**\n\n```javascript\nvar reg=/c*/;\nconsole.log(reg.exec('cccc'));\n```\n\n**+是匹配1个或多个，相当于{1,}**\n\n```javascript\nvar reg=/c+/;\nconsole.log(reg.exec('ccccaaa'));\n```\n\n**?是匹配0个或1个，相当于{0,1}**\n\n```javascript\nvar reg=/c?/;\nconsole.log(reg.exec('ccccaaa'));\n```\n\n**+,*默认贪婪，匹配数量尽可能多，非贪婪模式需要加一个？**\n\n```javascript\nvar reg=/c*?/;\nconsole.log(reg.exec('ccccaaa'));//\"\"\n```\n\n**^c匹配以c为开始**\n\n```javascript\nvar reg=/^c/;\nconsole.log(reg.exec('ccccaaa'));//\"c\"\nconsole.log(reg.exec('accccaaa'));//null\n```\n\n**c$匹配以c为结尾**\n\n```javascript\nvar reg=/c$/;\nconsole.log(reg.exec('cccc'));//\"c\"\nconsole.log(reg.exec('旺仔小c'));//\"c\"\n```\n\n**.匹配任意字符，只有一个**\n\n```javascript\nvar reg=/./;\nconsole.log(reg.exec('cccc'));//\"c\"\n\nvar reg=/.+/;\nconsole.log(reg.exec('你好cccc'));//\"你好cccc\"\n\nvar reg=/.{2,3}/;\nconsole.log(reg.exec('你好cccc'));//\"你好c\"\n```\n\n**|或者，优先级高于^**\n\n**\\b是边界的意思,但是遇到中文或者特殊符号会有问题**\n\n```javascript\nvar reg=/\\bc/;\nconsole.log(reg.exec('asd cccc'));//\"c\"\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('asdcccc'));//null\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('asdc'));//null\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('你好c'));//\"c\"\n\nvar reg=/\\bc/;\nconsole.log(reg.exec('c c'));//\"c\"\n```\n","slug":"前端/学习/唯创前端上课笔记/1月10日正则表达式","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7o004mo8huhgf10tx5","content":"<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><ol>\n<li>可用于字符串匹配</li>\n<li>效率高</li>\n</ol>\n<h2 id=\"写法\"><a href=\"#写法\" class=\"headerlink\" title=\"写法\"></a>写法</h2><ol>\n<li>```javascript<br>var reg=/abc/;<br>var str=”abcdefg”;<br>var result=reg.exec(str);//execute执行<br>console.log(result);<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. ```javascript</span><br><span class=\"line\">   var reg=new RegExp(&#x27;abc&#x27;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"的作用\"><a href=\"#的作用\" class=\"headerlink\" title=\"{}的作用\"></a>{}的作用</h2><blockquote>\n<p>匹配数量</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;c&#123;2&#125;&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cccccccc&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配手机号</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\\\d&#123;3&#125;[0123456789]&#123;8&#125;&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;15331860803&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>c{m,n}匹配连续的m到n个(包含m，n)c,如果同时符合，就匹配尽可能多的那个</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c&#123;3,4&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;ccccccc&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>c{m,}匹配大于等于m个c，尽可能找多的</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c&#123;3,&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cccccccaaaaa&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"[]作用\"></a>[]作用</h2><ol>\n<li>```javascript<br>//划分一个规则集合<br>var reg=/[123,]/;<br>console.log(reg.exec(“123123,12323”));<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. ```javascript</span><br><span class=\"line\">   //可以用-来在区间定义多个条件</span><br><span class=\"line\">   var reg=/[a-z]/;</span><br><span class=\"line\">   console.log(reg.exec(&#x27;Ah&#x27;));</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"*,+,?\"></a>*,+,?</h2><p>*<strong>是匹配0个或多个，相当于{0,}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c*/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>+是匹配1个或多个，相当于{1,}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c+/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>?是匹配0个或1个，相当于{0,1}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c?/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>**+,<em>默认贪婪，匹配数量尽可能多，非贪婪模式需要加一个？</em>*</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c*?/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));<span class=\"comment\">//&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>^c匹配以c为开始</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/^c/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;accccaaa&#x27;</span>));<span class=\"comment\">//null</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>c$匹配以c为结尾</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c$/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;旺仔小c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>.匹配任意字符，只有一个</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/./</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.+/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好cccc&#x27;</span>));<span class=\"comment\">//&quot;你好cccc&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.&#123;2,3&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好cccc&#x27;</span>));<span class=\"comment\">//&quot;你好c&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>|或者，优先级高于^</strong></p>\n<p><strong>\\b是边界的意思,但是遇到中文或者特殊符号会有问题</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asd cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asdcccc&#x27;</span>));<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asdc&#x27;</span>));<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;c c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><ol>\n<li>可用于字符串匹配</li>\n<li>效率高</li>\n</ol>\n<h2 id=\"写法\"><a href=\"#写法\" class=\"headerlink\" title=\"写法\"></a>写法</h2><ol>\n<li>```javascript<br>var reg=/abc/;<br>var str=”abcdefg”;<br>var result=reg.exec(str);//execute执行<br>console.log(result);<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. ```javascript</span><br><span class=\"line\">   var reg=new RegExp(&#x27;abc&#x27;);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"的作用\"><a href=\"#的作用\" class=\"headerlink\" title=\"{}的作用\"></a>{}的作用</h2><blockquote>\n<p>匹配数量</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;c&#123;2&#125;&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cccccccc&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配手机号</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\\\d&#123;3&#125;[0123456789]&#123;8&#125;&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;15331860803&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>c{m,n}匹配连续的m到n个(包含m，n)c,如果同时符合，就匹配尽可能多的那个</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c&#123;3,4&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;ccccccc&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>c{m,}匹配大于等于m个c，尽可能找多的</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c&#123;3,&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;cccccccaaaaa&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"[]作用\"></a>[]作用</h2><ol>\n<li>```javascript<br>//划分一个规则集合<br>var reg=/[123,]/;<br>console.log(reg.exec(“123123,12323”));<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. ```javascript</span><br><span class=\"line\">   //可以用-来在区间定义多个条件</span><br><span class=\"line\">   var reg=/[a-z]/;</span><br><span class=\"line\">   console.log(reg.exec(&#x27;Ah&#x27;));</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"*,+,?\"></a>*,+,?</h2><p>*<strong>是匹配0个或多个，相当于{0,}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c*/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>+是匹配1个或多个，相当于{1,}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c+/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><strong>?是匹配0个或1个，相当于{0,1}</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c?/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>**+,<em>默认贪婪，匹配数量尽可能多，非贪婪模式需要加一个？</em>*</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c*?/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));<span class=\"comment\">//&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>^c匹配以c为开始</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/^c/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;ccccaaa&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;accccaaa&#x27;</span>));<span class=\"comment\">//null</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>c$匹配以c为结尾</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/c$/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;旺仔小c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>.匹配任意字符，只有一个</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/./</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.+/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好cccc&#x27;</span>));<span class=\"comment\">//&quot;你好cccc&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.&#123;2,3&#125;/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好cccc&#x27;</span>));<span class=\"comment\">//&quot;你好c&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>|或者，优先级高于^</strong></p>\n<p><strong>\\b是边界的意思,但是遇到中文或者特殊符号会有问题</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asd cccc&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asdcccc&#x27;</span>));<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;asdc&#x27;</span>));<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;你好c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/\\bc/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;c c&#x27;</span>));<span class=\"comment\">//&quot;c&quot;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"6. 正则 3","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nvar reg=new RegExp(/\\w\\w/);\nconsole.log(reg.exec(\"asdasda\"));\n//反向引用\nvar reg=new RegExp(/(\\w)(\\w)/);\nconsole.log(reg.exec(\"asdasda\"));\n\nvar reg=new RegExp(/(\\w)(\\w)\\2\\1/);\nconsole.log(reg.exec(\"woow\"));\n\nvar reg=new RegExp(/(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/);\nconsole.log(reg.exec(\"bilibili.com\"));\n\n//?:的作用，取消捕获\nvar reg=new RegExp(/(?:\\w)(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/);\nconsole.log(reg.exec(\"abilibili.com\"));\n\n//正向预警(?:pattern)要匹配的字符后面必须有pattern\nvar reg=new RegExp(/\\w+\\.(?:com)/);\nconsole.log(reg.exec(\"bilibili.com\"));//\"bilibili.com\"\n\n//修饰符g全局，m换行，i忽略大小写，s让.包含回车符号\nvar reg=new RegExp(/\\w+\\.(?!com)/);\nconsole.log(reg.exec(\"bilibili.com\"));//\"bilibili.com\"\n\n//match方法\nvar s=\"123\";\nconsole.log(s.match(/\\d/));\n\nvar s=\"123\";\nconsole.log(s.replace(/\\d/g,9));\n\n//$相当于反向引用\nvar s=\"123\";\nconsole.log(s.replace(/\\d/g,\"$1$1$1\"));\n\n//split\nvar s=\"aaaa.aaa.aaa\";\nconsole.log(s.split(/\\W/));\n\nvar s=\"http://weichuang.com:80\";\nconsole.log(s.match(s,\"(\\w+):\\/\\/(w+)\\.(w+).(w+):([\\d])\"));\n\n//匹配网址\nvar s=\"http://www.weichuang.com:80\";\nconsole.log(s.match(/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/));\n\nvar s=\"http://www.weichuang.com:80\";\nvar reg=/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/;\nconsole.log(reg.exec(s));\n\nvar s=\"http://www.weichuang.com:80\";\nvar reg=/(\\w+|https?):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/;\nconsole.log(reg.exec(s));\n```\n\n```javascript\n//子表达式(),有捕获的作用，返回的数组,索引0对应所有返回值，其余从1开始逐渐递增\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n支持正则表达式的方法match,search,replace,split\n","source":"_posts/前端/学习/唯创前端上课笔记/1月11日正则表达式.md","raw":"---\ntitle: '6. 正则 3'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n```javascript\nvar reg=new RegExp(/\\w\\w/);\nconsole.log(reg.exec(\"asdasda\"));\n//反向引用\nvar reg=new RegExp(/(\\w)(\\w)/);\nconsole.log(reg.exec(\"asdasda\"));\n\nvar reg=new RegExp(/(\\w)(\\w)\\2\\1/);\nconsole.log(reg.exec(\"woow\"));\n\nvar reg=new RegExp(/(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/);\nconsole.log(reg.exec(\"bilibili.com\"));\n\n//?:的作用，取消捕获\nvar reg=new RegExp(/(?:\\w)(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/);\nconsole.log(reg.exec(\"abilibili.com\"));\n\n//正向预警(?:pattern)要匹配的字符后面必须有pattern\nvar reg=new RegExp(/\\w+\\.(?:com)/);\nconsole.log(reg.exec(\"bilibili.com\"));//\"bilibili.com\"\n\n//修饰符g全局，m换行，i忽略大小写，s让.包含回车符号\nvar reg=new RegExp(/\\w+\\.(?!com)/);\nconsole.log(reg.exec(\"bilibili.com\"));//\"bilibili.com\"\n\n//match方法\nvar s=\"123\";\nconsole.log(s.match(/\\d/));\n\nvar s=\"123\";\nconsole.log(s.replace(/\\d/g,9));\n\n//$相当于反向引用\nvar s=\"123\";\nconsole.log(s.replace(/\\d/g,\"$1$1$1\"));\n\n//split\nvar s=\"aaaa.aaa.aaa\";\nconsole.log(s.split(/\\W/));\n\nvar s=\"http://weichuang.com:80\";\nconsole.log(s.match(s,\"(\\w+):\\/\\/(w+)\\.(w+).(w+):([\\d])\"));\n\n//匹配网址\nvar s=\"http://www.weichuang.com:80\";\nconsole.log(s.match(/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/));\n\nvar s=\"http://www.weichuang.com:80\";\nvar reg=/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/;\nconsole.log(reg.exec(s));\n\nvar s=\"http://www.weichuang.com:80\";\nvar reg=/(\\w+|https?):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/;\nconsole.log(reg.exec(s));\n```\n\n```javascript\n//子表达式(),有捕获的作用，返回的数组,索引0对应所有返回值，其余从1开始逐渐递增\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n```javascript\n\n```\n\n支持正则表达式的方法match,search,replace,split\n","slug":"前端/学习/唯创前端上课笔记/1月11日正则表达式","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7q004po8hu7xb93jrq","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w\\w/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;asdasda&quot;</span>));</span><br><span class=\"line\"><span class=\"comment\">//反向引用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;asdasda&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)\\2\\1/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;woow&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//?:的作用，取消捕获</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(?:\\w)(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;abilibili.com&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//正向预警(?:pattern)要匹配的字符后面必须有pattern</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w+\\.(?:com)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));<span class=\"comment\">//&quot;bilibili.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修饰符g全局，m换行，i忽略大小写，s让.包含回车符号</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w+\\.(?!com)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));<span class=\"comment\">//&quot;bilibili.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//match方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(<span class=\"regexp\">/\\d/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>,<span class=\"number\">9</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//$相当于反向引用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>,<span class=\"string\">&quot;$1$1$1&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//split</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;aaaa.aaa.aaa&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">split</span>(<span class=\"regexp\">/\\W/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(s,<span class=\"string\">&quot;(\\w+):\\/\\/(w+)\\.(w+).(w+):([\\d])&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匹配网址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(s));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\w+|https?):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(s));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子表达式(),有捕获的作用，返回的数组,索引0对应所有返回值，其余从1开始逐渐递增</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>支持正则表达式的方法match,search,replace,split</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w\\w/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;asdasda&quot;</span>));</span><br><span class=\"line\"><span class=\"comment\">//反向引用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;asdasda&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)\\2\\1/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;woow&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//?:的作用，取消捕获</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/(?:\\w)(\\w)(\\w)(\\w)\\2\\1\\2\\3\\2\\.\\w+/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;abilibili.com&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//正向预警(?:pattern)要匹配的字符后面必须有pattern</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w+\\.(?:com)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));<span class=\"comment\">//&quot;bilibili.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修饰符g全局，m换行，i忽略大小写，s让.包含回车符号</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\w+\\.(?!com)/</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&quot;bilibili.com&quot;</span>));<span class=\"comment\">//&quot;bilibili.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//match方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(<span class=\"regexp\">/\\d/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>,<span class=\"number\">9</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//$相当于反向引用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\d/g</span>,<span class=\"string\">&quot;$1$1$1&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//split</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;aaaa.aaa.aaa&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">split</span>(<span class=\"regexp\">/\\W/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(s,<span class=\"string\">&quot;(\\w+):\\/\\/(w+)\\.(w+).(w+):([\\d])&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匹配网址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s.<span class=\"title function_\">match</span>(<span class=\"regexp\">/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\w+):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(s));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"string\">&quot;http://www.weichuang.com:80&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\w+|https?):\\/\\/(\\w*)\\.(\\w+)\\.(\\w+):(\\d*)/</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(reg.<span class=\"title function_\">exec</span>(s));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子表达式(),有捕获的作用，返回的数组,索引0对应所有返回值，其余从1开始逐渐递增</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>支持正则表达式的方法match,search,replace,split</p>\n"},{"title":"7. DOM 学习","date":"2022-10-15T02:06:51.000Z","_content":"\n## 点击事件\n\n```javascript\nvar btn=document.getElementById('btn1');\nbtn.onclick=function (){\n    console.log('haha');\n}\n```\n\n> js操作中样式是以内联的方式添加\n\n> js里class是关键字，没办法用这个属性，所以就用关键字，想要修改class\n\n```javascript\nbtn.className='aa';\n```\n\n> css如果有-那么就把-去掉然后变成驼峰命名\n\n```javascript\nbtn.onmouseover=function(){}\nbtn.onmouseout=function(){}\n```\n\n## document\n\n1. getElements返回的是伪数组\n2. ```javascript\n   //解决循环给dom附上属性时i变量i穿透的问题\n   //1.用let\n   //2.给变量设置一个新属性index（不唯一），值为i\n   //3.用this\n   ```\n\n## let\n\n1. 不能重复声明\n2. 不存在变量提升\n3.\n","source":"_posts/前端/学习/唯创前端上课笔记/1月14日DOM.md","raw":"---\ntitle: '7. DOM 学习'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 点击事件\n\n```javascript\nvar btn=document.getElementById('btn1');\nbtn.onclick=function (){\n    console.log('haha');\n}\n```\n\n> js操作中样式是以内联的方式添加\n\n> js里class是关键字，没办法用这个属性，所以就用关键字，想要修改class\n\n```javascript\nbtn.className='aa';\n```\n\n> css如果有-那么就把-去掉然后变成驼峰命名\n\n```javascript\nbtn.onmouseover=function(){}\nbtn.onmouseout=function(){}\n```\n\n## document\n\n1. getElements返回的是伪数组\n2. ```javascript\n   //解决循环给dom附上属性时i变量i穿透的问题\n   //1.用let\n   //2.给变量设置一个新属性index（不唯一），值为i\n   //3.用this\n   ```\n\n## let\n\n1. 不能重复声明\n2. 不存在变量提升\n3.\n","slug":"前端/学习/唯创前端上课笔记/1月14日DOM","published":1,"updated":"2023-03-21T09:31:20.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7r004so8hu4cr14wvq","content":"<h2 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;haha&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>js操作中样式是以内联的方式添加</p>\n</blockquote>\n<blockquote>\n<p>js里class是关键字，没办法用这个属性，所以就用关键字，想要修改class</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.<span class=\"property\">className</span>=<span class=\"string\">&#x27;aa&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>css如果有-那么就把-去掉然后变成驼峰命名</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.<span class=\"property\">onmouseover</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\">btn.<span class=\"property\">onmouseout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"document\"><a href=\"#document\" class=\"headerlink\" title=\"document\"></a>document</h2><ol>\n<li>getElements返回的是伪数组</li>\n<li><pre><code class=\"javascript\">//解决循环给dom附上属性时i变量i穿透的问题\n//1.用let\n//2.给变量设置一个新属性index（不唯一），值为i\n//3.用this\n</code></pre>\n</li>\n</ol>\n<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><ol>\n<li>不能重复声明</li>\n<li>不存在变量提升</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">btn.<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;haha&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>js操作中样式是以内联的方式添加</p>\n</blockquote>\n<blockquote>\n<p>js里class是关键字，没办法用这个属性，所以就用关键字，想要修改class</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.<span class=\"property\">className</span>=<span class=\"string\">&#x27;aa&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>css如果有-那么就把-去掉然后变成驼峰命名</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.<span class=\"property\">onmouseover</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\">btn.<span class=\"property\">onmouseout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"document\"><a href=\"#document\" class=\"headerlink\" title=\"document\"></a>document</h2><ol>\n<li>getElements返回的是伪数组</li>\n<li><pre><code class=\"javascript\">//解决循环给dom附上属性时i变量i穿透的问题\n//1.用let\n//2.给变量设置一个新属性index（不唯一），值为i\n//3.用this\n</code></pre>\n</li>\n</ol>\n<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><ol>\n<li>不能重复声明</li>\n<li>不存在变量提升</li>\n<li></li>\n</ol>\n"},{"title":"9. 还原一个商品放大镜","date":"2022-10-15T02:06:51.000Z","_content":"\n> 比例=-（大图片的宽高-容器宽高）/（小图片的宽高-拖拽的宽高）\n\n## \n\n> nagvigetor.userAgent();\n>\n> location.reload();//重新加载\n\n## dom api(application program interface)\n\n```javascript\ngetElementsByClassName();\n//返回一个数组\n\nquerySelect();//选中一个符合条件的\nquerySelectAll();//选中所有符合条件的\n\nobj.childNodes//空格和换行也包括在内\nobj.children//选中标签，不包括空格，但是不是w3c的标准\n\nobj.nextSibling//选中下一个元素，包括空格和文本\nobj.nextElementSibling//选中下一个标签\n```\n\n**找到下一个元素的函数**\n\n```javascript\nfunction next(elem){\n    while(elem.nextSibling!=null){\n        var elemNext=elem.nextSibling;\n        if(elemNext.nodeType==1)return elemNext;\n    }\n    return null;\n}\n```\n\n## nodeType\n\n> 注释:8\n>\n> 元素\\<p\\>...:1\n>\n> 文本:3\n\n## 属性\n\n> dom属性：attribute\n>\n> 对象属性：properties\n\n## 事件\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月19日商品放大镜.md163610.6889688.png)\n\n# es6\n\n## 数组解构\n\n```javascript\nconst arr=[1,2,3,4,5,6];\nlet [a1,a2,a3,a4,a5,a6]=arr;\nconsole.log(a1,a2,a3,a4,a5,a6);\n```\n\n## 对象解构\n\n```javascript\nconst obj1={\n    name:\"lisi\",\n    age:44\n};\nlet {name,age}=obj1;\nconsole.log(name,age);\n```\n\n## 字符串解构\n\n```javascript\nlet str1=\"hello\";\n//let s1=str1[0];//let是新语法，不能重复定义\nlet [s1,s2,s3,s4,s5]=str1;\nconsole.log(s1,s2,s3,s4,s5);\n```\n\n## 函数解构\n\n```javascript\nfunction fn1({name,age}){\n   console.log(name,age);\n}\nfn1({\n name:\"lisi\",\n age:23\n});\n```\n\n## 函数参数设置默认值\n\n```javascript\nfunction fn2(x=2,y=3){//undefined + undefined(数字) 结果是NaN\n    return x+y;\n}\nfn2();\n```\n\n## 扩展运算符的使用\n\n## 数组拼接\n\n```javascript\nconst arr1=[1,2,3];\nconst arr2=[4,5,6];\nconst arr3=[...arr1,...arr2];\nconsole.log(arr3);\n```\n\n## 对象拼接，后面覆盖前面\n\n```javascript\nconst obj1={\n name:\"aixan\",\n age:20\n}\nconst obj2={\n genderL:\"male\",\n age:6\n}\nconst obj3={...obj1,...obj2};\nconsole.log(obj3);\n```\n\n## dom数组转换为正常数组\n\n> 伪数组：虽然是数据的一系列集合，但是不具备正常数组的方法\n\n```javascript\nvar arr=document.getElemmentByClassName('');\nvar aLi=[...arr];\nconsole.log(aLi);\n```\n\n## arguments\n\n```javascript\nfunction fn3(x,y){\n    console.log(arguments);\n    console.log(x+y);\n}\nfn3(1,2,3,4,5);\n```\n\n```javascript\nfunction fn3(x,y,...rest){\n    console.log(rest);\n    console.log(x+y);\n}\nfn3(1,2,3,4,5);\n```\n\n## 箭头函数\n\n```javascript\nvar fn4=(x,y)=>{console.log(x+y);};\n\nvar fn5=str=>log(str);//log未定义\n```\n\n> 当函数只有一个参数的时候可以省略括号\n>\n> 当函数体只有一条语句的时候{}可以省略\n\n**箭头函数注意的点**\n\n- 不能当做构造函数（类），不能使用new命令\n- 箭头函数不能使用arguments对象，但是可以用“rest”\n- 箭头函数没有this\n\n> this指向的是调用(函数)的对象，但是如果调用的是箭头函数，则无效\n\n## 对象数组遍历\n\n```javascript\nvar list=[\n    {name:\"xixi\",age:20},\n    {name:\"xixixi\",age:30},\n    {name:\"xi\",age:40}\n]\nfor(const aa of list){\n    console.log(aa);\n}\nfor(const aa of list.keys){\n    console.log(aa);\n}\nfor(const aa of list.values()){\n    console.log(aa);\n}\nfor(const [k,v] of list.entries){\n    console.log(k,v);\n}\nlist.forEach(\n    (value,index,arr)=>{\n        value.age+=60;\n        console.log(value,index,arr);\n    }\n);\nlist.map(\n    (v,i,a)=>{\n        return value;\n    }\n);\nlist.filter(\n    (v,i,a)=>{\n        return value.age>100;\n    }\n)\n```\n\n## 可以省略属性值\n\n```javascript\nvar a={\n    name,\n    age,\n    eat(){\n        //body\n    };\n}\n```\n\n## 交换变量\n\n```javascript\nvar aa=666;\nvar bb=999;\n[bb,aa]=[aa,bb];\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月19日商品放大镜.md","raw":"---\ntitle: '9. 还原一个商品放大镜'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n> 比例=-（大图片的宽高-容器宽高）/（小图片的宽高-拖拽的宽高）\n\n## \n\n> nagvigetor.userAgent();\n>\n> location.reload();//重新加载\n\n## dom api(application program interface)\n\n```javascript\ngetElementsByClassName();\n//返回一个数组\n\nquerySelect();//选中一个符合条件的\nquerySelectAll();//选中所有符合条件的\n\nobj.childNodes//空格和换行也包括在内\nobj.children//选中标签，不包括空格，但是不是w3c的标准\n\nobj.nextSibling//选中下一个元素，包括空格和文本\nobj.nextElementSibling//选中下一个标签\n```\n\n**找到下一个元素的函数**\n\n```javascript\nfunction next(elem){\n    while(elem.nextSibling!=null){\n        var elemNext=elem.nextSibling;\n        if(elemNext.nodeType==1)return elemNext;\n    }\n    return null;\n}\n```\n\n## nodeType\n\n> 注释:8\n>\n> 元素\\<p\\>...:1\n>\n> 文本:3\n\n## 属性\n\n> dom属性：attribute\n>\n> 对象属性：properties\n\n## 事件\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月19日商品放大镜.md163610.6889688.png)\n\n# es6\n\n## 数组解构\n\n```javascript\nconst arr=[1,2,3,4,5,6];\nlet [a1,a2,a3,a4,a5,a6]=arr;\nconsole.log(a1,a2,a3,a4,a5,a6);\n```\n\n## 对象解构\n\n```javascript\nconst obj1={\n    name:\"lisi\",\n    age:44\n};\nlet {name,age}=obj1;\nconsole.log(name,age);\n```\n\n## 字符串解构\n\n```javascript\nlet str1=\"hello\";\n//let s1=str1[0];//let是新语法，不能重复定义\nlet [s1,s2,s3,s4,s5]=str1;\nconsole.log(s1,s2,s3,s4,s5);\n```\n\n## 函数解构\n\n```javascript\nfunction fn1({name,age}){\n   console.log(name,age);\n}\nfn1({\n name:\"lisi\",\n age:23\n});\n```\n\n## 函数参数设置默认值\n\n```javascript\nfunction fn2(x=2,y=3){//undefined + undefined(数字) 结果是NaN\n    return x+y;\n}\nfn2();\n```\n\n## 扩展运算符的使用\n\n## 数组拼接\n\n```javascript\nconst arr1=[1,2,3];\nconst arr2=[4,5,6];\nconst arr3=[...arr1,...arr2];\nconsole.log(arr3);\n```\n\n## 对象拼接，后面覆盖前面\n\n```javascript\nconst obj1={\n name:\"aixan\",\n age:20\n}\nconst obj2={\n genderL:\"male\",\n age:6\n}\nconst obj3={...obj1,...obj2};\nconsole.log(obj3);\n```\n\n## dom数组转换为正常数组\n\n> 伪数组：虽然是数据的一系列集合，但是不具备正常数组的方法\n\n```javascript\nvar arr=document.getElemmentByClassName('');\nvar aLi=[...arr];\nconsole.log(aLi);\n```\n\n## arguments\n\n```javascript\nfunction fn3(x,y){\n    console.log(arguments);\n    console.log(x+y);\n}\nfn3(1,2,3,4,5);\n```\n\n```javascript\nfunction fn3(x,y,...rest){\n    console.log(rest);\n    console.log(x+y);\n}\nfn3(1,2,3,4,5);\n```\n\n## 箭头函数\n\n```javascript\nvar fn4=(x,y)=>{console.log(x+y);};\n\nvar fn5=str=>log(str);//log未定义\n```\n\n> 当函数只有一个参数的时候可以省略括号\n>\n> 当函数体只有一条语句的时候{}可以省略\n\n**箭头函数注意的点**\n\n- 不能当做构造函数（类），不能使用new命令\n- 箭头函数不能使用arguments对象，但是可以用“rest”\n- 箭头函数没有this\n\n> this指向的是调用(函数)的对象，但是如果调用的是箭头函数，则无效\n\n## 对象数组遍历\n\n```javascript\nvar list=[\n    {name:\"xixi\",age:20},\n    {name:\"xixixi\",age:30},\n    {name:\"xi\",age:40}\n]\nfor(const aa of list){\n    console.log(aa);\n}\nfor(const aa of list.keys){\n    console.log(aa);\n}\nfor(const aa of list.values()){\n    console.log(aa);\n}\nfor(const [k,v] of list.entries){\n    console.log(k,v);\n}\nlist.forEach(\n    (value,index,arr)=>{\n        value.age+=60;\n        console.log(value,index,arr);\n    }\n);\nlist.map(\n    (v,i,a)=>{\n        return value;\n    }\n);\nlist.filter(\n    (v,i,a)=>{\n        return value.age>100;\n    }\n)\n```\n\n## 可以省略属性值\n\n```javascript\nvar a={\n    name,\n    age,\n    eat(){\n        //body\n    };\n}\n```\n\n## 交换变量\n\n```javascript\nvar aa=666;\nvar bb=999;\n[bb,aa]=[aa,bb];\n```\n","slug":"前端/学习/唯创前端上课笔记/1月19日商品放大镜","published":1,"updated":"2023-03-21T09:32:34.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7t004wo8huhaoj8o7b","content":"<blockquote>\n<p>比例=-（大图片的宽高-容器宽高）/（小图片的宽高-拖拽的宽高）</p>\n</blockquote>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><blockquote>\n<p>nagvigetor.userAgent();</p>\n<p>location.reload();//重新加载</p>\n</blockquote>\n<h2 id=\"dom-api-application-program-interface\"><a href=\"#dom-api-application-program-interface\" class=\"headerlink\" title=\"dom api(application program interface)\"></a>dom api(application program interface)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getElementsByClassName</span>();</span><br><span class=\"line\"><span class=\"comment\">//返回一个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">querySelect</span>();<span class=\"comment\">//选中一个符合条件的</span></span><br><span class=\"line\"><span class=\"title function_\">querySelectAll</span>();<span class=\"comment\">//选中所有符合条件的</span></span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">childNodes</span><span class=\"comment\">//空格和换行也包括在内</span></span><br><span class=\"line\">obj.<span class=\"property\">children</span><span class=\"comment\">//选中标签，不包括空格，但是不是w3c的标准</span></span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">nextSibling</span><span class=\"comment\">//选中下一个元素，包括空格和文本</span></span><br><span class=\"line\">obj.<span class=\"property\">nextElementSibling</span><span class=\"comment\">//选中下一个标签</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>找到下一个元素的函数</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">next</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(elem.<span class=\"property\">nextSibling</span>!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> elemNext=elem.<span class=\"property\">nextSibling</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(elemNext.<span class=\"property\">nodeType</span>==<span class=\"number\">1</span>)<span class=\"keyword\">return</span> elemNext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodeType\"><a href=\"#nodeType\" class=\"headerlink\" title=\"nodeType\"></a>nodeType</h2><blockquote>\n<p>注释:8</p>\n<p>元素&lt;p&gt;…:1</p>\n<p>文本:3</p>\n</blockquote>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><blockquote>\n<p>dom属性：attribute</p>\n<p>对象属性：properties</p>\n</blockquote>\n<h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月19日商品放大镜.md163610.6889688.png\"></p>\n<h1 id=\"es6\"><a href=\"#es6\" class=\"headerlink\" title=\"es6\"></a>es6</h1><h2 id=\"数组解构\"><a href=\"#数组解构\" class=\"headerlink\" title=\"数组解构\"></a>数组解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a1,a2,a3,a4,a5,a6]=arr;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1,a2,a3,a4,a5,a6);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象解构\"><a href=\"#对象解构\" class=\"headerlink\" title=\"对象解构\"></a>对象解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">44</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name,age&#125;=obj1;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串解构\"><a href=\"#字符串解构\" class=\"headerlink\" title=\"字符串解构\"></a>字符串解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str1=<span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//let s1=str1[0];//let是新语法，不能重复定义</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [s1,s2,s3,s4,s5]=str1;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s1,s2,s3,s4,s5);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数解构\"><a href=\"#函数解构\" class=\"headerlink\" title=\"函数解构\"></a>函数解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\">&#123;name,age&#125;</span>)&#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn1</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">name</span>:<span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数设置默认值\"><a href=\"#函数参数设置默认值\" class=\"headerlink\" title=\"函数参数设置默认值\"></a>函数参数设置默认值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\">x=<span class=\"number\">2</span>,y=<span class=\"number\">3</span></span>)&#123;<span class=\"comment\">//undefined + undefined(数字) 结果是NaN</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn2</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扩展运算符的使用\"><a href=\"#扩展运算符的使用\" class=\"headerlink\" title=\"扩展运算符的使用\"></a>扩展运算符的使用</h2><h2 id=\"数组拼接\"><a href=\"#数组拼接\" class=\"headerlink\" title=\"数组拼接\"></a>数组拼接</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3=[...arr1,...arr2];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr3);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象拼接，后面覆盖前面\"><a href=\"#对象拼接，后面覆盖前面\" class=\"headerlink\" title=\"对象拼接，后面覆盖前面\"></a>对象拼接，后面覆盖前面</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1=&#123;</span><br><span class=\"line\"> <span class=\"attr\">name</span>:<span class=\"string\">&quot;aixan&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2=&#123;</span><br><span class=\"line\"> <span class=\"attr\">genderL</span>:<span class=\"string\">&quot;male&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3=&#123;...obj1,...obj2&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj3);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dom数组转换为正常数组\"><a href=\"#dom数组转换为正常数组\" class=\"headerlink\" title=\"dom数组转换为正常数组\"></a>dom数组转换为正常数组</h2><blockquote>\n<p>伪数组：虽然是数据的一系列集合，但是不具备正常数组的方法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElemmentByClassName</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi=[...arr];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aLi);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn3</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn3</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn3</span>(<span class=\"params\">x,y,...rest</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rest);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn3</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">fn4</span>=(<span class=\"params\">x,y</span>)=&gt;&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">fn5</span>=str=&gt;<span class=\"title function_\">log</span>(str);<span class=\"comment\">//log未定义</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当函数只有一个参数的时候可以省略括号</p>\n<p>当函数体只有一条语句的时候{}可以省略</p>\n</blockquote>\n<p><strong>箭头函数注意的点</strong></p>\n<ul>\n<li>不能当做构造函数（类），不能使用new命令</li>\n<li>箭头函数不能使用arguments对象，但是可以用“rest”</li>\n<li>箭头函数没有this</li>\n</ul>\n<blockquote>\n<p>this指向的是调用(函数)的对象，但是如果调用的是箭头函数，则无效</p>\n</blockquote>\n<h2 id=\"对象数组遍历\"><a href=\"#对象数组遍历\" class=\"headerlink\" title=\"对象数组遍历\"></a>对象数组遍历</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xixi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">20</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xixixi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">30</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">40</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list.<span class=\"property\">keys</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list.<span class=\"title function_\">values</span>())&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> [k,v] <span class=\"keyword\">of</span> list.<span class=\"property\">entries</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k,v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">list.<span class=\"title function_\">forEach</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        value.<span class=\"property\">age</span>+=<span class=\"number\">60</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value,index,arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\">list.<span class=\"title function_\">map</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">v,i,a</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\">list.<span class=\"title function_\">filter</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">v,i,a</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value.<span class=\"property\">age</span>&gt;<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"可以省略属性值\"><a href=\"#可以省略属性值\" class=\"headerlink\" title=\"可以省略属性值\"></a>可以省略属性值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=&#123;</span><br><span class=\"line\">    name,</span><br><span class=\"line\">    age,</span><br><span class=\"line\">    <span class=\"title function_\">eat</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//body</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"交换变量\"><a href=\"#交换变量\" class=\"headerlink\" title=\"交换变量\"></a>交换变量</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aa=<span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bb=<span class=\"number\">999</span>;</span><br><span class=\"line\">[bb,aa]=[aa,bb];</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>比例=-（大图片的宽高-容器宽高）/（小图片的宽高-拖拽的宽高）</p>\n</blockquote>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><blockquote>\n<p>nagvigetor.userAgent();</p>\n<p>location.reload();//重新加载</p>\n</blockquote>\n<h2 id=\"dom-api-application-program-interface\"><a href=\"#dom-api-application-program-interface\" class=\"headerlink\" title=\"dom api(application program interface)\"></a>dom api(application program interface)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getElementsByClassName</span>();</span><br><span class=\"line\"><span class=\"comment\">//返回一个数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">querySelect</span>();<span class=\"comment\">//选中一个符合条件的</span></span><br><span class=\"line\"><span class=\"title function_\">querySelectAll</span>();<span class=\"comment\">//选中所有符合条件的</span></span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">childNodes</span><span class=\"comment\">//空格和换行也包括在内</span></span><br><span class=\"line\">obj.<span class=\"property\">children</span><span class=\"comment\">//选中标签，不包括空格，但是不是w3c的标准</span></span><br><span class=\"line\"></span><br><span class=\"line\">obj.<span class=\"property\">nextSibling</span><span class=\"comment\">//选中下一个元素，包括空格和文本</span></span><br><span class=\"line\">obj.<span class=\"property\">nextElementSibling</span><span class=\"comment\">//选中下一个标签</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>找到下一个元素的函数</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">next</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(elem.<span class=\"property\">nextSibling</span>!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> elemNext=elem.<span class=\"property\">nextSibling</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(elemNext.<span class=\"property\">nodeType</span>==<span class=\"number\">1</span>)<span class=\"keyword\">return</span> elemNext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodeType\"><a href=\"#nodeType\" class=\"headerlink\" title=\"nodeType\"></a>nodeType</h2><blockquote>\n<p>注释:8</p>\n<p>元素&lt;p&gt;…:1</p>\n<p>文本:3</p>\n</blockquote>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><blockquote>\n<p>dom属性：attribute</p>\n<p>对象属性：properties</p>\n</blockquote>\n<h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月19日商品放大镜.md163610.6889688.png\"></p>\n<h1 id=\"es6\"><a href=\"#es6\" class=\"headerlink\" title=\"es6\"></a>es6</h1><h2 id=\"数组解构\"><a href=\"#数组解构\" class=\"headerlink\" title=\"数组解构\"></a>数组解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a1,a2,a3,a4,a5,a6]=arr;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a1,a2,a3,a4,a5,a6);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象解构\"><a href=\"#对象解构\" class=\"headerlink\" title=\"对象解构\"></a>对象解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">44</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;name,age&#125;=obj1;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串解构\"><a href=\"#字符串解构\" class=\"headerlink\" title=\"字符串解构\"></a>字符串解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str1=<span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//let s1=str1[0];//let是新语法，不能重复定义</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [s1,s2,s3,s4,s5]=str1;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s1,s2,s3,s4,s5);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数解构\"><a href=\"#函数解构\" class=\"headerlink\" title=\"函数解构\"></a>函数解构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn1</span>(<span class=\"params\">&#123;name,age&#125;</span>)&#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn1</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">name</span>:<span class=\"string\">&quot;lisi&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数设置默认值\"><a href=\"#函数参数设置默认值\" class=\"headerlink\" title=\"函数参数设置默认值\"></a>函数参数设置默认值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn2</span>(<span class=\"params\">x=<span class=\"number\">2</span>,y=<span class=\"number\">3</span></span>)&#123;<span class=\"comment\">//undefined + undefined(数字) 结果是NaN</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn2</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扩展运算符的使用\"><a href=\"#扩展运算符的使用\" class=\"headerlink\" title=\"扩展运算符的使用\"></a>扩展运算符的使用</h2><h2 id=\"数组拼接\"><a href=\"#数组拼接\" class=\"headerlink\" title=\"数组拼接\"></a>数组拼接</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr3=[...arr1,...arr2];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr3);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象拼接，后面覆盖前面\"><a href=\"#对象拼接，后面覆盖前面\" class=\"headerlink\" title=\"对象拼接，后面覆盖前面\"></a>对象拼接，后面覆盖前面</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1=&#123;</span><br><span class=\"line\"> <span class=\"attr\">name</span>:<span class=\"string\">&quot;aixan&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2=&#123;</span><br><span class=\"line\"> <span class=\"attr\">genderL</span>:<span class=\"string\">&quot;male&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">age</span>:<span class=\"number\">6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3=&#123;...obj1,...obj2&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj3);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dom数组转换为正常数组\"><a href=\"#dom数组转换为正常数组\" class=\"headerlink\" title=\"dom数组转换为正常数组\"></a>dom数组转换为正常数组</h2><blockquote>\n<p>伪数组：虽然是数据的一系列集合，但是不具备正常数组的方法</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElemmentByClassName</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi=[...arr];</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aLi);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn3</span>(<span class=\"params\">x,y</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn3</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn3</span>(<span class=\"params\">x,y,...rest</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(rest);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn3</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">fn4</span>=(<span class=\"params\">x,y</span>)=&gt;&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x+y);&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title function_\">fn5</span>=str=&gt;<span class=\"title function_\">log</span>(str);<span class=\"comment\">//log未定义</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>当函数只有一个参数的时候可以省略括号</p>\n<p>当函数体只有一条语句的时候{}可以省略</p>\n</blockquote>\n<p><strong>箭头函数注意的点</strong></p>\n<ul>\n<li>不能当做构造函数（类），不能使用new命令</li>\n<li>箭头函数不能使用arguments对象，但是可以用“rest”</li>\n<li>箭头函数没有this</li>\n</ul>\n<blockquote>\n<p>this指向的是调用(函数)的对象，但是如果调用的是箭头函数，则无效</p>\n</blockquote>\n<h2 id=\"对象数组遍历\"><a href=\"#对象数组遍历\" class=\"headerlink\" title=\"对象数组遍历\"></a>对象数组遍历</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list=[</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xixi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">20</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xixixi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">30</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;xi&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">40</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list.<span class=\"property\">keys</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> aa <span class=\"keyword\">of</span> list.<span class=\"title function_\">values</span>())&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(aa);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> [k,v] <span class=\"keyword\">of</span> list.<span class=\"property\">entries</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k,v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">list.<span class=\"title function_\">forEach</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        value.<span class=\"property\">age</span>+=<span class=\"number\">60</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(value,index,arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\">list.<span class=\"title function_\">map</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">v,i,a</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\">list.<span class=\"title function_\">filter</span>(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">v,i,a</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value.<span class=\"property\">age</span>&gt;<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"可以省略属性值\"><a href=\"#可以省略属性值\" class=\"headerlink\" title=\"可以省略属性值\"></a>可以省略属性值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=&#123;</span><br><span class=\"line\">    name,</span><br><span class=\"line\">    age,</span><br><span class=\"line\">    <span class=\"title function_\">eat</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//body</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"交换变量\"><a href=\"#交换变量\" class=\"headerlink\" title=\"交换变量\"></a>交换变量</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aa=<span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bb=<span class=\"number\">999</span>;</span><br><span class=\"line\">[bb,aa]=[aa,bb];</span><br></pre></td></tr></table></figure>\n"},{"title":"8. documentElement具体解析","date":"2022-10-15T02:06:51.000Z","_content":"\n## document.documentElement.clientX\n\n> 获取浏览器的可视宽度\n\n```javascript\n//添加事件监听器绑定点击事件,onclick不可用于事件捕获\nelement.addEventListener(\n    \"click\",\n    function(){\n        console.log(\"haha\");\n    },\n    false//是否捕获\n);\n\n//e.stopPropagation();//阻止时间捕获\n```\n\n## 事件冒泡与事件委托\n\n## 对象解构可用于赋值，传参，转换\n\n```javascript\n<ul>\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n</ul>\nvar ul=...;\nvar li=ul.````;\nul.addEventListener(\"click\",function(e){\n    if(e.target.tagName==\"LI\"){console.log(e.target.innerHtml);}\n});//添加事件委托\n```\n\n```javascript\nvar axian={\n    name:\"pig\",\n    age:20\n};\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月17号documentElement.md","raw":"---\ntitle: '8. documentElement具体解析'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## document.documentElement.clientX\n\n> 获取浏览器的可视宽度\n\n```javascript\n//添加事件监听器绑定点击事件,onclick不可用于事件捕获\nelement.addEventListener(\n    \"click\",\n    function(){\n        console.log(\"haha\");\n    },\n    false//是否捕获\n);\n\n//e.stopPropagation();//阻止时间捕获\n```\n\n## 事件冒泡与事件委托\n\n## 对象解构可用于赋值，传参，转换\n\n```javascript\n<ul>\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n</ul>\nvar ul=...;\nvar li=ul.````;\nul.addEventListener(\"click\",function(e){\n    if(e.target.tagName==\"LI\"){console.log(e.target.innerHtml);}\n});//添加事件委托\n```\n\n```javascript\nvar axian={\n    name:\"pig\",\n    age:20\n};\n```\n","slug":"前端/学习/唯创前端上课笔记/1月17号documentElement","published":1,"updated":"2023-03-21T09:32:14.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7u004zo8hu807zg00j","content":"<h2 id=\"document-documentElement-clientX\"><a href=\"#document-documentElement-clientX\" class=\"headerlink\" title=\"document.documentElement.clientX\"></a>document.documentElement.clientX</h2><blockquote>\n<p>获取浏览器的可视宽度</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//添加事件监听器绑定点击事件,onclick不可用于事件捕获</span></span><br><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;click&quot;</span>,</span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;haha&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"literal\">false</span><span class=\"comment\">//是否捕获</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//e.stopPropagation();//阻止时间捕获</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事件冒泡与事件委托\"><a href=\"#事件冒泡与事件委托\" class=\"headerlink\" title=\"事件冒泡与事件委托\"></a>事件冒泡与事件委托</h2><h2 id=\"对象解构可用于赋值，传参，转换\"><a href=\"#对象解构可用于赋值，传参，转换\" class=\"headerlink\" title=\"对象解构可用于赋值，传参，转换\"></a>对象解构可用于赋值，传参，转换</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ul=...;</span><br><span class=\"line\"><span class=\"keyword\">var</span> li=ul.<span class=\"string\">``</span><span class=\"string\">``</span>;</span><br><span class=\"line\">ul.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.<span class=\"property\">target</span>.<span class=\"property\">tagName</span>==<span class=\"string\">&quot;LI&quot;</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">target</span>.<span class=\"property\">innerHtml</span>);&#125;</span><br><span class=\"line\">&#125;);<span class=\"comment\">//添加事件委托</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> axian=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;pig&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"document-documentElement-clientX\"><a href=\"#document-documentElement-clientX\" class=\"headerlink\" title=\"document.documentElement.clientX\"></a>document.documentElement.clientX</h2><blockquote>\n<p>获取浏览器的可视宽度</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//添加事件监听器绑定点击事件,onclick不可用于事件捕获</span></span><br><span class=\"line\">element.<span class=\"title function_\">addEventListener</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;click&quot;</span>,</span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;haha&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"literal\">false</span><span class=\"comment\">//是否捕获</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//e.stopPropagation();//阻止时间捕获</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事件冒泡与事件委托\"><a href=\"#事件冒泡与事件委托\" class=\"headerlink\" title=\"事件冒泡与事件委托\"></a>事件冒泡与事件委托</h2><h2 id=\"对象解构可用于赋值，传参，转换\"><a href=\"#对象解构可用于赋值，传参，转换\" class=\"headerlink\" title=\"对象解构可用于赋值，传参，转换\"></a>对象解构可用于赋值，传参，转换</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ul=...;</span><br><span class=\"line\"><span class=\"keyword\">var</span> li=ul.<span class=\"string\">``</span><span class=\"string\">``</span>;</span><br><span class=\"line\">ul.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.<span class=\"property\">target</span>.<span class=\"property\">tagName</span>==<span class=\"string\">&quot;LI&quot;</span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">target</span>.<span class=\"property\">innerHtml</span>);&#125;</span><br><span class=\"line\">&#125;);<span class=\"comment\">//添加事件委托</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> axian=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;pig&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"10. sass学习","date":"2022-10-15T02:06:51.000Z","_content":"\n## 更换sass源\n\n官网：[ruby](https://www.sass.hk/install/)\n\n```ruby\ngem update --system\ngem -v\ngem sources --add https://gems.ruby-china.com/ --remove h\ngem sources -l\n\nbundle config mirror.https://rubygems.org https://gems.ruby-china.com\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md246098.1806178.png)\n\n```ruby\ngem install sass\ngem install compass\n```\n\n## 常用命令\n\n```scss\n\n```\n\n## 项目构建\n\n1. 编译目录\n2. 资源目录\n\n# 使用方法\n\n## 使用变量\n\n```scss\n$sass-style: red;\ndiv{\n    color:$sass-style;\n}\n```\n\n## 规则\n\n- 下划线等同于-\n-\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md248439.0169909.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md248502.0948059.png)\n\n```scss\n--style=nested//嵌套（默认）\n--style=expanded//展开\n--style=compact//紧凑\n--style=compressed//压缩\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md250085.4915727.png)\n\n## &\n\n> &相当于当前选择器从顶级选择器到当前选择器的夫选择器组\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md252346.3523103.png)\n\n## @mixin\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md302.2332279.png)\n\n## 运算\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md2916.6256426.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md2920.8035762.png)\n\n## map\n\n```scss\n$mapObj:(\n    c1:red,\n    c2:blue,\n    c3:black\n);\n\n.string-test{\n    color: map-keys($mapObj);\n    color: map-values($mapObj);\n    color: map-get($mapObj, c2 );\n    color: map-has-key($mapObj, c3 );\n}\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md5073.4717357.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md6706.498681.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md8027.2859747.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md8097.629221.png)\n\n## 逻辑控制\n\n```scss\n@echo $key,$item in $map{\n    //.... \n}\n\n@if 3<5{\n    //....\n}@else if 4>7{\n    //...\n}@else{\n    //...\n}\n\n@for $i from 1 to 6{\n//1,2,3,4,5，没有6\n}\n@for $i from 1 to 6{\n//1,2,3,4,5,6，包括6\n}\n```\n\n# 总结\n\n```mindmap\n- scss\n  - 安装\n    - ruby\n    - 修改镜像\n    - gem 安装sass，compress\n  - 编译\n    - 使用附加表达式\n    - sass file1:file2 -w --style=expanded\n  - 变量\n    - $name\n    - &:相当于父亲\n  - 逻辑控制\n    - @echo\n    - @if $var in map\n  - 运算\n  - 附加\n    - @include\n    - @extend\n  - map:$mapName:(k:v,k:v,k:v);\n    - 方法\n      - map-remove\n      - map-keys\n      - map-values\n      - map-merge\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月20日sass.md","raw":"---\ntitle: '10. sass学习'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 更换sass源\n\n官网：[ruby](https://www.sass.hk/install/)\n\n```ruby\ngem update --system\ngem -v\ngem sources --add https://gems.ruby-china.com/ --remove h\ngem sources -l\n\nbundle config mirror.https://rubygems.org https://gems.ruby-china.com\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md246098.1806178.png)\n\n```ruby\ngem install sass\ngem install compass\n```\n\n## 常用命令\n\n```scss\n\n```\n\n## 项目构建\n\n1. 编译目录\n2. 资源目录\n\n# 使用方法\n\n## 使用变量\n\n```scss\n$sass-style: red;\ndiv{\n    color:$sass-style;\n}\n```\n\n## 规则\n\n- 下划线等同于-\n-\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md248439.0169909.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md248502.0948059.png)\n\n```scss\n--style=nested//嵌套（默认）\n--style=expanded//展开\n--style=compact//紧凑\n--style=compressed//压缩\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md250085.4915727.png)\n\n## &\n\n> &相当于当前选择器从顶级选择器到当前选择器的夫选择器组\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md252346.3523103.png)\n\n## @mixin\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md302.2332279.png)\n\n## 运算\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md2916.6256426.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md2920.8035762.png)\n\n## map\n\n```scss\n$mapObj:(\n    c1:red,\n    c2:blue,\n    c3:black\n);\n\n.string-test{\n    color: map-keys($mapObj);\n    color: map-values($mapObj);\n    color: map-get($mapObj, c2 );\n    color: map-has-key($mapObj, c3 );\n}\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md5073.4717357.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md6706.498681.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md8027.2859747.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日sass.md8097.629221.png)\n\n## 逻辑控制\n\n```scss\n@echo $key,$item in $map{\n    //.... \n}\n\n@if 3<5{\n    //....\n}@else if 4>7{\n    //...\n}@else{\n    //...\n}\n\n@for $i from 1 to 6{\n//1,2,3,4,5，没有6\n}\n@for $i from 1 to 6{\n//1,2,3,4,5,6，包括6\n}\n```\n\n# 总结\n\n```mindmap\n- scss\n  - 安装\n    - ruby\n    - 修改镜像\n    - gem 安装sass，compress\n  - 编译\n    - 使用附加表达式\n    - sass file1:file2 -w --style=expanded\n  - 变量\n    - $name\n    - &:相当于父亲\n  - 逻辑控制\n    - @echo\n    - @if $var in map\n  - 运算\n  - 附加\n    - @include\n    - @extend\n  - map:$mapName:(k:v,k:v,k:v);\n    - 方法\n      - map-remove\n      - map-keys\n      - map-values\n      - map-merge\n```\n","slug":"前端/学习/唯创前端上课笔记/1月20日sass","published":1,"updated":"2023-03-21T09:32:46.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7w0053o8hu38l32e4l","content":"<h2 id=\"更换sass源\"><a href=\"#更换sass源\" class=\"headerlink\" title=\"更换sass源\"></a>更换sass源</h2><p>官网：<a href=\"https://www.sass.hk/install/\">ruby</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem update --system</span><br><span class=\"line\">gem -v</span><br><span class=\"line\">gem sources --add <span class=\"symbol\">https:</span>/<span class=\"regexp\">/gems.ruby-china.com/</span> --remove h</span><br><span class=\"line\">gem sources -l</span><br><span class=\"line\"></span><br><span class=\"line\">bundle config mirror.<span class=\"symbol\">https:</span>/<span class=\"regexp\">/rubygems.org https:/</span><span class=\"regexp\">/gems.ruby-china.com</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md246098.1806178.png\"></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install sass</span><br><span class=\"line\">gem install compass</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"项目构建\"><a href=\"#项目构建\" class=\"headerlink\" title=\"项目构建\"></a>项目构建</h2><ol>\n<li>编译目录</li>\n<li>资源目录</li>\n</ol>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h2 id=\"使用变量\"><a href=\"#使用变量\" class=\"headerlink\" title=\"使用变量\"></a>使用变量</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sass-style</span>: red;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$sass-style</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h2><ul>\n<li>下划线等同于-</li>\n<li></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md248439.0169909.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md248502.0948059.png\"></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">--style</span>=nested<span class=\"comment\">//嵌套（默认）</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=expanded<span class=\"comment\">//展开</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=compact<span class=\"comment\">//紧凑</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=compressed<span class=\"comment\">//压缩</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md250085.4915727.png\"></p>\n<h2 id=\"amp\"><a href=\"#amp\" class=\"headerlink\" title=\"&amp;\"></a>&amp;</h2><blockquote>\n<p>&amp;相当于当前选择器从顶级选择器到当前选择器的夫选择器组</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md252346.3523103.png\"></p>\n<h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"@mixin\"></a>@mixin</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md302.2332279.png\"></p>\n<h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md2916.6256426.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md2920.8035762.png\"></p>\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$mapObj</span>:(</span><br><span class=\"line\">    c1:red,</span><br><span class=\"line\">    c2:blue,</span><br><span class=\"line\">    c3:black</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.string-test</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-keys</span>(<span class=\"variable\">$mapObj</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-values</span>(<span class=\"variable\">$mapObj</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-get</span>(<span class=\"variable\">$mapObj</span>, c2 );</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-has-key</span>(<span class=\"variable\">$mapObj</span>, c3 );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md5073.4717357.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md6706.498681.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md8027.2859747.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md8097.629221.png\"></p>\n<h2 id=\"逻辑控制\"><a href=\"#逻辑控制\" class=\"headerlink\" title=\"逻辑控制\"></a>逻辑控制</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@echo</span> <span class=\"variable\">$key</span>,<span class=\"variable\">$item</span> in <span class=\"variable\">$map</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//.... </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@if</span> <span class=\"number\">3</span>&lt;<span class=\"number\">5</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//....</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">@else</span> if <span class=\"number\">4</span>&gt;<span class=\"number\">7</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">@else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">6</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//1,2,3,4,5，没有6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">6</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//1,2,3,4,5,6，包括6</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- scss</span><br><span class=\"line\">  - 安装</span><br><span class=\"line\">    - ruby</span><br><span class=\"line\">    - 修改镜像</span><br><span class=\"line\">    - gem 安装sass，compress</span><br><span class=\"line\">  - 编译</span><br><span class=\"line\">    - 使用附加表达式</span><br><span class=\"line\">    - sass file1:file2 -w --style=expanded</span><br><span class=\"line\">  - 变量</span><br><span class=\"line\">    - $name</span><br><span class=\"line\">    - &amp;:相当于父亲</span><br><span class=\"line\">  - 逻辑控制</span><br><span class=\"line\">    - @echo</span><br><span class=\"line\">    - @if $var in map</span><br><span class=\"line\">  - 运算</span><br><span class=\"line\">  - 附加</span><br><span class=\"line\">    - @include</span><br><span class=\"line\">    - @extend</span><br><span class=\"line\">  - map:$mapName:(k:v,k:v,k:v);</span><br><span class=\"line\">    - 方法</span><br><span class=\"line\">      - map-remove</span><br><span class=\"line\">      - map-keys</span><br><span class=\"line\">      - map-values</span><br><span class=\"line\">      - map-merge</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"更换sass源\"><a href=\"#更换sass源\" class=\"headerlink\" title=\"更换sass源\"></a>更换sass源</h2><p>官网：<a href=\"https://www.sass.hk/install/\">ruby</a></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem update --system</span><br><span class=\"line\">gem -v</span><br><span class=\"line\">gem sources --add <span class=\"symbol\">https:</span>/<span class=\"regexp\">/gems.ruby-china.com/</span> --remove h</span><br><span class=\"line\">gem sources -l</span><br><span class=\"line\"></span><br><span class=\"line\">bundle config mirror.<span class=\"symbol\">https:</span>/<span class=\"regexp\">/rubygems.org https:/</span><span class=\"regexp\">/gems.ruby-china.com</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md246098.1806178.png\"></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install sass</span><br><span class=\"line\">gem install compass</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"项目构建\"><a href=\"#项目构建\" class=\"headerlink\" title=\"项目构建\"></a>项目构建</h2><ol>\n<li>编译目录</li>\n<li>资源目录</li>\n</ol>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h2 id=\"使用变量\"><a href=\"#使用变量\" class=\"headerlink\" title=\"使用变量\"></a>使用变量</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sass-style</span>: red;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$sass-style</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h2><ul>\n<li>下划线等同于-</li>\n<li></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md248439.0169909.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md248502.0948059.png\"></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">--style</span>=nested<span class=\"comment\">//嵌套（默认）</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=expanded<span class=\"comment\">//展开</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=compact<span class=\"comment\">//紧凑</span></span><br><span class=\"line\"><span class=\"attr\">--style</span>=compressed<span class=\"comment\">//压缩</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md250085.4915727.png\"></p>\n<h2 id=\"amp\"><a href=\"#amp\" class=\"headerlink\" title=\"&amp;\"></a>&amp;</h2><blockquote>\n<p>&amp;相当于当前选择器从顶级选择器到当前选择器的夫选择器组</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md252346.3523103.png\"></p>\n<h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"@mixin\"></a>@mixin</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md302.2332279.png\"></p>\n<h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md2916.6256426.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md2920.8035762.png\"></p>\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$mapObj</span>:(</span><br><span class=\"line\">    c1:red,</span><br><span class=\"line\">    c2:blue,</span><br><span class=\"line\">    c3:black</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.string-test</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-keys</span>(<span class=\"variable\">$mapObj</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-values</span>(<span class=\"variable\">$mapObj</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-get</span>(<span class=\"variable\">$mapObj</span>, c2 );</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"built_in\">map-has-key</span>(<span class=\"variable\">$mapObj</span>, c3 );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md5073.4717357.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md6706.498681.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md8027.2859747.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日sass.md8097.629221.png\"></p>\n<h2 id=\"逻辑控制\"><a href=\"#逻辑控制\" class=\"headerlink\" title=\"逻辑控制\"></a>逻辑控制</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@echo</span> <span class=\"variable\">$key</span>,<span class=\"variable\">$item</span> in <span class=\"variable\">$map</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//.... </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@if</span> <span class=\"number\">3</span>&lt;<span class=\"number\">5</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//....</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">@else</span> if <span class=\"number\">4</span>&gt;<span class=\"number\">7</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">@else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">6</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//1,2,3,4,5，没有6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@for</span> <span class=\"variable\">$i</span> from <span class=\"number\">1</span> to <span class=\"number\">6</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//1,2,3,4,5,6，包括6</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- scss</span><br><span class=\"line\">  - 安装</span><br><span class=\"line\">    - ruby</span><br><span class=\"line\">    - 修改镜像</span><br><span class=\"line\">    - gem 安装sass，compress</span><br><span class=\"line\">  - 编译</span><br><span class=\"line\">    - 使用附加表达式</span><br><span class=\"line\">    - sass file1:file2 -w --style=expanded</span><br><span class=\"line\">  - 变量</span><br><span class=\"line\">    - $name</span><br><span class=\"line\">    - &amp;:相当于父亲</span><br><span class=\"line\">  - 逻辑控制</span><br><span class=\"line\">    - @echo</span><br><span class=\"line\">    - @if $var in map</span><br><span class=\"line\">  - 运算</span><br><span class=\"line\">  - 附加</span><br><span class=\"line\">    - @include</span><br><span class=\"line\">    - @extend</span><br><span class=\"line\">  - map:$mapName:(k:v,k:v,k:v);</span><br><span class=\"line\">    - 方法</span><br><span class=\"line\">      - map-remove</span><br><span class=\"line\">      - map-keys</span><br><span class=\"line\">      - map-values</span><br><span class=\"line\">      - map-merge</span><br></pre></td></tr></table></figure>\n"},{"title":"11. 异步学习","date":"2022-10-15T02:06:51.000Z","_content":"\n## 什么是异步\n\n```javascript\nconsole.log(111);\nsetTimeout(()=>{\n  console.log(222);\n},0);\nfor(var i=0;i<1000;i++){\n    console.log(222);//111 222*** 333\n}\n```\n\n> 原因：js是单线程的，一次只能做一件事情，如果出现异步任务，那么就把异步任务放进异步队列里面，当同步队列执行完了，那么就去执行异步队列\n>\n> 所以说js同步的优先级高于异步\n\n> 同步：正常的js语句\n>\n> 异步：setTimeout，ajax，dom，promise\n\n## ajax前端与后端交流的工具\n\n**作用**\n\n- 搜索信息\n- 请求资源\n\n**回调地狱**\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md234014.5177307.png)\n\n> 异步调用之后回来执行的函数叫回调函数\n\n## Promise\n\n```javascript\n//http状态码（200成功，304重定向，404找不到，500崩溃）\nconst p1=new Promise((resolve,reject)=>{\n    //发送请求\n    //...\n    //请求完成的结果（成功/失败）\n    if(res.status===200){\n        resolve(res);\n    }else{\n        reject(res);\n    }\n});\n\np1.then((res)=>{\n    console.log(res);\n    //添加请求\n    return p1;\n}).catch((err)=>{\n    console.log(err);\n});\n```\n\n## axios\n\n> https://unpkg.com/axios/dist/axios.min.js\n>\n> ```\n> <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n> ```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md235682.9938133.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md235692.2422852.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236088.7578288.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236079.6264426.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236162.7976628.png)\n\n> 解决回调地狱\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236330.6916808.png)\n\n## 当有多个promise对象并且只需要一个时\n\n```javascript\nPromise.all([p1,p2,p3]).then(res=>{\n    console.log(res);\n})\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md237117.9045526.png)\n\n## 模块\n\n```javascript\n\n```\n\n## async和await\n\n```javascript\nasync function axian(){\n    return \"hello\";\n}\naxian().then(v=>{\n    console.log(v);\n})\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月20日异步.md","raw":"---\ntitle: '11. 异步学习'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 什么是异步\n\n```javascript\nconsole.log(111);\nsetTimeout(()=>{\n  console.log(222);\n},0);\nfor(var i=0;i<1000;i++){\n    console.log(222);//111 222*** 333\n}\n```\n\n> 原因：js是单线程的，一次只能做一件事情，如果出现异步任务，那么就把异步任务放进异步队列里面，当同步队列执行完了，那么就去执行异步队列\n>\n> 所以说js同步的优先级高于异步\n\n> 同步：正常的js语句\n>\n> 异步：setTimeout，ajax，dom，promise\n\n## ajax前端与后端交流的工具\n\n**作用**\n\n- 搜索信息\n- 请求资源\n\n**回调地狱**\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md234014.5177307.png)\n\n> 异步调用之后回来执行的函数叫回调函数\n\n## Promise\n\n```javascript\n//http状态码（200成功，304重定向，404找不到，500崩溃）\nconst p1=new Promise((resolve,reject)=>{\n    //发送请求\n    //...\n    //请求完成的结果（成功/失败）\n    if(res.status===200){\n        resolve(res);\n    }else{\n        reject(res);\n    }\n});\n\np1.then((res)=>{\n    console.log(res);\n    //添加请求\n    return p1;\n}).catch((err)=>{\n    console.log(err);\n});\n```\n\n## axios\n\n> https://unpkg.com/axios/dist/axios.min.js\n>\n> ```\n> <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n> ```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md235682.9938133.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md235692.2422852.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236088.7578288.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236079.6264426.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236162.7976628.png)\n\n> 解决回调地狱\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md236330.6916808.png)\n\n## 当有多个promise对象并且只需要一个时\n\n```javascript\nPromise.all([p1,p2,p3]).then(res=>{\n    console.log(res);\n})\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月20日promise.md237117.9045526.png)\n\n## 模块\n\n```javascript\n\n```\n\n## async和await\n\n```javascript\nasync function axian(){\n    return \"hello\";\n}\naxian().then(v=>{\n    console.log(v);\n})\n```\n","slug":"前端/学习/唯创前端上课笔记/1月20日异步","published":1,"updated":"2023-03-21T09:33:00.670Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7x0056o8hu0ylx2gyj","content":"<h2 id=\"什么是异步\"><a href=\"#什么是异步\" class=\"headerlink\" title=\"什么是异步\"></a>什么是异步</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">111</span>);</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);</span><br><span class=\"line\">&#125;,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);<span class=\"comment\">//111 222*** 333</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>原因：js是单线程的，一次只能做一件事情，如果出现异步任务，那么就把异步任务放进异步队列里面，当同步队列执行完了，那么就去执行异步队列</p>\n<p>所以说js同步的优先级高于异步</p>\n</blockquote>\n<blockquote>\n<p>同步：正常的js语句</p>\n<p>异步：setTimeout，ajax，dom，promise</p>\n</blockquote>\n<h2 id=\"ajax前端与后端交流的工具\"><a href=\"#ajax前端与后端交流的工具\" class=\"headerlink\" title=\"ajax前端与后端交流的工具\"></a>ajax前端与后端交流的工具</h2><p><strong>作用</strong></p>\n<ul>\n<li>搜索信息</li>\n<li>请求资源</li>\n</ul>\n<p><strong>回调地狱</strong></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md234014.5177307.png\"></p>\n<blockquote>\n<p>异步调用之后回来执行的函数叫回调函数</p>\n</blockquote>\n<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//http状态码（200成功，304重定向，404找不到，500崩溃）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//发送请求</span></span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"comment\">//请求完成的结果（成功/失败）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(res.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(res);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">    <span class=\"comment\">//添加请求</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h2><blockquote>\n<p><a href=\"https://unpkg.com/axios/dist/axios.min.js\">https://unpkg.com/axios/dist/axios.min.js</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md235682.9938133.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md235692.2422852.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236088.7578288.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236079.6264426.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236162.7976628.png\"></p>\n<blockquote>\n<p>解决回调地狱</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236330.6916808.png\"></p>\n<h2 id=\"当有多个promise对象并且只需要一个时\"><a href=\"#当有多个promise对象并且只需要一个时\" class=\"headerlink\" title=\"当有多个promise对象并且只需要一个时\"></a>当有多个promise对象并且只需要一个时</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([p1,p2,p3]).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md237117.9045526.png\"></p>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"async和await\"><a href=\"#async和await\" class=\"headerlink\" title=\"async和await\"></a>async和await</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">axian</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">axian</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(v);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是异步\"><a href=\"#什么是异步\" class=\"headerlink\" title=\"什么是异步\"></a>什么是异步</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">111</span>);</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);</span><br><span class=\"line\">&#125;,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">222</span>);<span class=\"comment\">//111 222*** 333</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>原因：js是单线程的，一次只能做一件事情，如果出现异步任务，那么就把异步任务放进异步队列里面，当同步队列执行完了，那么就去执行异步队列</p>\n<p>所以说js同步的优先级高于异步</p>\n</blockquote>\n<blockquote>\n<p>同步：正常的js语句</p>\n<p>异步：setTimeout，ajax，dom，promise</p>\n</blockquote>\n<h2 id=\"ajax前端与后端交流的工具\"><a href=\"#ajax前端与后端交流的工具\" class=\"headerlink\" title=\"ajax前端与后端交流的工具\"></a>ajax前端与后端交流的工具</h2><p><strong>作用</strong></p>\n<ul>\n<li>搜索信息</li>\n<li>请求资源</li>\n</ul>\n<p><strong>回调地狱</strong></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md234014.5177307.png\"></p>\n<blockquote>\n<p>异步调用之后回来执行的函数叫回调函数</p>\n</blockquote>\n<h2 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//http状态码（200成功，304重定向，404找不到，500崩溃）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//发送请求</span></span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"comment\">//请求完成的结果（成功/失败）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(res.<span class=\"property\">status</span>===<span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(res);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">    <span class=\"comment\">//添加请求</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1;</span><br><span class=\"line\">&#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h2><blockquote>\n<p><a href=\"https://unpkg.com/axios/dist/axios.min.js\">https://unpkg.com/axios/dist/axios.min.js</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md235682.9938133.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md235692.2422852.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236088.7578288.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236079.6264426.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236162.7976628.png\"></p>\n<blockquote>\n<p>解决回调地狱</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md236330.6916808.png\"></p>\n<h2 id=\"当有多个promise对象并且只需要一个时\"><a href=\"#当有多个promise对象并且只需要一个时\" class=\"headerlink\" title=\"当有多个promise对象并且只需要一个时\"></a>当有多个promise对象并且只需要一个时</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([p1,p2,p3]).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月20日promise.md237117.9045526.png\"></p>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"async和await\"><a href=\"#async和await\" class=\"headerlink\" title=\"async和await\"></a>async和await</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">axian</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">axian</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">v</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(v);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n"},{"title":"13. vue组件","date":"2022-10-15T02:06:51.000Z","_content":"\n## 初始化方式\n\n```javascript\nVue.component(\"com1\",{\n    template:``,\n});\n```\n\n- 首先在component里面注册组件\n- 然后在组件里面使用\n\n## 过程\n\n1. 在components里面注册组件\n2. 写组件的名字\n3. 写组件模版的名字\n4. 定义组件模版\n5. 定义组件参数变量名字\n6. 在模版里面写使用变量的位置\n7. 应用过程中用:变量，来使用\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md58696.9284898.png)\n\n```javascript\n    <div id=\"app\">\n        <axian :sayhi=\"msg\"></axian>\n    </div>\n    <template id=\"axian\">\n        <div>\n            <p>你好</p>\n            <h1>{{sayhi}}</h1>\n        </div>\n    </template>\n    <script src=\"./vue.js\"></script>\n    <script>\n\n        Vue.config.productionTip=false;\n        const app=new Vue({\n            el:'#app',\n            data:{\n                msg:\"hello\",\n            },\n            components:{\n                axian:{\n                    template:\"#axian\",\n                    props:[\"sayhi\"],\n                },\n            }\n        });\n    </script>\n```\n\n## slot插槽，如果要扩展模版，需要插槽\n\n- 如果不指定的话就是全插\n  ```javascript\n      <template id=\"axian\">\n          <div>\n              <p>你好</p>\n              <h1>{{sayhi}}</h1>\n              <slot></slot>\n              <slot></slot>\n              <slot></slot>\n          </div>\n      </template>\n  ```\n\n## 动态插槽\n\n> 在模版里定义插槽的名字来进行动态插入内容\n\n```javascript\n        <axian :sayhi=\"msg\">\n            <template v-slot:aa>\n                <button>aa</button>\n            </template>\n            <template v-slot:bb>\n                <button>bb</button>\n            </template>\n        </axian>  \n    <template id=\"axian\">\n        <div>\n            <p>你好</p>\n            <h1>{{sayhi}}</h1>\n            <slot name=\"aa\"></slot>\n            <slot name=\"bb\"></slot>\n        </div>\n    </template>\n```\n\n## data(){}\n\n> 为了给每个组件新增自定义的数据，开辟一个新的空间\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md60537.8039823.png)\n\n## 子父组件数据传递\n\n- 组件里绑定一个自定义属性，该属性可以触发父亲的函数\n- 组件里绑定点击事件\n- 事件对应一个方法\n- 该方法激活组件里的自定义属性`this.$emit`\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md61756.8490572.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md61768.3312032.png)\n\n> 子组件点击事件->子组件函数->自定义属性->父组件函数\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md67208.077329.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md67222.0779037.png)\n\n## npm i aa -save\n\n> 将依赖包添加到文件里\n","source":"_posts/前端/学习/唯创前端上课笔记/1月23日vue组件.md","raw":"---\ntitle: '13. vue组件'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 初始化方式\n\n```javascript\nVue.component(\"com1\",{\n    template:``,\n});\n```\n\n- 首先在component里面注册组件\n- 然后在组件里面使用\n\n## 过程\n\n1. 在components里面注册组件\n2. 写组件的名字\n3. 写组件模版的名字\n4. 定义组件模版\n5. 定义组件参数变量名字\n6. 在模版里面写使用变量的位置\n7. 应用过程中用:变量，来使用\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md58696.9284898.png)\n\n```javascript\n    <div id=\"app\">\n        <axian :sayhi=\"msg\"></axian>\n    </div>\n    <template id=\"axian\">\n        <div>\n            <p>你好</p>\n            <h1>{{sayhi}}</h1>\n        </div>\n    </template>\n    <script src=\"./vue.js\"></script>\n    <script>\n\n        Vue.config.productionTip=false;\n        const app=new Vue({\n            el:'#app',\n            data:{\n                msg:\"hello\",\n            },\n            components:{\n                axian:{\n                    template:\"#axian\",\n                    props:[\"sayhi\"],\n                },\n            }\n        });\n    </script>\n```\n\n## slot插槽，如果要扩展模版，需要插槽\n\n- 如果不指定的话就是全插\n  ```javascript\n      <template id=\"axian\">\n          <div>\n              <p>你好</p>\n              <h1>{{sayhi}}</h1>\n              <slot></slot>\n              <slot></slot>\n              <slot></slot>\n          </div>\n      </template>\n  ```\n\n## 动态插槽\n\n> 在模版里定义插槽的名字来进行动态插入内容\n\n```javascript\n        <axian :sayhi=\"msg\">\n            <template v-slot:aa>\n                <button>aa</button>\n            </template>\n            <template v-slot:bb>\n                <button>bb</button>\n            </template>\n        </axian>  \n    <template id=\"axian\">\n        <div>\n            <p>你好</p>\n            <h1>{{sayhi}}</h1>\n            <slot name=\"aa\"></slot>\n            <slot name=\"bb\"></slot>\n        </div>\n    </template>\n```\n\n## data(){}\n\n> 为了给每个组件新增自定义的数据，开辟一个新的空间\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md60537.8039823.png)\n\n## 子父组件数据传递\n\n- 组件里绑定一个自定义属性，该属性可以触发父亲的函数\n- 组件里绑定点击事件\n- 事件对应一个方法\n- 该方法激活组件里的自定义属性`this.$emit`\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md61756.8490572.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md61768.3312032.png)\n\n> 子组件点击事件->子组件函数->自定义属性->父组件函数\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md67208.077329.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23日vue组件.md67222.0779037.png)\n\n## npm i aa -save\n\n> 将依赖包添加到文件里\n","slug":"前端/学习/唯创前端上课笔记/1月23日vue组件","published":1,"updated":"2023-03-21T09:34:54.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7y005ao8hugc1z83ai","content":"<h2 id=\"初始化方式\"><a href=\"#初始化方式\" class=\"headerlink\" title=\"初始化方式\"></a>初始化方式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&quot;com1&quot;</span>,&#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>:<span class=\"string\">``</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>首先在component里面注册组件</li>\n<li>然后在组件里面使用</li>\n</ul>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><ol>\n<li>在components里面注册组件</li>\n<li>写组件的名字</li>\n<li>写组件模版的名字</li>\n<li>定义组件模版</li>\n<li>定义组件参数变量名字</li>\n<li>在模版里面写使用变量的位置</li>\n<li>应用过程中用:变量，来使用</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md58696.9284898.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">axian</span> <span class=\"attr\">:sayhi</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">axian</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;axian&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span>=<span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">const</span> app=<span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">el</span>:<span class=\"string\">&#x27;#app&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">data</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">msg</span>:<span class=\"string\">&quot;hello&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">components</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">axian</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"attr\">template</span>:<span class=\"string\">&quot;#axian&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"attr\">props</span>:[<span class=\"string\">&quot;sayhi&quot;</span>],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slot插槽，如果要扩展模版，需要插槽\"><a href=\"#slot插槽，如果要扩展模版，需要插槽\" class=\"headerlink\" title=\"slot插槽，如果要扩展模版，需要插槽\"></a>slot插槽，如果要扩展模版，需要插槽</h2><ul>\n<li>如果不指定的话就是全插<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template id=<span class=\"string\">&quot;axian&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"动态插槽\"><a href=\"#动态插槽\" class=\"headerlink\" title=\"动态插槽\"></a>动态插槽</h2><blockquote>\n<p>在模版里定义插槽的名字来进行动态插入内容</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;axian :sayhi=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:aa</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>aa<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:bb</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>bb<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/axian&gt;  </span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;axian&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;aa&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bb&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data(){}\"></a>data(){}</h2><blockquote>\n<p>为了给每个组件新增自定义的数据，开辟一个新的空间</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md60537.8039823.png\"></p>\n<h2 id=\"子父组件数据传递\"><a href=\"#子父组件数据传递\" class=\"headerlink\" title=\"子父组件数据传递\"></a>子父组件数据传递</h2><ul>\n<li>组件里绑定一个自定义属性，该属性可以触发父亲的函数</li>\n<li>组件里绑定点击事件</li>\n<li>事件对应一个方法</li>\n<li>该方法激活组件里的自定义属性<code>this.$emit</code></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md61756.8490572.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md61768.3312032.png\"></p>\n<blockquote>\n<p>子组件点击事件-&gt;子组件函数-&gt;自定义属性-&gt;父组件函数</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md67208.077329.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md67222.0779037.png\"></p>\n<h2 id=\"npm-i-aa-save\"><a href=\"#npm-i-aa-save\" class=\"headerlink\" title=\"npm i aa -save\"></a>npm i aa -save</h2><blockquote>\n<p>将依赖包添加到文件里</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"初始化方式\"><a href=\"#初始化方式\" class=\"headerlink\" title=\"初始化方式\"></a>初始化方式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&quot;com1&quot;</span>,&#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>:<span class=\"string\">``</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>首先在component里面注册组件</li>\n<li>然后在组件里面使用</li>\n</ul>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><ol>\n<li>在components里面注册组件</li>\n<li>写组件的名字</li>\n<li>写组件模版的名字</li>\n<li>定义组件模版</li>\n<li>定义组件参数变量名字</li>\n<li>在模版里面写使用变量的位置</li>\n<li>应用过程中用:变量，来使用</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md58696.9284898.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">&quot;app&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">axian</span> <span class=\"attr\">:sayhi</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">axian</span>&gt;</span></span></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;axian&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span>=<span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">const</span> app=<span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">el</span>:<span class=\"string\">&#x27;#app&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">data</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">msg</span>:<span class=\"string\">&quot;hello&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        <span class=\"attr\">components</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            <span class=\"attr\">axian</span>:&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"attr\">template</span>:<span class=\"string\">&quot;#axian&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">                <span class=\"attr\">props</span>:[<span class=\"string\">&quot;sayhi&quot;</span>],</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"slot插槽，如果要扩展模版，需要插槽\"><a href=\"#slot插槽，如果要扩展模版，需要插槽\" class=\"headerlink\" title=\"slot插槽，如果要扩展模版，需要插槽\"></a>slot插槽，如果要扩展模版，需要插槽</h2><ul>\n<li>如果不指定的话就是全插<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template id=<span class=\"string\">&quot;axian&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"动态插槽\"><a href=\"#动态插槽\" class=\"headerlink\" title=\"动态插槽\"></a>动态插槽</h2><blockquote>\n<p>在模版里定义插槽的名字来进行动态插入内容</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;axian :sayhi=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:aa</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>aa<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:bb</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>bb<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/axian&gt;  </span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;axian&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>你好<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;sayhi&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;aa&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bb&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data(){}\"></a>data(){}</h2><blockquote>\n<p>为了给每个组件新增自定义的数据，开辟一个新的空间</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md60537.8039823.png\"></p>\n<h2 id=\"子父组件数据传递\"><a href=\"#子父组件数据传递\" class=\"headerlink\" title=\"子父组件数据传递\"></a>子父组件数据传递</h2><ul>\n<li>组件里绑定一个自定义属性，该属性可以触发父亲的函数</li>\n<li>组件里绑定点击事件</li>\n<li>事件对应一个方法</li>\n<li>该方法激活组件里的自定义属性<code>this.$emit</code></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md61756.8490572.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md61768.3312032.png\"></p>\n<blockquote>\n<p>子组件点击事件-&gt;子组件函数-&gt;自定义属性-&gt;父组件函数</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md67208.077329.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23日vue组件.md67222.0779037.png\"></p>\n<h2 id=\"npm-i-aa-save\"><a href=\"#npm-i-aa-save\" class=\"headerlink\" title=\"npm i aa -save\"></a>npm i aa -save</h2><blockquote>\n<p>将依赖包添加到文件里</p>\n</blockquote>\n"},{"title":"12. 生命周期","date":"2022-10-15T02:06:51.000Z","_content":"\n## 取消生产提示\n\n```javascript\nVue.config.productionTip=false;\n```\n\n## console.group分组\n\n## console.groupEnd()取消分组\n\n\n\n\n# Vue生命周期\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56360.4937962.png)\n\n## create\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56343.3872972.png)\n\n## mounted\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md55852.935343.png)\n\n## beforeUpdate\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56162.2985281.png)\n\n## update\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56067.3123484.png)\n\n## beforeDestroy\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56274.1162875.png)\n\n## destroy\n\n```javascript\n$destroy()//vue自身的方法\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56172.3844651.png)\n\n> 所有的功能都丧失，页面保持不变\n","source":"_posts/前端/学习/唯创前端上课笔记/1月23vue.md","raw":"---\ntitle: '12. 生命周期'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\n    - vue\ncategories: 前端\n---\n\n## 取消生产提示\n\n```javascript\nVue.config.productionTip=false;\n```\n\n## console.group分组\n\n## console.groupEnd()取消分组\n\n\n\n\n# Vue生命周期\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56360.4937962.png)\n\n## create\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56343.3872972.png)\n\n## mounted\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md55852.935343.png)\n\n## beforeUpdate\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56162.2985281.png)\n\n## update\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56067.3123484.png)\n\n## beforeDestroy\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56274.1162875.png)\n\n## destroy\n\n```javascript\n$destroy()//vue自身的方法\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月23vue.md56172.3844651.png)\n\n> 所有的功能都丧失，页面保持不变\n","slug":"前端/学习/唯创前端上课笔记/1月23vue","published":1,"updated":"2023-03-21T09:34:05.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co7z005do8hu8x7x84o6","content":"<h2 id=\"取消生产提示\"><a href=\"#取消生产提示\" class=\"headerlink\" title=\"取消生产提示\"></a>取消生产提示</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span>=<span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-group分组\"><a href=\"#console-group分组\" class=\"headerlink\" title=\"console.group分组\"></a>console.group分组</h2><h2 id=\"console-groupEnd-取消分组\"><a href=\"#console-groupEnd-取消分组\" class=\"headerlink\" title=\"console.groupEnd()取消分组\"></a>console.groupEnd()取消分组</h2><h1 id=\"Vue生命周期\"><a href=\"#Vue生命周期\" class=\"headerlink\" title=\"Vue生命周期\"></a>Vue生命周期</h1><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56360.4937962.png\"></p>\n<h2 id=\"create\"><a href=\"#create\" class=\"headerlink\" title=\"create\"></a>create</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56343.3872972.png\"></p>\n<h2 id=\"mounted\"><a href=\"#mounted\" class=\"headerlink\" title=\"mounted\"></a>mounted</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md55852.935343.png\"></p>\n<h2 id=\"beforeUpdate\"><a href=\"#beforeUpdate\" class=\"headerlink\" title=\"beforeUpdate\"></a>beforeUpdate</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56162.2985281.png\"></p>\n<h2 id=\"update\"><a href=\"#update\" class=\"headerlink\" title=\"update\"></a>update</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56067.3123484.png\"></p>\n<h2 id=\"beforeDestroy\"><a href=\"#beforeDestroy\" class=\"headerlink\" title=\"beforeDestroy\"></a>beforeDestroy</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56274.1162875.png\"></p>\n<h2 id=\"destroy\"><a href=\"#destroy\" class=\"headerlink\" title=\"destroy\"></a>destroy</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$destroy()<span class=\"comment\">//vue自身的方法</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56172.3844651.png\"></p>\n<blockquote>\n<p>所有的功能都丧失，页面保持不变</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"取消生产提示\"><a href=\"#取消生产提示\" class=\"headerlink\" title=\"取消生产提示\"></a>取消生产提示</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">config</span>.<span class=\"property\">productionTip</span>=<span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-group分组\"><a href=\"#console-group分组\" class=\"headerlink\" title=\"console.group分组\"></a>console.group分组</h2><h2 id=\"console-groupEnd-取消分组\"><a href=\"#console-groupEnd-取消分组\" class=\"headerlink\" title=\"console.groupEnd()取消分组\"></a>console.groupEnd()取消分组</h2><h1 id=\"Vue生命周期\"><a href=\"#Vue生命周期\" class=\"headerlink\" title=\"Vue生命周期\"></a>Vue生命周期</h1><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56360.4937962.png\"></p>\n<h2 id=\"create\"><a href=\"#create\" class=\"headerlink\" title=\"create\"></a>create</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56343.3872972.png\"></p>\n<h2 id=\"mounted\"><a href=\"#mounted\" class=\"headerlink\" title=\"mounted\"></a>mounted</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md55852.935343.png\"></p>\n<h2 id=\"beforeUpdate\"><a href=\"#beforeUpdate\" class=\"headerlink\" title=\"beforeUpdate\"></a>beforeUpdate</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56162.2985281.png\"></p>\n<h2 id=\"update\"><a href=\"#update\" class=\"headerlink\" title=\"update\"></a>update</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56067.3123484.png\"></p>\n<h2 id=\"beforeDestroy\"><a href=\"#beforeDestroy\" class=\"headerlink\" title=\"beforeDestroy\"></a>beforeDestroy</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56274.1162875.png\"></p>\n<h2 id=\"destroy\"><a href=\"#destroy\" class=\"headerlink\" title=\"destroy\"></a>destroy</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$destroy()<span class=\"comment\">//vue自身的方法</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月23vue.md56172.3844651.png\"></p>\n<blockquote>\n<p>所有的功能都丧失，页面保持不变</p>\n</blockquote>\n"},{"title":"14. router","date":"2022-10-15T02:06:51.000Z","_content":"\n## vue概述\n\n> 一个单页面应用\n>\n> 通过dom的切换来修改页面\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md37619.1287058.png)\n\n## router\n\n> 一个路由表，所有的vue页面必须在这里注册才能使用\n>\n> router-link-exact-active精确匹配\n>\n> router-link-active模糊匹配\n\n## 方法的导入导出\n\n```mindmap\n- vue\n  - 导出\n    - export default\n      - 不用{}指定名字\n    - export function fn1(){}\n      - 需要指定\n  - 导入\n    - import {...} from \"./.../...\"\n    - import obj from \"./...\"\n```\n\n## --save保存到当前目录\n\n## 定义组件方式\n\n- 首先新建文件，默认文件名为组件名字\n- 然后定义好template，在export default中导出，定义好名字\n- 接下来import进来，直接使用\n\n## vue主项目结构\n\n> 首先是一个main.js是入口文件，程序通过这个文件进行打包\n>\n> 这个main.js导入了App.vue，还有vue模块，通过new的方式使用了App.vue和app标签绑定了#app的元素\n>\n> App.vue通过export default的方式导出给main.js使用，所以我们要新增组件就是通过定义好vue文件，然后导入给vue，然后导出给main.js\n\n## router使用\n\n> 导入router的包\n>\n> npm install --save-dev vue-router\n>\n> 首先定义好router文件，然后导入vue和vue-router\n>\n> 接着用vue.use使用vueRouter\n>\n> 然后导出，用export defalut new VueRouter({\n>\n> routes:[\n>\n> ]\n>\n> })\n\n## 传递参数\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md51946.6911813.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md52376.5114536.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md52399.0476767.png)\n\n## redirect:\"/\"\n\n> 重定向\n\n## alias:\n\n> 取别名\n\n## 404\n\n```javascript\n/*\n写一个404页面\n然后注册到路由里\n写最后一个path：\"*\"\n*/\n```\n\n## $router是路由实例\n\n```javascript\n$router.back()//后退一步\n$router.forword()//前进一步\n$router.go(-2)//后退一步\n#this.$router.push('页面路由')//跳转\n```\n\n## $route\n","source":"_posts/前端/学习/唯创前端上课笔记/1月25日vue.md","raw":"---\ntitle: '14. router'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## vue概述\n\n> 一个单页面应用\n>\n> 通过dom的切换来修改页面\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md37619.1287058.png)\n\n## router\n\n> 一个路由表，所有的vue页面必须在这里注册才能使用\n>\n> router-link-exact-active精确匹配\n>\n> router-link-active模糊匹配\n\n## 方法的导入导出\n\n```mindmap\n- vue\n  - 导出\n    - export default\n      - 不用{}指定名字\n    - export function fn1(){}\n      - 需要指定\n  - 导入\n    - import {...} from \"./.../...\"\n    - import obj from \"./...\"\n```\n\n## --save保存到当前目录\n\n## 定义组件方式\n\n- 首先新建文件，默认文件名为组件名字\n- 然后定义好template，在export default中导出，定义好名字\n- 接下来import进来，直接使用\n\n## vue主项目结构\n\n> 首先是一个main.js是入口文件，程序通过这个文件进行打包\n>\n> 这个main.js导入了App.vue，还有vue模块，通过new的方式使用了App.vue和app标签绑定了#app的元素\n>\n> App.vue通过export default的方式导出给main.js使用，所以我们要新增组件就是通过定义好vue文件，然后导入给vue，然后导出给main.js\n\n## router使用\n\n> 导入router的包\n>\n> npm install --save-dev vue-router\n>\n> 首先定义好router文件，然后导入vue和vue-router\n>\n> 接着用vue.use使用vueRouter\n>\n> 然后导出，用export defalut new VueRouter({\n>\n> routes:[\n>\n> ]\n>\n> })\n\n## 传递参数\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md51946.6911813.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md52376.5114536.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\1月25日vue.md52399.0476767.png)\n\n## redirect:\"/\"\n\n> 重定向\n\n## alias:\n\n> 取别名\n\n## 404\n\n```javascript\n/*\n写一个404页面\n然后注册到路由里\n写最后一个path：\"*\"\n*/\n```\n\n## $router是路由实例\n\n```javascript\n$router.back()//后退一步\n$router.forword()//前进一步\n$router.go(-2)//后退一步\n#this.$router.push('页面路由')//跳转\n```\n\n## $route\n","slug":"前端/学习/唯创前端上课笔记/1月25日vue","published":1,"updated":"2023-03-21T09:35:05.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co80005go8hu5sqb5w2m","content":"<h2 id=\"vue概述\"><a href=\"#vue概述\" class=\"headerlink\" title=\"vue概述\"></a>vue概述</h2><blockquote>\n<p>一个单页面应用</p>\n<p>通过dom的切换来修改页面</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md37619.1287058.png\"></p>\n<h2 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h2><blockquote>\n<p>一个路由表，所有的vue页面必须在这里注册才能使用</p>\n<p>router-link-exact-active精确匹配</p>\n<p>router-link-active模糊匹配</p>\n</blockquote>\n<h2 id=\"方法的导入导出\"><a href=\"#方法的导入导出\" class=\"headerlink\" title=\"方法的导入导出\"></a>方法的导入导出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- vue</span><br><span class=\"line\">  - 导出</span><br><span class=\"line\">    - export default</span><br><span class=\"line\">      - 不用&#123;&#125;指定名字</span><br><span class=\"line\">    - export function fn1()&#123;&#125;</span><br><span class=\"line\">      - 需要指定</span><br><span class=\"line\">  - 导入</span><br><span class=\"line\">    - import &#123;...&#125; from &quot;./.../...&quot;</span><br><span class=\"line\">    - import obj from &quot;./...&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"–save保存到当前目录\"><a href=\"#–save保存到当前目录\" class=\"headerlink\" title=\"–save保存到当前目录\"></a>–save保存到当前目录</h2><h2 id=\"定义组件方式\"><a href=\"#定义组件方式\" class=\"headerlink\" title=\"定义组件方式\"></a>定义组件方式</h2><ul>\n<li>首先新建文件，默认文件名为组件名字</li>\n<li>然后定义好template，在export default中导出，定义好名字</li>\n<li>接下来import进来，直接使用</li>\n</ul>\n<h2 id=\"vue主项目结构\"><a href=\"#vue主项目结构\" class=\"headerlink\" title=\"vue主项目结构\"></a>vue主项目结构</h2><blockquote>\n<p>首先是一个main.js是入口文件，程序通过这个文件进行打包</p>\n<p>这个main.js导入了App.vue，还有vue模块，通过new的方式使用了App.vue和app标签绑定了#app的元素</p>\n<p>App.vue通过export default的方式导出给main.js使用，所以我们要新增组件就是通过定义好vue文件，然后导入给vue，然后导出给main.js</p>\n</blockquote>\n<h2 id=\"router使用\"><a href=\"#router使用\" class=\"headerlink\" title=\"router使用\"></a>router使用</h2><blockquote>\n<p>导入router的包</p>\n<p>npm install –save-dev vue-router</p>\n<p>首先定义好router文件，然后导入vue和vue-router</p>\n<p>接着用vue.use使用vueRouter</p>\n<p>然后导出，用export defalut new VueRouter({</p>\n<p>routes:[</p>\n<p>]</p>\n<p>})</p>\n</blockquote>\n<h2 id=\"传递参数\"><a href=\"#传递参数\" class=\"headerlink\" title=\"传递参数\"></a>传递参数</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md51946.6911813.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md52376.5114536.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md52399.0476767.png\"></p>\n<h2 id=\"redirect-”-“\"><a href=\"#redirect-”-“\" class=\"headerlink\" title=\"redirect:”/“\"></a>redirect:”/“</h2><blockquote>\n<p>重定向</p>\n</blockquote>\n<h2 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"alias:\"></a>alias:</h2><blockquote>\n<p>取别名</p>\n</blockquote>\n<h2 id=\"404\"><a href=\"#404\" class=\"headerlink\" title=\"404\"></a>404</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">写一个404页面</span></span><br><span class=\"line\"><span class=\"comment\">然后注册到路由里</span></span><br><span class=\"line\"><span class=\"comment\">写最后一个path：&quot;*&quot;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"router是路由实例\"><a href=\"#router是路由实例\" class=\"headerlink\" title=\"$router是路由实例\"></a>$router是路由实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$router.<span class=\"title function_\">back</span>()<span class=\"comment\">//后退一步</span></span><br><span class=\"line\">$router.<span class=\"title function_\">forword</span>()<span class=\"comment\">//前进一步</span></span><br><span class=\"line\">$router.<span class=\"title function_\">go</span>(-<span class=\"number\">2</span>)<span class=\"comment\">//后退一步</span></span><br><span class=\"line\">#<span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;页面路由&#x27;</span>)<span class=\"comment\">//跳转</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"route\"><a href=\"#route\" class=\"headerlink\" title=\"$route\"></a>$route</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue概述\"><a href=\"#vue概述\" class=\"headerlink\" title=\"vue概述\"></a>vue概述</h2><blockquote>\n<p>一个单页面应用</p>\n<p>通过dom的切换来修改页面</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md37619.1287058.png\"></p>\n<h2 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h2><blockquote>\n<p>一个路由表，所有的vue页面必须在这里注册才能使用</p>\n<p>router-link-exact-active精确匹配</p>\n<p>router-link-active模糊匹配</p>\n</blockquote>\n<h2 id=\"方法的导入导出\"><a href=\"#方法的导入导出\" class=\"headerlink\" title=\"方法的导入导出\"></a>方法的导入导出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- vue</span><br><span class=\"line\">  - 导出</span><br><span class=\"line\">    - export default</span><br><span class=\"line\">      - 不用&#123;&#125;指定名字</span><br><span class=\"line\">    - export function fn1()&#123;&#125;</span><br><span class=\"line\">      - 需要指定</span><br><span class=\"line\">  - 导入</span><br><span class=\"line\">    - import &#123;...&#125; from &quot;./.../...&quot;</span><br><span class=\"line\">    - import obj from &quot;./...&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"–save保存到当前目录\"><a href=\"#–save保存到当前目录\" class=\"headerlink\" title=\"–save保存到当前目录\"></a>–save保存到当前目录</h2><h2 id=\"定义组件方式\"><a href=\"#定义组件方式\" class=\"headerlink\" title=\"定义组件方式\"></a>定义组件方式</h2><ul>\n<li>首先新建文件，默认文件名为组件名字</li>\n<li>然后定义好template，在export default中导出，定义好名字</li>\n<li>接下来import进来，直接使用</li>\n</ul>\n<h2 id=\"vue主项目结构\"><a href=\"#vue主项目结构\" class=\"headerlink\" title=\"vue主项目结构\"></a>vue主项目结构</h2><blockquote>\n<p>首先是一个main.js是入口文件，程序通过这个文件进行打包</p>\n<p>这个main.js导入了App.vue，还有vue模块，通过new的方式使用了App.vue和app标签绑定了#app的元素</p>\n<p>App.vue通过export default的方式导出给main.js使用，所以我们要新增组件就是通过定义好vue文件，然后导入给vue，然后导出给main.js</p>\n</blockquote>\n<h2 id=\"router使用\"><a href=\"#router使用\" class=\"headerlink\" title=\"router使用\"></a>router使用</h2><blockquote>\n<p>导入router的包</p>\n<p>npm install –save-dev vue-router</p>\n<p>首先定义好router文件，然后导入vue和vue-router</p>\n<p>接着用vue.use使用vueRouter</p>\n<p>然后导出，用export defalut new VueRouter({</p>\n<p>routes:[</p>\n<p>]</p>\n<p>})</p>\n</blockquote>\n<h2 id=\"传递参数\"><a href=\"#传递参数\" class=\"headerlink\" title=\"传递参数\"></a>传递参数</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md51946.6911813.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md52376.5114536.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\1月25日vue.md52399.0476767.png\"></p>\n<h2 id=\"redirect-”-“\"><a href=\"#redirect-”-“\" class=\"headerlink\" title=\"redirect:”/“\"></a>redirect:”/“</h2><blockquote>\n<p>重定向</p>\n</blockquote>\n<h2 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"alias:\"></a>alias:</h2><blockquote>\n<p>取别名</p>\n</blockquote>\n<h2 id=\"404\"><a href=\"#404\" class=\"headerlink\" title=\"404\"></a>404</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">写一个404页面</span></span><br><span class=\"line\"><span class=\"comment\">然后注册到路由里</span></span><br><span class=\"line\"><span class=\"comment\">写最后一个path：&quot;*&quot;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"router是路由实例\"><a href=\"#router是路由实例\" class=\"headerlink\" title=\"$router是路由实例\"></a>$router是路由实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$router.<span class=\"title function_\">back</span>()<span class=\"comment\">//后退一步</span></span><br><span class=\"line\">$router.<span class=\"title function_\">forword</span>()<span class=\"comment\">//前进一步</span></span><br><span class=\"line\">$router.<span class=\"title function_\">go</span>(-<span class=\"number\">2</span>)<span class=\"comment\">//后退一步</span></span><br><span class=\"line\">#<span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;页面路由&#x27;</span>)<span class=\"comment\">//跳转</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"route\"><a href=\"#route\" class=\"headerlink\" title=\"$route\"></a>$route</h2>"},{"title":"2. 对象","date":"2022-10-15T02:06:51.000Z","_content":"\n## js内置对象（是基本数据类型的包装类型）\n\n> 基本数据类型调用方法表面上是矛盾的，但是js底层为我们进行了转换\n\n### Boolean\n\n> new Boolean();会将 0 -0 null undefined \"\" false都为false的对象\n>\n> 但是使用时都会当做true使用\n>\n> Boolean();会将0 -0 NAN null undefined false 都为false本质是类型转换\n\n```javascript\ntypeof \n```\n\n### Number\n\n> Number();\n>\n> 会将不能转换为数字的变量转换为NAN\n\n```javascript\nvar a=5;\nconsole.log(typeof(a));//number\n```\n\n### String\n\n> 索引charAt(index);返回对应字符\n>\n> 查找字符串indexOf(\"String\");返回索引\n\n```javascript\nvar a=\"abcdef\";\nvar b=a.substring(0,3);\nconsole.log(typeof b);\n```\n\n### new 和不new的区别\n\n> new Date();\n>\n> Date();\n>\n> 一样\n>\n> new Number();\n>\n> Number();\n>\n> 不一样\n>\n>> 因为会调用toString方法\n>>\n\n## function是引用类型\n\n## call和apply,bind\n\n> call就是将函数中的this指针指向call中的第一个参数\n>\n> apply和call一样，只是第二个参数是一个数组\n>\n> bind只是单纯的将第一个参数修改为函数的this指针，但不调用，返回一个函数\n\n```javascript\nfunction test(){\n    console.log('阿巴阿巴阿巴');\n}\ntest();//标准调用\ntest.call();//底层调用方式\n```\n\n```javascript\nfunction test(){\n    console.log(this);\n    console.log(name,age);//打印wangwu和35\n}\nvar obj={name:'lisi',age:23};\ntest.call(obj,'wangwu',35);//修改this指针\ntest.apply(obj,['zhangsan',18]);\nvar fn=test.bind(obj);\nfn();\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月5日.md","raw":"---\ntitle: '2. 对象'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## js内置对象（是基本数据类型的包装类型）\n\n> 基本数据类型调用方法表面上是矛盾的，但是js底层为我们进行了转换\n\n### Boolean\n\n> new Boolean();会将 0 -0 null undefined \"\" false都为false的对象\n>\n> 但是使用时都会当做true使用\n>\n> Boolean();会将0 -0 NAN null undefined false 都为false本质是类型转换\n\n```javascript\ntypeof \n```\n\n### Number\n\n> Number();\n>\n> 会将不能转换为数字的变量转换为NAN\n\n```javascript\nvar a=5;\nconsole.log(typeof(a));//number\n```\n\n### String\n\n> 索引charAt(index);返回对应字符\n>\n> 查找字符串indexOf(\"String\");返回索引\n\n```javascript\nvar a=\"abcdef\";\nvar b=a.substring(0,3);\nconsole.log(typeof b);\n```\n\n### new 和不new的区别\n\n> new Date();\n>\n> Date();\n>\n> 一样\n>\n> new Number();\n>\n> Number();\n>\n> 不一样\n>\n>> 因为会调用toString方法\n>>\n\n## function是引用类型\n\n## call和apply,bind\n\n> call就是将函数中的this指针指向call中的第一个参数\n>\n> apply和call一样，只是第二个参数是一个数组\n>\n> bind只是单纯的将第一个参数修改为函数的this指针，但不调用，返回一个函数\n\n```javascript\nfunction test(){\n    console.log('阿巴阿巴阿巴');\n}\ntest();//标准调用\ntest.call();//底层调用方式\n```\n\n```javascript\nfunction test(){\n    console.log(this);\n    console.log(name,age);//打印wangwu和35\n}\nvar obj={name:'lisi',age:23};\ntest.call(obj,'wangwu',35);//修改this指针\ntest.apply(obj,['zhangsan',18]);\nvar fn=test.bind(obj);\nfn();\n```\n","slug":"前端/学习/唯创前端上课笔记/1月5日","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co81005ko8huhf3zbdzb","content":"<h2 id=\"js内置对象（是基本数据类型的包装类型）\"><a href=\"#js内置对象（是基本数据类型的包装类型）\" class=\"headerlink\" title=\"js内置对象（是基本数据类型的包装类型）\"></a>js内置对象（是基本数据类型的包装类型）</h2><blockquote>\n<p>基本数据类型调用方法表面上是矛盾的，但是js底层为我们进行了转换</p>\n</blockquote>\n<h3 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h3><blockquote>\n<p>new Boolean();会将 0 -0 null undefined “” false都为false的对象</p>\n<p>但是使用时都会当做true使用</p>\n<p>Boolean();会将0 -0 NAN null undefined false 都为false本质是类型转换</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h3><blockquote>\n<p>Number();</p>\n<p>会将不能转换为数字的变量转换为NAN</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">typeof</span>(a));<span class=\"comment\">//number</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><blockquote>\n<p>索引charAt(index);返回对应字符</p>\n<p>查找字符串indexOf(“String”);返回索引</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"string\">&quot;abcdef&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=a.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"new-和不new的区别\"><a href=\"#new-和不new的区别\" class=\"headerlink\" title=\"new 和不new的区别\"></a>new 和不new的区别</h3><blockquote>\n<p>new Date();</p>\n<p>Date();</p>\n<p>一样</p>\n<p>new Number();</p>\n<p>Number();</p>\n<p>不一样</p>\n<blockquote>\n<p>因为会调用toString方法</p>\n</blockquote>\n</blockquote>\n<h2 id=\"function是引用类型\"><a href=\"#function是引用类型\" class=\"headerlink\" title=\"function是引用类型\"></a>function是引用类型</h2><h2 id=\"call和apply-bind\"><a href=\"#call和apply-bind\" class=\"headerlink\" title=\"call和apply,bind\"></a>call和apply,bind</h2><blockquote>\n<p>call就是将函数中的this指针指向call中的第一个参数</p>\n<p>apply和call一样，只是第二个参数是一个数组</p>\n<p>bind只是单纯的将第一个参数修改为函数的this指针，但不调用，返回一个函数</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;阿巴阿巴阿巴&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();<span class=\"comment\">//标准调用</span></span><br><span class=\"line\">test.<span class=\"title function_\">call</span>();<span class=\"comment\">//底层调用方式</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);<span class=\"comment\">//打印wangwu和35</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,<span class=\"attr\">age</span>:<span class=\"number\">23</span>&#125;;</span><br><span class=\"line\">test.<span class=\"title function_\">call</span>(obj,<span class=\"string\">&#x27;wangwu&#x27;</span>,<span class=\"number\">35</span>);<span class=\"comment\">//修改this指针</span></span><br><span class=\"line\">test.<span class=\"title function_\">apply</span>(obj,[<span class=\"string\">&#x27;zhangsan&#x27;</span>,<span class=\"number\">18</span>]);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fn=test.<span class=\"title function_\">bind</span>(obj);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"js内置对象（是基本数据类型的包装类型）\"><a href=\"#js内置对象（是基本数据类型的包装类型）\" class=\"headerlink\" title=\"js内置对象（是基本数据类型的包装类型）\"></a>js内置对象（是基本数据类型的包装类型）</h2><blockquote>\n<p>基本数据类型调用方法表面上是矛盾的，但是js底层为我们进行了转换</p>\n</blockquote>\n<h3 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h3><blockquote>\n<p>new Boolean();会将 0 -0 null undefined “” false都为false的对象</p>\n<p>但是使用时都会当做true使用</p>\n<p>Boolean();会将0 -0 NAN null undefined false 都为false本质是类型转换</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h3><blockquote>\n<p>Number();</p>\n<p>会将不能转换为数字的变量转换为NAN</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">typeof</span>(a));<span class=\"comment\">//number</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><blockquote>\n<p>索引charAt(index);返回对应字符</p>\n<p>查找字符串indexOf(“String”);返回索引</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"string\">&quot;abcdef&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=a.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> b);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"new-和不new的区别\"><a href=\"#new-和不new的区别\" class=\"headerlink\" title=\"new 和不new的区别\"></a>new 和不new的区别</h3><blockquote>\n<p>new Date();</p>\n<p>Date();</p>\n<p>一样</p>\n<p>new Number();</p>\n<p>Number();</p>\n<p>不一样</p>\n<blockquote>\n<p>因为会调用toString方法</p>\n</blockquote>\n</blockquote>\n<h2 id=\"function是引用类型\"><a href=\"#function是引用类型\" class=\"headerlink\" title=\"function是引用类型\"></a>function是引用类型</h2><h2 id=\"call和apply-bind\"><a href=\"#call和apply-bind\" class=\"headerlink\" title=\"call和apply,bind\"></a>call和apply,bind</h2><blockquote>\n<p>call就是将函数中的this指针指向call中的第一个参数</p>\n<p>apply和call一样，只是第二个参数是一个数组</p>\n<p>bind只是单纯的将第一个参数修改为函数的this指针，但不调用，返回一个函数</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;阿巴阿巴阿巴&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();<span class=\"comment\">//标准调用</span></span><br><span class=\"line\">test.<span class=\"title function_\">call</span>();<span class=\"comment\">//底层调用方式</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name,age);<span class=\"comment\">//打印wangwu和35</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,<span class=\"attr\">age</span>:<span class=\"number\">23</span>&#125;;</span><br><span class=\"line\">test.<span class=\"title function_\">call</span>(obj,<span class=\"string\">&#x27;wangwu&#x27;</span>,<span class=\"number\">35</span>);<span class=\"comment\">//修改this指针</span></span><br><span class=\"line\">test.<span class=\"title function_\">apply</span>(obj,[<span class=\"string\">&#x27;zhangsan&#x27;</span>,<span class=\"number\">18</span>]);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fn=test.<span class=\"title function_\">bind</span>(obj);</span><br><span class=\"line\"><span class=\"title function_\">fn</span>();</span><br></pre></td></tr></table></figure>\n"},{"title":"3. 复杂运算","date":"2022-10-15T02:06:51.000Z","_content":"\n## 如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\n\n## for...in   for...of\n\n1. in遍历对象，of不能遍历对象\n2. 本质上in遍历键，of遍历值\n3. in不能遍历map集合，of可以\n4. in遍历数组下标，of遍历值\n\n> in相当于i的索引遍历，of相当于foreach\n","source":"_posts/前端/学习/唯创前端上课笔记/1月7日讲题.md","raw":"---\ntitle: '3. 复杂运算'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\n\n## for...in   for...of\n\n1. in遍历对象，of不能遍历对象\n2. 本质上in遍历键，of遍历值\n3. in不能遍历map集合，of可以\n4. in遍历数组下标，of遍历值\n\n> in相当于i的索引遍历，of相当于foreach\n","slug":"前端/学习/唯创前端上课笔记/1月7日讲题","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co82005no8huectq9q5x","content":"<h2 id=\"如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\"><a href=\"#如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\" class=\"headerlink\" title=\"如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\"></a>如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型</h2><h2 id=\"for…in-for…of\"><a href=\"#for…in-for…of\" class=\"headerlink\" title=\"for…in   for…of\"></a>for…in   for…of</h2><ol>\n<li>in遍历对象，of不能遍历对象</li>\n<li>本质上in遍历键，of遍历值</li>\n<li>in不能遍历map集合，of可以</li>\n<li>in遍历数组下标，of遍历值</li>\n</ol>\n<blockquote>\n<p>in相当于i的索引遍历，of相当于foreach</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\"><a href=\"#如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\" class=\"headerlink\" title=\"如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型\"></a>如果用函数来创建对象，函数如果return一个基本数据类型，则返回正常对象，入股是引用类型，则返回该引用类型</h2><h2 id=\"for…in-for…of\"><a href=\"#for…in-for…of\" class=\"headerlink\" title=\"for…in   for…of\"></a>for…in   for…of</h2><ol>\n<li>in遍历对象，of不能遍历对象</li>\n<li>本质上in遍历键，of遍历值</li>\n<li>in不能遍历map集合，of可以</li>\n<li>in遍历数组下标，of遍历值</li>\n</ol>\n<blockquote>\n<p>in相当于i的索引遍历，of相当于foreach</p>\n</blockquote>\n"},{"title":"1.数据类型","date":"2022-10-15T02:06:51.000Z","_content":"\n## js数据类型\n\n1. 基本类型【原始类型】（number，string，boolean，undefined，null）\n2. 引用类型（对象）\n\n```javascript\nvar func=xx();\nfunc(1,2);\n```\n\n## 变量提升\n\n1. 局部变量存在变量提升\n2. 全局变量不会变量提升\n\n![](file://C:\\Personal\\Temp\\WeChat Files\\d72619285c133316b2f7627a4b86d2b.png)\n\n## js对象\n\n### 方式一：\n\n```javascript\nvar person=new Objent();\nperson.name='lisi';\nperson.age=23;\nperson.eat=funciton (){\n    console.log('lisi is eating...');\n}\n```\n\n> var person=new Object();等价于：var person={};\n>\n> {}又叫对象直接量\n\n### 方式二：\n\n```javascript\nvar person={\n    name:'lisi',\n    age:23,\n    eat:function (){\n        console.log('lisi is eating...');\n    }\n}\n```\n\n### 方式三：\n\n```javascript\nclass Person{\n    name=\"\";\n    age;\n    constructor(name,age){\n        this.name=name;\n        this.age=age;\n    }\n}\n var p1=new Person(name,age);\n```\n\n### 方式四：\n\n> ES5的时候创建对象的方式\n\n```javascript\nfunction Person(){\n    fields...\n    ....\n    methods...\n    ....\n}\nPerson();//为函数调用\nnew Person();//为创建对象\n```\n\n## js内存机制堆栈原理\n\n1. 基本数据类型放进栈里\n2. 引用类型放进堆里（变量在栈里，对象在堆里，对象的位置以指针[0xabd12e]十六进制数字的形式放进栈里）\n3.\n\n> 在栈里指针移动很快，非常适合查找的操作\n>\n> 对象里面的属性和方法相对很大，所以放进堆里，不必灵活创建消耗内存\n\n### this\n\n1. this是一个变量，指向当前对象（只能写在函数的方法里面）\n2. 如果方法未指定对象，则默认是全局方法，包含在window中\n3. 如果在全局方法中则this指向window对象\n4. 如果是在定时器setTimeOut中，则this指向window，因为setTimeOut就是window.setTimeOut(function,time);\n\n### in\n\n```javascript\nvar o1={};\no1.name='lisi';\no1.age=23;\no1.sex='男';\nfor(var p in o1){\n    console.log(p+\"=\"+o1[p]);\n}\n```\n\n### 数组\n\n> []又叫数组直接量\n\n```javascript\nvar arr=[1,2,3,4];\narr.map(function (x){return x*2});\n//或者\narr.foreach(x=>x*2);\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/1月4日.md","raw":"---\ntitle: '1.数据类型'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## js数据类型\n\n1. 基本类型【原始类型】（number，string，boolean，undefined，null）\n2. 引用类型（对象）\n\n```javascript\nvar func=xx();\nfunc(1,2);\n```\n\n## 变量提升\n\n1. 局部变量存在变量提升\n2. 全局变量不会变量提升\n\n![](file://C:\\Personal\\Temp\\WeChat Files\\d72619285c133316b2f7627a4b86d2b.png)\n\n## js对象\n\n### 方式一：\n\n```javascript\nvar person=new Objent();\nperson.name='lisi';\nperson.age=23;\nperson.eat=funciton (){\n    console.log('lisi is eating...');\n}\n```\n\n> var person=new Object();等价于：var person={};\n>\n> {}又叫对象直接量\n\n### 方式二：\n\n```javascript\nvar person={\n    name:'lisi',\n    age:23,\n    eat:function (){\n        console.log('lisi is eating...');\n    }\n}\n```\n\n### 方式三：\n\n```javascript\nclass Person{\n    name=\"\";\n    age;\n    constructor(name,age){\n        this.name=name;\n        this.age=age;\n    }\n}\n var p1=new Person(name,age);\n```\n\n### 方式四：\n\n> ES5的时候创建对象的方式\n\n```javascript\nfunction Person(){\n    fields...\n    ....\n    methods...\n    ....\n}\nPerson();//为函数调用\nnew Person();//为创建对象\n```\n\n## js内存机制堆栈原理\n\n1. 基本数据类型放进栈里\n2. 引用类型放进堆里（变量在栈里，对象在堆里，对象的位置以指针[0xabd12e]十六进制数字的形式放进栈里）\n3.\n\n> 在栈里指针移动很快，非常适合查找的操作\n>\n> 对象里面的属性和方法相对很大，所以放进堆里，不必灵活创建消耗内存\n\n### this\n\n1. this是一个变量，指向当前对象（只能写在函数的方法里面）\n2. 如果方法未指定对象，则默认是全局方法，包含在window中\n3. 如果在全局方法中则this指向window对象\n4. 如果是在定时器setTimeOut中，则this指向window，因为setTimeOut就是window.setTimeOut(function,time);\n\n### in\n\n```javascript\nvar o1={};\no1.name='lisi';\no1.age=23;\no1.sex='男';\nfor(var p in o1){\n    console.log(p+\"=\"+o1[p]);\n}\n```\n\n### 数组\n\n> []又叫数组直接量\n\n```javascript\nvar arr=[1,2,3,4];\narr.map(function (x){return x*2});\n//或者\narr.foreach(x=>x*2);\n```\n","slug":"前端/学习/唯创前端上课笔记/1月4日","published":1,"updated":"2023-03-21T09:06:05.919Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co83005qo8huegi42w3p","content":"<h2 id=\"js数据类型\"><a href=\"#js数据类型\" class=\"headerlink\" title=\"js数据类型\"></a>js数据类型</h2><ol>\n<li>基本类型【原始类型】（number，string，boolean，undefined，null）</li>\n<li>引用类型（对象）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> func=<span class=\"title function_\">xx</span>();</span><br><span class=\"line\"><span class=\"title function_\">func</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量提升\"><a href=\"#变量提升\" class=\"headerlink\" title=\"变量提升\"></a>变量提升</h2><ol>\n<li>局部变量存在变量提升</li>\n<li>全局变量不会变量提升</li>\n</ol>\n<p>![](file://C:\\Personal\\Temp\\WeChat Files\\d72619285c133316b2f7627a4b86d2b.png)</p>\n<h2 id=\"js对象\"><a href=\"#js对象\" class=\"headerlink\" title=\"js对象\"></a>js对象</h2><h3 id=\"方式一：\"><a href=\"#方式一：\" class=\"headerlink\" title=\"方式一：\"></a>方式一：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person=<span class=\"keyword\">new</span> <span class=\"title class_\">Objent</span>();</span><br><span class=\"line\">person.<span class=\"property\">name</span>=<span class=\"string\">&#x27;lisi&#x27;</span>;</span><br><span class=\"line\">person.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\">person.<span class=\"property\">eat</span>=funciton ()&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lisi is eating...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>var person=new Object();等价于：var person={};</p>\n<p>{}又叫对象直接量</p>\n</blockquote>\n<h3 id=\"方式二：\"><a href=\"#方式二：\" class=\"headerlink\" title=\"方式二：\"></a>方式二：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span>,</span><br><span class=\"line\">    <span class=\"attr\">eat</span>:<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lisi is eating...&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式三：\"><a href=\"#方式三：\" class=\"headerlink\" title=\"方式三：\"></a>方式三：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\">    name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    age;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">age</span>=age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(name,age);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式四：\"><a href=\"#方式四：\" class=\"headerlink\" title=\"方式四：\"></a>方式四：</h3><blockquote>\n<p>ES5的时候创建对象的方式</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    fields...</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    methods...</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>();<span class=\"comment\">//为函数调用</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();<span class=\"comment\">//为创建对象</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js内存机制堆栈原理\"><a href=\"#js内存机制堆栈原理\" class=\"headerlink\" title=\"js内存机制堆栈原理\"></a>js内存机制堆栈原理</h2><ol>\n<li>基本数据类型放进栈里</li>\n<li>引用类型放进堆里（变量在栈里，对象在堆里，对象的位置以指针[0xabd12e]十六进制数字的形式放进栈里）</li>\n<li></li>\n</ol>\n<blockquote>\n<p>在栈里指针移动很快，非常适合查找的操作</p>\n<p>对象里面的属性和方法相对很大，所以放进堆里，不必灵活创建消耗内存</p>\n</blockquote>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><ol>\n<li>this是一个变量，指向当前对象（只能写在函数的方法里面）</li>\n<li>如果方法未指定对象，则默认是全局方法，包含在window中</li>\n<li>如果在全局方法中则this指向window对象</li>\n<li>如果是在定时器setTimeOut中，则this指向window，因为setTimeOut就是window.setTimeOut(function,time);</li>\n</ol>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;&#125;;</span><br><span class=\"line\">o1.<span class=\"property\">name</span>=<span class=\"string\">&#x27;lisi&#x27;</span>;</span><br><span class=\"line\">o1.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\">o1.<span class=\"property\">sex</span>=<span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> p <span class=\"keyword\">in</span> o1)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p+<span class=\"string\">&quot;=&quot;</span>+o1[p]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><blockquote>\n<p>[]又叫数组直接量</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">x</span>)&#123;<span class=\"keyword\">return</span> x*<span class=\"number\">2</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">//或者</span></span><br><span class=\"line\">arr.<span class=\"title function_\">foreach</span>(<span class=\"function\"><span class=\"params\">x</span>=&gt;</span>x*<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"js数据类型\"><a href=\"#js数据类型\" class=\"headerlink\" title=\"js数据类型\"></a>js数据类型</h2><ol>\n<li>基本类型【原始类型】（number，string，boolean，undefined，null）</li>\n<li>引用类型（对象）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> func=<span class=\"title function_\">xx</span>();</span><br><span class=\"line\"><span class=\"title function_\">func</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"变量提升\"><a href=\"#变量提升\" class=\"headerlink\" title=\"变量提升\"></a>变量提升</h2><ol>\n<li>局部变量存在变量提升</li>\n<li>全局变量不会变量提升</li>\n</ol>\n<p>![](file://C:\\Personal\\Temp\\WeChat Files\\d72619285c133316b2f7627a4b86d2b.png)</p>\n<h2 id=\"js对象\"><a href=\"#js对象\" class=\"headerlink\" title=\"js对象\"></a>js对象</h2><h3 id=\"方式一：\"><a href=\"#方式一：\" class=\"headerlink\" title=\"方式一：\"></a>方式一：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person=<span class=\"keyword\">new</span> <span class=\"title class_\">Objent</span>();</span><br><span class=\"line\">person.<span class=\"property\">name</span>=<span class=\"string\">&#x27;lisi&#x27;</span>;</span><br><span class=\"line\">person.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\">person.<span class=\"property\">eat</span>=funciton ()&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lisi is eating...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>var person=new Object();等价于：var person={};</p>\n<p>{}又叫对象直接量</p>\n</blockquote>\n<h3 id=\"方式二：\"><a href=\"#方式二：\" class=\"headerlink\" title=\"方式二：\"></a>方式二：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span>,</span><br><span class=\"line\">    <span class=\"attr\">eat</span>:<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;lisi is eating...&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式三：\"><a href=\"#方式三：\" class=\"headerlink\" title=\"方式三：\"></a>方式三：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\">    name=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    age;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">age</span>=age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(name,age);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式四：\"><a href=\"#方式四：\" class=\"headerlink\" title=\"方式四：\"></a>方式四：</h3><blockquote>\n<p>ES5的时候创建对象的方式</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    fields...</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    methods...</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>();<span class=\"comment\">//为函数调用</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();<span class=\"comment\">//为创建对象</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js内存机制堆栈原理\"><a href=\"#js内存机制堆栈原理\" class=\"headerlink\" title=\"js内存机制堆栈原理\"></a>js内存机制堆栈原理</h2><ol>\n<li>基本数据类型放进栈里</li>\n<li>引用类型放进堆里（变量在栈里，对象在堆里，对象的位置以指针[0xabd12e]十六进制数字的形式放进栈里）</li>\n<li></li>\n</ol>\n<blockquote>\n<p>在栈里指针移动很快，非常适合查找的操作</p>\n<p>对象里面的属性和方法相对很大，所以放进堆里，不必灵活创建消耗内存</p>\n</blockquote>\n<h3 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h3><ol>\n<li>this是一个变量，指向当前对象（只能写在函数的方法里面）</li>\n<li>如果方法未指定对象，则默认是全局方法，包含在window中</li>\n<li>如果在全局方法中则this指向window对象</li>\n<li>如果是在定时器setTimeOut中，则this指向window，因为setTimeOut就是window.setTimeOut(function,time);</li>\n</ol>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;&#125;;</span><br><span class=\"line\">o1.<span class=\"property\">name</span>=<span class=\"string\">&#x27;lisi&#x27;</span>;</span><br><span class=\"line\">o1.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\">o1.<span class=\"property\">sex</span>=<span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> p <span class=\"keyword\">in</span> o1)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p+<span class=\"string\">&quot;=&quot;</span>+o1[p]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><blockquote>\n<p>[]又叫数组直接量</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>];</span><br><span class=\"line\">arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">x</span>)&#123;<span class=\"keyword\">return</span> x*<span class=\"number\">2</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">//或者</span></span><br><span class=\"line\">arr.<span class=\"title function_\">foreach</span>(<span class=\"function\"><span class=\"params\">x</span>=&gt;</span>x*<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n"},{"title":"4. 原型与正则","date":"2022-10-15T02:06:51.000Z","_content":"\n## 创建对象\n\n```javascript\nvar o=new Object();\n\nvar o1={};\n\nvar o2={\n    xxx:xxx\n};\n\nclass o3{\n   \n}\n```\n\n## Object.create();\n\n> 根据已有对象创建对象的__proto__\n\n```javascript\nvar o1={\n    name:'lisi',\n    age:23\n};\nvar o2=Object.create(o1);\n//使用o1来给o2创建__proto__\n\nconsole.log(o2.__proto__==o1);//true\n\nconsole.log(o2.name);//相当于\nconsole.log(o2.__proto__.name);\n\nvar o2={\n    __proto__:{\n        name:'lisi',\n        age:23\n    }\n};\n```\n\n**__proto__:当你发现一个变量有____时说明在提示你这个变量时私有的**\n\n## 原型以及原型链\n\n> 被设计用来做继承\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\n//prototype也是一个对象，我们可以在这个对象下面创建属性和方法\nAnimal.prototype.shout=function(){\n    console.log(this.name);\n}\nvar a1=new Animal('mimi');\na1.shout();\n```\n\n> es6之前定义一个类的方法是\n>\n> 1. 首先写一个函数，充当“构造函数”，有参数，有属性\n> 2. 通过原型对象来写这个类的“方法”\n> 3. 使用时在函数里写参数，“构造方法”通过函数调用this来给对象的属性赋值\n\n> 所谓自由属性就是在构造函数中定义的属性\n\n```javascript\nfunction Person(name){\n    this.name=name;\n}\nPerson.prototype.age=23;\nPerson.prototype.brother={\n    name:'haha'\n};\nvar p1=new Person('lisi');\np1.age=45;//相当于在p1对象中添加了一个自由的属性age\n```\n\n**new出来的对象，{}里面打印出来的是属于对象本身的属性，是自由属性。当访问对象的属性时如果自身有的话就打印，如果没有就在对象的原型进行查找，如果还没有就去原型的原型找，最后找到Object下面的prototype还没有就返回undefined**\n\n> 原型中的属性被改了，所有继承该原型的对象都会被修改\n>\n> 但是由于无法修改基本数据类型（因为js的语法，修改即创建，导致只有引用类型会被修改，一个点不改，多个点就改了）\n\n## 正常继承\n\n```javascript\nclass Animal{\n    name;\n    contructor(name){\n        this.name=name;\n    }\n    shout(){\n        console.log(this.name+\"is shouting\");\n    }\n}\n\nclass Cat extends Animal{\n\n}\n\nvar cat1=new Cat(\"mimi\");\ncat1.shout();\n```\n\n## 几个方法，几个对象\n\n```javascript\nvar test=function (){}\n//底层是\nvar test=new Function();\n```\n\n**例子：**\n\n```javascript\nfunction Person(name){\n    this.name=name;\n    this.sleep=function (){\n        console.log(this.name+\"is sleeping...\");\n    }\n}\nvar p1new Person('lisi');//创建了两个对象\n```\n\n# 结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\n\n# 重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype\n\n```javascript\nprototype专门在原型链里加东西用的，__proto__不要随便动\n```\n\n## es6之前的继承\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\nAnimal.prototype.shout=function(){\n    console.log(this.name+'is shouting...');\n}\nfunction Cat(name){\n    Animal.call(this,name);\n}\nCat.prototype=new Animal('xxxx');//继承了方法，但是也继承了属性，需要改进\nCat.prototype=Cat;\nvar car1=new Cat();\nconsole.log(cat1);\n```\n\n## 修正(利用寄生组合方式)\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\nAnimal.prototype.shout=function(){\n    console.log(this.name+'is shouting...');\n}\nfunction Cat(name){\n    Animal.call(this,name);\n}\n//寄生组合方式\nCat.prototype=Object.create(Animal.prototype);\nCat.prototype.constructor=Cat;\nvar car1=new Cat();\nconsole.log(cat1);\n```\n\n## 对象拷贝\n\n```javascript\nvar o1={\n    name:'lisi',\n    age:23\n};\nvar o2=o1;\no1.name='wangwu';\nconsole.log(o2.name);//wangwu\n//原因是指针的拷贝，而不是对象的重新创建\n```\n\n## isPrototype\n\n## 复习\n\n```javascript\n//首先一个父类parent\nfunction Parent(name){\n    this.name=name;\n}\nParent.prototype.eat=function (){\n    console.log(this.name+\"is eating...\");\n}\nfunction Son(name){\n    Parent.call(this,name);\n}\nSon.prototype=Object.create(Parent.prototype);\nSon.prototype.constructor=Son;\nvar s=new Son('lili');\n```\n\n## 1月10日复习\n\n1. 被设计用了继承\n2. 每个函数都有一个prototype\n3. 函数也是对象，对象是通过new Function()创建\n4. 对象是通过new Object();实现\n5. 原型链查找，对象是通过__proto__查找的\n","source":"_posts/前端/学习/唯创前端上课笔记/1月8日原型与正则.md","raw":"---\ntitle: '4. 原型与正则'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 创建对象\n\n```javascript\nvar o=new Object();\n\nvar o1={};\n\nvar o2={\n    xxx:xxx\n};\n\nclass o3{\n   \n}\n```\n\n## Object.create();\n\n> 根据已有对象创建对象的__proto__\n\n```javascript\nvar o1={\n    name:'lisi',\n    age:23\n};\nvar o2=Object.create(o1);\n//使用o1来给o2创建__proto__\n\nconsole.log(o2.__proto__==o1);//true\n\nconsole.log(o2.name);//相当于\nconsole.log(o2.__proto__.name);\n\nvar o2={\n    __proto__:{\n        name:'lisi',\n        age:23\n    }\n};\n```\n\n**__proto__:当你发现一个变量有____时说明在提示你这个变量时私有的**\n\n## 原型以及原型链\n\n> 被设计用来做继承\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\n//prototype也是一个对象，我们可以在这个对象下面创建属性和方法\nAnimal.prototype.shout=function(){\n    console.log(this.name);\n}\nvar a1=new Animal('mimi');\na1.shout();\n```\n\n> es6之前定义一个类的方法是\n>\n> 1. 首先写一个函数，充当“构造函数”，有参数，有属性\n> 2. 通过原型对象来写这个类的“方法”\n> 3. 使用时在函数里写参数，“构造方法”通过函数调用this来给对象的属性赋值\n\n> 所谓自由属性就是在构造函数中定义的属性\n\n```javascript\nfunction Person(name){\n    this.name=name;\n}\nPerson.prototype.age=23;\nPerson.prototype.brother={\n    name:'haha'\n};\nvar p1=new Person('lisi');\np1.age=45;//相当于在p1对象中添加了一个自由的属性age\n```\n\n**new出来的对象，{}里面打印出来的是属于对象本身的属性，是自由属性。当访问对象的属性时如果自身有的话就打印，如果没有就在对象的原型进行查找，如果还没有就去原型的原型找，最后找到Object下面的prototype还没有就返回undefined**\n\n> 原型中的属性被改了，所有继承该原型的对象都会被修改\n>\n> 但是由于无法修改基本数据类型（因为js的语法，修改即创建，导致只有引用类型会被修改，一个点不改，多个点就改了）\n\n## 正常继承\n\n```javascript\nclass Animal{\n    name;\n    contructor(name){\n        this.name=name;\n    }\n    shout(){\n        console.log(this.name+\"is shouting\");\n    }\n}\n\nclass Cat extends Animal{\n\n}\n\nvar cat1=new Cat(\"mimi\");\ncat1.shout();\n```\n\n## 几个方法，几个对象\n\n```javascript\nvar test=function (){}\n//底层是\nvar test=new Function();\n```\n\n**例子：**\n\n```javascript\nfunction Person(name){\n    this.name=name;\n    this.sleep=function (){\n        console.log(this.name+\"is sleeping...\");\n    }\n}\nvar p1new Person('lisi');//创建了两个对象\n```\n\n# 结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\n\n# 重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype\n\n```javascript\nprototype专门在原型链里加东西用的，__proto__不要随便动\n```\n\n## es6之前的继承\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\nAnimal.prototype.shout=function(){\n    console.log(this.name+'is shouting...');\n}\nfunction Cat(name){\n    Animal.call(this,name);\n}\nCat.prototype=new Animal('xxxx');//继承了方法，但是也继承了属性，需要改进\nCat.prototype=Cat;\nvar car1=new Cat();\nconsole.log(cat1);\n```\n\n## 修正(利用寄生组合方式)\n\n```javascript\nfunction Animal(name){\n    this.name=name;\n}\nAnimal.prototype.shout=function(){\n    console.log(this.name+'is shouting...');\n}\nfunction Cat(name){\n    Animal.call(this,name);\n}\n//寄生组合方式\nCat.prototype=Object.create(Animal.prototype);\nCat.prototype.constructor=Cat;\nvar car1=new Cat();\nconsole.log(cat1);\n```\n\n## 对象拷贝\n\n```javascript\nvar o1={\n    name:'lisi',\n    age:23\n};\nvar o2=o1;\no1.name='wangwu';\nconsole.log(o2.name);//wangwu\n//原因是指针的拷贝，而不是对象的重新创建\n```\n\n## isPrototype\n\n## 复习\n\n```javascript\n//首先一个父类parent\nfunction Parent(name){\n    this.name=name;\n}\nParent.prototype.eat=function (){\n    console.log(this.name+\"is eating...\");\n}\nfunction Son(name){\n    Parent.call(this,name);\n}\nSon.prototype=Object.create(Parent.prototype);\nSon.prototype.constructor=Son;\nvar s=new Son('lili');\n```\n\n## 1月10日复习\n\n1. 被设计用了继承\n2. 每个函数都有一个prototype\n3. 函数也是对象，对象是通过new Function()创建\n4. 对象是通过new Object();实现\n5. 原型链查找，对象是通过__proto__查找的\n","slug":"前端/学习/唯创前端上课笔记/1月8日原型与正则","published":1,"updated":"2023-03-21T09:15:22.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co83005to8hu83ercemh","content":"<h2 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=&#123;</span><br><span class=\"line\">    <span class=\"attr\">xxx</span>:xxx</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">o3</span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Object-create\"><a href=\"#Object-create\" class=\"headerlink\" title=\"Object.create();\"></a>Object.create();</h2><blockquote>\n<p>根据已有对象创建对象的__proto__</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(o1);</span><br><span class=\"line\"><span class=\"comment\">//使用o1来给o2创建__proto__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">__proto__</span>==o1);<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">name</span>);<span class=\"comment\">//相当于</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">__proto__</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=&#123;</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong><strong>proto</strong>:当你发现一个变量有____时说明在提示你这个变量时私有的</strong></p>\n<h2 id=\"原型以及原型链\"><a href=\"#原型以及原型链\" class=\"headerlink\" title=\"原型以及原型链\"></a>原型以及原型链</h2><blockquote>\n<p>被设计用来做继承</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//prototype也是一个对象，我们可以在这个对象下面创建属性和方法</span></span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a1=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&#x27;mimi&#x27;</span>);</span><br><span class=\"line\">a1.<span class=\"title function_\">shout</span>();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>es6之前定义一个类的方法是</p>\n<ol>\n<li>首先写一个函数，充当“构造函数”，有参数，有属性</li>\n<li>通过原型对象来写这个类的“方法”</li>\n<li>使用时在函数里写参数，“构造方法”通过函数调用this来给对象的属性赋值</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>所谓自由属性就是在构造函数中定义的属性</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">brother</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;haha&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;lisi&#x27;</span>);</span><br><span class=\"line\">p1.<span class=\"property\">age</span>=<span class=\"number\">45</span>;<span class=\"comment\">//相当于在p1对象中添加了一个自由的属性age</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>new出来的对象，{}里面打印出来的是属于对象本身的属性，是自由属性。当访问对象的属性时如果自身有的话就打印，如果没有就在对象的原型进行查找，如果还没有就去原型的原型找，最后找到Object下面的prototype还没有就返回undefined</strong></p>\n<blockquote>\n<p>原型中的属性被改了，所有继承该原型的对象都会被修改</p>\n<p>但是由于无法修改基本数据类型（因为js的语法，修改即创建，导致只有引用类型会被修改，一个点不改，多个点就改了）</p>\n</blockquote>\n<h2 id=\"正常继承\"><a href=\"#正常继承\" class=\"headerlink\" title=\"正常继承\"></a>正常继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">    name;</span><br><span class=\"line\">    <span class=\"title function_\">contructor</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">shout</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is shouting&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cat1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;mimi&quot;</span>);</span><br><span class=\"line\">cat1.<span class=\"title function_\">shout</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"几个方法，几个对象\"><a href=\"#几个方法，几个对象\" class=\"headerlink\" title=\"几个方法，几个对象\"></a>几个方法，几个对象</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//底层是</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>例子：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is sleeping...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1new <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;lisi&#x27;</span>);<span class=\"comment\">//创建了两个对象</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\"><a href=\"#结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\" class=\"headerlink\" title=\"结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\"></a>结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建</h1><h1 id=\"重点：所有的对象都有一个-proto-的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的-proto-属性指向他的函数的prototype\"><a href=\"#重点：所有的对象都有一个-proto-的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的-proto-属性指向他的函数的prototype\" class=\"headerlink\" title=\"重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype\"></a>重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prototype专门在原型链里加东西用的，__proto__不要随便动</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"es6之前的继承\"><a href=\"#es6之前的继承\" class=\"headerlink\" title=\"es6之前的继承\"></a>es6之前的继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&#x27;is shouting...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Cat</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Animal</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&#x27;xxxx&#x27;</span>);<span class=\"comment\">//继承了方法，但是也继承了属性，需要改进</span></span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Cat</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> car1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cat1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修正-利用寄生组合方式\"><a href=\"#修正-利用寄生组合方式\" class=\"headerlink\" title=\"修正(利用寄生组合方式)\"></a>修正(利用寄生组合方式)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&#x27;is shouting...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Cat</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Animal</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//寄生组合方式</span></span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>=<span class=\"title class_\">Cat</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> car1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cat1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象拷贝\"><a href=\"#对象拷贝\" class=\"headerlink\" title=\"对象拷贝\"></a>对象拷贝</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=o1;</span><br><span class=\"line\">o1.<span class=\"property\">name</span>=<span class=\"string\">&#x27;wangwu&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">name</span>);<span class=\"comment\">//wangwu</span></span><br><span class=\"line\"><span class=\"comment\">//原因是指针的拷贝，而不是对象的重新创建</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"isPrototype\"><a href=\"#isPrototype\" class=\"headerlink\" title=\"isPrototype\"></a>isPrototype</h2><h2 id=\"复习\"><a href=\"#复习\" class=\"headerlink\" title=\"复习\"></a>复习</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先一个父类parent</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">eat</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is eating...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>=<span class=\"title class_\">Son</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;lili&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1月10日复习\"><a href=\"#1月10日复习\" class=\"headerlink\" title=\"1月10日复习\"></a>1月10日复习</h2><ol>\n<li>被设计用了继承</li>\n<li>每个函数都有一个prototype</li>\n<li>函数也是对象，对象是通过new Function()创建</li>\n<li>对象是通过new Object();实现</li>\n<li>原型链查找，对象是通过__proto__查找的</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=&#123;</span><br><span class=\"line\">    <span class=\"attr\">xxx</span>:xxx</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">o3</span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Object-create\"><a href=\"#Object-create\" class=\"headerlink\" title=\"Object.create();\"></a>Object.create();</h2><blockquote>\n<p>根据已有对象创建对象的__proto__</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(o1);</span><br><span class=\"line\"><span class=\"comment\">//使用o1来给o2创建__proto__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">__proto__</span>==o1);<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">name</span>);<span class=\"comment\">//相当于</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">__proto__</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=&#123;</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong><strong>proto</strong>:当你发现一个变量有____时说明在提示你这个变量时私有的</strong></p>\n<h2 id=\"原型以及原型链\"><a href=\"#原型以及原型链\" class=\"headerlink\" title=\"原型以及原型链\"></a>原型以及原型链</h2><blockquote>\n<p>被设计用来做继承</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//prototype也是一个对象，我们可以在这个对象下面创建属性和方法</span></span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a1=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&#x27;mimi&#x27;</span>);</span><br><span class=\"line\">a1.<span class=\"title function_\">shout</span>();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>es6之前定义一个类的方法是</p>\n<ol>\n<li>首先写一个函数，充当“构造函数”，有参数，有属性</li>\n<li>通过原型对象来写这个类的“方法”</li>\n<li>使用时在函数里写参数，“构造方法”通过函数调用this来给对象的属性赋值</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>所谓自由属性就是在构造函数中定义的属性</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">age</span>=<span class=\"number\">23</span>;</span><br><span class=\"line\"><span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">brother</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;haha&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1=<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;lisi&#x27;</span>);</span><br><span class=\"line\">p1.<span class=\"property\">age</span>=<span class=\"number\">45</span>;<span class=\"comment\">//相当于在p1对象中添加了一个自由的属性age</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>new出来的对象，{}里面打印出来的是属于对象本身的属性，是自由属性。当访问对象的属性时如果自身有的话就打印，如果没有就在对象的原型进行查找，如果还没有就去原型的原型找，最后找到Object下面的prototype还没有就返回undefined</strong></p>\n<blockquote>\n<p>原型中的属性被改了，所有继承该原型的对象都会被修改</p>\n<p>但是由于无法修改基本数据类型（因为js的语法，修改即创建，导致只有引用类型会被修改，一个点不改，多个点就改了）</p>\n</blockquote>\n<h2 id=\"正常继承\"><a href=\"#正常继承\" class=\"headerlink\" title=\"正常继承\"></a>正常继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">    name;</span><br><span class=\"line\">    <span class=\"title function_\">contructor</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">shout</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is shouting&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Animal</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cat1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;mimi&quot;</span>);</span><br><span class=\"line\">cat1.<span class=\"title function_\">shout</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"几个方法，几个对象\"><a href=\"#几个方法，几个对象\" class=\"headerlink\" title=\"几个方法，几个对象\"></a>几个方法，几个对象</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//底层是</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>例子：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is sleeping...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1new <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;lisi&#x27;</span>);<span class=\"comment\">//创建了两个对象</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\"><a href=\"#结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\" class=\"headerlink\" title=\"结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建\"></a>结论：不要将属性放在原型中，因为修改一个都会被修改，并且不要讲方法放在构造函数中，因为每次创建对象的时候，每个方法都会创建一个对象，放在原型里的话只有页面加载完毕会创建，其余不创建</h1><h1 id=\"重点：所有的对象都有一个-proto-的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的-proto-属性指向他的函数的prototype\"><a href=\"#重点：所有的对象都有一个-proto-的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的-proto-属性指向他的函数的prototype\" class=\"headerlink\" title=\"重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype\"></a>重点：所有的对象都有一个__proto__的属性，该属性是一个普通的对象，所有的函数都有一个prototype属性，该属性是一个普通的对象。所有对象的__proto__属性指向他的函数的prototype</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prototype专门在原型链里加东西用的，__proto__不要随便动</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"es6之前的继承\"><a href=\"#es6之前的继承\" class=\"headerlink\" title=\"es6之前的继承\"></a>es6之前的继承</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&#x27;is shouting...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Cat</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Animal</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>(<span class=\"string\">&#x27;xxxx&#x27;</span>);<span class=\"comment\">//继承了方法，但是也继承了属性，需要改进</span></span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Cat</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> car1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cat1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修正-利用寄生组合方式\"><a href=\"#修正-利用寄生组合方式\" class=\"headerlink\" title=\"修正(利用寄生组合方式)\"></a>修正(利用寄生组合方式)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Animal</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">shout</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&#x27;is shouting...&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Cat</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Animal</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//寄生组合方式</span></span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Animal</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"title class_\">Cat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>=<span class=\"title class_\">Cat</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> car1=<span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(cat1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象拷贝\"><a href=\"#对象拷贝\" class=\"headerlink\" title=\"对象拷贝\"></a>对象拷贝</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> o1=&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;lisi&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>:<span class=\"number\">23</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2=o1;</span><br><span class=\"line\">o1.<span class=\"property\">name</span>=<span class=\"string\">&#x27;wangwu&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o2.<span class=\"property\">name</span>);<span class=\"comment\">//wangwu</span></span><br><span class=\"line\"><span class=\"comment\">//原因是指针的拷贝，而不是对象的重新创建</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"isPrototype\"><a href=\"#isPrototype\" class=\"headerlink\" title=\"isPrototype\"></a>isPrototype</h2><h2 id=\"复习\"><a href=\"#复习\" class=\"headerlink\" title=\"复习\"></a>复习</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先一个父类parent</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>=name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">eat</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>+<span class=\"string\">&quot;is eating...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>,name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>=<span class=\"title class_\">Son</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s=<span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;lili&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1月10日复习\"><a href=\"#1月10日复习\" class=\"headerlink\" title=\"1月10日复习\"></a>1月10日复习</h2><ol>\n<li>被设计用了继承</li>\n<li>每个函数都有一个prototype</li>\n<li>函数也是对象，对象是通过new Function()创建</li>\n<li>对象是通过new Object();实现</li>\n<li>原型链查找，对象是通过__proto__查找的</li>\n</ol>\n"},{"title":"基础练习","date":"2022-10-15T02:06:51.000Z","_content":"\n[javascript基础测验题目链接]([https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj# 「JavaScript基础测验」](https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj))\n\n## 一，单项选择\n\n1. C✔️对象遍历通过for...in\n2. A✔️\n3. A✔️\n4. B✔️\n5. B✔️//函数提升优先级比变量优先级高\n6. D✔️\n\n## 二，多项选择题\n\n1. ABC✔️\n2. ACD\n3. ACD\n4. ABCD\n5. AC\n6. ABC\n7. ABCD\n\n## 三，编程\n\n1. ````javascript\n   //第一种\n   for (let i = 0; i < arr.length; i++) {\n       var ran=Math.floor(Math.random()*arr.length);\n       var temp=arr[ran];\n       arr[ran]=arr[i];\n       arr[i]=temp;\n       console.log(arr[i]);\n   }\n   //第二种\n   var arr=[1,2,3,4,5,6,7];\n   var res=[],i=0;\n   while(arr.length>0){\n       var ran=Math.floor(Math.random()*arr.length);\n       res.push(arr[ran]);\n       arr.splice(ran,1);\n       console.log(res[i++]);\n   }\n   //第三种\n   var arr=[1,2,3,4,5,6,7];\n   arr.sort(function (){\n       return Math.random()-0.5;\n   })\n   console.log(arr);\n   ````\n2. ```javascript\n   var x=10000000.111+\"\";\n   var beg=x.indexOf(\".\")==-1?x.length:x.indexOf(\".\");\n   var count=0;\n   for(let i=beg-1;i>=0;i--){\n       count++;\n       if(count%3==0)x=x.substring(0,i)+\",\"+x.substring(i,x.length);\n   }\n   console.log(x);\n   ```\n3. ```javascript\n   var s=\"aba\";\n   var n=s.length;\n   function judge(s){\n       for(var i=0;i<=n/2;i++){\n           if(s.charAt(i)!=s.charAt(n-i-1)){\n               return false;\n           }\n       }\n       return true;\n   }\n   console.log(judge(s));\n   ```\n4. ```javascript\n   Array.prototype.newArr=function (arr2){\n       var arr1=[];\n       var res=[];\n       for (let i = 0; i < arr2.length; i++) {\n           if(arr1.indexOf(arr2[i])!=-1){\n\n           }else{\n               arr1.push(arr2[i]);\n               res.push(arr2[i]);\n           }\n       }\n       return res;\n   }\n   console.log(new Array().newArr([1,1,1,2,3,4]));\n   ```\n5. 不太理解原型\n6. ```javascript\n   var str1=\"asdasdsa1\";\n   function hasNum(str){\n       for(let s of str){\n           if(s>='0'&&s<='9')return true;\n       }\n       return false;\n   }\n   console.log(hasNum(str1));\n   ```\n7. ```javascript\n   function multipli(a,b){\n       return a*b;\n   }\n   ```\n8. ```javascript\n   function remove(arr,item){\n       var res=[];\n       for(let n of arr){\n           if(n!=item)res.push(n);\n       }\n       return res;\n   }\n   console.log(remove([1,2,3],1));\n   ```\n9. ```javascript\n   function toTwo(num){\n       var res=\"\";\n       while(num){\n           res=parseInt(num%2).toString()+res;\n           num=parseInt(num/2);\n       }\n       if(res.length<8){\n           var remain=\"\";\n           for(var i=0;i<8-res.length;i++){\n               remain+=\"0\";\n           }\n           res=remain+res;\n       }\n       return res;\n   }\n   console.log(toTwo(11));\n   ```\n10. ```javascript\n    var a=[\"1\",\"2\",\"3\",\"4\",\"5\"];\n    var index=0;\n    function after(){\n        console.log(a[index++]);\n    }\n    setInterval(after, 2000);\n    ```\n11. ```javascript\n    function mySort(arr){\n        for(let i=0;i<arr.length-1;i++){\n            for(let j=0;j<arr.length-i-1;j++){\n                if(arr[j]>arr[j+1]){\n                    var temp=arr[j];\n                    arr[j]=arr[j+1];\n                    arr[j+1]=temp;\n                }\n            }\n        }\n        return arr;\n    }\n    console.log(mySort([1,3,2,4]));\n    ```\n12. ```javascript\n    var s=\"20210107\";\n    var year=s.substring(0,4);\n    var mon=s.substring(4,6);\n    var day=s.substring(6,8);\n    var res=year+\"年\"+mon+\"月\"+day;\n    console.log(res);\n    ```\n13. ```javascript\n    var user=prompt(\"请输入1,2,3 1:石头,2:剪刀,3:布\");\n    var result=['石头','剪刀','布'];\n    var robot=parseInt(Math.random()*3)+1;\n    if(robot-user==1||robot==1&&user==3){\n        console.log(\"你赢了！你出的是：\"+result[user-1]+\"机器人出的是：\"+result[robot-1]);\n    }else if(robot==user){\n        console.log(\"平局！你出的是\"+result[user-1]+\"机器人出的是\"+result[robot-1]);\n    }else{\n        console.log(\"你输了你出的是\"+result[user-1]+\"机器人出的是\"+result[robot-1])\n    }\n    ```\n14. ```javascript\n    function xyRandom(x,y){\n        return Math.floor(Math.random()*(y-x+1))+x;\n    }\n    console.log(xyRandom(3,1003));\n    ```\n15. ```javascript\n    var res=1,num=1;\n    for(var i=0;i<64;i++){\n        res*=2;\n        num+=res;\n    }\n    console.log(0.00001*num+\"kg\");\n    ```\n16. ```javascript\n    function seven(x){\n        if(x%7==0)return false;\n        while(x){\n            if(x%10==7){\n                return false;\n            }\n            x=parseInt(x/10);\n        }\n        return true;\n    }\n    for(let i=0;i<=100;i++){\n        if(seven(i))console.log(i);\n    }\n    ```\n17. ```javascript\n    function sum(n){\n        var res=1;\n        if(n%2==0){\n            for(let i=2;i<=n;i+=2){\n                res+=1/i;\n            }\n            return res;\n        }else{\n            for(let i=3;i<=n;i+=2){\n                res+=1/i;\n            }\n            return res;\n        }\n    }\n    console.log(sum(11));\n    ```\n18. ```javascript\n    function isDivid(m,n){\n        var num=0;\n        var res=0;\n        for(let i=1;i<=n;i++){\n            num=num*10+i;\n            if(i>=m&&num%3==0)res++;\n        }\n        return res;\n    }\n    console.log(isDivid(1,7));\n    ```\n19. ```javascript\n    不太会，自己瞎写的\n    function getDataById(obj,target){\n        if(typeof obj!=\"object\")return ;\n        for(let key in obj){\n            if(key[id]==target)return key;\n            return getDataById(key,target);\n        }\n    }\n    ```\n20. ```javascript\n    function sum(n){\n        var res=0;\n        for(let i=1;i<=n;i++){\n            var end=i;\n            function huiwen(beg){\n                if(beg==end)return beg;\n                return \"\"+beg+huiwen(beg+1)+beg;\n            }\n            res+=parseInt(huiwen(1));\n        }\n        console.log(res);\n    }\n    sum(5);\n    ```\n21. ```javascript\n    function toTuo(s){\n        var arr=s.split('');\n        var res=[];\n        for(var i=0;i<arr.length;i++){\n            if(arr[i]=='-'){\n                res.push(String.fromCharCode(s.charCodeAt(i+1)-32));i++;//String.fromCharCode(arr[i+1].charCodeAt(i+1)-32)\n            }else{\n                res.push(arr[i]);\n            }\n        }\n        return res.join('');\n    }\n    console.log(toTuo(\"asd-qwe-qwe\"));\n    ```\n22. ```javascript\n    function mySort(arr){\n        var res=[];\n        var num=[];\n        for(let i=0;i<arr.length;i++){\n            num.push(Object.keys(arr[i]).length);\n        }\n        for(var ii=0;ii<num.length-1;ii++){\n            let max;\n            max=0;\n            var temp;\n            var j;\n            for(j=1;j<num.length-ii;j++){\n                if(num[j]>num[max]){\n                    max=j;\n                }\n            }\n            temp=num[j-1];\n            num[j-1]=num[max];\n            num[max]=temp;\n            temp=arr[j-1];\n            arr[j-1]=arr[max];\n            arr[max]=temp;\n        }\n        return arr;\n    }\n    var obj=[{a:1},{a:2,b:2,c:3},{a:3,b:2,c:4,d:5},{a:4,b:2}];\n    console.log(mySort(obj));\n    ```\n23. 不太会\n24. 不太会\n25. ```javascript\n    function centerPad(str,len,clo){\n        if(len<=str.length)return str;\n        var left=parseInt((len-str.length)/2);\n        var right=len-str.length-left;\n        var now=0,num=clo.length;\n        var lstr=\"\",rstr=\"\";\n        for(let i=0;i<left;i++){\n            lstr+=clo[now%num];\n            now++;\n        }\n        if(right!=left){\n            rstr=lstr+clo[now%num];\n        }else{\n            rstr=lstr;\n        }\n        return lstr+str+rstr;\n    }\n    console.log(centerPad(\"hello\",15,\"abcasd\"));\n    ```\n26.\n27. ```javascript\n    var a=[1,2,3,4];\n    var res=[],one=0,two=0,thr=0,count=0;\n    for(let i=0;i<a.length;i++){\n        one=a[i];\n        for(let j=0;j<a.length;j++){\n            if(j==i)continue;\n            two=one*10+a[j];\n            for(let k=0;k<a.length;k++){\n                if(k==j||k==i)continue;\n                thr=two*10+a[k];\n                if(res.indexOf(thr)==-1){\n                    count++;\n                    res.push(thr);\n                }\n            }\n        }\n    }\n    console.log(\"数量为：\"+count+\"，分别是：\");\n    console.log(res);\n\n\n    ```\n28. ```javascript\n    function myMoney(x){\n        var mine=0;\n        if(x<=100000){\n            return x*0.1;\n        }else if(x>100000&&x<200000){\n            return 100000*0.1+(x-100000)*0.075;\n        }else if(x>=200000&&x<400000){\n            return 100000*0.1+100000*0.075+(x-200000)*0.005;\n        }else if(x>400000&&x<600000){\n            return 100000*0.1+100000*0.075+200000*0.005+(x-400000)*0.003;\n        }else if(x<1000000){\n            return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+(x-600000)*0.0015;\n        }else{\n            return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+400000*0.0015+(x-1000000)*0.001;\n        }\n    }\n    ```\n29. ```javascript\n    function remo(s){\n        var res=\"\";\n        for (let c of s) {\n            if(c!='a'&&\n               c!='e'&&\n               c!='i'&&\n               c!='o'&&\n               c!='u')res+=c;\n        }\n        return res;\n    }\n    console.log(remo(\"aeiosa\"));\n    ```\n30. ```javascript\n    function condition(x){\n        var a,b,c;\n        c=x%10;\n        b=parseInt(x/10)%10;\n        a=parseInt(x/100)%10;\n        if(c*c*c+b*b*b+a*a*a===x)return true;\n        return false;\n    }\n    for(let i=100;i<1000;i++){\n        if(condition(i)){\n            console.log(i);\n        }\n    }\n    ```\n31. ```javascript\n    var res=1;\n    for (let i = 0; i < 9; i++) {\n        res=(res+1)*2;\n    }\n    console.log(res);\n    ```\n32. ```javascript\n    function calcu(str){\n        var num=0,letter=0,space=0,other=0;\n        for (let s of str) {\n            if(s>='0'&&s<='9')num++;\n            else if(s>='a'&&s<='z'||s>='A'&&s<='Z')letter++;\n            else if(s==' ')space++;\n            else other++;\n        }\n        console.log(num,letter,space,other);\n    }\n    calcu('ad123  ???');\n    ```\n33. ```javascript\n    console.log(\n    \"a->z,b->z,c->y\"\n    )\n    ```\n\n# 上课\n\n```javascript\nfunction fn(num){\n    return num && num.toString().replace(/(\\d)(?=(\\d{3})+\\.)/g,function (match){\n    return match+',';\n});\n}\nconsole.log(fn(1111111111.11));\n```\n","source":"_posts/前端/学习/唯创前端上课笔记/javascript基础测验.md","raw":"---\ntitle: '基础练习'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: js\n---\n\n[javascript基础测验题目链接]([https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj# 「JavaScript基础测验」](https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj))\n\n## 一，单项选择\n\n1. C✔️对象遍历通过for...in\n2. A✔️\n3. A✔️\n4. B✔️\n5. B✔️//函数提升优先级比变量优先级高\n6. D✔️\n\n## 二，多项选择题\n\n1. ABC✔️\n2. ACD\n3. ACD\n4. ABCD\n5. AC\n6. ABC\n7. ABCD\n\n## 三，编程\n\n1. ````javascript\n   //第一种\n   for (let i = 0; i < arr.length; i++) {\n       var ran=Math.floor(Math.random()*arr.length);\n       var temp=arr[ran];\n       arr[ran]=arr[i];\n       arr[i]=temp;\n       console.log(arr[i]);\n   }\n   //第二种\n   var arr=[1,2,3,4,5,6,7];\n   var res=[],i=0;\n   while(arr.length>0){\n       var ran=Math.floor(Math.random()*arr.length);\n       res.push(arr[ran]);\n       arr.splice(ran,1);\n       console.log(res[i++]);\n   }\n   //第三种\n   var arr=[1,2,3,4,5,6,7];\n   arr.sort(function (){\n       return Math.random()-0.5;\n   })\n   console.log(arr);\n   ````\n2. ```javascript\n   var x=10000000.111+\"\";\n   var beg=x.indexOf(\".\")==-1?x.length:x.indexOf(\".\");\n   var count=0;\n   for(let i=beg-1;i>=0;i--){\n       count++;\n       if(count%3==0)x=x.substring(0,i)+\",\"+x.substring(i,x.length);\n   }\n   console.log(x);\n   ```\n3. ```javascript\n   var s=\"aba\";\n   var n=s.length;\n   function judge(s){\n       for(var i=0;i<=n/2;i++){\n           if(s.charAt(i)!=s.charAt(n-i-1)){\n               return false;\n           }\n       }\n       return true;\n   }\n   console.log(judge(s));\n   ```\n4. ```javascript\n   Array.prototype.newArr=function (arr2){\n       var arr1=[];\n       var res=[];\n       for (let i = 0; i < arr2.length; i++) {\n           if(arr1.indexOf(arr2[i])!=-1){\n\n           }else{\n               arr1.push(arr2[i]);\n               res.push(arr2[i]);\n           }\n       }\n       return res;\n   }\n   console.log(new Array().newArr([1,1,1,2,3,4]));\n   ```\n5. 不太理解原型\n6. ```javascript\n   var str1=\"asdasdsa1\";\n   function hasNum(str){\n       for(let s of str){\n           if(s>='0'&&s<='9')return true;\n       }\n       return false;\n   }\n   console.log(hasNum(str1));\n   ```\n7. ```javascript\n   function multipli(a,b){\n       return a*b;\n   }\n   ```\n8. ```javascript\n   function remove(arr,item){\n       var res=[];\n       for(let n of arr){\n           if(n!=item)res.push(n);\n       }\n       return res;\n   }\n   console.log(remove([1,2,3],1));\n   ```\n9. ```javascript\n   function toTwo(num){\n       var res=\"\";\n       while(num){\n           res=parseInt(num%2).toString()+res;\n           num=parseInt(num/2);\n       }\n       if(res.length<8){\n           var remain=\"\";\n           for(var i=0;i<8-res.length;i++){\n               remain+=\"0\";\n           }\n           res=remain+res;\n       }\n       return res;\n   }\n   console.log(toTwo(11));\n   ```\n10. ```javascript\n    var a=[\"1\",\"2\",\"3\",\"4\",\"5\"];\n    var index=0;\n    function after(){\n        console.log(a[index++]);\n    }\n    setInterval(after, 2000);\n    ```\n11. ```javascript\n    function mySort(arr){\n        for(let i=0;i<arr.length-1;i++){\n            for(let j=0;j<arr.length-i-1;j++){\n                if(arr[j]>arr[j+1]){\n                    var temp=arr[j];\n                    arr[j]=arr[j+1];\n                    arr[j+1]=temp;\n                }\n            }\n        }\n        return arr;\n    }\n    console.log(mySort([1,3,2,4]));\n    ```\n12. ```javascript\n    var s=\"20210107\";\n    var year=s.substring(0,4);\n    var mon=s.substring(4,6);\n    var day=s.substring(6,8);\n    var res=year+\"年\"+mon+\"月\"+day;\n    console.log(res);\n    ```\n13. ```javascript\n    var user=prompt(\"请输入1,2,3 1:石头,2:剪刀,3:布\");\n    var result=['石头','剪刀','布'];\n    var robot=parseInt(Math.random()*3)+1;\n    if(robot-user==1||robot==1&&user==3){\n        console.log(\"你赢了！你出的是：\"+result[user-1]+\"机器人出的是：\"+result[robot-1]);\n    }else if(robot==user){\n        console.log(\"平局！你出的是\"+result[user-1]+\"机器人出的是\"+result[robot-1]);\n    }else{\n        console.log(\"你输了你出的是\"+result[user-1]+\"机器人出的是\"+result[robot-1])\n    }\n    ```\n14. ```javascript\n    function xyRandom(x,y){\n        return Math.floor(Math.random()*(y-x+1))+x;\n    }\n    console.log(xyRandom(3,1003));\n    ```\n15. ```javascript\n    var res=1,num=1;\n    for(var i=0;i<64;i++){\n        res*=2;\n        num+=res;\n    }\n    console.log(0.00001*num+\"kg\");\n    ```\n16. ```javascript\n    function seven(x){\n        if(x%7==0)return false;\n        while(x){\n            if(x%10==7){\n                return false;\n            }\n            x=parseInt(x/10);\n        }\n        return true;\n    }\n    for(let i=0;i<=100;i++){\n        if(seven(i))console.log(i);\n    }\n    ```\n17. ```javascript\n    function sum(n){\n        var res=1;\n        if(n%2==0){\n            for(let i=2;i<=n;i+=2){\n                res+=1/i;\n            }\n            return res;\n        }else{\n            for(let i=3;i<=n;i+=2){\n                res+=1/i;\n            }\n            return res;\n        }\n    }\n    console.log(sum(11));\n    ```\n18. ```javascript\n    function isDivid(m,n){\n        var num=0;\n        var res=0;\n        for(let i=1;i<=n;i++){\n            num=num*10+i;\n            if(i>=m&&num%3==0)res++;\n        }\n        return res;\n    }\n    console.log(isDivid(1,7));\n    ```\n19. ```javascript\n    不太会，自己瞎写的\n    function getDataById(obj,target){\n        if(typeof obj!=\"object\")return ;\n        for(let key in obj){\n            if(key[id]==target)return key;\n            return getDataById(key,target);\n        }\n    }\n    ```\n20. ```javascript\n    function sum(n){\n        var res=0;\n        for(let i=1;i<=n;i++){\n            var end=i;\n            function huiwen(beg){\n                if(beg==end)return beg;\n                return \"\"+beg+huiwen(beg+1)+beg;\n            }\n            res+=parseInt(huiwen(1));\n        }\n        console.log(res);\n    }\n    sum(5);\n    ```\n21. ```javascript\n    function toTuo(s){\n        var arr=s.split('');\n        var res=[];\n        for(var i=0;i<arr.length;i++){\n            if(arr[i]=='-'){\n                res.push(String.fromCharCode(s.charCodeAt(i+1)-32));i++;//String.fromCharCode(arr[i+1].charCodeAt(i+1)-32)\n            }else{\n                res.push(arr[i]);\n            }\n        }\n        return res.join('');\n    }\n    console.log(toTuo(\"asd-qwe-qwe\"));\n    ```\n22. ```javascript\n    function mySort(arr){\n        var res=[];\n        var num=[];\n        for(let i=0;i<arr.length;i++){\n            num.push(Object.keys(arr[i]).length);\n        }\n        for(var ii=0;ii<num.length-1;ii++){\n            let max;\n            max=0;\n            var temp;\n            var j;\n            for(j=1;j<num.length-ii;j++){\n                if(num[j]>num[max]){\n                    max=j;\n                }\n            }\n            temp=num[j-1];\n            num[j-1]=num[max];\n            num[max]=temp;\n            temp=arr[j-1];\n            arr[j-1]=arr[max];\n            arr[max]=temp;\n        }\n        return arr;\n    }\n    var obj=[{a:1},{a:2,b:2,c:3},{a:3,b:2,c:4,d:5},{a:4,b:2}];\n    console.log(mySort(obj));\n    ```\n23. 不太会\n24. 不太会\n25. ```javascript\n    function centerPad(str,len,clo){\n        if(len<=str.length)return str;\n        var left=parseInt((len-str.length)/2);\n        var right=len-str.length-left;\n        var now=0,num=clo.length;\n        var lstr=\"\",rstr=\"\";\n        for(let i=0;i<left;i++){\n            lstr+=clo[now%num];\n            now++;\n        }\n        if(right!=left){\n            rstr=lstr+clo[now%num];\n        }else{\n            rstr=lstr;\n        }\n        return lstr+str+rstr;\n    }\n    console.log(centerPad(\"hello\",15,\"abcasd\"));\n    ```\n26.\n27. ```javascript\n    var a=[1,2,3,4];\n    var res=[],one=0,two=0,thr=0,count=0;\n    for(let i=0;i<a.length;i++){\n        one=a[i];\n        for(let j=0;j<a.length;j++){\n            if(j==i)continue;\n            two=one*10+a[j];\n            for(let k=0;k<a.length;k++){\n                if(k==j||k==i)continue;\n                thr=two*10+a[k];\n                if(res.indexOf(thr)==-1){\n                    count++;\n                    res.push(thr);\n                }\n            }\n        }\n    }\n    console.log(\"数量为：\"+count+\"，分别是：\");\n    console.log(res);\n\n\n    ```\n28. ```javascript\n    function myMoney(x){\n        var mine=0;\n        if(x<=100000){\n            return x*0.1;\n        }else if(x>100000&&x<200000){\n            return 100000*0.1+(x-100000)*0.075;\n        }else if(x>=200000&&x<400000){\n            return 100000*0.1+100000*0.075+(x-200000)*0.005;\n        }else if(x>400000&&x<600000){\n            return 100000*0.1+100000*0.075+200000*0.005+(x-400000)*0.003;\n        }else if(x<1000000){\n            return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+(x-600000)*0.0015;\n        }else{\n            return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+400000*0.0015+(x-1000000)*0.001;\n        }\n    }\n    ```\n29. ```javascript\n    function remo(s){\n        var res=\"\";\n        for (let c of s) {\n            if(c!='a'&&\n               c!='e'&&\n               c!='i'&&\n               c!='o'&&\n               c!='u')res+=c;\n        }\n        return res;\n    }\n    console.log(remo(\"aeiosa\"));\n    ```\n30. ```javascript\n    function condition(x){\n        var a,b,c;\n        c=x%10;\n        b=parseInt(x/10)%10;\n        a=parseInt(x/100)%10;\n        if(c*c*c+b*b*b+a*a*a===x)return true;\n        return false;\n    }\n    for(let i=100;i<1000;i++){\n        if(condition(i)){\n            console.log(i);\n        }\n    }\n    ```\n31. ```javascript\n    var res=1;\n    for (let i = 0; i < 9; i++) {\n        res=(res+1)*2;\n    }\n    console.log(res);\n    ```\n32. ```javascript\n    function calcu(str){\n        var num=0,letter=0,space=0,other=0;\n        for (let s of str) {\n            if(s>='0'&&s<='9')num++;\n            else if(s>='a'&&s<='z'||s>='A'&&s<='Z')letter++;\n            else if(s==' ')space++;\n            else other++;\n        }\n        console.log(num,letter,space,other);\n    }\n    calcu('ad123  ???');\n    ```\n33. ```javascript\n    console.log(\n    \"a->z,b->z,c->y\"\n    )\n    ```\n\n# 上课\n\n```javascript\nfunction fn(num){\n    return num && num.toString().replace(/(\\d)(?=(\\d{3})+\\.)/g,function (match){\n    return match+',';\n});\n}\nconsole.log(fn(1111111111.11));\n```\n","slug":"前端/学习/唯创前端上课笔记/javascript基础测验","published":1,"updated":"2023-03-21T09:35:27.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co84005wo8hucosrahrw","content":"<p>[javascript基础测验题目链接](<a href=\"https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj\">https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj# 「JavaScript基础测验」</a>)</p>\n<h2 id=\"一，单项选择\"><a href=\"#一，单项选择\" class=\"headerlink\" title=\"一，单项选择\"></a>一，单项选择</h2><ol>\n<li>C✔️对象遍历通过for…in</li>\n<li>A✔️</li>\n<li>A✔️</li>\n<li>B✔️</li>\n<li>B✔️//函数提升优先级比变量优先级高</li>\n<li>D✔️</li>\n</ol>\n<h2 id=\"二，多项选择题\"><a href=\"#二，多项选择题\" class=\"headerlink\" title=\"二，多项选择题\"></a>二，多项选择题</h2><ol>\n<li>ABC✔️</li>\n<li>ACD</li>\n<li>ACD</li>\n<li>ABCD</li>\n<li>AC</li>\n<li>ABC</li>\n<li>ABCD</li>\n</ol>\n<h2 id=\"三，编程\"><a href=\"#三，编程\" class=\"headerlink\" title=\"三，编程\"></a>三，编程</h2><ol>\n<li><pre><code class=\"javascript\">//第一种\nfor (let i = 0; i &lt; arr.length; i++) &#123;\n    var ran=Math.floor(Math.random()*arr.length);\n    var temp=arr[ran];\n    arr[ran]=arr[i];\n    arr[i]=temp;\n    console.log(arr[i]);\n&#125;\n//第二种\nvar arr=[1,2,3,4,5,6,7];\nvar res=[],i=0;\nwhile(arr.length&gt;0)&#123;\n    var ran=Math.floor(Math.random()*arr.length);\n    res.push(arr[ran]);\n    arr.splice(ran,1);\n    console.log(res[i++]);\n&#125;\n//第三种\nvar arr=[1,2,3,4,5,6,7];\narr.sort(function ()&#123;\n    return Math.random()-0.5;\n&#125;)\nconsole.log(arr);\n</code></pre>\n</li>\n<li><p>```javascript<br>var x=10000000.111+””;<br>var beg=x.indexOf(“.”)==-1?x.length:x.indexOf(“.”);<br>var count=0;<br>for(let i=beg-1;i&gt;=0;i–){</p>\n<pre><code>count++;\nif(count%3==0)x=x.substring(0,i)+&quot;,&quot;+x.substring(i,x.length);\n</code></pre>\n<p>}<br>console.log(x);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3. ```javascript</span><br><span class=\"line\">   var s=&quot;aba&quot;;</span><br><span class=\"line\">   var n=s.length;</span><br><span class=\"line\">   function judge(s)&#123;</span><br><span class=\"line\">       for(var i=0;i&lt;=n/2;i++)&#123;</span><br><span class=\"line\">           if(s.charAt(i)!=s.charAt(n-i-1))&#123;</span><br><span class=\"line\">               return false;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return true;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(judge(s));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>Array.prototype.newArr=function (arr2){</p>\n<pre><code>var arr1=[];\nvar res=[];\nfor (let i = 0; i &lt; arr2.length; i++) &#123;\n    if(arr1.indexOf(arr2[i])!=-1)&#123;\n\n    &#125;else&#123;\n        arr1.push(arr2[i]);\n        res.push(arr2[i]);\n    &#125;\n&#125;\nreturn res;\n</code></pre>\n<p>}<br>console.log(new Array().newArr([1,1,1,2,3,4]));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5. 不太理解原型</span><br><span class=\"line\">6. ```javascript</span><br><span class=\"line\">   var str1=&quot;asdasdsa1&quot;;</span><br><span class=\"line\">   function hasNum(str)&#123;</span><br><span class=\"line\">       for(let s of str)&#123;</span><br><span class=\"line\">           if(s&gt;=&#x27;0&#x27;&amp;&amp;s&lt;=&#x27;9&#x27;)return true;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return false;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(hasNum(str1));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function multipli(a,b){</p>\n<pre><code>return a*b;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8. ```javascript</span><br><span class=\"line\">   function remove(arr,item)&#123;</span><br><span class=\"line\">       var res=[];</span><br><span class=\"line\">       for(let n of arr)&#123;</span><br><span class=\"line\">           if(n!=item)res.push(n);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return res;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(remove([1,2,3],1));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function toTwo(num){</p>\n<pre><code>var res=&quot;&quot;;\nwhile(num)&#123;\n    res=parseInt(num%2).toString()+res;\n    num=parseInt(num/2);\n&#125;\nif(res.length&lt;8)&#123;\n    var remain=&quot;&quot;;\n    for(var i=0;i&lt;8-res.length;i++)&#123;\n        remain+=&quot;0&quot;;\n    &#125;\n    res=remain+res;\n&#125;\nreturn res;\n</code></pre>\n<p>}<br>console.log(toTwo(11));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10. ```javascript</span><br><span class=\"line\">    var a=[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;];</span><br><span class=\"line\">    var index=0;</span><br><span class=\"line\">    function after()&#123;</span><br><span class=\"line\">        console.log(a[index++]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setInterval(after, 2000);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function mySort(arr){</p>\n<pre><code>for(let i=0;i&lt;arr.length-1;i++)&#123;\n    for(let j=0;j&lt;arr.length-i-1;j++)&#123;\n        if(arr[j]&gt;arr[j+1])&#123;\n            var temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n        &#125;\n    &#125;\n&#125;\nreturn arr;\n</code></pre>\n<p>}<br>console.log(mySort([1,3,2,4]));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12. ```javascript</span><br><span class=\"line\">    var s=&quot;20210107&quot;;</span><br><span class=\"line\">    var year=s.substring(0,4);</span><br><span class=\"line\">    var mon=s.substring(4,6);</span><br><span class=\"line\">    var day=s.substring(6,8);</span><br><span class=\"line\">    var res=year+&quot;年&quot;+mon+&quot;月&quot;+day;</span><br><span class=\"line\">    console.log(res);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>var user=prompt(“请输入1,2,3 1:石头,2:剪刀,3:布”);<br>var result=[‘石头’,’剪刀’,’布’];<br>var robot=parseInt(Math.random()*3)+1;<br>if(robot-user==1||robot==1&amp;&amp;user==3){</p>\n<pre><code>console.log(&quot;你赢了！你出的是：&quot;+result[user-1]+&quot;机器人出的是：&quot;+result[robot-1]);\n</code></pre>\n<p>}else if(robot==user){</p>\n<pre><code>console.log(&quot;平局！你出的是&quot;+result[user-1]+&quot;机器人出的是&quot;+result[robot-1]);\n</code></pre>\n<p>}else{</p>\n<pre><code>console.log(&quot;你输了你出的是&quot;+result[user-1]+&quot;机器人出的是&quot;+result[robot-1])\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">14. ```javascript</span><br><span class=\"line\">    function xyRandom(x,y)&#123;</span><br><span class=\"line\">        return Math.floor(Math.random()*(y-x+1))+x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(xyRandom(3,1003));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>var res=1,num=1;<br>for(var i=0;i&lt;64;i++){</p>\n<pre><code>res*=2;\nnum+=res;\n</code></pre>\n<p>}<br>console.log(0.00001*num+”kg”);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">16. ```javascript</span><br><span class=\"line\">    function seven(x)&#123;</span><br><span class=\"line\">        if(x%7==0)return false;</span><br><span class=\"line\">        while(x)&#123;</span><br><span class=\"line\">            if(x%10==7)&#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            x=parseInt(x/10);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(let i=0;i&lt;=100;i++)&#123;</span><br><span class=\"line\">        if(seven(i))console.log(i);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function sum(n){</p>\n<pre><code>var res=1;\nif(n%2==0)&#123;\n    for(let i=2;i&lt;=n;i+=2)&#123;\n        res+=1/i;\n    &#125;\n    return res;\n&#125;else&#123;\n    for(let i=3;i&lt;=n;i+=2)&#123;\n        res+=1/i;\n    &#125;\n    return res;\n&#125;\n</code></pre>\n<p>}<br>console.log(sum(11));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">18. ```javascript</span><br><span class=\"line\">    function isDivid(m,n)&#123;</span><br><span class=\"line\">        var num=0;</span><br><span class=\"line\">        var res=0;</span><br><span class=\"line\">        for(let i=1;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            num=num*10+i;</span><br><span class=\"line\">            if(i&gt;=m&amp;&amp;num%3==0)res++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(isDivid(1,7));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>不太会，自己瞎写的<br>function getDataById(obj,target){</p>\n<pre><code>if(typeof obj!=&quot;object&quot;)return ;\nfor(let key in obj)&#123;\n    if(key[id]==target)return key;\n    return getDataById(key,target);\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20. ```javascript</span><br><span class=\"line\">    function sum(n)&#123;</span><br><span class=\"line\">        var res=0;</span><br><span class=\"line\">        for(let i=1;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            var end=i;</span><br><span class=\"line\">            function huiwen(beg)&#123;</span><br><span class=\"line\">                if(beg==end)return beg;</span><br><span class=\"line\">                return &quot;&quot;+beg+huiwen(beg+1)+beg;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            res+=parseInt(huiwen(1));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum(5);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function toTuo(s){</p>\n<pre><code>var arr=s.split(&#39;&#39;);\nvar res=[];\nfor(var i=0;i&lt;arr.length;i++)&#123;\n    if(arr[i]==&#39;-&#39;)&#123;\n        res.push(String.fromCharCode(s.charCodeAt(i+1)-32));i++;//String.fromCharCode(arr[i+1].charCodeAt(i+1)-32)\n    &#125;else&#123;\n        res.push(arr[i]);\n    &#125;\n&#125;\nreturn res.join(&#39;&#39;);\n</code></pre>\n<p>}<br>console.log(toTuo(“asd-qwe-qwe”));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">22. ```javascript</span><br><span class=\"line\">    function mySort(arr)&#123;</span><br><span class=\"line\">        var res=[];</span><br><span class=\"line\">        var num=[];</span><br><span class=\"line\">        for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            num.push(Object.keys(arr[i]).length);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(var ii=0;ii&lt;num.length-1;ii++)&#123;</span><br><span class=\"line\">            let max;</span><br><span class=\"line\">            max=0;</span><br><span class=\"line\">            var temp;</span><br><span class=\"line\">            var j;</span><br><span class=\"line\">            for(j=1;j&lt;num.length-ii;j++)&#123;</span><br><span class=\"line\">                if(num[j]&gt;num[max])&#123;</span><br><span class=\"line\">                    max=j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=num[j-1];</span><br><span class=\"line\">            num[j-1]=num[max];</span><br><span class=\"line\">            num[max]=temp;</span><br><span class=\"line\">            temp=arr[j-1];</span><br><span class=\"line\">            arr[j-1]=arr[max];</span><br><span class=\"line\">            arr[max]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var obj=[&#123;a:1&#125;,&#123;a:2,b:2,c:3&#125;,&#123;a:3,b:2,c:4,d:5&#125;,&#123;a:4,b:2&#125;];</span><br><span class=\"line\">    console.log(mySort(obj));</span><br></pre></td></tr></table></figure></li>\n<li><p>不太会</p>\n</li>\n<li><p>不太会</p>\n</li>\n<li><p>```javascript<br>function centerPad(str,len,clo){</p>\n<pre><code>if(len&lt;=str.length)return str;\nvar left=parseInt((len-str.length)/2);\nvar right=len-str.length-left;\nvar now=0,num=clo.length;\nvar lstr=&quot;&quot;,rstr=&quot;&quot;;\nfor(let i=0;i&lt;left;i++)&#123;\n    lstr+=clo[now%num];\n    now++;\n&#125;\nif(right!=left)&#123;\n    rstr=lstr+clo[now%num];\n&#125;else&#123;\n    rstr=lstr;\n&#125;\nreturn lstr+str+rstr;\n</code></pre>\n<p>}<br>console.log(centerPad(“hello”,15,”abcasd”));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26.</span><br><span class=\"line\">27. ```javascript</span><br><span class=\"line\">    var a=[1,2,3,4];</span><br><span class=\"line\">    var res=[],one=0,two=0,thr=0,count=0;</span><br><span class=\"line\">    for(let i=0;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">        one=a[i];</span><br><span class=\"line\">        for(let j=0;j&lt;a.length;j++)&#123;</span><br><span class=\"line\">            if(j==i)continue;</span><br><span class=\"line\">            two=one*10+a[j];</span><br><span class=\"line\">            for(let k=0;k&lt;a.length;k++)&#123;</span><br><span class=\"line\">                if(k==j||k==i)continue;</span><br><span class=\"line\">                thr=two*10+a[k];</span><br><span class=\"line\">                if(res.indexOf(thr)==-1)&#123;</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                    res.push(thr);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(&quot;数量为：&quot;+count+&quot;，分别是：&quot;);</span><br><span class=\"line\">    console.log(res);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function myMoney(x){</p>\n<pre><code>var mine=0;\nif(x&lt;=100000)&#123;\n    return x*0.1;\n&#125;else if(x&gt;100000&amp;&amp;x&lt;200000)&#123;\n    return 100000*0.1+(x-100000)*0.075;\n&#125;else if(x&gt;=200000&amp;&amp;x&lt;400000)&#123;\n    return 100000*0.1+100000*0.075+(x-200000)*0.005;\n&#125;else if(x&gt;400000&amp;&amp;x&lt;600000)&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+(x-400000)*0.003;\n&#125;else if(x&lt;1000000)&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+(x-600000)*0.0015;\n&#125;else&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+400000*0.0015+(x-1000000)*0.001;\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29. ```javascript</span><br><span class=\"line\">    function remo(s)&#123;</span><br><span class=\"line\">        var res=&quot;&quot;;</span><br><span class=\"line\">        for (let c of s) &#123;</span><br><span class=\"line\">            if(c!=&#x27;a&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;e&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;i&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;o&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;u&#x27;)res+=c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(remo(&quot;aeiosa&quot;));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function condition(x){</p>\n<pre><code>var a,b,c;\nc=x%10;\nb=parseInt(x/10)%10;\na=parseInt(x/100)%10;\nif(c*c*c+b*b*b+a*a*a===x)return true;\nreturn false;\n</code></pre>\n<p>}<br>for(let i=100;i&lt;1000;i++){</p>\n<pre><code>if(condition(i))&#123;\n    console.log(i);\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">31. ```javascript</span><br><span class=\"line\">    var res=1;</span><br><span class=\"line\">    for (let i = 0; i &lt; 9; i++) &#123;</span><br><span class=\"line\">        res=(res+1)*2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(res);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function calcu(str){</p>\n<pre><code>var num=0,letter=0,space=0,other=0;\nfor (let s of str) &#123;\n    if(s&gt;=&#39;0&#39;&amp;&amp;s&lt;=&#39;9&#39;)num++;\n    else if(s&gt;=&#39;a&#39;&amp;&amp;s&lt;=&#39;z&#39;||s&gt;=&#39;A&#39;&amp;&amp;s&lt;=&#39;Z&#39;)letter++;\n    else if(s==&#39; &#39;)space++;\n    else other++;\n&#125;\nconsole.log(num,letter,space,other);\n</code></pre>\n<p>}<br>calcu(‘ad123  ???’);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">33. ```javascript</span><br><span class=\"line\">    console.log(</span><br><span class=\"line\">    &quot;a-&gt;z,b-&gt;z,c-&gt;y&quot;</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"上课\"><a href=\"#上课\" class=\"headerlink\" title=\"上课\"></a>上课</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &amp;&amp; num.<span class=\"title function_\">toString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+\\.)/g</span>,<span class=\"keyword\">function</span> (<span class=\"params\">match</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> match+<span class=\"string\">&#x27;,&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>(<span class=\"number\">1111111111.11</span>));</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>[javascript基础测验题目链接](<a href=\"https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj\">https://alidocs.dingtalk.com/i/team/O2RXDx4lJ6yRYXZj/docs/O2RXDQ0dD0o8ymZj# 「JavaScript基础测验」</a>)</p>\n<h2 id=\"一，单项选择\"><a href=\"#一，单项选择\" class=\"headerlink\" title=\"一，单项选择\"></a>一，单项选择</h2><ol>\n<li>C✔️对象遍历通过for…in</li>\n<li>A✔️</li>\n<li>A✔️</li>\n<li>B✔️</li>\n<li>B✔️//函数提升优先级比变量优先级高</li>\n<li>D✔️</li>\n</ol>\n<h2 id=\"二，多项选择题\"><a href=\"#二，多项选择题\" class=\"headerlink\" title=\"二，多项选择题\"></a>二，多项选择题</h2><ol>\n<li>ABC✔️</li>\n<li>ACD</li>\n<li>ACD</li>\n<li>ABCD</li>\n<li>AC</li>\n<li>ABC</li>\n<li>ABCD</li>\n</ol>\n<h2 id=\"三，编程\"><a href=\"#三，编程\" class=\"headerlink\" title=\"三，编程\"></a>三，编程</h2><ol>\n<li><pre><code class=\"javascript\">//第一种\nfor (let i = 0; i &lt; arr.length; i++) &#123;\n    var ran=Math.floor(Math.random()*arr.length);\n    var temp=arr[ran];\n    arr[ran]=arr[i];\n    arr[i]=temp;\n    console.log(arr[i]);\n&#125;\n//第二种\nvar arr=[1,2,3,4,5,6,7];\nvar res=[],i=0;\nwhile(arr.length&gt;0)&#123;\n    var ran=Math.floor(Math.random()*arr.length);\n    res.push(arr[ran]);\n    arr.splice(ran,1);\n    console.log(res[i++]);\n&#125;\n//第三种\nvar arr=[1,2,3,4,5,6,7];\narr.sort(function ()&#123;\n    return Math.random()-0.5;\n&#125;)\nconsole.log(arr);\n</code></pre>\n</li>\n<li><p>```javascript<br>var x=10000000.111+””;<br>var beg=x.indexOf(“.”)==-1?x.length:x.indexOf(“.”);<br>var count=0;<br>for(let i=beg-1;i&gt;=0;i–){</p>\n<pre><code>count++;\nif(count%3==0)x=x.substring(0,i)+&quot;,&quot;+x.substring(i,x.length);\n</code></pre>\n<p>}<br>console.log(x);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3. ```javascript</span><br><span class=\"line\">   var s=&quot;aba&quot;;</span><br><span class=\"line\">   var n=s.length;</span><br><span class=\"line\">   function judge(s)&#123;</span><br><span class=\"line\">       for(var i=0;i&lt;=n/2;i++)&#123;</span><br><span class=\"line\">           if(s.charAt(i)!=s.charAt(n-i-1))&#123;</span><br><span class=\"line\">               return false;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return true;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(judge(s));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>Array.prototype.newArr=function (arr2){</p>\n<pre><code>var arr1=[];\nvar res=[];\nfor (let i = 0; i &lt; arr2.length; i++) &#123;\n    if(arr1.indexOf(arr2[i])!=-1)&#123;\n\n    &#125;else&#123;\n        arr1.push(arr2[i]);\n        res.push(arr2[i]);\n    &#125;\n&#125;\nreturn res;\n</code></pre>\n<p>}<br>console.log(new Array().newArr([1,1,1,2,3,4]));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5. 不太理解原型</span><br><span class=\"line\">6. ```javascript</span><br><span class=\"line\">   var str1=&quot;asdasdsa1&quot;;</span><br><span class=\"line\">   function hasNum(str)&#123;</span><br><span class=\"line\">       for(let s of str)&#123;</span><br><span class=\"line\">           if(s&gt;=&#x27;0&#x27;&amp;&amp;s&lt;=&#x27;9&#x27;)return true;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return false;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(hasNum(str1));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function multipli(a,b){</p>\n<pre><code>return a*b;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8. ```javascript</span><br><span class=\"line\">   function remove(arr,item)&#123;</span><br><span class=\"line\">       var res=[];</span><br><span class=\"line\">       for(let n of arr)&#123;</span><br><span class=\"line\">           if(n!=item)res.push(n);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return res;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(remove([1,2,3],1));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function toTwo(num){</p>\n<pre><code>var res=&quot;&quot;;\nwhile(num)&#123;\n    res=parseInt(num%2).toString()+res;\n    num=parseInt(num/2);\n&#125;\nif(res.length&lt;8)&#123;\n    var remain=&quot;&quot;;\n    for(var i=0;i&lt;8-res.length;i++)&#123;\n        remain+=&quot;0&quot;;\n    &#125;\n    res=remain+res;\n&#125;\nreturn res;\n</code></pre>\n<p>}<br>console.log(toTwo(11));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10. ```javascript</span><br><span class=\"line\">    var a=[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;];</span><br><span class=\"line\">    var index=0;</span><br><span class=\"line\">    function after()&#123;</span><br><span class=\"line\">        console.log(a[index++]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setInterval(after, 2000);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function mySort(arr){</p>\n<pre><code>for(let i=0;i&lt;arr.length-1;i++)&#123;\n    for(let j=0;j&lt;arr.length-i-1;j++)&#123;\n        if(arr[j]&gt;arr[j+1])&#123;\n            var temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n        &#125;\n    &#125;\n&#125;\nreturn arr;\n</code></pre>\n<p>}<br>console.log(mySort([1,3,2,4]));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12. ```javascript</span><br><span class=\"line\">    var s=&quot;20210107&quot;;</span><br><span class=\"line\">    var year=s.substring(0,4);</span><br><span class=\"line\">    var mon=s.substring(4,6);</span><br><span class=\"line\">    var day=s.substring(6,8);</span><br><span class=\"line\">    var res=year+&quot;年&quot;+mon+&quot;月&quot;+day;</span><br><span class=\"line\">    console.log(res);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>var user=prompt(“请输入1,2,3 1:石头,2:剪刀,3:布”);<br>var result=[‘石头’,’剪刀’,’布’];<br>var robot=parseInt(Math.random()*3)+1;<br>if(robot-user==1||robot==1&amp;&amp;user==3){</p>\n<pre><code>console.log(&quot;你赢了！你出的是：&quot;+result[user-1]+&quot;机器人出的是：&quot;+result[robot-1]);\n</code></pre>\n<p>}else if(robot==user){</p>\n<pre><code>console.log(&quot;平局！你出的是&quot;+result[user-1]+&quot;机器人出的是&quot;+result[robot-1]);\n</code></pre>\n<p>}else{</p>\n<pre><code>console.log(&quot;你输了你出的是&quot;+result[user-1]+&quot;机器人出的是&quot;+result[robot-1])\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">14. ```javascript</span><br><span class=\"line\">    function xyRandom(x,y)&#123;</span><br><span class=\"line\">        return Math.floor(Math.random()*(y-x+1))+x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(xyRandom(3,1003));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>var res=1,num=1;<br>for(var i=0;i&lt;64;i++){</p>\n<pre><code>res*=2;\nnum+=res;\n</code></pre>\n<p>}<br>console.log(0.00001*num+”kg”);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">16. ```javascript</span><br><span class=\"line\">    function seven(x)&#123;</span><br><span class=\"line\">        if(x%7==0)return false;</span><br><span class=\"line\">        while(x)&#123;</span><br><span class=\"line\">            if(x%10==7)&#123;</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            x=parseInt(x/10);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for(let i=0;i&lt;=100;i++)&#123;</span><br><span class=\"line\">        if(seven(i))console.log(i);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function sum(n){</p>\n<pre><code>var res=1;\nif(n%2==0)&#123;\n    for(let i=2;i&lt;=n;i+=2)&#123;\n        res+=1/i;\n    &#125;\n    return res;\n&#125;else&#123;\n    for(let i=3;i&lt;=n;i+=2)&#123;\n        res+=1/i;\n    &#125;\n    return res;\n&#125;\n</code></pre>\n<p>}<br>console.log(sum(11));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">18. ```javascript</span><br><span class=\"line\">    function isDivid(m,n)&#123;</span><br><span class=\"line\">        var num=0;</span><br><span class=\"line\">        var res=0;</span><br><span class=\"line\">        for(let i=1;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            num=num*10+i;</span><br><span class=\"line\">            if(i&gt;=m&amp;&amp;num%3==0)res++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(isDivid(1,7));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>不太会，自己瞎写的<br>function getDataById(obj,target){</p>\n<pre><code>if(typeof obj!=&quot;object&quot;)return ;\nfor(let key in obj)&#123;\n    if(key[id]==target)return key;\n    return getDataById(key,target);\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20. ```javascript</span><br><span class=\"line\">    function sum(n)&#123;</span><br><span class=\"line\">        var res=0;</span><br><span class=\"line\">        for(let i=1;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            var end=i;</span><br><span class=\"line\">            function huiwen(beg)&#123;</span><br><span class=\"line\">                if(beg==end)return beg;</span><br><span class=\"line\">                return &quot;&quot;+beg+huiwen(beg+1)+beg;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            res+=parseInt(huiwen(1));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum(5);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function toTuo(s){</p>\n<pre><code>var arr=s.split(&#39;&#39;);\nvar res=[];\nfor(var i=0;i&lt;arr.length;i++)&#123;\n    if(arr[i]==&#39;-&#39;)&#123;\n        res.push(String.fromCharCode(s.charCodeAt(i+1)-32));i++;//String.fromCharCode(arr[i+1].charCodeAt(i+1)-32)\n    &#125;else&#123;\n        res.push(arr[i]);\n    &#125;\n&#125;\nreturn res.join(&#39;&#39;);\n</code></pre>\n<p>}<br>console.log(toTuo(“asd-qwe-qwe”));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">22. ```javascript</span><br><span class=\"line\">    function mySort(arr)&#123;</span><br><span class=\"line\">        var res=[];</span><br><span class=\"line\">        var num=[];</span><br><span class=\"line\">        for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            num.push(Object.keys(arr[i]).length);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for(var ii=0;ii&lt;num.length-1;ii++)&#123;</span><br><span class=\"line\">            let max;</span><br><span class=\"line\">            max=0;</span><br><span class=\"line\">            var temp;</span><br><span class=\"line\">            var j;</span><br><span class=\"line\">            for(j=1;j&lt;num.length-ii;j++)&#123;</span><br><span class=\"line\">                if(num[j]&gt;num[max])&#123;</span><br><span class=\"line\">                    max=j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=num[j-1];</span><br><span class=\"line\">            num[j-1]=num[max];</span><br><span class=\"line\">            num[max]=temp;</span><br><span class=\"line\">            temp=arr[j-1];</span><br><span class=\"line\">            arr[j-1]=arr[max];</span><br><span class=\"line\">            arr[max]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var obj=[&#123;a:1&#125;,&#123;a:2,b:2,c:3&#125;,&#123;a:3,b:2,c:4,d:5&#125;,&#123;a:4,b:2&#125;];</span><br><span class=\"line\">    console.log(mySort(obj));</span><br></pre></td></tr></table></figure></li>\n<li><p>不太会</p>\n</li>\n<li><p>不太会</p>\n</li>\n<li><p>```javascript<br>function centerPad(str,len,clo){</p>\n<pre><code>if(len&lt;=str.length)return str;\nvar left=parseInt((len-str.length)/2);\nvar right=len-str.length-left;\nvar now=0,num=clo.length;\nvar lstr=&quot;&quot;,rstr=&quot;&quot;;\nfor(let i=0;i&lt;left;i++)&#123;\n    lstr+=clo[now%num];\n    now++;\n&#125;\nif(right!=left)&#123;\n    rstr=lstr+clo[now%num];\n&#125;else&#123;\n    rstr=lstr;\n&#125;\nreturn lstr+str+rstr;\n</code></pre>\n<p>}<br>console.log(centerPad(“hello”,15,”abcasd”));</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26.</span><br><span class=\"line\">27. ```javascript</span><br><span class=\"line\">    var a=[1,2,3,4];</span><br><span class=\"line\">    var res=[],one=0,two=0,thr=0,count=0;</span><br><span class=\"line\">    for(let i=0;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">        one=a[i];</span><br><span class=\"line\">        for(let j=0;j&lt;a.length;j++)&#123;</span><br><span class=\"line\">            if(j==i)continue;</span><br><span class=\"line\">            two=one*10+a[j];</span><br><span class=\"line\">            for(let k=0;k&lt;a.length;k++)&#123;</span><br><span class=\"line\">                if(k==j||k==i)continue;</span><br><span class=\"line\">                thr=two*10+a[k];</span><br><span class=\"line\">                if(res.indexOf(thr)==-1)&#123;</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                    res.push(thr);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(&quot;数量为：&quot;+count+&quot;，分别是：&quot;);</span><br><span class=\"line\">    console.log(res);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function myMoney(x){</p>\n<pre><code>var mine=0;\nif(x&lt;=100000)&#123;\n    return x*0.1;\n&#125;else if(x&gt;100000&amp;&amp;x&lt;200000)&#123;\n    return 100000*0.1+(x-100000)*0.075;\n&#125;else if(x&gt;=200000&amp;&amp;x&lt;400000)&#123;\n    return 100000*0.1+100000*0.075+(x-200000)*0.005;\n&#125;else if(x&gt;400000&amp;&amp;x&lt;600000)&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+(x-400000)*0.003;\n&#125;else if(x&lt;1000000)&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+(x-600000)*0.0015;\n&#125;else&#123;\n    return 100000*0.1+100000*0.075+200000*0.005+200000*0.003+400000*0.0015+(x-1000000)*0.001;\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29. ```javascript</span><br><span class=\"line\">    function remo(s)&#123;</span><br><span class=\"line\">        var res=&quot;&quot;;</span><br><span class=\"line\">        for (let c of s) &#123;</span><br><span class=\"line\">            if(c!=&#x27;a&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;e&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;i&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;o&#x27;&amp;&amp;</span><br><span class=\"line\">               c!=&#x27;u&#x27;)res+=c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(remo(&quot;aeiosa&quot;));</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function condition(x){</p>\n<pre><code>var a,b,c;\nc=x%10;\nb=parseInt(x/10)%10;\na=parseInt(x/100)%10;\nif(c*c*c+b*b*b+a*a*a===x)return true;\nreturn false;\n</code></pre>\n<p>}<br>for(let i=100;i&lt;1000;i++){</p>\n<pre><code>if(condition(i))&#123;\n    console.log(i);\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">31. ```javascript</span><br><span class=\"line\">    var res=1;</span><br><span class=\"line\">    for (let i = 0; i &lt; 9; i++) &#123;</span><br><span class=\"line\">        res=(res+1)*2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    console.log(res);</span><br></pre></td></tr></table></figure></li>\n<li><p>```javascript<br>function calcu(str){</p>\n<pre><code>var num=0,letter=0,space=0,other=0;\nfor (let s of str) &#123;\n    if(s&gt;=&#39;0&#39;&amp;&amp;s&lt;=&#39;9&#39;)num++;\n    else if(s&gt;=&#39;a&#39;&amp;&amp;s&lt;=&#39;z&#39;||s&gt;=&#39;A&#39;&amp;&amp;s&lt;=&#39;Z&#39;)letter++;\n    else if(s==&#39; &#39;)space++;\n    else other++;\n&#125;\nconsole.log(num,letter,space,other);\n</code></pre>\n<p>}<br>calcu(‘ad123  ???’);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">33. ```javascript</span><br><span class=\"line\">    console.log(</span><br><span class=\"line\">    &quot;a-&gt;z,b-&gt;z,c-&gt;y&quot;</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"上课\"><a href=\"#上课\" class=\"headerlink\" title=\"上课\"></a>上课</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">num</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &amp;&amp; num.<span class=\"title function_\">toString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+\\.)/g</span>,<span class=\"keyword\">function</span> (<span class=\"params\">match</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> match+<span class=\"string\">&#x27;,&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>(<span class=\"number\">1111111111.11</span>));</span><br></pre></td></tr></table></figure>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n内容链接[基础](https://www.yuque.com/huashengmi-yszfq/xw1fz1/gbkrkw)    [进阶](https://www.yuque.com/docs/share/2614efe0-c317-4396-a5ba-4c8882f7d6e7?#)\n\n## 目录结构\n\n```mindmap\n- 目录\n  - 云函数\n  - 小程序\n  - 基本配置\n    - eslintrc.js\n    - project.private.config.json\n    - readme\n    - uploadcloudfunction.sh\n```\n\n## 修改首页的方式\n\n1. 将json里面的文件放到前面\n2. 修改编译模式\n\n## wxml\n\n> html:(div,span,img,a)\n>\n> wxml:(view,text,image,navigator)\n\n- text标签默认不能复制，如果复制需要加上userselect标签\n- 设置滚动栏![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\小程序学习.md363669.9234657.png)\n\n## 注释快捷键ctrl+？\n\n> this.setData()修改数据\n>\n> 小程序视图和逻辑是分隔开的不相互影响\n\n## app.json的配置\n\n```javascript\n \"window\": {    \n        \"navigationBarBackgroundColor\": \"#ff0000\",  //只支持16进制表示法\n        \"navigationBarTitleText\": \"唯创教学，宇宙最强\",\n        \"navigationBarTextStyle\": \"black\", //只能设置为black 或 white\n        \"enablePullDownRefresh\": true, //开启下拉刷新，默认真机中不会自动合上\n   \t\t\t\"backgroundColor\": \"#F6F6F6\",\n        \"backgroundTextStyle\": \"light\",//下拉 loading 的样式，仅支持 dark 或 light\n        \"onReachBottomDistance\": 100, //上拉触底。 默认距离为50px，一般用默认值就行了\n    },\n```\n","source":"_posts/前端/学习/小程序/小程序学习.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: \n---\n\n内容链接[基础](https://www.yuque.com/huashengmi-yszfq/xw1fz1/gbkrkw)    [进阶](https://www.yuque.com/docs/share/2614efe0-c317-4396-a5ba-4c8882f7d6e7?#)\n\n## 目录结构\n\n```mindmap\n- 目录\n  - 云函数\n  - 小程序\n  - 基本配置\n    - eslintrc.js\n    - project.private.config.json\n    - readme\n    - uploadcloudfunction.sh\n```\n\n## 修改首页的方式\n\n1. 将json里面的文件放到前面\n2. 修改编译模式\n\n## wxml\n\n> html:(div,span,img,a)\n>\n> wxml:(view,text,image,navigator)\n\n- text标签默认不能复制，如果复制需要加上userselect标签\n- 设置滚动栏![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\小程序学习.md363669.9234657.png)\n\n## 注释快捷键ctrl+？\n\n> this.setData()修改数据\n>\n> 小程序视图和逻辑是分隔开的不相互影响\n\n## app.json的配置\n\n```javascript\n \"window\": {    \n        \"navigationBarBackgroundColor\": \"#ff0000\",  //只支持16进制表示法\n        \"navigationBarTitleText\": \"唯创教学，宇宙最强\",\n        \"navigationBarTextStyle\": \"black\", //只能设置为black 或 white\n        \"enablePullDownRefresh\": true, //开启下拉刷新，默认真机中不会自动合上\n   \t\t\t\"backgroundColor\": \"#F6F6F6\",\n        \"backgroundTextStyle\": \"light\",//下拉 loading 的样式，仅支持 dark 或 light\n        \"onReachBottomDistance\": 100, //上拉触底。 默认距离为50px，一般用默认值就行了\n    },\n```\n","slug":"前端/学习/小程序/小程序学习","published":1,"updated":"2023-03-21T09:15:22.729Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co85005zo8hub8w2cu1b","content":"<p>内容链接<a href=\"https://www.yuque.com/huashengmi-yszfq/xw1fz1/gbkrkw\">基础</a>    <a href=\"https://www.yuque.com/docs/share/2614efe0-c317-4396-a5ba-4c8882f7d6e7#\">进阶</a></p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 目录</span><br><span class=\"line\">  - 云函数</span><br><span class=\"line\">  - 小程序</span><br><span class=\"line\">  - 基本配置</span><br><span class=\"line\">    - eslintrc.js</span><br><span class=\"line\">    - project.private.config.json</span><br><span class=\"line\">    - readme</span><br><span class=\"line\">    - uploadcloudfunction.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改首页的方式\"><a href=\"#修改首页的方式\" class=\"headerlink\" title=\"修改首页的方式\"></a>修改首页的方式</h2><ol>\n<li>将json里面的文件放到前面</li>\n<li>修改编译模式</li>\n</ol>\n<h2 id=\"wxml\"><a href=\"#wxml\" class=\"headerlink\" title=\"wxml\"></a>wxml</h2><blockquote>\n<p>html:(div,span,img,a)</p>\n<p>wxml:(view,text,image,navigator)</p>\n</blockquote>\n<ul>\n<li>text标签默认不能复制，如果复制需要加上userselect标签</li>\n<li>设置滚动栏<img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\小程序学习.md363669.9234657.png\"></li>\n</ul>\n<h2 id=\"注释快捷键ctrl-？\"><a href=\"#注释快捷键ctrl-？\" class=\"headerlink\" title=\"注释快捷键ctrl+？\"></a>注释快捷键ctrl+？</h2><blockquote>\n<p>this.setData()修改数据</p>\n<p>小程序视图和逻辑是分隔开的不相互影响</p>\n</blockquote>\n<h2 id=\"app-json的配置\"><a href=\"#app-json的配置\" class=\"headerlink\" title=\"app.json的配置\"></a>app.json的配置</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;window&quot;</span>: &#123;    </span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarBackgroundColor&quot;</span>: <span class=\"string\">&quot;#ff0000&quot;</span>,  <span class=\"comment\">//只支持16进制表示法</span></span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarTitleText&quot;</span>: <span class=\"string\">&quot;唯创教学，宇宙最强&quot;</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarTextStyle&quot;</span>: <span class=\"string\">&quot;black&quot;</span>, <span class=\"comment\">//只能设置为black 或 white</span></span><br><span class=\"line\">       <span class=\"string\">&quot;enablePullDownRefresh&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//开启下拉刷新，默认真机中不会自动合上</span></span><br><span class=\"line\">  \t\t\t<span class=\"string\">&quot;backgroundColor&quot;</span>: <span class=\"string\">&quot;#F6F6F6&quot;</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;backgroundTextStyle&quot;</span>: <span class=\"string\">&quot;light&quot;</span>,<span class=\"comment\">//下拉 loading 的样式，仅支持 dark 或 light</span></span><br><span class=\"line\">       <span class=\"string\">&quot;onReachBottomDistance&quot;</span>: <span class=\"number\">100</span>, <span class=\"comment\">//上拉触底。 默认距离为50px，一般用默认值就行了</span></span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>内容链接<a href=\"https://www.yuque.com/huashengmi-yszfq/xw1fz1/gbkrkw\">基础</a>    <a href=\"https://www.yuque.com/docs/share/2614efe0-c317-4396-a5ba-4c8882f7d6e7#\">进阶</a></p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 目录</span><br><span class=\"line\">  - 云函数</span><br><span class=\"line\">  - 小程序</span><br><span class=\"line\">  - 基本配置</span><br><span class=\"line\">    - eslintrc.js</span><br><span class=\"line\">    - project.private.config.json</span><br><span class=\"line\">    - readme</span><br><span class=\"line\">    - uploadcloudfunction.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改首页的方式\"><a href=\"#修改首页的方式\" class=\"headerlink\" title=\"修改首页的方式\"></a>修改首页的方式</h2><ol>\n<li>将json里面的文件放到前面</li>\n<li>修改编译模式</li>\n</ol>\n<h2 id=\"wxml\"><a href=\"#wxml\" class=\"headerlink\" title=\"wxml\"></a>wxml</h2><blockquote>\n<p>html:(div,span,img,a)</p>\n<p>wxml:(view,text,image,navigator)</p>\n</blockquote>\n<ul>\n<li>text标签默认不能复制，如果复制需要加上userselect标签</li>\n<li>设置滚动栏<img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\小程序学习.md363669.9234657.png\"></li>\n</ul>\n<h2 id=\"注释快捷键ctrl-？\"><a href=\"#注释快捷键ctrl-？\" class=\"headerlink\" title=\"注释快捷键ctrl+？\"></a>注释快捷键ctrl+？</h2><blockquote>\n<p>this.setData()修改数据</p>\n<p>小程序视图和逻辑是分隔开的不相互影响</p>\n</blockquote>\n<h2 id=\"app-json的配置\"><a href=\"#app-json的配置\" class=\"headerlink\" title=\"app.json的配置\"></a>app.json的配置</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;window&quot;</span>: &#123;    </span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarBackgroundColor&quot;</span>: <span class=\"string\">&quot;#ff0000&quot;</span>,  <span class=\"comment\">//只支持16进制表示法</span></span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarTitleText&quot;</span>: <span class=\"string\">&quot;唯创教学，宇宙最强&quot;</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;navigationBarTextStyle&quot;</span>: <span class=\"string\">&quot;black&quot;</span>, <span class=\"comment\">//只能设置为black 或 white</span></span><br><span class=\"line\">       <span class=\"string\">&quot;enablePullDownRefresh&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//开启下拉刷新，默认真机中不会自动合上</span></span><br><span class=\"line\">  \t\t\t<span class=\"string\">&quot;backgroundColor&quot;</span>: <span class=\"string\">&quot;#F6F6F6&quot;</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;backgroundTextStyle&quot;</span>: <span class=\"string\">&quot;light&quot;</span>,<span class=\"comment\">//下拉 loading 的样式，仅支持 dark 或 light</span></span><br><span class=\"line\">       <span class=\"string\">&quot;onReachBottomDistance&quot;</span>: <span class=\"number\">100</span>, <span class=\"comment\">//上拉触底。 默认距离为50px，一般用默认值就行了</span></span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 好的思路\n\n1. 股票分析小程序\n2. 股票模拟小程序\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\小程序设计大赛.md346015.3814921.png)\n\n## 刘振华经验\n\n- 3月份比赛：全国三等奖\n- 方言转换\n-\n\n## 禁忌\n\n- 不要做课表的东西\n- 二手市场\n","source":"_posts/前端/学习/小程序/小程序设计大赛.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: \n---\n\n## 好的思路\n\n1. 股票分析小程序\n2. 股票模拟小程序\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\小程序设计大赛.md346015.3814921.png)\n\n## 刘振华经验\n\n- 3月份比赛：全国三等奖\n- 方言转换\n-\n\n## 禁忌\n\n- 不要做课表的东西\n- 二手市场\n","slug":"前端/学习/小程序/小程序设计大赛","published":1,"updated":"2023-03-21T09:15:22.728Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co850062o8huezwmd5x1","content":"<h2 id=\"好的思路\"><a href=\"#好的思路\" class=\"headerlink\" title=\"好的思路\"></a>好的思路</h2><ol>\n<li>股票分析小程序</li>\n<li>股票模拟小程序</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\小程序设计大赛.md346015.3814921.png\"></p>\n<h2 id=\"刘振华经验\"><a href=\"#刘振华经验\" class=\"headerlink\" title=\"刘振华经验\"></a>刘振华经验</h2><ul>\n<li>3月份比赛：全国三等奖</li>\n<li>方言转换</li>\n<li></li>\n</ul>\n<h2 id=\"禁忌\"><a href=\"#禁忌\" class=\"headerlink\" title=\"禁忌\"></a>禁忌</h2><ul>\n<li>不要做课表的东西</li>\n<li>二手市场</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"好的思路\"><a href=\"#好的思路\" class=\"headerlink\" title=\"好的思路\"></a>好的思路</h2><ol>\n<li>股票分析小程序</li>\n<li>股票模拟小程序</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\小程序设计大赛.md346015.3814921.png\"></p>\n<h2 id=\"刘振华经验\"><a href=\"#刘振华经验\" class=\"headerlink\" title=\"刘振华经验\"></a>刘振华经验</h2><ul>\n<li>3月份比赛：全国三等奖</li>\n<li>方言转换</li>\n<li></li>\n</ul>\n<h2 id=\"禁忌\"><a href=\"#禁忌\" class=\"headerlink\" title=\"禁忌\"></a>禁忌</h2><ul>\n<li>不要做课表的东西</li>\n<li>二手市场</li>\n</ul>\n"},{"title":"参与开源","date":"2022-10-15T02:06:51.000Z","_content":"\nhttps://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82\n","source":"_posts/前端/学习/参与开源/相关文章.md","raw":"---\ntitle: '参与开源'\ndate: 2022-10-15 10:06:51\ntags: 开源\ncategories: 前端\n---\n\nhttps://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82\n","slug":"前端/学习/参与开源/相关文章","published":1,"updated":"2023-03-21T09:09:53.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co860065o8hu1zp8gz4b","content":"<p><a href=\"https://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82\">https://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82\">https://www.oomspot.com/post/ruheconglingkaishicanyuapachedingjikaiyuanxiangmu#:~:text=%E5%8F%82%E4%B8%8E%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%B9%B6%E4%B8%BA%E5%85%B6%E4%BD%9C%E5%87%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%BE%88%E5%A4%9A%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E3%80%81%E6%B5%8B%E8%AF%95,Case%20%E7%BC%96%E5%86%99%E3%80%81%E6%B5%81%E7%A8%8B%E5%B7%A5%E5%85%B7%E6%94%B9%E8%BF%9B%E3%80%81%E6%96%87%E6%A1%A3%E5%AE%8C%E5%96%84%E3%80%81%E5%8D%9A%E5%AE%A2%E6%92%B0%E5%86%99%E7%AD%89%E7%AD%89%EF%BC%8C%E4%BB%BB%E4%BD%95%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A1%E7%8C%AE%E9%83%BD%E6%98%AF%E6%9C%89%E4%BB%B7%E5%80%BC%E5%B9%B6%E4%B8%94%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E3%80%82</a></p>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 各个浏览器内核\n\n```markdown\n-moz代表firefox浏览器私有属性\n-ms代表IE浏览器私有属性\n-webkit代表chrome、safari私有属性 IE使用的是Trident内核，Firefox 使用的是Gecko内核。目前使用IE内核的浏览器还有搜狗，遨游，360等等。\n```\n\n## 性能提升\n\n```markdown\nhttps://segmentfault.com/a/1190000000490328#articleHeader4\n```\n\n## 选择器\n\n```markdown\n<style>\n.list{color:black}\n.list>li:nth-child(2n){color:red}\n.list>li:nth-child(3n+1){color:green}\n.list>li:nth-child(3n+2){color:blue}\n</style>\n```\n\n## h5\n\n```markdown\n新特性：1.语义化标签     2.增强型表单包括属性以及元素    3.新增视频<video>和音频<audio>标签    4.Canvas 图形    5.地理定位    6.拖放API    7.SVG绘图    8.Web Worker    9.Web Storage    10.Web Socket\n```\n\n\n计网\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nmysql\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\n操作系统\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\ngolang\n\n- 看三本书，各两遍\n- 做牛客题\n- 刷面经\n\njava\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nspring\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nspringboot\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nvue\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nreact\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nhtml+css\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\njavascript\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\n算法\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n- leetcode三百题\n- crul刷一遍\n","source":"_posts/前端/学习/面试题目/716html刷题.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: \n---\n\n## 各个浏览器内核\n\n```markdown\n-moz代表firefox浏览器私有属性\n-ms代表IE浏览器私有属性\n-webkit代表chrome、safari私有属性 IE使用的是Trident内核，Firefox 使用的是Gecko内核。目前使用IE内核的浏览器还有搜狗，遨游，360等等。\n```\n\n## 性能提升\n\n```markdown\nhttps://segmentfault.com/a/1190000000490328#articleHeader4\n```\n\n## 选择器\n\n```markdown\n<style>\n.list{color:black}\n.list>li:nth-child(2n){color:red}\n.list>li:nth-child(3n+1){color:green}\n.list>li:nth-child(3n+2){color:blue}\n</style>\n```\n\n## h5\n\n```markdown\n新特性：1.语义化标签     2.增强型表单包括属性以及元素    3.新增视频<video>和音频<audio>标签    4.Canvas 图形    5.地理定位    6.拖放API    7.SVG绘图    8.Web Worker    9.Web Storage    10.Web Socket\n```\n\n\n计网\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nmysql\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\n操作系统\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\ngolang\n\n- 看三本书，各两遍\n- 做牛客题\n- 刷面经\n\njava\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nspring\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nspringboot\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nvue\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nreact\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\nhtml+css\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\njavascript\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n\n算法\n\n- 看两本书，各两遍\n- 做牛客题\n- 刷面经\n- leetcode三百题\n- crul刷一遍\n","slug":"前端/学习/面试题目/716html刷题","published":1,"updated":"2023-03-21T10:14:15.986Z","_id":"clfi3co870068o8hu0s1p2izl","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"各个浏览器内核\"><a href=\"#各个浏览器内核\" class=\"headerlink\" title=\"各个浏览器内核\"></a>各个浏览器内核</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-moz代表firefox浏览器私有属性</span><br><span class=\"line\">-ms代表IE浏览器私有属性</span><br><span class=\"line\">-webkit代表chrome、safari私有属性 IE使用的是Trident内核，Firefox 使用的是Gecko内核。目前使用IE内核的浏览器还有搜狗，遨游，360等等。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"性能提升\"><a href=\"#性能提升\" class=\"headerlink\" title=\"性能提升\"></a>性能提升</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://segmentfault.com/a/1190000000490328#articleHeader4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\">.list&#123;color:black&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(2n)&#123;color:red&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(3n+1)&#123;color:green&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(3n+2)&#123;color:blue&#125;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"h5\"><a href=\"#h5\" class=\"headerlink\" title=\"h5\"></a>h5</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新特性：1.语义化标签     2.增强型表单包括属性以及元素    3.新增视频<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">video</span>&gt;</span></span>和音频<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">audio</span>&gt;</span></span>标签    4.Canvas 图形    5.地理定位    6.拖放API    7.SVG绘图    8.Web Worker    9.Web Storage    10.Web Socket</span><br></pre></td></tr></table></figure>\n\n\n<p>计网</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>mysql</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>操作系统</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>golang</p>\n<ul>\n<li>看三本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>java</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>spring</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>springboot</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>vue</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>react</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>html+css</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>javascript</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>算法</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n<li>leetcode三百题</li>\n<li>crul刷一遍</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"各个浏览器内核\"><a href=\"#各个浏览器内核\" class=\"headerlink\" title=\"各个浏览器内核\"></a>各个浏览器内核</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-moz代表firefox浏览器私有属性</span><br><span class=\"line\">-ms代表IE浏览器私有属性</span><br><span class=\"line\">-webkit代表chrome、safari私有属性 IE使用的是Trident内核，Firefox 使用的是Gecko内核。目前使用IE内核的浏览器还有搜狗，遨游，360等等。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"性能提升\"><a href=\"#性能提升\" class=\"headerlink\" title=\"性能提升\"></a>性能提升</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://segmentfault.com/a/1190000000490328#articleHeader4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\">.list&#123;color:black&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(2n)&#123;color:red&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(3n+1)&#123;color:green&#125;</span><br><span class=\"line\">.list&gt;li:nth-child(3n+2)&#123;color:blue&#125;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"h5\"><a href=\"#h5\" class=\"headerlink\" title=\"h5\"></a>h5</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新特性：1.语义化标签     2.增强型表单包括属性以及元素    3.新增视频<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">video</span>&gt;</span></span>和音频<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">audio</span>&gt;</span></span>标签    4.Canvas 图形    5.地理定位    6.拖放API    7.SVG绘图    8.Web Worker    9.Web Storage    10.Web Socket</span><br></pre></td></tr></table></figure>\n\n\n<p>计网</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>mysql</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>操作系统</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>golang</p>\n<ul>\n<li>看三本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>java</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>spring</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>springboot</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>vue</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>react</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>html+css</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>javascript</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n</ul>\n<p>算法</p>\n<ul>\n<li>看两本书，各两遍</li>\n<li>做牛客题</li>\n<li>刷面经</li>\n<li>leetcode三百题</li>\n<li>crul刷一遍</li>\n</ul>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n---\ntitle: qiankun\ndate: 2023-03-15 10:06:51\ntags: 微前端\ncategories: 前端\n---\n\n\n**掘金**\n\nhttps://juejin.cn/post/7040651481820708894\n\n\n* [Micro Frontends](https://link.juejin.cn/?target=https%3A%2F%2Fmicro-frontends.org%2F \"https://micro-frontends.org/\")\n* [Micro Frontends from martinfowler.com](https://link.juejin.cn/?target=https%3A%2F%2Fmartinfowler.com%2Farticles%2Fmicro-frontends.html \"https://martinfowler.com/articles/micro-frontends.html\")\n* [可能是你见过最完善的微前端解决方案](https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F78362028 \"https://zhuanlan.zhihu.com/p/78362028\")\n* [微前端的核心价值](https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F95085796 \"https://zhuanlan.zhihu.com/p/95085796\")\n* [qiankun介绍](https://link.juejin.cn/?target=https%3A%2F%2Fqiankun.umijs.org%2Fzh%2Fguide \"https://qiankun.umijs.org/zh/guide\")\n* [Why Not Iframe · 语雀](https://link.juejin.cn/?target=https%3A%2F%2Fwww.yuque.com%2Fkuitos%2Fgky7yw%2Fgesexv \"https://www.yuque.com/kuitos/gky7yw/gesexv\")\n* [Web Components](https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FWeb_Components \"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\")\n* [GrowingIO 平台集成应用前端开发指南](https://link.juejin.cn/?target=https%3A%2F%2Fgrowingio.feishu.cn%2Fdocs%2FdoccnftnRubxpwtGDvdQGoEktOb%23 \"https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb#\")\n\n---\n\nhttps://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c\n\n**官网**\n\nhttps://qiankun.umijs.org/zh/api\n\n**b站**\n\nhttps://www.bilibili.com/video/BV16T4y1e7TC/?p=5&spm_id_from=pageDriver&vd_source=bc2e11506185384770c197fe814f3e1f\n\n**csdn实践**\n\nhttps://blog.csdn.net/szqandpk/article/details/124406034\n\n**手写**\n\nhttps://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click\n\n**其他**\n\nhttps://search.bilibili.com/all?vt=58264782&keyword=qiankun&from_source=webtop_search&spm_id_from=333.1007&search_source=5\n\n**微前端产品**\n","source":"_posts/前端/学习/微服务/qiankun.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: \n---\n\n---\ntitle: qiankun\ndate: 2023-03-15 10:06:51\ntags: 微前端\ncategories: 前端\n---\n\n\n**掘金**\n\nhttps://juejin.cn/post/7040651481820708894\n\n\n* [Micro Frontends](https://link.juejin.cn/?target=https%3A%2F%2Fmicro-frontends.org%2F \"https://micro-frontends.org/\")\n* [Micro Frontends from martinfowler.com](https://link.juejin.cn/?target=https%3A%2F%2Fmartinfowler.com%2Farticles%2Fmicro-frontends.html \"https://martinfowler.com/articles/micro-frontends.html\")\n* [可能是你见过最完善的微前端解决方案](https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F78362028 \"https://zhuanlan.zhihu.com/p/78362028\")\n* [微前端的核心价值](https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F95085796 \"https://zhuanlan.zhihu.com/p/95085796\")\n* [qiankun介绍](https://link.juejin.cn/?target=https%3A%2F%2Fqiankun.umijs.org%2Fzh%2Fguide \"https://qiankun.umijs.org/zh/guide\")\n* [Why Not Iframe · 语雀](https://link.juejin.cn/?target=https%3A%2F%2Fwww.yuque.com%2Fkuitos%2Fgky7yw%2Fgesexv \"https://www.yuque.com/kuitos/gky7yw/gesexv\")\n* [Web Components](https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FWeb_Components \"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\")\n* [GrowingIO 平台集成应用前端开发指南](https://link.juejin.cn/?target=https%3A%2F%2Fgrowingio.feishu.cn%2Fdocs%2FdoccnftnRubxpwtGDvdQGoEktOb%23 \"https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb#\")\n\n---\n\nhttps://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c\n\n**官网**\n\nhttps://qiankun.umijs.org/zh/api\n\n**b站**\n\nhttps://www.bilibili.com/video/BV16T4y1e7TC/?p=5&spm_id_from=pageDriver&vd_source=bc2e11506185384770c197fe814f3e1f\n\n**csdn实践**\n\nhttps://blog.csdn.net/szqandpk/article/details/124406034\n\n**手写**\n\nhttps://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click\n\n**其他**\n\nhttps://search.bilibili.com/all?vt=58264782&keyword=qiankun&from_source=webtop_search&spm_id_from=333.1007&search_source=5\n\n**微前端产品**\n","slug":"前端/学习/微服务/qiankun","published":1,"updated":"2023-03-21T09:15:22.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co88006co8hu0lekeo6b","content":"<hr>\n<p>title: qiankun<br>date: 2023-03-15 10:06:51<br>tags: 微前端<br>categories: 前端</p>\n<hr>\n<p><strong>掘金</strong></p>\n<p><a href=\"https://juejin.cn/post/7040651481820708894\">https://juejin.cn/post/7040651481820708894</a></p>\n<ul>\n<li><a href=\"https://link.juejin.cn/?target=https://micro-frontends.org/\" title=\"https://micro-frontends.org/\">Micro Frontends</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://martinfowler.com/articles/micro-frontends.html\" title=\"https://martinfowler.com/articles/micro-frontends.html\">Micro Frontends from martinfowler.com</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://zhuanlan.zhihu.com/p/78362028\" title=\"https://zhuanlan.zhihu.com/p/78362028\">可能是你见过最完善的微前端解决方案</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://zhuanlan.zhihu.com/p/95085796\" title=\"https://zhuanlan.zhihu.com/p/95085796\">微前端的核心价值</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://qiankun.umijs.org/zh/guide\" title=\"https://qiankun.umijs.org/zh/guide\">qiankun介绍</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://www.yuque.com/kuitos/gky7yw/gesexv\" title=\"https://www.yuque.com/kuitos/gky7yw/gesexv\">Why Not Iframe · 语雀</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\" title=\"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\">Web Components</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb%23\" title=\"https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb#\">GrowingIO 平台集成应用前端开发指南</a></li>\n</ul>\n<hr>\n<p><a href=\"https://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c\">https://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c</a></p>\n<p><strong>官网</strong></p>\n<p><a href=\"https://qiankun.umijs.org/zh/api\">https://qiankun.umijs.org/zh/api</a></p>\n<p><strong>b站</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV16T4y1e7TC/?p=5&amp;spm_id_from=pageDriver&amp;vd_source=bc2e11506185384770c197fe814f3e1f\">https://www.bilibili.com/video/BV16T4y1e7TC/?p=5&amp;spm_id_from=pageDriver&amp;vd_source=bc2e11506185384770c197fe814f3e1f</a></p>\n<p><strong>csdn实践</strong></p>\n<p><a href=\"https://blog.csdn.net/szqandpk/article/details/124406034\">https://blog.csdn.net/szqandpk/article/details/124406034</a></p>\n<p><strong>手写</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click\">https://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click</a></p>\n<p><strong>其他</strong></p>\n<p><a href=\"https://search.bilibili.com/all?vt=58264782&amp;keyword=qiankun&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5\">https://search.bilibili.com/all?vt=58264782&amp;keyword=qiankun&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5</a></p>\n<p><strong>微前端产品</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: qiankun<br>date: 2023-03-15 10:06:51<br>tags: 微前端<br>categories: 前端</p>\n<hr>\n<p><strong>掘金</strong></p>\n<p><a href=\"https://juejin.cn/post/7040651481820708894\">https://juejin.cn/post/7040651481820708894</a></p>\n<ul>\n<li><a href=\"https://link.juejin.cn/?target=https://micro-frontends.org/\" title=\"https://micro-frontends.org/\">Micro Frontends</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://martinfowler.com/articles/micro-frontends.html\" title=\"https://martinfowler.com/articles/micro-frontends.html\">Micro Frontends from martinfowler.com</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://zhuanlan.zhihu.com/p/78362028\" title=\"https://zhuanlan.zhihu.com/p/78362028\">可能是你见过最完善的微前端解决方案</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://zhuanlan.zhihu.com/p/95085796\" title=\"https://zhuanlan.zhihu.com/p/95085796\">微前端的核心价值</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://qiankun.umijs.org/zh/guide\" title=\"https://qiankun.umijs.org/zh/guide\">qiankun介绍</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://www.yuque.com/kuitos/gky7yw/gesexv\" title=\"https://www.yuque.com/kuitos/gky7yw/gesexv\">Why Not Iframe · 语雀</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\" title=\"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components\">Web Components</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb%23\" title=\"https://growingio.feishu.cn/docs/doccnftnRubxpwtGDvdQGoEktOb#\">GrowingIO 平台集成应用前端开发指南</a></li>\n</ul>\n<hr>\n<p><a href=\"https://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c\">https://xie.infoq.cn/article/aacc4d06a481f8888adf93d7c</a></p>\n<p><strong>官网</strong></p>\n<p><a href=\"https://qiankun.umijs.org/zh/api\">https://qiankun.umijs.org/zh/api</a></p>\n<p><strong>b站</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV16T4y1e7TC/?p=5&amp;spm_id_from=pageDriver&amp;vd_source=bc2e11506185384770c197fe814f3e1f\">https://www.bilibili.com/video/BV16T4y1e7TC/?p=5&amp;spm_id_from=pageDriver&amp;vd_source=bc2e11506185384770c197fe814f3e1f</a></p>\n<p><strong>csdn实践</strong></p>\n<p><a href=\"https://blog.csdn.net/szqandpk/article/details/124406034\">https://blog.csdn.net/szqandpk/article/details/124406034</a></p>\n<p><strong>手写</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click\">https://www.bilibili.com/video/BV1H34y117fe/?spm_id_from=333.337.search-card.all.click</a></p>\n<p><strong>其他</strong></p>\n<p><a href=\"https://search.bilibili.com/all?vt=58264782&amp;keyword=qiankun&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5\">https://search.bilibili.com/all?vt=58264782&amp;keyword=qiankun&amp;from_source=webtop_search&amp;spm_id_from=333.1007&amp;search_source=5</a></p>\n<p><strong>微前端产品</strong></p>\n"},{"title":"peerDependences是干什么的？","date":"2022-10-15T02:06:51.000Z","_content":"\n[博客园](https://www.cnblogs.com/fitzlovecode/p/peerDependencies.html)\n\n[知乎](https://zhuanlan.zhihu.com/p/460614360)\n\n1. 首先声明它存在的目的是为了减少项目中的依赖\n2. 比如项目依赖了a和b的1.0版本，同时a又依赖b的1.0版本，那么如果我们直接npmi的话他会把b的1.0版本安装两遍\n3. 那这时候peerdependences就站出来了，他本质是并行依赖的含义，比如我们开发一个插件a，然后这个插件依赖于b的1.0之后的版本，那我们就可以在a的package.json中写b:>=1.0\n4. 然后我们编写项目中已经有b了，他是1.5版本的，那就直接用\n5. 因为peerdependences记录了这种同伴关系我们就可以利用同伴给他归类，最总减少代码量\n","source":"_posts/前端/进阶/前端工程化/peerDependences.md","raw":"---\ntitle: 'peerDependences是干什么的？'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n[博客园](https://www.cnblogs.com/fitzlovecode/p/peerDependencies.html)\n\n[知乎](https://zhuanlan.zhihu.com/p/460614360)\n\n1. 首先声明它存在的目的是为了减少项目中的依赖\n2. 比如项目依赖了a和b的1.0版本，同时a又依赖b的1.0版本，那么如果我们直接npmi的话他会把b的1.0版本安装两遍\n3. 那这时候peerdependences就站出来了，他本质是并行依赖的含义，比如我们开发一个插件a，然后这个插件依赖于b的1.0之后的版本，那我们就可以在a的package.json中写b:>=1.0\n4. 然后我们编写项目中已经有b了，他是1.5版本的，那就直接用\n5. 因为peerdependences记录了这种同伴关系我们就可以利用同伴给他归类，最总减少代码量\n","slug":"前端/进阶/前端工程化/peerDependences","published":1,"updated":"2023-03-21T09:36:56.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co88006fo8hugvpdee9n","content":"<p><a href=\"https://www.cnblogs.com/fitzlovecode/p/peerDependencies.html\">博客园</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/460614360\">知乎</a></p>\n<ol>\n<li>首先声明它存在的目的是为了减少项目中的依赖</li>\n<li>比如项目依赖了a和b的1.0版本，同时a又依赖b的1.0版本，那么如果我们直接npmi的话他会把b的1.0版本安装两遍</li>\n<li>那这时候peerdependences就站出来了，他本质是并行依赖的含义，比如我们开发一个插件a，然后这个插件依赖于b的1.0之后的版本，那我们就可以在a的package.json中写b:&gt;=1.0</li>\n<li>然后我们编写项目中已经有b了，他是1.5版本的，那就直接用</li>\n<li>因为peerdependences记录了这种同伴关系我们就可以利用同伴给他归类，最总减少代码量</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.cnblogs.com/fitzlovecode/p/peerDependencies.html\">博客园</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/460614360\">知乎</a></p>\n<ol>\n<li>首先声明它存在的目的是为了减少项目中的依赖</li>\n<li>比如项目依赖了a和b的1.0版本，同时a又依赖b的1.0版本，那么如果我们直接npmi的话他会把b的1.0版本安装两遍</li>\n<li>那这时候peerdependences就站出来了，他本质是并行依赖的含义，比如我们开发一个插件a，然后这个插件依赖于b的1.0之后的版本，那我们就可以在a的package.json中写b:&gt;=1.0</li>\n<li>然后我们编写项目中已经有b了，他是1.5版本的，那就直接用</li>\n<li>因为peerdependences记录了这种同伴关系我们就可以利用同伴给他归类，最总减少代码量</li>\n</ol>\n"},{"title":"vue2 和 vue3 的区别","date":"2022-10-15T02:06:51.000Z","_content":"\n## 没有全局事件总线EventBus\n\n> 所以我用了mitt\n\n## mitt的坑，误踩！\n\n> 不能直接this.$bus.$emit(\"xxx\",a,b)\n>\n> 只能传递一个对象this.\\$bus.emit(\"xxx\",{a:a,b:b})\n\n## vite里图片不能用webpack里的require\n\n> 所以用new url拼接图片\n\n## 跨域差不多\n\n# 在原型上定义方法区别\n\n> 改成app.config.globalProperties\n\n## 变量.sync改为v-model:变量\n\n## 没有了@xxx.native这个属性\n\n## 没有element，我引入了plus\n\n## vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)\n\n## ::deep要改成:deep（）\n\n## 介绍\n\n1. 用过低代码的都知道，很多低代码只能生成布局非常受限的网页，并且布局容器也只能分成有限份数\n2. LowCode-Any-Layout，快速帮你构建出任意布局，自适应的网页\n\n```\n![An image](./image.png)\n```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/vue2和vue3区别.md292771.0675869.png)\n\n## 事件总线：mitt\n\n## 路由管理：router\n\n## 视频组件：videojs\n\n## 插件配置：vue.use\n\n## UI：Element-Plus\n\n## 请求模块:axios\n\n## 数据解析：koa-bodyparser\n\n## 静态托管：koa-static\n\n## \n\nAnyLayout\n\nAny-layout\n\nany-layout\n\nAny-Layout\n\nAnY-lAyOuT\n\n## 掘金首页的内容\n\n## 必应图片\n\n<br/>https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png\n\n## logo链接\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg\n\n## 掘金图片\n\n<br/>https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg\n\n## CSDN图片\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png\n\n## 工具图标\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg\n\n## 背景颜色\n\nrgb(30,128,255)\n\n## 文字颜色\n\nrgb(134,144,156)\n\n## 白色按钮\n\nrgb(232,243,255)\n\n## 下面背景\n\nrgb(244,245,245)\n","source":"_posts/学校/准大三暑假/青训营/vue2和vue3区别.md","raw":"---\ntitle: 'vue2 和 vue3 的区别'\ndate: 2022-10-15 10:06:51\ntags: \n    - vue\n    - 基础\ncategories: 前端\n---\n\n## 没有全局事件总线EventBus\n\n> 所以我用了mitt\n\n## mitt的坑，误踩！\n\n> 不能直接this.$bus.$emit(\"xxx\",a,b)\n>\n> 只能传递一个对象this.\\$bus.emit(\"xxx\",{a:a,b:b})\n\n## vite里图片不能用webpack里的require\n\n> 所以用new url拼接图片\n\n## 跨域差不多\n\n# 在原型上定义方法区别\n\n> 改成app.config.globalProperties\n\n## 变量.sync改为v-model:变量\n\n## 没有了@xxx.native这个属性\n\n## 没有element，我引入了plus\n\n## vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)\n\n## ::deep要改成:deep（）\n\n## 介绍\n\n1. 用过低代码的都知道，很多低代码只能生成布局非常受限的网页，并且布局容器也只能分成有限份数\n2. LowCode-Any-Layout，快速帮你构建出任意布局，自适应的网页\n\n```\n![An image](./image.png)\n```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/vue2和vue3区别.md292771.0675869.png)\n\n## 事件总线：mitt\n\n## 路由管理：router\n\n## 视频组件：videojs\n\n## 插件配置：vue.use\n\n## UI：Element-Plus\n\n## 请求模块:axios\n\n## 数据解析：koa-bodyparser\n\n## 静态托管：koa-static\n\n## \n\nAnyLayout\n\nAny-layout\n\nany-layout\n\nAny-Layout\n\nAnY-lAyOuT\n\n## 掘金首页的内容\n\n## 必应图片\n\n<br/>https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png\n\n## logo链接\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg\n\n## 掘金图片\n\n<br/>https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg\n\n## CSDN图片\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png\n\n## 工具图标\n\nhttps://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg\n\n## 背景颜色\n\nrgb(30,128,255)\n\n## 文字颜色\n\nrgb(134,144,156)\n\n## 白色按钮\n\nrgb(232,243,255)\n\n## 下面背景\n\nrgb(244,245,245)\n","slug":"学校/准大三暑假/青训营/vue2和vue3区别","published":1,"updated":"2023-03-21T09:46:57.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co89006io8hu0nc1an7x","content":"<h2 id=\"没有全局事件总线EventBus\"><a href=\"#没有全局事件总线EventBus\" class=\"headerlink\" title=\"没有全局事件总线EventBus\"></a>没有全局事件总线EventBus</h2><blockquote>\n<p>所以我用了mitt</p>\n</blockquote>\n<h2 id=\"mitt的坑，误踩！\"><a href=\"#mitt的坑，误踩！\" class=\"headerlink\" title=\"mitt的坑，误踩！\"></a>mitt的坑，误踩！</h2><blockquote>\n<p>不能直接this.$bus.$emit(“xxx”,a,b)</p>\n<p>只能传递一个对象this.$bus.emit(“xxx”,{a:a,b:b})</p>\n</blockquote>\n<h2 id=\"vite里图片不能用webpack里的require\"><a href=\"#vite里图片不能用webpack里的require\" class=\"headerlink\" title=\"vite里图片不能用webpack里的require\"></a>vite里图片不能用webpack里的require</h2><blockquote>\n<p>所以用new url拼接图片</p>\n</blockquote>\n<h2 id=\"跨域差不多\"><a href=\"#跨域差不多\" class=\"headerlink\" title=\"跨域差不多\"></a>跨域差不多</h2><h1 id=\"在原型上定义方法区别\"><a href=\"#在原型上定义方法区别\" class=\"headerlink\" title=\"在原型上定义方法区别\"></a>在原型上定义方法区别</h1><blockquote>\n<p>改成app.config.globalProperties</p>\n</blockquote>\n<h2 id=\"变量-sync改为v-model-变量\"><a href=\"#变量-sync改为v-model-变量\" class=\"headerlink\" title=\"变量.sync改为v-model:变量\"></a>变量.sync改为v-model:变量</h2><h2 id=\"没有了-xxx-native这个属性\"><a href=\"#没有了-xxx-native这个属性\" class=\"headerlink\" title=\"没有了@xxx.native这个属性\"></a>没有了@xxx.native这个属性</h2><h2 id=\"没有element，我引入了plus\"><a href=\"#没有element，我引入了plus\" class=\"headerlink\" title=\"没有element，我引入了plus\"></a>没有element，我引入了plus</h2><h2 id=\"vite没有webpack的-，需要自己设置别名-已经设置好了，实在不行只能点点杠大法\"><a href=\"#vite没有webpack的-，需要自己设置别名-已经设置好了，实在不行只能点点杠大法\" class=\"headerlink\" title=\"vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)\"></a>vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)</h2><h2 id=\"deep要改成-deep（）\"><a href=\"#deep要改成-deep（）\" class=\"headerlink\" title=\"::deep要改成:deep（）\"></a>::deep要改成:deep（）</h2><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ol>\n<li>用过低代码的都知道，很多低代码只能生成布局非常受限的网页，并且布局容器也只能分成有限份数</li>\n<li>LowCode-Any-Layout，快速帮你构建出任意布局，自适应的网页</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![An image](./image.png)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/vue2和vue3区别.md292771.0675869.png\"></p>\n<h2 id=\"事件总线：mitt\"><a href=\"#事件总线：mitt\" class=\"headerlink\" title=\"事件总线：mitt\"></a>事件总线：mitt</h2><h2 id=\"路由管理：router\"><a href=\"#路由管理：router\" class=\"headerlink\" title=\"路由管理：router\"></a>路由管理：router</h2><h2 id=\"视频组件：videojs\"><a href=\"#视频组件：videojs\" class=\"headerlink\" title=\"视频组件：videojs\"></a>视频组件：videojs</h2><h2 id=\"插件配置：vue-use\"><a href=\"#插件配置：vue-use\" class=\"headerlink\" title=\"插件配置：vue.use\"></a>插件配置：vue.use</h2><h2 id=\"UI：Element-Plus\"><a href=\"#UI：Element-Plus\" class=\"headerlink\" title=\"UI：Element-Plus\"></a>UI：Element-Plus</h2><h2 id=\"请求模块-axios\"><a href=\"#请求模块-axios\" class=\"headerlink\" title=\"请求模块:axios\"></a>请求模块:axios</h2><h2 id=\"数据解析：koa-bodyparser\"><a href=\"#数据解析：koa-bodyparser\" class=\"headerlink\" title=\"数据解析：koa-bodyparser\"></a>数据解析：koa-bodyparser</h2><h2 id=\"静态托管：koa-static\"><a href=\"#静态托管：koa-static\" class=\"headerlink\" title=\"静态托管：koa-static\"></a>静态托管：koa-static</h2><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>AnyLayout</p>\n<p>Any-layout</p>\n<p>any-layout</p>\n<p>Any-Layout</p>\n<p>AnY-lAyOuT</p>\n<h2 id=\"掘金首页的内容\"><a href=\"#掘金首页的内容\" class=\"headerlink\" title=\"掘金首页的内容\"></a>掘金首页的内容</h2><h2 id=\"必应图片\"><a href=\"#必应图片\" class=\"headerlink\" title=\"必应图片\"></a>必应图片</h2><p><br/><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png</a></p>\n<h2 id=\"logo链接\"><a href=\"#logo链接\" class=\"headerlink\" title=\"logo链接\"></a>logo链接</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg</a></p>\n<h2 id=\"掘金图片\"><a href=\"#掘金图片\" class=\"headerlink\" title=\"掘金图片\"></a>掘金图片</h2><p><br/><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg</a></p>\n<h2 id=\"CSDN图片\"><a href=\"#CSDN图片\" class=\"headerlink\" title=\"CSDN图片\"></a>CSDN图片</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png</a></p>\n<h2 id=\"工具图标\"><a href=\"#工具图标\" class=\"headerlink\" title=\"工具图标\"></a>工具图标</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg</a></p>\n<h2 id=\"背景颜色\"><a href=\"#背景颜色\" class=\"headerlink\" title=\"背景颜色\"></a>背景颜色</h2><p>rgb(30,128,255)</p>\n<h2 id=\"文字颜色\"><a href=\"#文字颜色\" class=\"headerlink\" title=\"文字颜色\"></a>文字颜色</h2><p>rgb(134,144,156)</p>\n<h2 id=\"白色按钮\"><a href=\"#白色按钮\" class=\"headerlink\" title=\"白色按钮\"></a>白色按钮</h2><p>rgb(232,243,255)</p>\n<h2 id=\"下面背景\"><a href=\"#下面背景\" class=\"headerlink\" title=\"下面背景\"></a>下面背景</h2><p>rgb(244,245,245)</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"没有全局事件总线EventBus\"><a href=\"#没有全局事件总线EventBus\" class=\"headerlink\" title=\"没有全局事件总线EventBus\"></a>没有全局事件总线EventBus</h2><blockquote>\n<p>所以我用了mitt</p>\n</blockquote>\n<h2 id=\"mitt的坑，误踩！\"><a href=\"#mitt的坑，误踩！\" class=\"headerlink\" title=\"mitt的坑，误踩！\"></a>mitt的坑，误踩！</h2><blockquote>\n<p>不能直接this.$bus.$emit(“xxx”,a,b)</p>\n<p>只能传递一个对象this.$bus.emit(“xxx”,{a:a,b:b})</p>\n</blockquote>\n<h2 id=\"vite里图片不能用webpack里的require\"><a href=\"#vite里图片不能用webpack里的require\" class=\"headerlink\" title=\"vite里图片不能用webpack里的require\"></a>vite里图片不能用webpack里的require</h2><blockquote>\n<p>所以用new url拼接图片</p>\n</blockquote>\n<h2 id=\"跨域差不多\"><a href=\"#跨域差不多\" class=\"headerlink\" title=\"跨域差不多\"></a>跨域差不多</h2><h1 id=\"在原型上定义方法区别\"><a href=\"#在原型上定义方法区别\" class=\"headerlink\" title=\"在原型上定义方法区别\"></a>在原型上定义方法区别</h1><blockquote>\n<p>改成app.config.globalProperties</p>\n</blockquote>\n<h2 id=\"变量-sync改为v-model-变量\"><a href=\"#变量-sync改为v-model-变量\" class=\"headerlink\" title=\"变量.sync改为v-model:变量\"></a>变量.sync改为v-model:变量</h2><h2 id=\"没有了-xxx-native这个属性\"><a href=\"#没有了-xxx-native这个属性\" class=\"headerlink\" title=\"没有了@xxx.native这个属性\"></a>没有了@xxx.native这个属性</h2><h2 id=\"没有element，我引入了plus\"><a href=\"#没有element，我引入了plus\" class=\"headerlink\" title=\"没有element，我引入了plus\"></a>没有element，我引入了plus</h2><h2 id=\"vite没有webpack的-，需要自己设置别名-已经设置好了，实在不行只能点点杠大法\"><a href=\"#vite没有webpack的-，需要自己设置别名-已经设置好了，实在不行只能点点杠大法\" class=\"headerlink\" title=\"vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)\"></a>vite没有webpack的@，需要自己设置别名(已经设置好了，实在不行只能点点杠大法../../../../)</h2><h2 id=\"deep要改成-deep（）\"><a href=\"#deep要改成-deep（）\" class=\"headerlink\" title=\"::deep要改成:deep（）\"></a>::deep要改成:deep（）</h2><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><ol>\n<li>用过低代码的都知道，很多低代码只能生成布局非常受限的网页，并且布局容器也只能分成有限份数</li>\n<li>LowCode-Any-Layout，快速帮你构建出任意布局，自适应的网页</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![An image](./image.png)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/vue2和vue3区别.md292771.0675869.png\"></p>\n<h2 id=\"事件总线：mitt\"><a href=\"#事件总线：mitt\" class=\"headerlink\" title=\"事件总线：mitt\"></a>事件总线：mitt</h2><h2 id=\"路由管理：router\"><a href=\"#路由管理：router\" class=\"headerlink\" title=\"路由管理：router\"></a>路由管理：router</h2><h2 id=\"视频组件：videojs\"><a href=\"#视频组件：videojs\" class=\"headerlink\" title=\"视频组件：videojs\"></a>视频组件：videojs</h2><h2 id=\"插件配置：vue-use\"><a href=\"#插件配置：vue-use\" class=\"headerlink\" title=\"插件配置：vue.use\"></a>插件配置：vue.use</h2><h2 id=\"UI：Element-Plus\"><a href=\"#UI：Element-Plus\" class=\"headerlink\" title=\"UI：Element-Plus\"></a>UI：Element-Plus</h2><h2 id=\"请求模块-axios\"><a href=\"#请求模块-axios\" class=\"headerlink\" title=\"请求模块:axios\"></a>请求模块:axios</h2><h2 id=\"数据解析：koa-bodyparser\"><a href=\"#数据解析：koa-bodyparser\" class=\"headerlink\" title=\"数据解析：koa-bodyparser\"></a>数据解析：koa-bodyparser</h2><h2 id=\"静态托管：koa-static\"><a href=\"#静态托管：koa-static\" class=\"headerlink\" title=\"静态托管：koa-static\"></a>静态托管：koa-static</h2><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>AnyLayout</p>\n<p>Any-layout</p>\n<p>any-layout</p>\n<p>Any-Layout</p>\n<p>AnY-lAyOuT</p>\n<h2 id=\"掘金首页的内容\"><a href=\"#掘金首页的内容\" class=\"headerlink\" title=\"掘金首页的内容\"></a>掘金首页的内容</h2><h2 id=\"必应图片\"><a href=\"#必应图片\" class=\"headerlink\" title=\"必应图片\"></a>必应图片</h2><p><br/><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/bing.efab636f.png</a></p>\n<h2 id=\"logo链接\"><a href=\"#logo链接\" class=\"headerlink\" title=\"logo链接\"></a>logo链接</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/brand.82c24770.svg</a></p>\n<h2 id=\"掘金图片\"><a href=\"#掘金图片\" class=\"headerlink\" title=\"掘金图片\"></a>掘金图片</h2><p><br/><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/gold.981a5510.svg</a></p>\n<h2 id=\"CSDN图片\"><a href=\"#CSDN图片\" class=\"headerlink\" title=\"CSDN图片\"></a>CSDN图片</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/csdn.9c2b2075.png</a></p>\n<h2 id=\"工具图标\"><a href=\"#工具图标\" class=\"headerlink\" title=\"工具图标\"></a>工具图标</h2><p><a href=\"https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg\">https://lf-cdn-tos.bytescm.com/obj/static/xitu_extension/static/icon-ip-lookup-normal.25ef5c44.svg</a></p>\n<h2 id=\"背景颜色\"><a href=\"#背景颜色\" class=\"headerlink\" title=\"背景颜色\"></a>背景颜色</h2><p>rgb(30,128,255)</p>\n<h2 id=\"文字颜色\"><a href=\"#文字颜色\" class=\"headerlink\" title=\"文字颜色\"></a>文字颜色</h2><p>rgb(134,144,156)</p>\n<h2 id=\"白色按钮\"><a href=\"#白色按钮\" class=\"headerlink\" title=\"白色按钮\"></a>白色按钮</h2><p>rgb(232,243,255)</p>\n<h2 id=\"下面背景\"><a href=\"#下面背景\" class=\"headerlink\" title=\"下面背景\"></a>下面背景</h2><p>rgb(244,245,245)</p>\n"},{"title":"理解css","date":"2022-10-15T02:06:51.000Z","_content":"\n[ppt地址](https://bytedance.feishu.cn/file/boxcnnXEvzh3hhRKNQGLoU1mjoh)\n\n## css是什么？\n\n> 级联样式表\n\n## css的结构\n\n- 选择器：选择器用来选中页面中要调整样式的元素，可以是标签，类，id，属性等\n- 属性：用来指定要增加的样式属性\n- 属性值：用来给属性值进行相应设置\n\n## css引入方式\n\n- 外部链接`<link ref=\"stylesheet\" href=\"/aaa/bbb\"></link>`\n- 内联`<style></style>`\n- 内部`<p style=\"aa=bb;\"></p>`\n\n## css工作方式\n\n1. 加载html\n2. 解析html\n3. 加载css同时创建dom树\n4. 解析css，将样式添加到dom树\n5. 展示页面\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md218647.173366.png)\n\n## css选择器种类\n\n- id选择器\n- 类选择器\n- 后代选择器\n- 属性选择器\n\n## 组合\n\n- 直接组合 ab\n- 后代组合a b\n- 父子组合a>b\n- 兄弟组合a~b\n- 相邻选择器a+b\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219079.011119.png)\n\n## 选择器特异度关联到选择器权重\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219402.1933185.png)\n\n## 继承\n\n继承的含义就是一些元素会自动继承父元素的属性值，除非显示指定一个值\n\n- 显示继承：通过给全局样式*添加样式，给html添加样式等，让其后代所有元素都附上该属性\n\n## 初始值\n\n- 每个css都有初始值，可以是none，可以是transparent\n- 可以用initial显示指定为初始值\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219886.4612302.png)\n\n## css求值过程\n\n1. 在解析好dom树和样式规则的前提下\n2. 第一步：筛选，进行样式规则筛选，选择器匹配，属性有效，符合当前media\n3. 第二步：多对一，首先一个属性值可能有多个声明值，根据选择器权重，权重高的在前，如果权重相似，那么后加载的css为最后的到的值\n4. 第三步：处理空值，如果没有设置相应属性的选择器的值，那么就赋值为继承值或初始值，最后保证得到的属性值一定不为空\n5. 第四步：规则化，将em，和百分数，小数转换为px整数值，最后得到实际应用值\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220217.8306201.png)\n\n![](https://assets.codepen.io/59477/value.svg)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220639.8503365.png)\n\n## 布局\n\n> 根据元素，容器，兄弟结点算出每个元素的位置空间\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221547.2095768.png)\n\n## width和height计算结果\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221664.9078061.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221692.2893996.png)\n\n## 常规流\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222125.9937966.png)\n\n## 行级排版\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222239.9160676.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222262.8181075.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222275.4463433.png)\n\n## positon定位\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222443.5535013.png)\n","source":"_posts/学校/准大三暑假/青训营/笔记1理解css.md","raw":"---\ntitle: '理解css'\ndate: 2022-10-15 10:06:51\ntags: \n    - css\n    - 基础\ncategories: 前端\n---\n\n[ppt地址](https://bytedance.feishu.cn/file/boxcnnXEvzh3hhRKNQGLoU1mjoh)\n\n## css是什么？\n\n> 级联样式表\n\n## css的结构\n\n- 选择器：选择器用来选中页面中要调整样式的元素，可以是标签，类，id，属性等\n- 属性：用来指定要增加的样式属性\n- 属性值：用来给属性值进行相应设置\n\n## css引入方式\n\n- 外部链接`<link ref=\"stylesheet\" href=\"/aaa/bbb\"></link>`\n- 内联`<style></style>`\n- 内部`<p style=\"aa=bb;\"></p>`\n\n## css工作方式\n\n1. 加载html\n2. 解析html\n3. 加载css同时创建dom树\n4. 解析css，将样式添加到dom树\n5. 展示页面\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md218647.173366.png)\n\n## css选择器种类\n\n- id选择器\n- 类选择器\n- 后代选择器\n- 属性选择器\n\n## 组合\n\n- 直接组合 ab\n- 后代组合a b\n- 父子组合a>b\n- 兄弟组合a~b\n- 相邻选择器a+b\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219079.011119.png)\n\n## 选择器特异度关联到选择器权重\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219402.1933185.png)\n\n## 继承\n\n继承的含义就是一些元素会自动继承父元素的属性值，除非显示指定一个值\n\n- 显示继承：通过给全局样式*添加样式，给html添加样式等，让其后代所有元素都附上该属性\n\n## 初始值\n\n- 每个css都有初始值，可以是none，可以是transparent\n- 可以用initial显示指定为初始值\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219886.4612302.png)\n\n## css求值过程\n\n1. 在解析好dom树和样式规则的前提下\n2. 第一步：筛选，进行样式规则筛选，选择器匹配，属性有效，符合当前media\n3. 第二步：多对一，首先一个属性值可能有多个声明值，根据选择器权重，权重高的在前，如果权重相似，那么后加载的css为最后的到的值\n4. 第三步：处理空值，如果没有设置相应属性的选择器的值，那么就赋值为继承值或初始值，最后保证得到的属性值一定不为空\n5. 第四步：规则化，将em，和百分数，小数转换为px整数值，最后得到实际应用值\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220217.8306201.png)\n\n![](https://assets.codepen.io/59477/value.svg)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220639.8503365.png)\n\n## 布局\n\n> 根据元素，容器，兄弟结点算出每个元素的位置空间\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221547.2095768.png)\n\n## width和height计算结果\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221664.9078061.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221692.2893996.png)\n\n## 常规流\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222125.9937966.png)\n\n## 行级排版\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222239.9160676.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222262.8181075.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222275.4463433.png)\n\n## positon定位\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222443.5535013.png)\n","slug":"学校/准大三暑假/青训营/笔记1理解css","published":1,"updated":"2023-03-21T09:48:50.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8a006lo8hu0l8u4ayu","content":"<p><a href=\"https://bytedance.feishu.cn/file/boxcnnXEvzh3hhRKNQGLoU1mjoh\">ppt地址</a></p>\n<h2 id=\"css是什么？\"><a href=\"#css是什么？\" class=\"headerlink\" title=\"css是什么？\"></a>css是什么？</h2><blockquote>\n<p>级联样式表</p>\n</blockquote>\n<h2 id=\"css的结构\"><a href=\"#css的结构\" class=\"headerlink\" title=\"css的结构\"></a>css的结构</h2><ul>\n<li>选择器：选择器用来选中页面中要调整样式的元素，可以是标签，类，id，属性等</li>\n<li>属性：用来指定要增加的样式属性</li>\n<li>属性值：用来给属性值进行相应设置</li>\n</ul>\n<h2 id=\"css引入方式\"><a href=\"#css引入方式\" class=\"headerlink\" title=\"css引入方式\"></a>css引入方式</h2><ul>\n<li>外部链接<code>&lt;link ref=&quot;stylesheet&quot; href=&quot;/aaa/bbb&quot;&gt;&lt;/link&gt;</code></li>\n<li>内联<code>&lt;style&gt;&lt;/style&gt;</code></li>\n<li>内部<code>&lt;p style=&quot;aa=bb;&quot;&gt;&lt;/p&gt;</code></li>\n</ul>\n<h2 id=\"css工作方式\"><a href=\"#css工作方式\" class=\"headerlink\" title=\"css工作方式\"></a>css工作方式</h2><ol>\n<li>加载html</li>\n<li>解析html</li>\n<li>加载css同时创建dom树</li>\n<li>解析css，将样式添加到dom树</li>\n<li>展示页面</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md218647.173366.png\"></p>\n<h2 id=\"css选择器种类\"><a href=\"#css选择器种类\" class=\"headerlink\" title=\"css选择器种类\"></a>css选择器种类</h2><ul>\n<li>id选择器</li>\n<li>类选择器</li>\n<li>后代选择器</li>\n<li>属性选择器</li>\n</ul>\n<h2 id=\"组合\"><a href=\"#组合\" class=\"headerlink\" title=\"组合\"></a>组合</h2><ul>\n<li>直接组合 ab</li>\n<li>后代组合a b</li>\n<li>父子组合a&gt;b</li>\n<li>兄弟组合a~b</li>\n<li>相邻选择器a+b</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219079.011119.png\"></p>\n<h2 id=\"选择器特异度关联到选择器权重\"><a href=\"#选择器特异度关联到选择器权重\" class=\"headerlink\" title=\"选择器特异度关联到选择器权重\"></a>选择器特异度关联到选择器权重</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219402.1933185.png\"></p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>继承的含义就是一些元素会自动继承父元素的属性值，除非显示指定一个值</p>\n<ul>\n<li>显示继承：通过给全局样式*添加样式，给html添加样式等，让其后代所有元素都附上该属性</li>\n</ul>\n<h2 id=\"初始值\"><a href=\"#初始值\" class=\"headerlink\" title=\"初始值\"></a>初始值</h2><ul>\n<li>每个css都有初始值，可以是none，可以是transparent</li>\n<li>可以用initial显示指定为初始值</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219886.4612302.png\"></p>\n<h2 id=\"css求值过程\"><a href=\"#css求值过程\" class=\"headerlink\" title=\"css求值过程\"></a>css求值过程</h2><ol>\n<li>在解析好dom树和样式规则的前提下</li>\n<li>第一步：筛选，进行样式规则筛选，选择器匹配，属性有效，符合当前media</li>\n<li>第二步：多对一，首先一个属性值可能有多个声明值，根据选择器权重，权重高的在前，如果权重相似，那么后加载的css为最后的到的值</li>\n<li>第三步：处理空值，如果没有设置相应属性的选择器的值，那么就赋值为继承值或初始值，最后保证得到的属性值一定不为空</li>\n<li>第四步：规则化，将em，和百分数，小数转换为px整数值，最后得到实际应用值</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220217.8306201.png\"></p>\n<p><img src=\"https://assets.codepen.io/59477/value.svg\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220639.8503365.png\"></p>\n<h2 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h2><blockquote>\n<p>根据元素，容器，兄弟结点算出每个元素的位置空间</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221547.2095768.png\"></p>\n<h2 id=\"width和height计算结果\"><a href=\"#width和height计算结果\" class=\"headerlink\" title=\"width和height计算结果\"></a>width和height计算结果</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221664.9078061.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221692.2893996.png\"></p>\n<h2 id=\"常规流\"><a href=\"#常规流\" class=\"headerlink\" title=\"常规流\"></a>常规流</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222125.9937966.png\"></p>\n<h2 id=\"行级排版\"><a href=\"#行级排版\" class=\"headerlink\" title=\"行级排版\"></a>行级排版</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222239.9160676.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222262.8181075.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222275.4463433.png\"></p>\n<h2 id=\"positon定位\"><a href=\"#positon定位\" class=\"headerlink\" title=\"positon定位\"></a>positon定位</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222443.5535013.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://bytedance.feishu.cn/file/boxcnnXEvzh3hhRKNQGLoU1mjoh\">ppt地址</a></p>\n<h2 id=\"css是什么？\"><a href=\"#css是什么？\" class=\"headerlink\" title=\"css是什么？\"></a>css是什么？</h2><blockquote>\n<p>级联样式表</p>\n</blockquote>\n<h2 id=\"css的结构\"><a href=\"#css的结构\" class=\"headerlink\" title=\"css的结构\"></a>css的结构</h2><ul>\n<li>选择器：选择器用来选中页面中要调整样式的元素，可以是标签，类，id，属性等</li>\n<li>属性：用来指定要增加的样式属性</li>\n<li>属性值：用来给属性值进行相应设置</li>\n</ul>\n<h2 id=\"css引入方式\"><a href=\"#css引入方式\" class=\"headerlink\" title=\"css引入方式\"></a>css引入方式</h2><ul>\n<li>外部链接<code>&lt;link ref=&quot;stylesheet&quot; href=&quot;/aaa/bbb&quot;&gt;&lt;/link&gt;</code></li>\n<li>内联<code>&lt;style&gt;&lt;/style&gt;</code></li>\n<li>内部<code>&lt;p style=&quot;aa=bb;&quot;&gt;&lt;/p&gt;</code></li>\n</ul>\n<h2 id=\"css工作方式\"><a href=\"#css工作方式\" class=\"headerlink\" title=\"css工作方式\"></a>css工作方式</h2><ol>\n<li>加载html</li>\n<li>解析html</li>\n<li>加载css同时创建dom树</li>\n<li>解析css，将样式添加到dom树</li>\n<li>展示页面</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md218647.173366.png\"></p>\n<h2 id=\"css选择器种类\"><a href=\"#css选择器种类\" class=\"headerlink\" title=\"css选择器种类\"></a>css选择器种类</h2><ul>\n<li>id选择器</li>\n<li>类选择器</li>\n<li>后代选择器</li>\n<li>属性选择器</li>\n</ul>\n<h2 id=\"组合\"><a href=\"#组合\" class=\"headerlink\" title=\"组合\"></a>组合</h2><ul>\n<li>直接组合 ab</li>\n<li>后代组合a b</li>\n<li>父子组合a&gt;b</li>\n<li>兄弟组合a~b</li>\n<li>相邻选择器a+b</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219079.011119.png\"></p>\n<h2 id=\"选择器特异度关联到选择器权重\"><a href=\"#选择器特异度关联到选择器权重\" class=\"headerlink\" title=\"选择器特异度关联到选择器权重\"></a>选择器特异度关联到选择器权重</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219402.1933185.png\"></p>\n<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>继承的含义就是一些元素会自动继承父元素的属性值，除非显示指定一个值</p>\n<ul>\n<li>显示继承：通过给全局样式*添加样式，给html添加样式等，让其后代所有元素都附上该属性</li>\n</ul>\n<h2 id=\"初始值\"><a href=\"#初始值\" class=\"headerlink\" title=\"初始值\"></a>初始值</h2><ul>\n<li>每个css都有初始值，可以是none，可以是transparent</li>\n<li>可以用initial显示指定为初始值</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md219886.4612302.png\"></p>\n<h2 id=\"css求值过程\"><a href=\"#css求值过程\" class=\"headerlink\" title=\"css求值过程\"></a>css求值过程</h2><ol>\n<li>在解析好dom树和样式规则的前提下</li>\n<li>第一步：筛选，进行样式规则筛选，选择器匹配，属性有效，符合当前media</li>\n<li>第二步：多对一，首先一个属性值可能有多个声明值，根据选择器权重，权重高的在前，如果权重相似，那么后加载的css为最后的到的值</li>\n<li>第三步：处理空值，如果没有设置相应属性的选择器的值，那么就赋值为继承值或初始值，最后保证得到的属性值一定不为空</li>\n<li>第四步：规则化，将em，和百分数，小数转换为px整数值，最后得到实际应用值</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220217.8306201.png\"></p>\n<p><img src=\"https://assets.codepen.io/59477/value.svg\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md220639.8503365.png\"></p>\n<h2 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h2><blockquote>\n<p>根据元素，容器，兄弟结点算出每个元素的位置空间</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221547.2095768.png\"></p>\n<h2 id=\"width和height计算结果\"><a href=\"#width和height计算结果\" class=\"headerlink\" title=\"width和height计算结果\"></a>width和height计算结果</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221664.9078061.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md221692.2893996.png\"></p>\n<h2 id=\"常规流\"><a href=\"#常规流\" class=\"headerlink\" title=\"常规流\"></a>常规流</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222125.9937966.png\"></p>\n<h2 id=\"行级排版\"><a href=\"#行级排版\" class=\"headerlink\" title=\"行级排版\"></a>行级排版</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222239.9160676.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222262.8181075.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222275.4463433.png\"></p>\n<h2 id=\"positon定位\"><a href=\"#positon定位\" class=\"headerlink\" title=\"positon定位\"></a>positon定位</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/笔记1理解css.md222443.5535013.png\"></p>\n"},{"title":"如果带领好小组","date":"2022-10-15T02:06:51.000Z","_content":"\n## 讨论方式:无领导小组讨论\n\n- 开放\n- 多元\n- 能保证这个讨论是活跃的并且创造性更强\n\n## 队友，队名，队号问题\n\n## 团队模型(GRPI)\n\n- 目标\n- 角色\n- 流程\n- 关系\n\n## 互相了解\n\n- 技术栈\n- 擅长方向(获取资源的能力，架构，js逻辑，审美能力，运维nginx，页面编写html_css，ppt，汇报文档，视频制作)\n- 邱：审美，js逻辑\n- 海：架构，运维，页面编写\n- 志：页面\n- 项目经历等\n\n## 项目周期制作\n\n- 7.25-7.27\n- 除去ppt，视频，汇报文档制作预计22号之前要完成\n- 27天时间\n\n## 项目模块化\n\n1. 技术选型，项目解决方案(5人_3天)25-27号，27号下午汇总\n2. 架构设计(3人_四天)28-31号，31号下午汇总\n3. 页面设计(2人_两天)28-29号，29号下午汇总\n4. 功能设计(2人_两天)30-31号，31号下午汇总\n5. 页面编写(5人_七天)8.1-8.7号，4号和7号下午汇总\n6. 功能模块编写，基本元素，修改属性，生成保存导入页面(5人_13天)8.8-8.20，每三天汇总\n7. 项目部署与访问测试等(改bug)\n8. 代码审查(每个模块主辅负责人审查)\n9. **汇报文档(5人)**\n10. **ppt(2人)**\n11. **视频制作(3人)**\n\n## 项目角色偏向(每个人主要分工)\n\n## 每个周期的模式\n\n- 首先根据角色偏向和分配找出项目主和辅负责人(主辅就是主要推进，然后有问题第一时间和辅你的人商讨然后再解决不了我们在群里或者开个小会说一下这个问题\n- 为什么是一主一辅，这两个都是会变动的,根据工作量调整，然后呢就是因为如果都是一个人来从头到尾负责的话，那么我们项目的上线就是这一个人，这是一个不太理想的情况，所以一主一辅打配合\n- 我想的最好的情况是我们是一个多边形的团队，每个人都会表现出自己擅长的地方\n- 代码审查\n- 细化分工\n- 寻找项目相关资源进行学习\n- 按时汇总\n\n## 总结就是\n\n> 首先我们明确每个阶段的事情之后，在这个阶段我们根据每个人擅长的方向和自己的角色定位对该阶段主负责人和辅负责人进行分配，然后根据主辅负责人的需要其他成员具体展开配合，每个人都会当主辅负责人的\n","source":"_posts/学校/准大三暑假/青训营/开会1 团队构建.md","raw":"---\ntitle: '如果带领好小组'\ndate: 2022-10-15 10:06:51\ntags: \n    - 低代码\n    - 基础\n    - 青训营\n    - 团队建设\ncategories: 修身\n---\n\n## 讨论方式:无领导小组讨论\n\n- 开放\n- 多元\n- 能保证这个讨论是活跃的并且创造性更强\n\n## 队友，队名，队号问题\n\n## 团队模型(GRPI)\n\n- 目标\n- 角色\n- 流程\n- 关系\n\n## 互相了解\n\n- 技术栈\n- 擅长方向(获取资源的能力，架构，js逻辑，审美能力，运维nginx，页面编写html_css，ppt，汇报文档，视频制作)\n- 邱：审美，js逻辑\n- 海：架构，运维，页面编写\n- 志：页面\n- 项目经历等\n\n## 项目周期制作\n\n- 7.25-7.27\n- 除去ppt，视频，汇报文档制作预计22号之前要完成\n- 27天时间\n\n## 项目模块化\n\n1. 技术选型，项目解决方案(5人_3天)25-27号，27号下午汇总\n2. 架构设计(3人_四天)28-31号，31号下午汇总\n3. 页面设计(2人_两天)28-29号，29号下午汇总\n4. 功能设计(2人_两天)30-31号，31号下午汇总\n5. 页面编写(5人_七天)8.1-8.7号，4号和7号下午汇总\n6. 功能模块编写，基本元素，修改属性，生成保存导入页面(5人_13天)8.8-8.20，每三天汇总\n7. 项目部署与访问测试等(改bug)\n8. 代码审查(每个模块主辅负责人审查)\n9. **汇报文档(5人)**\n10. **ppt(2人)**\n11. **视频制作(3人)**\n\n## 项目角色偏向(每个人主要分工)\n\n## 每个周期的模式\n\n- 首先根据角色偏向和分配找出项目主和辅负责人(主辅就是主要推进，然后有问题第一时间和辅你的人商讨然后再解决不了我们在群里或者开个小会说一下这个问题\n- 为什么是一主一辅，这两个都是会变动的,根据工作量调整，然后呢就是因为如果都是一个人来从头到尾负责的话，那么我们项目的上线就是这一个人，这是一个不太理想的情况，所以一主一辅打配合\n- 我想的最好的情况是我们是一个多边形的团队，每个人都会表现出自己擅长的地方\n- 代码审查\n- 细化分工\n- 寻找项目相关资源进行学习\n- 按时汇总\n\n## 总结就是\n\n> 首先我们明确每个阶段的事情之后，在这个阶段我们根据每个人擅长的方向和自己的角色定位对该阶段主负责人和辅负责人进行分配，然后根据主辅负责人的需要其他成员具体展开配合，每个人都会当主辅负责人的\n","slug":"学校/准大三暑假/青训营/开会1 团队构建","published":1,"updated":"2023-03-21T09:48:02.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8b006no8huf28r2e9s","content":"<h2 id=\"讨论方式-无领导小组讨论\"><a href=\"#讨论方式-无领导小组讨论\" class=\"headerlink\" title=\"讨论方式:无领导小组讨论\"></a>讨论方式:无领导小组讨论</h2><ul>\n<li>开放</li>\n<li>多元</li>\n<li>能保证这个讨论是活跃的并且创造性更强</li>\n</ul>\n<h2 id=\"队友，队名，队号问题\"><a href=\"#队友，队名，队号问题\" class=\"headerlink\" title=\"队友，队名，队号问题\"></a>队友，队名，队号问题</h2><h2 id=\"团队模型-GRPI\"><a href=\"#团队模型-GRPI\" class=\"headerlink\" title=\"团队模型(GRPI)\"></a>团队模型(GRPI)</h2><ul>\n<li>目标</li>\n<li>角色</li>\n<li>流程</li>\n<li>关系</li>\n</ul>\n<h2 id=\"互相了解\"><a href=\"#互相了解\" class=\"headerlink\" title=\"互相了解\"></a>互相了解</h2><ul>\n<li>技术栈</li>\n<li>擅长方向(获取资源的能力，架构，js逻辑，审美能力，运维nginx，页面编写html_css，ppt，汇报文档，视频制作)</li>\n<li>邱：审美，js逻辑</li>\n<li>海：架构，运维，页面编写</li>\n<li>志：页面</li>\n<li>项目经历等</li>\n</ul>\n<h2 id=\"项目周期制作\"><a href=\"#项目周期制作\" class=\"headerlink\" title=\"项目周期制作\"></a>项目周期制作</h2><ul>\n<li>7.25-7.27</li>\n<li>除去ppt，视频，汇报文档制作预计22号之前要完成</li>\n<li>27天时间</li>\n</ul>\n<h2 id=\"项目模块化\"><a href=\"#项目模块化\" class=\"headerlink\" title=\"项目模块化\"></a>项目模块化</h2><ol>\n<li>技术选型，项目解决方案(5人_3天)25-27号，27号下午汇总</li>\n<li>架构设计(3人_四天)28-31号，31号下午汇总</li>\n<li>页面设计(2人_两天)28-29号，29号下午汇总</li>\n<li>功能设计(2人_两天)30-31号，31号下午汇总</li>\n<li>页面编写(5人_七天)8.1-8.7号，4号和7号下午汇总</li>\n<li>功能模块编写，基本元素，修改属性，生成保存导入页面(5人_13天)8.8-8.20，每三天汇总</li>\n<li>项目部署与访问测试等(改bug)</li>\n<li>代码审查(每个模块主辅负责人审查)</li>\n<li><strong>汇报文档(5人)</strong></li>\n<li><strong>ppt(2人)</strong></li>\n<li><strong>视频制作(3人)</strong></li>\n</ol>\n<h2 id=\"项目角色偏向-每个人主要分工\"><a href=\"#项目角色偏向-每个人主要分工\" class=\"headerlink\" title=\"项目角色偏向(每个人主要分工)\"></a>项目角色偏向(每个人主要分工)</h2><h2 id=\"每个周期的模式\"><a href=\"#每个周期的模式\" class=\"headerlink\" title=\"每个周期的模式\"></a>每个周期的模式</h2><ul>\n<li>首先根据角色偏向和分配找出项目主和辅负责人(主辅就是主要推进，然后有问题第一时间和辅你的人商讨然后再解决不了我们在群里或者开个小会说一下这个问题</li>\n<li>为什么是一主一辅，这两个都是会变动的,根据工作量调整，然后呢就是因为如果都是一个人来从头到尾负责的话，那么我们项目的上线就是这一个人，这是一个不太理想的情况，所以一主一辅打配合</li>\n<li>我想的最好的情况是我们是一个多边形的团队，每个人都会表现出自己擅长的地方</li>\n<li>代码审查</li>\n<li>细化分工</li>\n<li>寻找项目相关资源进行学习</li>\n<li>按时汇总</li>\n</ul>\n<h2 id=\"总结就是\"><a href=\"#总结就是\" class=\"headerlink\" title=\"总结就是\"></a>总结就是</h2><blockquote>\n<p>首先我们明确每个阶段的事情之后，在这个阶段我们根据每个人擅长的方向和自己的角色定位对该阶段主负责人和辅负责人进行分配，然后根据主辅负责人的需要其他成员具体展开配合，每个人都会当主辅负责人的</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"讨论方式-无领导小组讨论\"><a href=\"#讨论方式-无领导小组讨论\" class=\"headerlink\" title=\"讨论方式:无领导小组讨论\"></a>讨论方式:无领导小组讨论</h2><ul>\n<li>开放</li>\n<li>多元</li>\n<li>能保证这个讨论是活跃的并且创造性更强</li>\n</ul>\n<h2 id=\"队友，队名，队号问题\"><a href=\"#队友，队名，队号问题\" class=\"headerlink\" title=\"队友，队名，队号问题\"></a>队友，队名，队号问题</h2><h2 id=\"团队模型-GRPI\"><a href=\"#团队模型-GRPI\" class=\"headerlink\" title=\"团队模型(GRPI)\"></a>团队模型(GRPI)</h2><ul>\n<li>目标</li>\n<li>角色</li>\n<li>流程</li>\n<li>关系</li>\n</ul>\n<h2 id=\"互相了解\"><a href=\"#互相了解\" class=\"headerlink\" title=\"互相了解\"></a>互相了解</h2><ul>\n<li>技术栈</li>\n<li>擅长方向(获取资源的能力，架构，js逻辑，审美能力，运维nginx，页面编写html_css，ppt，汇报文档，视频制作)</li>\n<li>邱：审美，js逻辑</li>\n<li>海：架构，运维，页面编写</li>\n<li>志：页面</li>\n<li>项目经历等</li>\n</ul>\n<h2 id=\"项目周期制作\"><a href=\"#项目周期制作\" class=\"headerlink\" title=\"项目周期制作\"></a>项目周期制作</h2><ul>\n<li>7.25-7.27</li>\n<li>除去ppt，视频，汇报文档制作预计22号之前要完成</li>\n<li>27天时间</li>\n</ul>\n<h2 id=\"项目模块化\"><a href=\"#项目模块化\" class=\"headerlink\" title=\"项目模块化\"></a>项目模块化</h2><ol>\n<li>技术选型，项目解决方案(5人_3天)25-27号，27号下午汇总</li>\n<li>架构设计(3人_四天)28-31号，31号下午汇总</li>\n<li>页面设计(2人_两天)28-29号，29号下午汇总</li>\n<li>功能设计(2人_两天)30-31号，31号下午汇总</li>\n<li>页面编写(5人_七天)8.1-8.7号，4号和7号下午汇总</li>\n<li>功能模块编写，基本元素，修改属性，生成保存导入页面(5人_13天)8.8-8.20，每三天汇总</li>\n<li>项目部署与访问测试等(改bug)</li>\n<li>代码审查(每个模块主辅负责人审查)</li>\n<li><strong>汇报文档(5人)</strong></li>\n<li><strong>ppt(2人)</strong></li>\n<li><strong>视频制作(3人)</strong></li>\n</ol>\n<h2 id=\"项目角色偏向-每个人主要分工\"><a href=\"#项目角色偏向-每个人主要分工\" class=\"headerlink\" title=\"项目角色偏向(每个人主要分工)\"></a>项目角色偏向(每个人主要分工)</h2><h2 id=\"每个周期的模式\"><a href=\"#每个周期的模式\" class=\"headerlink\" title=\"每个周期的模式\"></a>每个周期的模式</h2><ul>\n<li>首先根据角色偏向和分配找出项目主和辅负责人(主辅就是主要推进，然后有问题第一时间和辅你的人商讨然后再解决不了我们在群里或者开个小会说一下这个问题</li>\n<li>为什么是一主一辅，这两个都是会变动的,根据工作量调整，然后呢就是因为如果都是一个人来从头到尾负责的话，那么我们项目的上线就是这一个人，这是一个不太理想的情况，所以一主一辅打配合</li>\n<li>我想的最好的情况是我们是一个多边形的团队，每个人都会表现出自己擅长的地方</li>\n<li>代码审查</li>\n<li>细化分工</li>\n<li>寻找项目相关资源进行学习</li>\n<li>按时汇总</li>\n</ul>\n<h2 id=\"总结就是\"><a href=\"#总结就是\" class=\"headerlink\" title=\"总结就是\"></a>总结就是</h2><blockquote>\n<p>首先我们明确每个阶段的事情之后，在这个阶段我们根据每个人擅长的方向和自己的角色定位对该阶段主负责人和辅负责人进行分配，然后根据主辅负责人的需要其他成员具体展开配合，每个人都会当主辅负责人的</p>\n</blockquote>\n"},{"title":"如何实现低代码的拖拽？","date":"2022-10-15T02:06:51.000Z","_content":"\n## 拖拽解决方案\n\n1. ```html\n         <div\n             class=\"picItem\"\n             :key=\"index\"\n             v-for=\"(pic, index) in children\"\n             @dragstart=\"fnDragStart(pic)\"\n             draggable=\"true\"\n           >\n             <div class=\"label\" :class=\"[pic.text && index ? 'textTop' : '']\">\n               {{ pic.text }}\n             </div>\n             <div class=\"pic\">\n               <img :src=\"pic.pic\" @click.stop=\"fnClickComponent(pic)\" />\n             </div>\n           </div>\n         </div>\n   ```\n\n   首先v-for遍历提前在vuex的state中定义好的组件对象数据，然后使用draggable属性，自定义事件深拷贝一份提前定义好的组件对象,赋值给state中component对象中\n2. 普遍使用draggable\n\n## 页面元素放置，布局解决方案\n\n1. 使用drop事件，将之前拖拽时赋值给state中的组件，调用vuex中的方法，将该对象保存起来\n\n   ```javascript\n       const fnDrop = (item, e) => {\n         store.commit(\"activeView\", item.id);\n         let component = store.state.component;\n         let id = Math.floor(Math.random() * 100000000);\n         component['_id'] = id\n         component['id'] = id\n         store.commit(\"appendComponent\", component);\n         store.commit(\"setClickType\", \"component\");\n         store.commit(\"saveComponent\", {});\n         data.lastEnterEle = null\n         data.enterIndex = -1;\n         data.text = \"可从左侧添加组件到此处\";\n\n         let historyIndex = store.state.historyIndex\n         if(historyIndex != -1){\n           let historyViews = store.state.historyViews\n           // 获取当前操作，舍弃后面的数据\n           let arr = historyViews.slice(0, historyIndex+1)\n           store.commit('fnChangeHistoryView', deepClone(arr))\n         }\n         store.commit('fnAddHistoryView', deepClone(store.state.views))\n         store.commit('changeHistoryIndex', - 1)\n       };\n   ```\n2. 普遍使用drop事件调用函数放置变量\n\n## 预览解决方案\n\n1. 通过修改vuex中视图区域的变量，双向绑定使用该变量显示页面\n\n   ```json\n   //视图区域\n           views:[{\n               focus: true,\n               id: Math.floor(Math.random()*10000000),\n               data:{\n                   type: 1,\n                   left: 0,\n                   top: 0,\n                   width: 375,\n                   height: 225,\n                   bgColor: '',\n                   bgImg: '',\n               },\n               components:[]\n           },{\n               focus: false,\n               id: Math.floor(Math.random()*10000000),\n               data:{\n                   type: 1,\n                   left: 0,\n                   top: 0,\n                   width: 375,\n                   height: 225,\n                   bgColor: '',\n                   bgImg: '',\n               },\n               components:[]\n               }],\n   ```\n2. 用拖拽生成的json数据，在页面v-for循环出来，之后使用iframe嵌入页面\n\n## 图片视频上传解决方案\n\n1. 调用接口，返回数据\n\n   ```javascript\n   const fnUpload = (e) => {\n         let type = store.state.type\n         let file = e.target.files[0]\n         var _data = new FormData();\n         _data.append('file', file);\n         axios.post(\"http://127.0.0.1:3001/album/upload\", _data, {\n           headers:{\n             \"content-type\": \"application/x-www-form-urlencoded\"\n           }\n         }).then(res => {\n           if(type == 'component'){\n             props.data.picContent = res?.data?.data?.path || 'https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp'\n           }\n           else{\n             props.data.bgColor = \"\"\n             props.data.bgImg = res?.data?.data?.path || 'https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp'\n           }\n           let historyIndex = store.state.historyIndex\n           if(historyIndex != -1){\n             let historyViews = store.state.historyViews\n             // 获取当前操作，舍弃后面的数据\n             let arr = historyViews.slice(0, historyIndex+1)\n             store.commit('fnChangeHistoryView', deepClone(arr))\n           }\n           store.commit('fnAddHistoryView', deepClone(store.state.views))\n           store.commit('changeHistoryIndex', - 1)\n           e.target.value = \"\"\n         }).catch(err => {\n           console.log(err)\n           e.target.value = \"\"\n         })\n       }\n       return {\n         fnUpload,\n       }\n     }\n   ```\n2. 将页面中放图片的位置放默认图片或者默认视频，或者置空，给样式加flex-shrink:0;防止伸缩，之后后期将需要加的图片放到src中\n\n## 修改属性解决方案\n\n1. 根据被点击的元素，遍历可修改的属性并返回，通过修改该对象进而修改显示结果![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md250825.9080774.png)\n\n## 发布解决方案\n\n1. 发送请求 保存\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md251039.8216212.png)\n\n## 元素放置之后的布局定位问题\n\n1. 提前定义好容器，然后使用views定义的data样式![]![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md249282.8298926.png)\n   在外部的容器中使用\n\n   ```css\n   .wrapCenter {\n     flex: 1;\n     height: 100%;\n     background-color: antiquewhite;\n     overflow-y: auto;\n   }\n   .editor {\n     width: 375px;\n     min-height: 740px;\n     height: auto;\n     background-color: #fff;\n     margin: 0 auto;\n     margin-top: 20\n   }\n   ```\n\n```json\n{\n    root:{\n        class:\"string\",\n        style:{},\n        son:[\n            {\n                class:\"string\",\n                style:{},\n                son:[\n                    class:\"string\",\n                    style:{},\n                    son:[...]\n                ]\n            },\n            {...},\n        ]  \n    }\n}\n```\n\n## 遗留问题\n\n- 树形结构的预览\n- json与vue | html文件的转换\n- 全局数据管理\n- 发布文件，vue与html文件转换\n- 元素布局方式\n- 拖拽之后提示用户\n\n## 解决方案(version 1.1)\n\n1. 首先布局分为left，center，right，header\n2. 将低代码每个组件封装的json数据放置到vuex中\n3. left将vuex中的组件数据循环出来\n4. left拖拽之后，拖到中间center区域，当dragover事件被触发时修改该被dragover的元素样式，提示用户，例如是在上方则在上方创建一个新的盒子，之后如果用户松手则与该盒子替换\n5. 替换之后更新center页面中的树形结构数据，页面照常预览\n6. 用户点击某一元素之后，根据该元素提前定义好的data值，在right中显示出相应要修改的属性\n7. 点击发布之后将json？how to vue or html ？之后生成链接供别人访问\n","source":"_posts/学校/准大三暑假/青训营/项目3解决方案.md","raw":"---\ntitle: '如何实现低代码的拖拽？'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\n    - 青训营\n    - 低代码\ncategories: 前端\n---\n\n## 拖拽解决方案\n\n1. ```html\n         <div\n             class=\"picItem\"\n             :key=\"index\"\n             v-for=\"(pic, index) in children\"\n             @dragstart=\"fnDragStart(pic)\"\n             draggable=\"true\"\n           >\n             <div class=\"label\" :class=\"[pic.text && index ? 'textTop' : '']\">\n               {{ pic.text }}\n             </div>\n             <div class=\"pic\">\n               <img :src=\"pic.pic\" @click.stop=\"fnClickComponent(pic)\" />\n             </div>\n           </div>\n         </div>\n   ```\n\n   首先v-for遍历提前在vuex的state中定义好的组件对象数据，然后使用draggable属性，自定义事件深拷贝一份提前定义好的组件对象,赋值给state中component对象中\n2. 普遍使用draggable\n\n## 页面元素放置，布局解决方案\n\n1. 使用drop事件，将之前拖拽时赋值给state中的组件，调用vuex中的方法，将该对象保存起来\n\n   ```javascript\n       const fnDrop = (item, e) => {\n         store.commit(\"activeView\", item.id);\n         let component = store.state.component;\n         let id = Math.floor(Math.random() * 100000000);\n         component['_id'] = id\n         component['id'] = id\n         store.commit(\"appendComponent\", component);\n         store.commit(\"setClickType\", \"component\");\n         store.commit(\"saveComponent\", {});\n         data.lastEnterEle = null\n         data.enterIndex = -1;\n         data.text = \"可从左侧添加组件到此处\";\n\n         let historyIndex = store.state.historyIndex\n         if(historyIndex != -1){\n           let historyViews = store.state.historyViews\n           // 获取当前操作，舍弃后面的数据\n           let arr = historyViews.slice(0, historyIndex+1)\n           store.commit('fnChangeHistoryView', deepClone(arr))\n         }\n         store.commit('fnAddHistoryView', deepClone(store.state.views))\n         store.commit('changeHistoryIndex', - 1)\n       };\n   ```\n2. 普遍使用drop事件调用函数放置变量\n\n## 预览解决方案\n\n1. 通过修改vuex中视图区域的变量，双向绑定使用该变量显示页面\n\n   ```json\n   //视图区域\n           views:[{\n               focus: true,\n               id: Math.floor(Math.random()*10000000),\n               data:{\n                   type: 1,\n                   left: 0,\n                   top: 0,\n                   width: 375,\n                   height: 225,\n                   bgColor: '',\n                   bgImg: '',\n               },\n               components:[]\n           },{\n               focus: false,\n               id: Math.floor(Math.random()*10000000),\n               data:{\n                   type: 1,\n                   left: 0,\n                   top: 0,\n                   width: 375,\n                   height: 225,\n                   bgColor: '',\n                   bgImg: '',\n               },\n               components:[]\n               }],\n   ```\n2. 用拖拽生成的json数据，在页面v-for循环出来，之后使用iframe嵌入页面\n\n## 图片视频上传解决方案\n\n1. 调用接口，返回数据\n\n   ```javascript\n   const fnUpload = (e) => {\n         let type = store.state.type\n         let file = e.target.files[0]\n         var _data = new FormData();\n         _data.append('file', file);\n         axios.post(\"http://127.0.0.1:3001/album/upload\", _data, {\n           headers:{\n             \"content-type\": \"application/x-www-form-urlencoded\"\n           }\n         }).then(res => {\n           if(type == 'component'){\n             props.data.picContent = res?.data?.data?.path || 'https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp'\n           }\n           else{\n             props.data.bgColor = \"\"\n             props.data.bgImg = res?.data?.data?.path || 'https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp'\n           }\n           let historyIndex = store.state.historyIndex\n           if(historyIndex != -1){\n             let historyViews = store.state.historyViews\n             // 获取当前操作，舍弃后面的数据\n             let arr = historyViews.slice(0, historyIndex+1)\n             store.commit('fnChangeHistoryView', deepClone(arr))\n           }\n           store.commit('fnAddHistoryView', deepClone(store.state.views))\n           store.commit('changeHistoryIndex', - 1)\n           e.target.value = \"\"\n         }).catch(err => {\n           console.log(err)\n           e.target.value = \"\"\n         })\n       }\n       return {\n         fnUpload,\n       }\n     }\n   ```\n2. 将页面中放图片的位置放默认图片或者默认视频，或者置空，给样式加flex-shrink:0;防止伸缩，之后后期将需要加的图片放到src中\n\n## 修改属性解决方案\n\n1. 根据被点击的元素，遍历可修改的属性并返回，通过修改该对象进而修改显示结果![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md250825.9080774.png)\n\n## 发布解决方案\n\n1. 发送请求 保存\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md251039.8216212.png)\n\n## 元素放置之后的布局定位问题\n\n1. 提前定义好容器，然后使用views定义的data样式![]![](file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md249282.8298926.png)\n   在外部的容器中使用\n\n   ```css\n   .wrapCenter {\n     flex: 1;\n     height: 100%;\n     background-color: antiquewhite;\n     overflow-y: auto;\n   }\n   .editor {\n     width: 375px;\n     min-height: 740px;\n     height: auto;\n     background-color: #fff;\n     margin: 0 auto;\n     margin-top: 20\n   }\n   ```\n\n```json\n{\n    root:{\n        class:\"string\",\n        style:{},\n        son:[\n            {\n                class:\"string\",\n                style:{},\n                son:[\n                    class:\"string\",\n                    style:{},\n                    son:[...]\n                ]\n            },\n            {...},\n        ]  \n    }\n}\n```\n\n## 遗留问题\n\n- 树形结构的预览\n- json与vue | html文件的转换\n- 全局数据管理\n- 发布文件，vue与html文件转换\n- 元素布局方式\n- 拖拽之后提示用户\n\n## 解决方案(version 1.1)\n\n1. 首先布局分为left，center，right，header\n2. 将低代码每个组件封装的json数据放置到vuex中\n3. left将vuex中的组件数据循环出来\n4. left拖拽之后，拖到中间center区域，当dragover事件被触发时修改该被dragover的元素样式，提示用户，例如是在上方则在上方创建一个新的盒子，之后如果用户松手则与该盒子替换\n5. 替换之后更新center页面中的树形结构数据，页面照常预览\n6. 用户点击某一元素之后，根据该元素提前定义好的data值，在right中显示出相应要修改的属性\n7. 点击发布之后将json？how to vue or html ？之后生成链接供别人访问\n","slug":"学校/准大三暑假/青训营/项目3解决方案","published":1,"updated":"2023-03-21T09:50:28.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8c006ro8hubyljacjq","content":"<h2 id=\"拖拽解决方案\"><a href=\"#拖拽解决方案\" class=\"headerlink\" title=\"拖拽解决方案\"></a>拖拽解决方案</h2><ol>\n<li>```html<pre><code>  &lt;div\n      class=&quot;picItem&quot;\n      :key=&quot;index&quot;\n      v-for=&quot;(pic, index) in children&quot;\n      @dragstart=&quot;fnDragStart(pic)&quot;\n      draggable=&quot;true&quot;\n    &gt;\n      &lt;div class=&quot;label&quot; :class=&quot;[pic.text &amp;&amp; index ? &#39;textTop&#39; : &#39;&#39;]&quot;&gt;\n        &#123;&#123; pic.text &#125;&#125;\n      &lt;/div&gt;\n      &lt;div class=&quot;pic&quot;&gt;\n        &lt;img :src=&quot;pic.pic&quot; @click.stop=&quot;fnClickComponent(pic)&quot; /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   首先v-for遍历提前在vuex的state中定义好的组件对象数据，然后使用draggable属性，自定义事件深拷贝一份提前定义好的组件对象,赋值给state中component对象中</span><br><span class=\"line\">2. 普遍使用draggable</span><br><span class=\"line\"></span><br><span class=\"line\">## 页面元素放置，布局解决方案</span><br><span class=\"line\"></span><br><span class=\"line\">1. 使用drop事件，将之前拖拽时赋值给state中的组件，调用vuex中的方法，将该对象保存起来</span><br><span class=\"line\"></span><br><span class=\"line\">   ```javascript</span><br><span class=\"line\">       const fnDrop = (item, e) =&gt; &#123;</span><br><span class=\"line\">         store.commit(&quot;activeView&quot;, item.id);</span><br><span class=\"line\">         let component = store.state.component;</span><br><span class=\"line\">         let id = Math.floor(Math.random() * 100000000);</span><br><span class=\"line\">         component[&#x27;_id&#x27;] = id</span><br><span class=\"line\">         component[&#x27;id&#x27;] = id</span><br><span class=\"line\">         store.commit(&quot;appendComponent&quot;, component);</span><br><span class=\"line\">         store.commit(&quot;setClickType&quot;, &quot;component&quot;);</span><br><span class=\"line\">         store.commit(&quot;saveComponent&quot;, &#123;&#125;);</span><br><span class=\"line\">         data.lastEnterEle = null</span><br><span class=\"line\">         data.enterIndex = -1;</span><br><span class=\"line\">         data.text = &quot;可从左侧添加组件到此处&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">         let historyIndex = store.state.historyIndex</span><br><span class=\"line\">         if(historyIndex != -1)&#123;</span><br><span class=\"line\">           let historyViews = store.state.historyViews</span><br><span class=\"line\">           // 获取当前操作，舍弃后面的数据</span><br><span class=\"line\">           let arr = historyViews.slice(0, historyIndex+1)</span><br><span class=\"line\">           store.commit(&#x27;fnChangeHistoryView&#x27;, deepClone(arr))</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         store.commit(&#x27;fnAddHistoryView&#x27;, deepClone(store.state.views))</span><br><span class=\"line\">         store.commit(&#x27;changeHistoryIndex&#x27;, - 1)</span><br><span class=\"line\">       &#125;;</span><br></pre></td></tr></table></figure></li>\n<li>普遍使用drop事件调用函数放置变量</li>\n</ol>\n<h2 id=\"预览解决方案\"><a href=\"#预览解决方案\" class=\"headerlink\" title=\"预览解决方案\"></a>预览解决方案</h2><ol>\n<li><p>通过修改vuex中视图区域的变量，双向绑定使用该变量显示页面</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//视图区域</span></span><br><span class=\"line\">        views<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            focus<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            id<span class=\"punctuation\">:</span> Math.floor(Math.random()*<span class=\"number\">10000000</span>)<span class=\"punctuation\">,</span></span><br><span class=\"line\">            data<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                type<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                left<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                top<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                width<span class=\"punctuation\">:</span> <span class=\"number\">375</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                height<span class=\"punctuation\">:</span> <span class=\"number\">225</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgColor<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgImg<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            components<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            focus<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            id<span class=\"punctuation\">:</span> Math.floor(Math.random()*<span class=\"number\">10000000</span>)<span class=\"punctuation\">,</span></span><br><span class=\"line\">            data<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                type<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                left<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                top<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                width<span class=\"punctuation\">:</span> <span class=\"number\">375</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                height<span class=\"punctuation\">:</span> <span class=\"number\">225</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgColor<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgImg<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            components<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure></li>\n<li><p>用拖拽生成的json数据，在页面v-for循环出来，之后使用iframe嵌入页面</p>\n</li>\n</ol>\n<h2 id=\"图片视频上传解决方案\"><a href=\"#图片视频上传解决方案\" class=\"headerlink\" title=\"图片视频上传解决方案\"></a>图片视频上传解决方案</h2><ol>\n<li><p>调用接口，返回数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">fnUpload</span> = (<span class=\"params\">e</span>) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> type = store.<span class=\"property\">state</span>.<span class=\"property\">type</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> file = e.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _data = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\">      _data.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, file);</span><br><span class=\"line\">      axios.<span class=\"title function_\">post</span>(<span class=\"string\">&quot;http://127.0.0.1:3001/album/upload&quot;</span>, _data, &#123;</span><br><span class=\"line\">        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;content-type&quot;</span>: <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(type == <span class=\"string\">&#x27;component&#x27;</span>)&#123;</span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">picContent</span> = res?.<span class=\"property\">data</span>?.<span class=\"property\">data</span>?.<span class=\"property\">path</span> || <span class=\"string\">&#x27;https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">bgColor</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">bgImg</span> = res?.<span class=\"property\">data</span>?.<span class=\"property\">data</span>?.<span class=\"property\">path</span> || <span class=\"string\">&#x27;https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> historyIndex = store.<span class=\"property\">state</span>.<span class=\"property\">historyIndex</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(historyIndex != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> historyViews = store.<span class=\"property\">state</span>.<span class=\"property\">historyViews</span></span><br><span class=\"line\">          <span class=\"comment\">// 获取当前操作，舍弃后面的数据</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> arr = historyViews.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, historyIndex+<span class=\"number\">1</span>)</span><br><span class=\"line\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;fnChangeHistoryView&#x27;</span>, <span class=\"title function_\">deepClone</span>(arr))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;fnAddHistoryView&#x27;</span>, <span class=\"title function_\">deepClone</span>(store.<span class=\"property\">state</span>.<span class=\"property\">views</span>))</span><br><span class=\"line\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;changeHistoryIndex&#x27;</span>, - <span class=\"number\">1</span>)</span><br><span class=\"line\">        e.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">      &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        e.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      fnUpload,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>将页面中放图片的位置放默认图片或者默认视频，或者置空，给样式加flex-shrink:0;防止伸缩，之后后期将需要加的图片放到src中</p>\n</li>\n</ol>\n<h2 id=\"修改属性解决方案\"><a href=\"#修改属性解决方案\" class=\"headerlink\" title=\"修改属性解决方案\"></a>修改属性解决方案</h2><ol>\n<li>根据被点击的元素，遍历可修改的属性并返回，通过修改该对象进而修改显示结果<img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md250825.9080774.png\"></li>\n</ol>\n<h2 id=\"发布解决方案\"><a href=\"#发布解决方案\" class=\"headerlink\" title=\"发布解决方案\"></a>发布解决方案</h2><ol>\n<li><p>发送请求 保存</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md251039.8216212.png\"></p>\n</li>\n</ol>\n<h2 id=\"元素放置之后的布局定位问题\"><a href=\"#元素放置之后的布局定位问题\" class=\"headerlink\" title=\"元素放置之后的布局定位问题\"></a>元素放置之后的布局定位问题</h2><ol>\n<li><p>提前定义好容器，然后使用views定义的data样式![]<img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md249282.8298926.png\"><br>在外部的容器中使用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrapCenter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: antiquewhite;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.editor</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">375px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">740px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    root<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">                    class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span>...<span class=\"punctuation\">]</span></span><br><span class=\"line\">                <span class=\"punctuation\">]</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span>...<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h2><ul>\n<li>树形结构的预览</li>\n<li>json与vue | html文件的转换</li>\n<li>全局数据管理</li>\n<li>发布文件，vue与html文件转换</li>\n<li>元素布局方式</li>\n<li>拖拽之后提示用户</li>\n</ul>\n<h2 id=\"解决方案-version-1-1\"><a href=\"#解决方案-version-1-1\" class=\"headerlink\" title=\"解决方案(version 1.1)\"></a>解决方案(version 1.1)</h2><ol>\n<li>首先布局分为left，center，right，header</li>\n<li>将低代码每个组件封装的json数据放置到vuex中</li>\n<li>left将vuex中的组件数据循环出来</li>\n<li>left拖拽之后，拖到中间center区域，当dragover事件被触发时修改该被dragover的元素样式，提示用户，例如是在上方则在上方创建一个新的盒子，之后如果用户松手则与该盒子替换</li>\n<li>替换之后更新center页面中的树形结构数据，页面照常预览</li>\n<li>用户点击某一元素之后，根据该元素提前定义好的data值，在right中显示出相应要修改的属性</li>\n<li>点击发布之后将json？how to vue or html ？之后生成链接供别人访问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"拖拽解决方案\"><a href=\"#拖拽解决方案\" class=\"headerlink\" title=\"拖拽解决方案\"></a>拖拽解决方案</h2><ol>\n<li>```html<pre><code>  &lt;div\n      class=&quot;picItem&quot;\n      :key=&quot;index&quot;\n      v-for=&quot;(pic, index) in children&quot;\n      @dragstart=&quot;fnDragStart(pic)&quot;\n      draggable=&quot;true&quot;\n    &gt;\n      &lt;div class=&quot;label&quot; :class=&quot;[pic.text &amp;&amp; index ? &#39;textTop&#39; : &#39;&#39;]&quot;&gt;\n        &#123;&#123; pic.text &#125;&#125;\n      &lt;/div&gt;\n      &lt;div class=&quot;pic&quot;&gt;\n        &lt;img :src=&quot;pic.pic&quot; @click.stop=&quot;fnClickComponent(pic)&quot; /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   首先v-for遍历提前在vuex的state中定义好的组件对象数据，然后使用draggable属性，自定义事件深拷贝一份提前定义好的组件对象,赋值给state中component对象中</span><br><span class=\"line\">2. 普遍使用draggable</span><br><span class=\"line\"></span><br><span class=\"line\">## 页面元素放置，布局解决方案</span><br><span class=\"line\"></span><br><span class=\"line\">1. 使用drop事件，将之前拖拽时赋值给state中的组件，调用vuex中的方法，将该对象保存起来</span><br><span class=\"line\"></span><br><span class=\"line\">   ```javascript</span><br><span class=\"line\">       const fnDrop = (item, e) =&gt; &#123;</span><br><span class=\"line\">         store.commit(&quot;activeView&quot;, item.id);</span><br><span class=\"line\">         let component = store.state.component;</span><br><span class=\"line\">         let id = Math.floor(Math.random() * 100000000);</span><br><span class=\"line\">         component[&#x27;_id&#x27;] = id</span><br><span class=\"line\">         component[&#x27;id&#x27;] = id</span><br><span class=\"line\">         store.commit(&quot;appendComponent&quot;, component);</span><br><span class=\"line\">         store.commit(&quot;setClickType&quot;, &quot;component&quot;);</span><br><span class=\"line\">         store.commit(&quot;saveComponent&quot;, &#123;&#125;);</span><br><span class=\"line\">         data.lastEnterEle = null</span><br><span class=\"line\">         data.enterIndex = -1;</span><br><span class=\"line\">         data.text = &quot;可从左侧添加组件到此处&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">         let historyIndex = store.state.historyIndex</span><br><span class=\"line\">         if(historyIndex != -1)&#123;</span><br><span class=\"line\">           let historyViews = store.state.historyViews</span><br><span class=\"line\">           // 获取当前操作，舍弃后面的数据</span><br><span class=\"line\">           let arr = historyViews.slice(0, historyIndex+1)</span><br><span class=\"line\">           store.commit(&#x27;fnChangeHistoryView&#x27;, deepClone(arr))</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         store.commit(&#x27;fnAddHistoryView&#x27;, deepClone(store.state.views))</span><br><span class=\"line\">         store.commit(&#x27;changeHistoryIndex&#x27;, - 1)</span><br><span class=\"line\">       &#125;;</span><br></pre></td></tr></table></figure></li>\n<li>普遍使用drop事件调用函数放置变量</li>\n</ol>\n<h2 id=\"预览解决方案\"><a href=\"#预览解决方案\" class=\"headerlink\" title=\"预览解决方案\"></a>预览解决方案</h2><ol>\n<li><p>通过修改vuex中视图区域的变量，双向绑定使用该变量显示页面</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//视图区域</span></span><br><span class=\"line\">        views<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            focus<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            id<span class=\"punctuation\">:</span> Math.floor(Math.random()*<span class=\"number\">10000000</span>)<span class=\"punctuation\">,</span></span><br><span class=\"line\">            data<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                type<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                left<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                top<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                width<span class=\"punctuation\">:</span> <span class=\"number\">375</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                height<span class=\"punctuation\">:</span> <span class=\"number\">225</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgColor<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgImg<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            components<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            focus<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            id<span class=\"punctuation\">:</span> Math.floor(Math.random()*<span class=\"number\">10000000</span>)<span class=\"punctuation\">,</span></span><br><span class=\"line\">            data<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                type<span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                left<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                top<span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                width<span class=\"punctuation\">:</span> <span class=\"number\">375</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                height<span class=\"punctuation\">:</span> <span class=\"number\">225</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgColor<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">                bgImg<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            components<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure></li>\n<li><p>用拖拽生成的json数据，在页面v-for循环出来，之后使用iframe嵌入页面</p>\n</li>\n</ol>\n<h2 id=\"图片视频上传解决方案\"><a href=\"#图片视频上传解决方案\" class=\"headerlink\" title=\"图片视频上传解决方案\"></a>图片视频上传解决方案</h2><ol>\n<li><p>调用接口，返回数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">fnUpload</span> = (<span class=\"params\">e</span>) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> type = store.<span class=\"property\">state</span>.<span class=\"property\">type</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> file = e.<span class=\"property\">target</span>.<span class=\"property\">files</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _data = <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>();</span><br><span class=\"line\">      _data.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;file&#x27;</span>, file);</span><br><span class=\"line\">      axios.<span class=\"title function_\">post</span>(<span class=\"string\">&quot;http://127.0.0.1:3001/album/upload&quot;</span>, _data, &#123;</span><br><span class=\"line\">        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;content-type&quot;</span>: <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(type == <span class=\"string\">&#x27;component&#x27;</span>)&#123;</span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">picContent</span> = res?.<span class=\"property\">data</span>?.<span class=\"property\">data</span>?.<span class=\"property\">path</span> || <span class=\"string\">&#x27;https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">bgColor</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">          props.<span class=\"property\">data</span>.<span class=\"property\">bgImg</span> = res?.<span class=\"property\">data</span>?.<span class=\"property\">data</span>?.<span class=\"property\">path</span> || <span class=\"string\">&#x27;https://p6-orange.byteorge.com/img/ad-tetris-site/brick_tpl_picture_0.png~noop.webp&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> historyIndex = store.<span class=\"property\">state</span>.<span class=\"property\">historyIndex</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(historyIndex != -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> historyViews = store.<span class=\"property\">state</span>.<span class=\"property\">historyViews</span></span><br><span class=\"line\">          <span class=\"comment\">// 获取当前操作，舍弃后面的数据</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> arr = historyViews.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, historyIndex+<span class=\"number\">1</span>)</span><br><span class=\"line\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;fnChangeHistoryView&#x27;</span>, <span class=\"title function_\">deepClone</span>(arr))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;fnAddHistoryView&#x27;</span>, <span class=\"title function_\">deepClone</span>(store.<span class=\"property\">state</span>.<span class=\"property\">views</span>))</span><br><span class=\"line\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;changeHistoryIndex&#x27;</span>, - <span class=\"number\">1</span>)</span><br><span class=\"line\">        e.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">      &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        e.<span class=\"property\">target</span>.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      fnUpload,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>将页面中放图片的位置放默认图片或者默认视频，或者置空，给样式加flex-shrink:0;防止伸缩，之后后期将需要加的图片放到src中</p>\n</li>\n</ol>\n<h2 id=\"修改属性解决方案\"><a href=\"#修改属性解决方案\" class=\"headerlink\" title=\"修改属性解决方案\"></a>修改属性解决方案</h2><ol>\n<li>根据被点击的元素，遍历可修改的属性并返回，通过修改该对象进而修改显示结果<img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md250825.9080774.png\"></li>\n</ol>\n<h2 id=\"发布解决方案\"><a href=\"#发布解决方案\" class=\"headerlink\" title=\"发布解决方案\"></a>发布解决方案</h2><ol>\n<li><p>发送请求 保存</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md251039.8216212.png\"></p>\n</li>\n</ol>\n<h2 id=\"元素放置之后的布局定位问题\"><a href=\"#元素放置之后的布局定位问题\" class=\"headerlink\" title=\"元素放置之后的布局定位问题\"></a>元素放置之后的布局定位问题</h2><ol>\n<li><p>提前定义好容器，然后使用views定义的data样式![]<img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/项目3解决方案.md249282.8298926.png\"><br>在外部的容器中使用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrapCenter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: antiquewhite;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.editor</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">375px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">740px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    root<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">                    class<span class=\"punctuation\">:</span><span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    son<span class=\"punctuation\">:</span><span class=\"punctuation\">[</span>...<span class=\"punctuation\">]</span></span><br><span class=\"line\">                <span class=\"punctuation\">]</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span>...<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遗留问题\"><a href=\"#遗留问题\" class=\"headerlink\" title=\"遗留问题\"></a>遗留问题</h2><ul>\n<li>树形结构的预览</li>\n<li>json与vue | html文件的转换</li>\n<li>全局数据管理</li>\n<li>发布文件，vue与html文件转换</li>\n<li>元素布局方式</li>\n<li>拖拽之后提示用户</li>\n</ul>\n<h2 id=\"解决方案-version-1-1\"><a href=\"#解决方案-version-1-1\" class=\"headerlink\" title=\"解决方案(version 1.1)\"></a>解决方案(version 1.1)</h2><ol>\n<li>首先布局分为left，center，right，header</li>\n<li>将低代码每个组件封装的json数据放置到vuex中</li>\n<li>left将vuex中的组件数据循环出来</li>\n<li>left拖拽之后，拖到中间center区域，当dragover事件被触发时修改该被dragover的元素样式，提示用户，例如是在上方则在上方创建一个新的盒子，之后如果用户松手则与该盒子替换</li>\n<li>替换之后更新center页面中的树形结构数据，页面照常预览</li>\n<li>用户点击某一元素之后，根据该元素提前定义好的data值，在right中显示出相应要修改的属性</li>\n<li>点击发布之后将json？how to vue or html ？之后生成链接供别人访问</li>\n</ol>\n"},{"title":"io模板","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\n// 本题为考试单行多行输入输出规范示例，无需提交，不计分。\n\nwhile(line=readline()){\n    var lines = line.split(\" \");\n    var a = lines[0];\n    var b = parseInt(lines[lines.length-1]);\n    var arr=a.split(\",\").map(arr=>parseInt(arr));\n    if(arr.length==1)print(-1)\n    else{\n        var flag=false;\n        for(let i=0;i<arr.length-1;i++){\n            for(let j=i+1;j<arr.length;j++){\n                if(arr[i]+arr[j]===b){\n                    print(i+\",\"+j);\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag)break;\n        }\n        if(!flag)print(-1)\n    }\n}\n```\n\n```javascript\n// 本题为考试单行多行输入输出规范示例，无需提交，不计分。\nvar twoSum = function(nums, target) {\n    for(let i = 0, len = nums.length;i < len;i++){\n        // 因为同一元素不允许重复出现，所以从i的下一位开始遍历\n        for(let j = i + 1;j < len;j++) {\n            if(nums[i] + nums[j] === target) {\n                return [i, j];\n            }\n        }\n    }\n    // 所有样例都是有返回结果的，这里无所谓\n    return -1;\n};\nwhile(line=readline()){\n    var lines = line.split(\" \");\n    var a = lines[0];\n    var b = parseInt(lines[lines.length-1]);\n    var arr=a.split(\",\").map(arr=>parseInt(arr));\n    var res=twoSum(arr,b);\n    if(res===-1){\n        print(-1)\n    }else{\n        print(res[0]+\",\"+res[1]);\n    }\n\n}\n```\n","source":"_posts/学校/准大三暑假/青训营/考试内容.md","raw":"---\ntitle: 'io模板'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\n    - 算法\ncategories: js\n---\n\n```javascript\n// 本题为考试单行多行输入输出规范示例，无需提交，不计分。\n\nwhile(line=readline()){\n    var lines = line.split(\" \");\n    var a = lines[0];\n    var b = parseInt(lines[lines.length-1]);\n    var arr=a.split(\",\").map(arr=>parseInt(arr));\n    if(arr.length==1)print(-1)\n    else{\n        var flag=false;\n        for(let i=0;i<arr.length-1;i++){\n            for(let j=i+1;j<arr.length;j++){\n                if(arr[i]+arr[j]===b){\n                    print(i+\",\"+j);\n                    flag=true;\n                    break;\n                }\n            }\n            if(flag)break;\n        }\n        if(!flag)print(-1)\n    }\n}\n```\n\n```javascript\n// 本题为考试单行多行输入输出规范示例，无需提交，不计分。\nvar twoSum = function(nums, target) {\n    for(let i = 0, len = nums.length;i < len;i++){\n        // 因为同一元素不允许重复出现，所以从i的下一位开始遍历\n        for(let j = i + 1;j < len;j++) {\n            if(nums[i] + nums[j] === target) {\n                return [i, j];\n            }\n        }\n    }\n    // 所有样例都是有返回结果的，这里无所谓\n    return -1;\n};\nwhile(line=readline()){\n    var lines = line.split(\" \");\n    var a = lines[0];\n    var b = parseInt(lines[lines.length-1]);\n    var arr=a.split(\",\").map(arr=>parseInt(arr));\n    var res=twoSum(arr,b);\n    if(res===-1){\n        print(-1)\n    }else{\n        print(res[0]+\",\"+res[1]);\n    }\n\n}\n```\n","slug":"学校/准大三暑假/青训营/考试内容","published":1,"updated":"2023-03-21T09:49:30.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8d006uo8hudxel97vy","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本题为考试单行多行输入输出规范示例，无需提交，不计分。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(line=<span class=\"title function_\">readline</span>())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lines = line.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"built_in\">parseInt</span>(lines[lines.<span class=\"property\">length</span>-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr=a.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;,&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">arr</span>=&gt;</span><span class=\"built_in\">parseInt</span>(arr));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr.<span class=\"property\">length</span>==<span class=\"number\">1</span>)<span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag=<span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=i+<span class=\"number\">1</span>;j&lt;arr.<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(arr[i]+arr[j]===b)&#123;</span><br><span class=\"line\">                    <span class=\"title function_\">print</span>(i+<span class=\"string\">&quot;,&quot;</span>+j);</span><br><span class=\"line\">                    flag=<span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!flag)<span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本题为考试单行多行输入输出规范示例，无需提交，不计分。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = nums.<span class=\"property\">length</span>;i &lt; len;i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 因为同一元素不允许重复出现，所以从i的下一位开始遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>;j &lt; len;j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] + nums[j] === target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [i, j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 所有样例都是有返回结果的，这里无所谓</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(line=<span class=\"title function_\">readline</span>())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lines = line.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"built_in\">parseInt</span>(lines[lines.<span class=\"property\">length</span>-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr=a.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;,&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">arr</span>=&gt;</span><span class=\"built_in\">parseInt</span>(arr));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res=<span class=\"title function_\">twoSum</span>(arr,b);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(res===-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">print</span>(res[<span class=\"number\">0</span>]+<span class=\"string\">&quot;,&quot;</span>+res[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本题为考试单行多行输入输出规范示例，无需提交，不计分。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(line=<span class=\"title function_\">readline</span>())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lines = line.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"built_in\">parseInt</span>(lines[lines.<span class=\"property\">length</span>-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr=a.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;,&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">arr</span>=&gt;</span><span class=\"built_in\">parseInt</span>(arr));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr.<span class=\"property\">length</span>==<span class=\"number\">1</span>)<span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag=<span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=i+<span class=\"number\">1</span>;j&lt;arr.<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(arr[i]+arr[j]===b)&#123;</span><br><span class=\"line\">                    <span class=\"title function_\">print</span>(i+<span class=\"string\">&quot;,&quot;</span>+j);</span><br><span class=\"line\">                    flag=<span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!flag)<span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 本题为考试单行多行输入输出规范示例，无需提交，不计分。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = nums.<span class=\"property\">length</span>;i &lt; len;i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 因为同一元素不允许重复出现，所以从i的下一位开始遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>;j &lt; len;j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] + nums[j] === target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [i, j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 所有样例都是有返回结果的，这里无所谓</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(line=<span class=\"title function_\">readline</span>())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lines = line.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"built_in\">parseInt</span>(lines[lines.<span class=\"property\">length</span>-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr=a.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;,&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">arr</span>=&gt;</span><span class=\"built_in\">parseInt</span>(arr));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res=<span class=\"title function_\">twoSum</span>(arr,b);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(res===-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">print</span>(-<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">print</span>(res[<span class=\"number\">0</span>]+<span class=\"string\">&quot;,&quot;</span>+res[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"低代码开发进度","date":"2022-10-15T02:06:51.000Z","_content":"\n## 树形结构渲染\n\n1. 首先页面views数组动态渲染数据\n2. 循环views数组，将数据传递给子组件\n3. 容器默认主轴为culum\n4. 子组件默认弹性盒模型，主轴为row\n5. 子组件如果按了下方向键，则检查是否有同级组件，如果有则直接在父组件里面放置新数组\n6. 如果没有则一个主轴是侧轴，内部包含两个默认为row的数据替换\n7. 如果按了左方向键，如果有同级组件则直接在父组件里放置新数组，如果没有同级组件则用一个主轴为row，内部含有两个盒子的子组件替换\n\n子组件默认数据\n\n```json\n{\n    name:\"flex-box\",\n    style:{\n        justify-content:\"center\",\n        align-items:\"center\",\n        flex-direction:\"row\"\n    }\n}\n```\n\n## 剩余任务\n\n1. 测试项目\n2. right调整(others)\n3. 图片视频上传\n4. 兼容性调整(改bug)秋\n5. ppt\n6. 文档\n7. 视频\n\n## 拓展任务\n\n1. 拖拽辅助线\n\n## bug\n\n1. 生成的flexbox无法选中\n2. 选中组件的内容会激活父组件的内容\n3. 选中单一组件问题\n4. 选中删除之后的模版问题\n\n## 遗留的问题\n\n## Q\n\n1. 中央溢出（秋）\n2. 预览弹窗（秋）\n3. 发布生成html（秋）\n4. 图标大小问题（海）\n5. 答辩弄网页出来\n6. 单位固定（海）\n7. 复合组件写一些\n8. right样式问题（民）\n9. 绝对定位问题\n10. 动态获取事件坐标\n11. 文档(邱)\n\n## 20号汇总\n\n代码提交了，readme文件有架构说明，现在是静态定位，那个绝对定位和flex在一起总是有问题，绝对定位也不相对于父级定位，你们先看看有什么问题先处理一下吧，我太累了\n\n* [X]  中央溢出\n* [X]  架构调整\n* [X]  静态定位\n* [X]  改部分bug\n* [X]  绝对定位\n* [X]  封装组件\n* [X]  弹窗功能\n* [ ]  发布\n\n发布如果要改就需要两个接口，一个保存前端的id 和对应的json\n\n另一个根据id获取json，写接口\n\n* [X]  绝对定位\n* [X]  导出html(布局没问题，基础组件有问题)\n* [ ]  发布\n\n## 剩余任务\n\n1. [ ]  文档\n2. [ ]  复制/粘贴\n3. [ ]  （文本，按钮，链接，图片）组件的宽高/颜色\n4. [ ]  视频 / 文档\n5. [ ]  上传图片/视频\n6. [ ]  选一个icon\n7. [ ]  汇报网页\n8. [ ]  把log处理一下\n9. [ ]  缓存提示\n\n## 项目已有功能\n\n1. 基础组件\n2. 拖拽\n3. 属性展示\n4. 布局\n5. 样式修改\n6. 撤销重做\n7. 生成html，vue\n8. 导出/导入json\n9. 组件拖拽\n10. 弹性定位，绝对定位，静态定位\n11. 弹性布局\n12. 上传图片\n13. 发布页面\n14. 手机端|pc端\n15. 删除\n16. 拖拽高亮\n17. 调整边框，主轴，侧轴\n18. 预览弹窗\n19. 发布生成链接\n20. 插件配置\n21. elementui\n22. filesave\n23. 服务注册emit\n24. 搜索组件\n\n## 缺少(相对于项目提交文档中的那个在线文档)\n\n1. 复制粘贴\n2. 剪切\n3. 帮助页\n4. 屏幕自适应\n5. 快捷键\n6. 图层调整\n7. 用户提示\n8. i18n国际化\n9. 多选组件\n10. 返回动画\n11. 轮播图\n12. 倒计时模块\n13. 表格\n14. 图标\n\n## 答辩会遇到的问题\n\n1. 项目ui怎么和阿里的一样？\n2.\n\n## bug\n\n1. 预览问题\n\n![](https://cdn.nlark.com/yuque/0/2022/png/110793/1645445575048-cc511d60-3b84-411d-a70e-21b7a596d09c.png)\n","source":"_posts/学校/准大三暑假/青训营/项目7汇总.md","raw":"---\ntitle: '低代码开发进度'\ndate: 2022-10-15 10:06:51\ntags: \n    - vue\n    - 基础\n    - 低代码\ncategories: 前端\n---\n\n## 树形结构渲染\n\n1. 首先页面views数组动态渲染数据\n2. 循环views数组，将数据传递给子组件\n3. 容器默认主轴为culum\n4. 子组件默认弹性盒模型，主轴为row\n5. 子组件如果按了下方向键，则检查是否有同级组件，如果有则直接在父组件里面放置新数组\n6. 如果没有则一个主轴是侧轴，内部包含两个默认为row的数据替换\n7. 如果按了左方向键，如果有同级组件则直接在父组件里放置新数组，如果没有同级组件则用一个主轴为row，内部含有两个盒子的子组件替换\n\n子组件默认数据\n\n```json\n{\n    name:\"flex-box\",\n    style:{\n        justify-content:\"center\",\n        align-items:\"center\",\n        flex-direction:\"row\"\n    }\n}\n```\n\n## 剩余任务\n\n1. 测试项目\n2. right调整(others)\n3. 图片视频上传\n4. 兼容性调整(改bug)秋\n5. ppt\n6. 文档\n7. 视频\n\n## 拓展任务\n\n1. 拖拽辅助线\n\n## bug\n\n1. 生成的flexbox无法选中\n2. 选中组件的内容会激活父组件的内容\n3. 选中单一组件问题\n4. 选中删除之后的模版问题\n\n## 遗留的问题\n\n## Q\n\n1. 中央溢出（秋）\n2. 预览弹窗（秋）\n3. 发布生成html（秋）\n4. 图标大小问题（海）\n5. 答辩弄网页出来\n6. 单位固定（海）\n7. 复合组件写一些\n8. right样式问题（民）\n9. 绝对定位问题\n10. 动态获取事件坐标\n11. 文档(邱)\n\n## 20号汇总\n\n代码提交了，readme文件有架构说明，现在是静态定位，那个绝对定位和flex在一起总是有问题，绝对定位也不相对于父级定位，你们先看看有什么问题先处理一下吧，我太累了\n\n* [X]  中央溢出\n* [X]  架构调整\n* [X]  静态定位\n* [X]  改部分bug\n* [X]  绝对定位\n* [X]  封装组件\n* [X]  弹窗功能\n* [ ]  发布\n\n发布如果要改就需要两个接口，一个保存前端的id 和对应的json\n\n另一个根据id获取json，写接口\n\n* [X]  绝对定位\n* [X]  导出html(布局没问题，基础组件有问题)\n* [ ]  发布\n\n## 剩余任务\n\n1. [ ]  文档\n2. [ ]  复制/粘贴\n3. [ ]  （文本，按钮，链接，图片）组件的宽高/颜色\n4. [ ]  视频 / 文档\n5. [ ]  上传图片/视频\n6. [ ]  选一个icon\n7. [ ]  汇报网页\n8. [ ]  把log处理一下\n9. [ ]  缓存提示\n\n## 项目已有功能\n\n1. 基础组件\n2. 拖拽\n3. 属性展示\n4. 布局\n5. 样式修改\n6. 撤销重做\n7. 生成html，vue\n8. 导出/导入json\n9. 组件拖拽\n10. 弹性定位，绝对定位，静态定位\n11. 弹性布局\n12. 上传图片\n13. 发布页面\n14. 手机端|pc端\n15. 删除\n16. 拖拽高亮\n17. 调整边框，主轴，侧轴\n18. 预览弹窗\n19. 发布生成链接\n20. 插件配置\n21. elementui\n22. filesave\n23. 服务注册emit\n24. 搜索组件\n\n## 缺少(相对于项目提交文档中的那个在线文档)\n\n1. 复制粘贴\n2. 剪切\n3. 帮助页\n4. 屏幕自适应\n5. 快捷键\n6. 图层调整\n7. 用户提示\n8. i18n国际化\n9. 多选组件\n10. 返回动画\n11. 轮播图\n12. 倒计时模块\n13. 表格\n14. 图标\n\n## 答辩会遇到的问题\n\n1. 项目ui怎么和阿里的一样？\n2.\n\n## bug\n\n1. 预览问题\n\n![](https://cdn.nlark.com/yuque/0/2022/png/110793/1645445575048-cc511d60-3b84-411d-a70e-21b7a596d09c.png)\n","slug":"学校/准大三暑假/青训营/项目7汇总","published":1,"updated":"2023-03-21T09:51:40.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8d006xo8hucdyr91vw","content":"<h2 id=\"树形结构渲染\"><a href=\"#树形结构渲染\" class=\"headerlink\" title=\"树形结构渲染\"></a>树形结构渲染</h2><ol>\n<li>首先页面views数组动态渲染数据</li>\n<li>循环views数组，将数据传递给子组件</li>\n<li>容器默认主轴为culum</li>\n<li>子组件默认弹性盒模型，主轴为row</li>\n<li>子组件如果按了下方向键，则检查是否有同级组件，如果有则直接在父组件里面放置新数组</li>\n<li>如果没有则一个主轴是侧轴，内部包含两个默认为row的数据替换</li>\n<li>如果按了左方向键，如果有同级组件则直接在父组件里放置新数组，如果没有同级组件则用一个主轴为row，内部含有两个盒子的子组件替换</li>\n</ol>\n<p>子组件默认数据</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    name<span class=\"punctuation\">:</span><span class=\"string\">&quot;flex-box&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        justify-content<span class=\"punctuation\">:</span><span class=\"string\">&quot;center&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        align-items<span class=\"punctuation\">:</span><span class=\"string\">&quot;center&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        flex-direction<span class=\"punctuation\">:</span><span class=\"string\">&quot;row&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"剩余任务\"><a href=\"#剩余任务\" class=\"headerlink\" title=\"剩余任务\"></a>剩余任务</h2><ol>\n<li>测试项目</li>\n<li>right调整(others)</li>\n<li>图片视频上传</li>\n<li>兼容性调整(改bug)秋</li>\n<li>ppt</li>\n<li>文档</li>\n<li>视频</li>\n</ol>\n<h2 id=\"拓展任务\"><a href=\"#拓展任务\" class=\"headerlink\" title=\"拓展任务\"></a>拓展任务</h2><ol>\n<li>拖拽辅助线</li>\n</ol>\n<h2 id=\"bug\"><a href=\"#bug\" class=\"headerlink\" title=\"bug\"></a>bug</h2><ol>\n<li>生成的flexbox无法选中</li>\n<li>选中组件的内容会激活父组件的内容</li>\n<li>选中单一组件问题</li>\n<li>选中删除之后的模版问题</li>\n</ol>\n<h2 id=\"遗留的问题\"><a href=\"#遗留的问题\" class=\"headerlink\" title=\"遗留的问题\"></a>遗留的问题</h2><h2 id=\"Q\"><a href=\"#Q\" class=\"headerlink\" title=\"Q\"></a>Q</h2><ol>\n<li>中央溢出（秋）</li>\n<li>预览弹窗（秋）</li>\n<li>发布生成html（秋）</li>\n<li>图标大小问题（海）</li>\n<li>答辩弄网页出来</li>\n<li>单位固定（海）</li>\n<li>复合组件写一些</li>\n<li>right样式问题（民）</li>\n<li>绝对定位问题</li>\n<li>动态获取事件坐标</li>\n<li>文档(邱)</li>\n</ol>\n<h2 id=\"20号汇总\"><a href=\"#20号汇总\" class=\"headerlink\" title=\"20号汇总\"></a>20号汇总</h2><p>代码提交了，readme文件有架构说明，现在是静态定位，那个绝对定位和flex在一起总是有问题，绝对定位也不相对于父级定位，你们先看看有什么问题先处理一下吧，我太累了</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 中央溢出</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 架构调整</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 静态定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 改部分bug</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 绝对定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 封装组件</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 弹窗功能</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布</li>\n</ul>\n<p>发布如果要改就需要两个接口，一个保存前端的id 和对应的json</p>\n<p>另一个根据id获取json，写接口</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 绝对定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 导出html(布局没问题，基础组件有问题)</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布</li>\n</ul>\n<h2 id=\"剩余任务-1\"><a href=\"#剩余任务-1\" class=\"headerlink\" title=\"剩余任务\"></a>剩余任务</h2><ol>\n<li><input disabled=\"\" type=\"checkbox\"> 文档</li>\n<li><input disabled=\"\" type=\"checkbox\"> 复制/粘贴</li>\n<li><input disabled=\"\" type=\"checkbox\"> （文本，按钮，链接，图片）组件的宽高/颜色</li>\n<li><input disabled=\"\" type=\"checkbox\"> 视频 / 文档</li>\n<li><input disabled=\"\" type=\"checkbox\"> 上传图片/视频</li>\n<li><input disabled=\"\" type=\"checkbox\"> 选一个icon</li>\n<li><input disabled=\"\" type=\"checkbox\"> 汇报网页</li>\n<li><input disabled=\"\" type=\"checkbox\"> 把log处理一下</li>\n<li><input disabled=\"\" type=\"checkbox\"> 缓存提示</li>\n</ol>\n<h2 id=\"项目已有功能\"><a href=\"#项目已有功能\" class=\"headerlink\" title=\"项目已有功能\"></a>项目已有功能</h2><ol>\n<li>基础组件</li>\n<li>拖拽</li>\n<li>属性展示</li>\n<li>布局</li>\n<li>样式修改</li>\n<li>撤销重做</li>\n<li>生成html，vue</li>\n<li>导出/导入json</li>\n<li>组件拖拽</li>\n<li>弹性定位，绝对定位，静态定位</li>\n<li>弹性布局</li>\n<li>上传图片</li>\n<li>发布页面</li>\n<li>手机端|pc端</li>\n<li>删除</li>\n<li>拖拽高亮</li>\n<li>调整边框，主轴，侧轴</li>\n<li>预览弹窗</li>\n<li>发布生成链接</li>\n<li>插件配置</li>\n<li>elementui</li>\n<li>filesave</li>\n<li>服务注册emit</li>\n<li>搜索组件</li>\n</ol>\n<h2 id=\"缺少-相对于项目提交文档中的那个在线文档\"><a href=\"#缺少-相对于项目提交文档中的那个在线文档\" class=\"headerlink\" title=\"缺少(相对于项目提交文档中的那个在线文档)\"></a>缺少(相对于项目提交文档中的那个在线文档)</h2><ol>\n<li>复制粘贴</li>\n<li>剪切</li>\n<li>帮助页</li>\n<li>屏幕自适应</li>\n<li>快捷键</li>\n<li>图层调整</li>\n<li>用户提示</li>\n<li>i18n国际化</li>\n<li>多选组件</li>\n<li>返回动画</li>\n<li>轮播图</li>\n<li>倒计时模块</li>\n<li>表格</li>\n<li>图标</li>\n</ol>\n<h2 id=\"答辩会遇到的问题\"><a href=\"#答辩会遇到的问题\" class=\"headerlink\" title=\"答辩会遇到的问题\"></a>答辩会遇到的问题</h2><ol>\n<li>项目ui怎么和阿里的一样？</li>\n<li></li>\n</ol>\n<h2 id=\"bug-1\"><a href=\"#bug-1\" class=\"headerlink\" title=\"bug\"></a>bug</h2><ol>\n<li>预览问题</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/110793/1645445575048-cc511d60-3b84-411d-a70e-21b7a596d09c.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"树形结构渲染\"><a href=\"#树形结构渲染\" class=\"headerlink\" title=\"树形结构渲染\"></a>树形结构渲染</h2><ol>\n<li>首先页面views数组动态渲染数据</li>\n<li>循环views数组，将数据传递给子组件</li>\n<li>容器默认主轴为culum</li>\n<li>子组件默认弹性盒模型，主轴为row</li>\n<li>子组件如果按了下方向键，则检查是否有同级组件，如果有则直接在父组件里面放置新数组</li>\n<li>如果没有则一个主轴是侧轴，内部包含两个默认为row的数据替换</li>\n<li>如果按了左方向键，如果有同级组件则直接在父组件里放置新数组，如果没有同级组件则用一个主轴为row，内部含有两个盒子的子组件替换</li>\n</ol>\n<p>子组件默认数据</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    name<span class=\"punctuation\">:</span><span class=\"string\">&quot;flex-box&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    style<span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        justify-content<span class=\"punctuation\">:</span><span class=\"string\">&quot;center&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        align-items<span class=\"punctuation\">:</span><span class=\"string\">&quot;center&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        flex-direction<span class=\"punctuation\">:</span><span class=\"string\">&quot;row&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"剩余任务\"><a href=\"#剩余任务\" class=\"headerlink\" title=\"剩余任务\"></a>剩余任务</h2><ol>\n<li>测试项目</li>\n<li>right调整(others)</li>\n<li>图片视频上传</li>\n<li>兼容性调整(改bug)秋</li>\n<li>ppt</li>\n<li>文档</li>\n<li>视频</li>\n</ol>\n<h2 id=\"拓展任务\"><a href=\"#拓展任务\" class=\"headerlink\" title=\"拓展任务\"></a>拓展任务</h2><ol>\n<li>拖拽辅助线</li>\n</ol>\n<h2 id=\"bug\"><a href=\"#bug\" class=\"headerlink\" title=\"bug\"></a>bug</h2><ol>\n<li>生成的flexbox无法选中</li>\n<li>选中组件的内容会激活父组件的内容</li>\n<li>选中单一组件问题</li>\n<li>选中删除之后的模版问题</li>\n</ol>\n<h2 id=\"遗留的问题\"><a href=\"#遗留的问题\" class=\"headerlink\" title=\"遗留的问题\"></a>遗留的问题</h2><h2 id=\"Q\"><a href=\"#Q\" class=\"headerlink\" title=\"Q\"></a>Q</h2><ol>\n<li>中央溢出（秋）</li>\n<li>预览弹窗（秋）</li>\n<li>发布生成html（秋）</li>\n<li>图标大小问题（海）</li>\n<li>答辩弄网页出来</li>\n<li>单位固定（海）</li>\n<li>复合组件写一些</li>\n<li>right样式问题（民）</li>\n<li>绝对定位问题</li>\n<li>动态获取事件坐标</li>\n<li>文档(邱)</li>\n</ol>\n<h2 id=\"20号汇总\"><a href=\"#20号汇总\" class=\"headerlink\" title=\"20号汇总\"></a>20号汇总</h2><p>代码提交了，readme文件有架构说明，现在是静态定位，那个绝对定位和flex在一起总是有问题，绝对定位也不相对于父级定位，你们先看看有什么问题先处理一下吧，我太累了</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 中央溢出</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 架构调整</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 静态定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 改部分bug</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 绝对定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 封装组件</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 弹窗功能</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布</li>\n</ul>\n<p>发布如果要改就需要两个接口，一个保存前端的id 和对应的json</p>\n<p>另一个根据id获取json，写接口</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 绝对定位</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 导出html(布局没问题，基础组件有问题)</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布</li>\n</ul>\n<h2 id=\"剩余任务-1\"><a href=\"#剩余任务-1\" class=\"headerlink\" title=\"剩余任务\"></a>剩余任务</h2><ol>\n<li><input disabled=\"\" type=\"checkbox\"> 文档</li>\n<li><input disabled=\"\" type=\"checkbox\"> 复制/粘贴</li>\n<li><input disabled=\"\" type=\"checkbox\"> （文本，按钮，链接，图片）组件的宽高/颜色</li>\n<li><input disabled=\"\" type=\"checkbox\"> 视频 / 文档</li>\n<li><input disabled=\"\" type=\"checkbox\"> 上传图片/视频</li>\n<li><input disabled=\"\" type=\"checkbox\"> 选一个icon</li>\n<li><input disabled=\"\" type=\"checkbox\"> 汇报网页</li>\n<li><input disabled=\"\" type=\"checkbox\"> 把log处理一下</li>\n<li><input disabled=\"\" type=\"checkbox\"> 缓存提示</li>\n</ol>\n<h2 id=\"项目已有功能\"><a href=\"#项目已有功能\" class=\"headerlink\" title=\"项目已有功能\"></a>项目已有功能</h2><ol>\n<li>基础组件</li>\n<li>拖拽</li>\n<li>属性展示</li>\n<li>布局</li>\n<li>样式修改</li>\n<li>撤销重做</li>\n<li>生成html，vue</li>\n<li>导出/导入json</li>\n<li>组件拖拽</li>\n<li>弹性定位，绝对定位，静态定位</li>\n<li>弹性布局</li>\n<li>上传图片</li>\n<li>发布页面</li>\n<li>手机端|pc端</li>\n<li>删除</li>\n<li>拖拽高亮</li>\n<li>调整边框，主轴，侧轴</li>\n<li>预览弹窗</li>\n<li>发布生成链接</li>\n<li>插件配置</li>\n<li>elementui</li>\n<li>filesave</li>\n<li>服务注册emit</li>\n<li>搜索组件</li>\n</ol>\n<h2 id=\"缺少-相对于项目提交文档中的那个在线文档\"><a href=\"#缺少-相对于项目提交文档中的那个在线文档\" class=\"headerlink\" title=\"缺少(相对于项目提交文档中的那个在线文档)\"></a>缺少(相对于项目提交文档中的那个在线文档)</h2><ol>\n<li>复制粘贴</li>\n<li>剪切</li>\n<li>帮助页</li>\n<li>屏幕自适应</li>\n<li>快捷键</li>\n<li>图层调整</li>\n<li>用户提示</li>\n<li>i18n国际化</li>\n<li>多选组件</li>\n<li>返回动画</li>\n<li>轮播图</li>\n<li>倒计时模块</li>\n<li>表格</li>\n<li>图标</li>\n</ol>\n<h2 id=\"答辩会遇到的问题\"><a href=\"#答辩会遇到的问题\" class=\"headerlink\" title=\"答辩会遇到的问题\"></a>答辩会遇到的问题</h2><ol>\n<li>项目ui怎么和阿里的一样？</li>\n<li></li>\n</ol>\n<h2 id=\"bug-1\"><a href=\"#bug-1\" class=\"headerlink\" title=\"bug\"></a>bug</h2><ol>\n<li>预览问题</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/110793/1645445575048-cc511d60-3b84-411d-a70e-21b7a596d09c.png\"></p>\n"},{"title":"基本使用","date":"2022-10-15T02:06:51.000Z","_content":"\n## 使用过程\n\n1. 首先定义一个node的项目nom init -y\n2. 然后新建一个src目录，写上js文件\n3. 配置.babelrc文件：{\"presets\":[\"es2015\"],\"plugins\":[]}\n4. 安装解码器：cnpm install --save-dev babel-preset-es2015\n5. 生成编译文件babel src -d dist\n","source":"_posts/前端/进阶/大前端进阶/babel.md","raw":"---\ntitle: '基本使用'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\n    - babel\ncategories: 前端\n---\n\n## 使用过程\n\n1. 首先定义一个node的项目nom init -y\n2. 然后新建一个src目录，写上js文件\n3. 配置.babelrc文件：{\"presets\":[\"es2015\"],\"plugins\":[]}\n4. 安装解码器：cnpm install --save-dev babel-preset-es2015\n5. 生成编译文件babel src -d dist\n","slug":"前端/进阶/大前端进阶/babel","published":1,"updated":"2023-03-21T09:37:29.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8e0071o8hu902948hw","content":"<h2 id=\"使用过程\"><a href=\"#使用过程\" class=\"headerlink\" title=\"使用过程\"></a>使用过程</h2><ol>\n<li>首先定义一个node的项目nom init -y</li>\n<li>然后新建一个src目录，写上js文件</li>\n<li>配置.babelrc文件：{“presets”:[“es2015”],”plugins”:[]}</li>\n<li>安装解码器：cnpm install –save-dev babel-preset-es2015</li>\n<li>生成编译文件babel src -d dist</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用过程\"><a href=\"#使用过程\" class=\"headerlink\" title=\"使用过程\"></a>使用过程</h2><ol>\n<li>首先定义一个node的项目nom init -y</li>\n<li>然后新建一个src目录，写上js文件</li>\n<li>配置.babelrc文件：{“presets”:[“es2015”],”plugins”:[]}</li>\n<li>安装解码器：cnpm install –save-dev babel-preset-es2015</li>\n<li>生成编译文件babel src -d dist</li>\n</ol>\n"},{"title":"cjs规范","date":"2022-10-15T02:06:51.000Z","_content":"\n## 流程\n\n1. 定义\n2. 导出module.exports={}\n3. 使用const m=require(\"./xxx.js\");\n\n```javascript\nconst sum=function(a,b){\n    return a+b;\n}\nconst sub=function(a,b){\n    return a-b;\n}\nconst mul=function(a,b){\n    return a+b;\n}\nconst div=function(a,b){\n    return a/b;\n}\n\nmodule.exports={\n    sum,\n    sub,\n    mul,\n    div\n};\n```\n\n```javascript\nconst m=require(\"./one.js\");\nconsole.log(m.sum(1,2));\nconsole.log(m.sub(1,2));\nconsole.log(m.mul(1,2));\nconsole.log(m.div(1,2));\n```\n\n## es6版本\n\n> 注意：node暂时不支持es6，所以要使用需要将其用babel编译成es5\n\n**第一种方式**\n\n```javascript\nexport function first(){\n    console.log(\"第一个\");\n}\n\nexport function getList(){\n    console.log(\"获取模块列表\");\n}\n```\n\n```javascript\nimport { first,getList } from \"./es61\";\n\nfirst();\ngetList();\n```\n\n**第二种方式**\n\n```javascript\nexport default {\n    first(){\n        console.log(\"第一个\");\n    },\n  \n    getList(){\n        console.log(\"获取模块列表\");\n    }\n}\n```\n\n```javascript\nimport user  from \"./es62.js\";\nuser.first();\nuser.getList();\n```\n","source":"_posts/前端/进阶/大前端进阶/commonJS规范.md","raw":"---\ntitle: 'cjs规范'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 流程\n\n1. 定义\n2. 导出module.exports={}\n3. 使用const m=require(\"./xxx.js\");\n\n```javascript\nconst sum=function(a,b){\n    return a+b;\n}\nconst sub=function(a,b){\n    return a-b;\n}\nconst mul=function(a,b){\n    return a+b;\n}\nconst div=function(a,b){\n    return a/b;\n}\n\nmodule.exports={\n    sum,\n    sub,\n    mul,\n    div\n};\n```\n\n```javascript\nconst m=require(\"./one.js\");\nconsole.log(m.sum(1,2));\nconsole.log(m.sub(1,2));\nconsole.log(m.mul(1,2));\nconsole.log(m.div(1,2));\n```\n\n## es6版本\n\n> 注意：node暂时不支持es6，所以要使用需要将其用babel编译成es5\n\n**第一种方式**\n\n```javascript\nexport function first(){\n    console.log(\"第一个\");\n}\n\nexport function getList(){\n    console.log(\"获取模块列表\");\n}\n```\n\n```javascript\nimport { first,getList } from \"./es61\";\n\nfirst();\ngetList();\n```\n\n**第二种方式**\n\n```javascript\nexport default {\n    first(){\n        console.log(\"第一个\");\n    },\n  \n    getList(){\n        console.log(\"获取模块列表\");\n    }\n}\n```\n\n```javascript\nimport user  from \"./es62.js\";\nuser.first();\nuser.getList();\n```\n","slug":"前端/进阶/大前端进阶/commonJS规范","published":1,"updated":"2023-03-21T09:37:41.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8f0074o8hu04r9e1rb","content":"<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><ol>\n<li>定义</li>\n<li>导出module.exports={}</li>\n<li>使用const m=require(“./xxx.js”);</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sum=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> sub=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> mul=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> div=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a/b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    sum,</span><br><span class=\"line\">    sub,</span><br><span class=\"line\">    mul,</span><br><span class=\"line\">    div</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> m=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./one.js&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">sub</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">mul</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">div</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"es6版本\"><a href=\"#es6版本\" class=\"headerlink\" title=\"es6版本\"></a>es6版本</h2><blockquote>\n<p>注意：node暂时不支持es6，所以要使用需要将其用babel编译成es5</p>\n</blockquote>\n<p><strong>第一种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">first</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;第一个&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getList</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;获取模块列表&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; first,getList &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./es61&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">first</span>();</span><br><span class=\"line\"><span class=\"title function_\">getList</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">first</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;第一个&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">getList</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;获取模块列表&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> user  <span class=\"keyword\">from</span> <span class=\"string\">&quot;./es62.js&quot;</span>;</span><br><span class=\"line\">user.<span class=\"title function_\">first</span>();</span><br><span class=\"line\">user.<span class=\"title function_\">getList</span>();</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><ol>\n<li>定义</li>\n<li>导出module.exports={}</li>\n<li>使用const m=require(“./xxx.js”);</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sum=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> sub=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> mul=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> div=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a/b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    sum,</span><br><span class=\"line\">    sub,</span><br><span class=\"line\">    mul,</span><br><span class=\"line\">    div</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> m=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./one.js&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">sum</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">sub</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">mul</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m.<span class=\"title function_\">div</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"es6版本\"><a href=\"#es6版本\" class=\"headerlink\" title=\"es6版本\"></a>es6版本</h2><blockquote>\n<p>注意：node暂时不支持es6，所以要使用需要将其用babel编译成es5</p>\n</blockquote>\n<p><strong>第一种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">first</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;第一个&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getList</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;获取模块列表&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; first,getList &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./es61&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">first</span>();</span><br><span class=\"line\"><span class=\"title function_\">getList</span>();</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二种方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">first</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;第一个&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">getList</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;获取模块列表&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> user  <span class=\"keyword\">from</span> <span class=\"string\">&quot;./es62.js&quot;</span>;</span><br><span class=\"line\">user.<span class=\"title function_\">first</span>();</span><br><span class=\"line\">user.<span class=\"title function_\">getList</span>();</span><br></pre></td></tr></table></figure>\n"},{"title":"webpack基本使用","date":"2022-10-15T02:06:51.000Z","_content":"\n## 安装\n\n```\nnpm install -g webpack webpack-cli\n```\n\n## 使用过程\n\n- 首先新建一个node项目\n- 然后写好要打包的文件\n- 之后定义webpack.config.js的配置文件,导入path模块，定义规则，module.exports={entry:\"src/main.js\",output:{path:path.resolve(__dirname,\"./dist\"),filename:\"bundle.js\"}}\n- 执行webpack\n\n```javascript\nexports.info=function(str){\n    console.log(str);\n};\n```\n\n```javascript\nexports.add=function(a,b){\n    console.log(a,b);\n};\n```\n\n```javascript\nconst util=require(\"./util.js\");\nconst common=require(\"./common.js\");\ncommon.info(\"你好\");\nutil.add(1,2);\n```\n\n```javascript\nconst path = require(\"path\");\n\nmodule.exports={\n    entry:\"./src/main.js\",\n    output:{\n        path:path.resolve(__dirname,\"./dist\"),\n        filename:\"bundle.js\"\n    }\n}\n```\n\n## 打包css\n\n- 安装类加载器npm install --save-dev style-loader css-loader\n- 在webpack配置文件中新建module\n- 在打包入口文件中添加css文件(require)\n\n```javascript\nmodule:{\n    rules:[{\n        test:/\\.css$/,\n        use:[\"style-loader\",\"css-loader\"]\n    }]\n}\n```\n","source":"_posts/前端/进阶/大前端进阶/webpack.md","raw":"---\ntitle: 'webpack基本使用'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## 安装\n\n```\nnpm install -g webpack webpack-cli\n```\n\n## 使用过程\n\n- 首先新建一个node项目\n- 然后写好要打包的文件\n- 之后定义webpack.config.js的配置文件,导入path模块，定义规则，module.exports={entry:\"src/main.js\",output:{path:path.resolve(__dirname,\"./dist\"),filename:\"bundle.js\"}}\n- 执行webpack\n\n```javascript\nexports.info=function(str){\n    console.log(str);\n};\n```\n\n```javascript\nexports.add=function(a,b){\n    console.log(a,b);\n};\n```\n\n```javascript\nconst util=require(\"./util.js\");\nconst common=require(\"./common.js\");\ncommon.info(\"你好\");\nutil.add(1,2);\n```\n\n```javascript\nconst path = require(\"path\");\n\nmodule.exports={\n    entry:\"./src/main.js\",\n    output:{\n        path:path.resolve(__dirname,\"./dist\"),\n        filename:\"bundle.js\"\n    }\n}\n```\n\n## 打包css\n\n- 安装类加载器npm install --save-dev style-loader css-loader\n- 在webpack配置文件中新建module\n- 在打包入口文件中添加css文件(require)\n\n```javascript\nmodule:{\n    rules:[{\n        test:/\\.css$/,\n        use:[\"style-loader\",\"css-loader\"]\n    }]\n}\n```\n","slug":"前端/进阶/大前端进阶/webpack","published":1,"updated":"2023-03-21T09:38:44.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8g0078o8hu2jn1eyki","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g webpack webpack-cli</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用过程\"><a href=\"#使用过程\" class=\"headerlink\" title=\"使用过程\"></a>使用过程</h2><ul>\n<li>首先新建一个node项目</li>\n<li>然后写好要打包的文件</li>\n<li>之后定义webpack.config.js的配置文件,导入path模块，定义规则，module.exports={entry:”src/main.js”,output:{path:path.resolve(__dirname,”./dist”),filename:”bundle.js”}}</li>\n<li>执行webpack</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">info</span>=<span class=\"keyword\">function</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">add</span>=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> util=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./util.js&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> common=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./common.js&quot;</span>);</span><br><span class=\"line\">common.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">util.<span class=\"title function_\">add</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">entry</span>:<span class=\"string\">&quot;./src/main.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>:path.<span class=\"title function_\">resolve</span>(__dirname,<span class=\"string\">&quot;./dist&quot;</span>),</span><br><span class=\"line\">        <span class=\"attr\">filename</span>:<span class=\"string\">&quot;bundle.js&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打包css\"><a href=\"#打包css\" class=\"headerlink\" title=\"打包css\"></a>打包css</h2><ul>\n<li>安装类加载器npm install –save-dev style-loader css-loader</li>\n<li>在webpack配置文件中新建module</li>\n<li>在打包入口文件中添加css文件(require)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">module</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>:[&#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">use</span>:[<span class=\"string\">&quot;style-loader&quot;</span>,<span class=\"string\">&quot;css-loader&quot;</span>]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g webpack webpack-cli</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用过程\"><a href=\"#使用过程\" class=\"headerlink\" title=\"使用过程\"></a>使用过程</h2><ul>\n<li>首先新建一个node项目</li>\n<li>然后写好要打包的文件</li>\n<li>之后定义webpack.config.js的配置文件,导入path模块，定义规则，module.exports={entry:”src/main.js”,output:{path:path.resolve(__dirname,”./dist”),filename:”bundle.js”}}</li>\n<li>执行webpack</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">info</span>=<span class=\"keyword\">function</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">add</span>=<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a,b);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> util=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./util.js&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> common=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;./common.js&quot;</span>);</span><br><span class=\"line\">common.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;你好&quot;</span>);</span><br><span class=\"line\">util.<span class=\"title function_\">add</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>=&#123;</span><br><span class=\"line\">    <span class=\"attr\">entry</span>:<span class=\"string\">&quot;./src/main.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>:path.<span class=\"title function_\">resolve</span>(__dirname,<span class=\"string\">&quot;./dist&quot;</span>),</span><br><span class=\"line\">        <span class=\"attr\">filename</span>:<span class=\"string\">&quot;bundle.js&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打包css\"><a href=\"#打包css\" class=\"headerlink\" title=\"打包css\"></a>打包css</h2><ul>\n<li>安装类加载器npm install –save-dev style-loader css-loader</li>\n<li>在webpack配置文件中新建module</li>\n<li>在打包入口文件中添加css文件(require)</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">module</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>:[&#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">use</span>:[<span class=\"string\">&quot;style-loader&quot;</span>,<span class=\"string\">&quot;css-loader&quot;</span>]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"包管理器","date":"2022-10-15T02:06:51.000Z","_content":"\n## npm（node package manager）\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md142027.4601679.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md142099.1894383.png)\n\n## npm init -y\n\n> 以默认的方式生成package.json\n\n## 运行方式\n\n```javascript\nconst mysql=require(\"mysql\");\nconst redis=require(\"redis\");\nconst client=redis.createClient();\nclient.on(\"error\",function(error){\n    console.log(error);\n});\nclient.set(\"key\",\"value\",redis.print);\nclient.get(\"key\",redis.print);\n```\n\n## npm使用总结\n\n- 初始化方式 npm init 或者npm init -y默认生成package.json\n- 运行方式node 文件名称\n- 运行编译项目npm run 分支名称\n- 下载方式npm install xxx\n- 可以下载多个文件npm install xxxx xxxx xxxx\n- 指定版本号npm install xxx@版本号\n- package.json的作用：相当于maven，记录依赖的版本号，之后利用npm install可以重新下载node modules的文件\n- 使用模块用require(\"mysql\");\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md52802.3586232.png)\n","source":"_posts/前端/进阶/大前端进阶/npm包管理器.md","raw":"---\ntitle: '包管理器'\ndate: 2022-10-15 10:06:51\ntags: \n    - 笔记\n    - 基础\ncategories: 前端\n---\n\n## npm（node package manager）\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md142027.4601679.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md142099.1894383.png)\n\n## npm init -y\n\n> 以默认的方式生成package.json\n\n## 运行方式\n\n```javascript\nconst mysql=require(\"mysql\");\nconst redis=require(\"redis\");\nconst client=redis.createClient();\nclient.on(\"error\",function(error){\n    console.log(error);\n});\nclient.set(\"key\",\"value\",redis.print);\nclient.get(\"key\",redis.print);\n```\n\n## npm使用总结\n\n- 初始化方式 npm init 或者npm init -y默认生成package.json\n- 运行方式node 文件名称\n- 运行编译项目npm run 分支名称\n- 下载方式npm install xxx\n- 可以下载多个文件npm install xxxx xxxx xxxx\n- 指定版本号npm install xxx@版本号\n- package.json的作用：相当于maven，记录依赖的版本号，之后利用npm install可以重新下载node modules的文件\n- 使用模块用require(\"mysql\");\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\npm包管理器.md52802.3586232.png)\n","slug":"前端/进阶/大前端进阶/npm包管理器","published":1,"updated":"2023-03-21T09:37:49.729Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8h007bo8hu2jdshaea","content":"<h2 id=\"npm（node-package-manager）\"><a href=\"#npm（node-package-manager）\" class=\"headerlink\" title=\"npm（node package manager）\"></a>npm（node package manager）</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md142027.4601679.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md142099.1894383.png\"></p>\n<h2 id=\"npm-init-y\"><a href=\"#npm-init-y\" class=\"headerlink\" title=\"npm init -y\"></a>npm init -y</h2><blockquote>\n<p>以默认的方式生成package.json</p>\n</blockquote>\n<h2 id=\"运行方式\"><a href=\"#运行方式\" class=\"headerlink\" title=\"运行方式\"></a>运行方式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mysql=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;mysql&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> redis=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;redis&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> client=redis.<span class=\"title function_\">createClient</span>();</span><br><span class=\"line\">client.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;error&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">error</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">client.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;key&quot;</span>,<span class=\"string\">&quot;value&quot;</span>,redis.<span class=\"property\">print</span>);</span><br><span class=\"line\">client.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;key&quot;</span>,redis.<span class=\"property\">print</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"npm使用总结\"><a href=\"#npm使用总结\" class=\"headerlink\" title=\"npm使用总结\"></a>npm使用总结</h2><ul>\n<li>初始化方式 npm init 或者npm init -y默认生成package.json</li>\n<li>运行方式node 文件名称</li>\n<li>运行编译项目npm run 分支名称</li>\n<li>下载方式npm install xxx</li>\n<li>可以下载多个文件npm install xxxx xxxx xxxx</li>\n<li>指定版本号npm install xxx@版本号</li>\n<li>package.json的作用：相当于maven，记录依赖的版本号，之后利用npm install可以重新下载node modules的文件</li>\n<li>使用模块用require(“mysql”);</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md52802.3586232.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"npm（node-package-manager）\"><a href=\"#npm（node-package-manager）\" class=\"headerlink\" title=\"npm（node package manager）\"></a>npm（node package manager）</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md142027.4601679.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md142099.1894383.png\"></p>\n<h2 id=\"npm-init-y\"><a href=\"#npm-init-y\" class=\"headerlink\" title=\"npm init -y\"></a>npm init -y</h2><blockquote>\n<p>以默认的方式生成package.json</p>\n</blockquote>\n<h2 id=\"运行方式\"><a href=\"#运行方式\" class=\"headerlink\" title=\"运行方式\"></a>运行方式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mysql=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;mysql&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> redis=<span class=\"built_in\">require</span>(<span class=\"string\">&quot;redis&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> client=redis.<span class=\"title function_\">createClient</span>();</span><br><span class=\"line\">client.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;error&quot;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">error</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">client.<span class=\"title function_\">set</span>(<span class=\"string\">&quot;key&quot;</span>,<span class=\"string\">&quot;value&quot;</span>,redis.<span class=\"property\">print</span>);</span><br><span class=\"line\">client.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;key&quot;</span>,redis.<span class=\"property\">print</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"npm使用总结\"><a href=\"#npm使用总结\" class=\"headerlink\" title=\"npm使用总结\"></a>npm使用总结</h2><ul>\n<li>初始化方式 npm init 或者npm init -y默认生成package.json</li>\n<li>运行方式node 文件名称</li>\n<li>运行编译项目npm run 分支名称</li>\n<li>下载方式npm install xxx</li>\n<li>可以下载多个文件npm install xxxx xxxx xxxx</li>\n<li>指定版本号npm install xxx@版本号</li>\n<li>package.json的作用：相当于maven，记录依赖的版本号，之后利用npm install可以重新下载node modules的文件</li>\n<li>使用模块用require(“mysql”);</li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\npm包管理器.md52802.3586232.png\"></p>\n"},{"title":"模块化开发规范","date":"2022-10-15T02:06:51.000Z","_content":"\n## 导出方式\n\n1. model.exports，这种方式是模块化开发，用模块这个对象中的exports方法开放接口给别人使用,别人从exports对象中拿对象，这种方式就是相当于return exports对象，之后通过.方式引用,这种要加=号\n\n   ```javascript\n   // test.js\n   module.exports = {\n      test: \"111\"\n   }\n\n   let test = require(\"test.js\")\n   console.log(test.test)\n   ```\n2. export default,这种方式是导出基本的对象给别人使用，之后就可以用import xxx from 'test.js'这种方式接收这种方式export default这种方式是导出多个对象，之后import引入也是引入多个对象（除非解构）\n\n   ```javascript\n   // test.js\n   export default  {\n      test:\"123\"\n   }\n   import {test} from \"test.js\"\n   console.log(test)\n\n   import test from \"test.js\"\n   console.log(test.test)\n   ```\n3. export function fn(){console.log(\"111\")}这种方式就是单独导出一个对象所以是export不是exports，es6解决了按需引入的问题，而不是一个模块全部导出供给别人使用,总之都是export之后集合到一个对象，不过es6可以解构这个对象\n4. vue.use 就是调用参数中的exports.install方法，之后进行使用\n5. 优东职教通模块开发方式\n\n   ```javascript\n   // global.js\n   // 定义对象，然后导出之后引入对象使用\n\n   // vuex\n   // 首先引入global.js和vuex模块，之后vue.use就可以引入这个插件全局挂载，用export default store 导出对象\n\n   // 之后在原型上挂载这个$store对象\n   ```\n   ```javascript\n   // 导入自定义方法挂载到原型\n   // 首先新建一个文件写入自己的方法和对象\n   // exports.install(主要目的是为了获取vue对象，并挂载到原型) 导入这个对象，并且挂载到原型上\n   // 接下来新建一个index.js文件并将别的文件夹引入\n   // 引入到一个对象并用vue.use,exports.install将对象导出\n   ```\n","source":"_posts/前端/进阶/大前端进阶/模块化开发整理.md","raw":"---\ntitle: '模块化开发规范'\ndate: 2022-10-15 10:06:51\ntags: \n    - 随手记\n    - 基础\ncategories: 前端\n---\n\n## 导出方式\n\n1. model.exports，这种方式是模块化开发，用模块这个对象中的exports方法开放接口给别人使用,别人从exports对象中拿对象，这种方式就是相当于return exports对象，之后通过.方式引用,这种要加=号\n\n   ```javascript\n   // test.js\n   module.exports = {\n      test: \"111\"\n   }\n\n   let test = require(\"test.js\")\n   console.log(test.test)\n   ```\n2. export default,这种方式是导出基本的对象给别人使用，之后就可以用import xxx from 'test.js'这种方式接收这种方式export default这种方式是导出多个对象，之后import引入也是引入多个对象（除非解构）\n\n   ```javascript\n   // test.js\n   export default  {\n      test:\"123\"\n   }\n   import {test} from \"test.js\"\n   console.log(test)\n\n   import test from \"test.js\"\n   console.log(test.test)\n   ```\n3. export function fn(){console.log(\"111\")}这种方式就是单独导出一个对象所以是export不是exports，es6解决了按需引入的问题，而不是一个模块全部导出供给别人使用,总之都是export之后集合到一个对象，不过es6可以解构这个对象\n4. vue.use 就是调用参数中的exports.install方法，之后进行使用\n5. 优东职教通模块开发方式\n\n   ```javascript\n   // global.js\n   // 定义对象，然后导出之后引入对象使用\n\n   // vuex\n   // 首先引入global.js和vuex模块，之后vue.use就可以引入这个插件全局挂载，用export default store 导出对象\n\n   // 之后在原型上挂载这个$store对象\n   ```\n   ```javascript\n   // 导入自定义方法挂载到原型\n   // 首先新建一个文件写入自己的方法和对象\n   // exports.install(主要目的是为了获取vue对象，并挂载到原型) 导入这个对象，并且挂载到原型上\n   // 接下来新建一个index.js文件并将别的文件夹引入\n   // 引入到一个对象并用vue.use,exports.install将对象导出\n   ```\n","slug":"前端/进阶/大前端进阶/模块化开发整理","published":1,"updated":"2023-03-21T09:39:10.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8i007fo8hu553vabm8","content":"<h2 id=\"导出方式\"><a href=\"#导出方式\" class=\"headerlink\" title=\"导出方式\"></a>导出方式</h2><ol>\n<li><p>model.exports，这种方式是模块化开发，用模块这个对象中的exports方法开放接口给别人使用,别人从exports对象中拿对象，这种方式就是相当于return exports对象，之后通过.方式引用,这种要加=号</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// test.js</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">   <span class=\"attr\">test</span>: <span class=\"string\">&quot;111&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;test.js&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test.<span class=\"property\">test</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>export default,这种方式是导出基本的对象给别人使用，之后就可以用import xxx from ‘test.js’这种方式接收这种方式export default这种方式是导出多个对象，之后import引入也是引入多个对象（除非解构）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// test.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>  &#123;</span><br><span class=\"line\">   <span class=\"attr\">test</span>:<span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;test.js&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">&quot;test.js&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test.<span class=\"property\">test</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>export function fn(){console.log(“111”)}这种方式就是单独导出一个对象所以是export不是exports，es6解决了按需引入的问题，而不是一个模块全部导出供给别人使用,总之都是export之后集合到一个对象，不过es6可以解构这个对象</p>\n</li>\n<li><p>vue.use 就是调用参数中的exports.install方法，之后进行使用</p>\n</li>\n<li><p>优东职教通模块开发方式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// global.js</span></span><br><span class=\"line\"><span class=\"comment\">// 定义对象，然后导出之后引入对象使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vuex</span></span><br><span class=\"line\"><span class=\"comment\">// 首先引入global.js和vuex模块，之后vue.use就可以引入这个插件全局挂载，用export default store 导出对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 之后在原型上挂载这个$store对象</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 导入自定义方法挂载到原型</span></span><br><span class=\"line\"><span class=\"comment\">// 首先新建一个文件写入自己的方法和对象</span></span><br><span class=\"line\"><span class=\"comment\">// exports.install(主要目的是为了获取vue对象，并挂载到原型) 导入这个对象，并且挂载到原型上</span></span><br><span class=\"line\"><span class=\"comment\">// 接下来新建一个index.js文件并将别的文件夹引入</span></span><br><span class=\"line\"><span class=\"comment\">// 引入到一个对象并用vue.use,exports.install将对象导出</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"导出方式\"><a href=\"#导出方式\" class=\"headerlink\" title=\"导出方式\"></a>导出方式</h2><ol>\n<li><p>model.exports，这种方式是模块化开发，用模块这个对象中的exports方法开放接口给别人使用,别人从exports对象中拿对象，这种方式就是相当于return exports对象，之后通过.方式引用,这种要加=号</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// test.js</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">   <span class=\"attr\">test</span>: <span class=\"string\">&quot;111&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;test.js&quot;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test.<span class=\"property\">test</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>export default,这种方式是导出基本的对象给别人使用，之后就可以用import xxx from ‘test.js’这种方式接收这种方式export default这种方式是导出多个对象，之后import引入也是引入多个对象（除非解构）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// test.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>  &#123;</span><br><span class=\"line\">   <span class=\"attr\">test</span>:<span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;test.js&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">&quot;test.js&quot;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test.<span class=\"property\">test</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>export function fn(){console.log(“111”)}这种方式就是单独导出一个对象所以是export不是exports，es6解决了按需引入的问题，而不是一个模块全部导出供给别人使用,总之都是export之后集合到一个对象，不过es6可以解构这个对象</p>\n</li>\n<li><p>vue.use 就是调用参数中的exports.install方法，之后进行使用</p>\n</li>\n<li><p>优东职教通模块开发方式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// global.js</span></span><br><span class=\"line\"><span class=\"comment\">// 定义对象，然后导出之后引入对象使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vuex</span></span><br><span class=\"line\"><span class=\"comment\">// 首先引入global.js和vuex模块，之后vue.use就可以引入这个插件全局挂载，用export default store 导出对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 之后在原型上挂载这个$store对象</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 导入自定义方法挂载到原型</span></span><br><span class=\"line\"><span class=\"comment\">// 首先新建一个文件写入自己的方法和对象</span></span><br><span class=\"line\"><span class=\"comment\">// exports.install(主要目的是为了获取vue对象，并挂载到原型) 导入这个对象，并且挂载到原型上</span></span><br><span class=\"line\"><span class=\"comment\">// 接下来新建一个index.js文件并将别的文件夹引入</span></span><br><span class=\"line\"><span class=\"comment\">// 引入到一个对象并用vue.use,exports.install将对象导出</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"git基本使用","date":"2022-10-15T02:06:51.000Z","_content":"\n## 秘钥配置\n\n```plaintext\nssh-keygen -t rsa -C \"你公司内部邮箱地址\"\n// 复制id_rsa.pub\n```\n\n## 用户名邮箱配置\n\n```plaintext\ngit config --global user.name \"xxx\"\ngit config --global user.email \"xxx@xx.com\"\n```\n\n\n### git add\n\n添加文件到暂存区\n\n```bash\n# 添加某个文件到暂存区，后面可以跟多个文件，以空格区分\ngit add xxx\n# 添加当前更改的所有文件到暂存区。\ngit add .\n复制代码\n```\n\n### git commit\n\n```bash\n# 提交暂存的更改，会新开编辑器进行编辑\ngit commit \n# 提交暂存的更改，并记录下备注\ngit commit -m \"you message\"\n# 等同于 git add . && git commit -m\ngit commit -am\n# 对最近一次的提交的信息进行修改,此操作会修改commit的hash值\ngit commit --amend\n复制代码\n```\n\n### git pull\n\n```bash\n# 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch && git merge \ngit pull <远程主机名> <远程分支名>:<本地分支名>\n# 使用rebase的模式进行合并\ngit pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n复制代码\n```\n\n### git fetch\n\n与 `git pull` 不同的是 `git fetch` 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前的代码没有影响\n\n```bash\n# 获取远程仓库特定分支的更新\ngit fetch <远程主机名> <分支名>\n# 获取远程仓库所有分支的更新\ngit fetch --all\n复制代码\n```\n\n### git branch\n\n```bash\n# 新建本地分支，但不切换\ngit branch <branch-name> \n# 查看本地分支\ngit branch\n# 查看远程分支\ngit branch -r\n# 查看本地和远程分支\ngit branch -a\n# 删除本地分支\ngit branch -D <branch-nane>\n# 重新命名分支\ngit branch -m <old-branch-name> <new-branch-name>\n```\n\n## 删除分支\n\n```plaintext\ngit push :<branchname>\n```\n\n[git使用文章，掘进](https://juejin.cn/post/6974184935804534815)\n\n\n\n## 配置 git alias 提升工作效率\n\n一般我们在工作中，接到开发任务后，需要新创建一个分支进行开发  此时需要 用到 git branch、git checkout、 git pull 等命令，在我们一顿操作后，开发完成，到了提交代码的阶段，又要诸如此类 git add 、git commit、git push   等命令，虽然简单，但是输入起来也是不够简洁，作为一个程序员，开发程序就是为了提高我们的效率的，懒是人类进步的源泉，所以我们可以通过配置别名的方式，简化这些命令。\n它的基本用法是  git config --global alias.<简化的字符> 原始命令\n如下面的例子：\n$ git config --global alias.co checkout\n$ git config --global alias.ci commit\n$ git config --global alias.br branch\n\n作者：政采云前端团队\n链接：https://juejin.cn/post/6974184935804534815\n来源：稀土掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n","source":"_posts/各种资源/其他/git/1_命令.md","raw":"---\ntitle: 'git基本使用'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\n    - git\ncategories: git\n---\n\n## 秘钥配置\n\n```plaintext\nssh-keygen -t rsa -C \"你公司内部邮箱地址\"\n// 复制id_rsa.pub\n```\n\n## 用户名邮箱配置\n\n```plaintext\ngit config --global user.name \"xxx\"\ngit config --global user.email \"xxx@xx.com\"\n```\n\n\n### git add\n\n添加文件到暂存区\n\n```bash\n# 添加某个文件到暂存区，后面可以跟多个文件，以空格区分\ngit add xxx\n# 添加当前更改的所有文件到暂存区。\ngit add .\n复制代码\n```\n\n### git commit\n\n```bash\n# 提交暂存的更改，会新开编辑器进行编辑\ngit commit \n# 提交暂存的更改，并记录下备注\ngit commit -m \"you message\"\n# 等同于 git add . && git commit -m\ngit commit -am\n# 对最近一次的提交的信息进行修改,此操作会修改commit的hash值\ngit commit --amend\n复制代码\n```\n\n### git pull\n\n```bash\n# 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch && git merge \ngit pull <远程主机名> <远程分支名>:<本地分支名>\n# 使用rebase的模式进行合并\ngit pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n复制代码\n```\n\n### git fetch\n\n与 `git pull` 不同的是 `git fetch` 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前的代码没有影响\n\n```bash\n# 获取远程仓库特定分支的更新\ngit fetch <远程主机名> <分支名>\n# 获取远程仓库所有分支的更新\ngit fetch --all\n复制代码\n```\n\n### git branch\n\n```bash\n# 新建本地分支，但不切换\ngit branch <branch-name> \n# 查看本地分支\ngit branch\n# 查看远程分支\ngit branch -r\n# 查看本地和远程分支\ngit branch -a\n# 删除本地分支\ngit branch -D <branch-nane>\n# 重新命名分支\ngit branch -m <old-branch-name> <new-branch-name>\n```\n\n## 删除分支\n\n```plaintext\ngit push :<branchname>\n```\n\n[git使用文章，掘进](https://juejin.cn/post/6974184935804534815)\n\n\n\n## 配置 git alias 提升工作效率\n\n一般我们在工作中，接到开发任务后，需要新创建一个分支进行开发  此时需要 用到 git branch、git checkout、 git pull 等命令，在我们一顿操作后，开发完成，到了提交代码的阶段，又要诸如此类 git add 、git commit、git push   等命令，虽然简单，但是输入起来也是不够简洁，作为一个程序员，开发程序就是为了提高我们的效率的，懒是人类进步的源泉，所以我们可以通过配置别名的方式，简化这些命令。\n它的基本用法是  git config --global alias.<简化的字符> 原始命令\n如下面的例子：\n$ git config --global alias.co checkout\n$ git config --global alias.ci commit\n$ git config --global alias.br branch\n\n作者：政采云前端团队\n链接：https://juejin.cn/post/6974184935804534815\n来源：稀土掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n","slug":"各种资源/其他/git/1_命令","published":1,"updated":"2023-03-21T09:40:47.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8i007io8hucq732pm3","content":"<h2 id=\"秘钥配置\"><a href=\"#秘钥配置\" class=\"headerlink\" title=\"秘钥配置\"></a>秘钥配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你公司内部邮箱地址&quot;</span><br><span class=\"line\">// 复制id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户名邮箱配置\"><a href=\"#用户名邮箱配置\" class=\"headerlink\" title=\"用户名邮箱配置\"></a>用户名邮箱配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;xxx&quot;</span><br><span class=\"line\">git config --global user.email &quot;xxx@xx.com&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"git-add\"><a href=\"#git-add\" class=\"headerlink\" title=\"git add\"></a>git add</h3><p>添加文件到暂存区</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加某个文件到暂存区，后面可以跟多个文件，以空格区分</span></span><br><span class=\"line\">git add xxx</span><br><span class=\"line\"><span class=\"comment\"># 添加当前更改的所有文件到暂存区。</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 提交暂存的更改，会新开编辑器进行编辑</span></span><br><span class=\"line\">git commit </span><br><span class=\"line\"><span class=\"comment\"># 提交暂存的更改，并记录下备注</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;you message&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 等同于 git add . &amp;&amp; git commit -m</span></span><br><span class=\"line\">git commit -am</span><br><span class=\"line\"><span class=\"comment\"># 对最近一次的提交的信息进行修改,此操作会修改commit的hash值</span></span><br><span class=\"line\">git commit --amend</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch &amp;&amp; git merge </span></span><br><span class=\"line\">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class=\"line\"><span class=\"comment\"># 使用rebase的模式进行合并</span></span><br><span class=\"line\">git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-fetch\"><a href=\"#git-fetch\" class=\"headerlink\" title=\"git fetch\"></a>git fetch</h3><p>与 <code>git pull</code> 不同的是 <code>git fetch</code> 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前的代码没有影响</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取远程仓库特定分支的更新</span></span><br><span class=\"line\">git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br><span class=\"line\"><span class=\"comment\"># 获取远程仓库所有分支的更新</span></span><br><span class=\"line\">git fetch --all</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建本地分支，但不切换</span></span><br><span class=\"line\">git branch &lt;branch-name&gt; </span><br><span class=\"line\"><span class=\"comment\"># 查看本地分支</span></span><br><span class=\"line\">git branch</span><br><span class=\"line\"><span class=\"comment\"># 查看远程分支</span></span><br><span class=\"line\">git branch -r</span><br><span class=\"line\"><span class=\"comment\"># 查看本地和远程分支</span></span><br><span class=\"line\">git branch -a</span><br><span class=\"line\"><span class=\"comment\"># 删除本地分支</span></span><br><span class=\"line\">git branch -D &lt;branch-nane&gt;</span><br><span class=\"line\"><span class=\"comment\"># 重新命名分支</span></span><br><span class=\"line\">git branch -m &lt;old-branch-name&gt; &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push :&lt;branchname&gt;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://juejin.cn/post/6974184935804534815\">git使用文章，掘进</a></p>\n<h2 id=\"配置-git-alias-提升工作效率\"><a href=\"#配置-git-alias-提升工作效率\" class=\"headerlink\" title=\"配置 git alias 提升工作效率\"></a>配置 git alias 提升工作效率</h2><p>一般我们在工作中，接到开发任务后，需要新创建一个分支进行开发  此时需要 用到 git branch、git checkout、 git pull 等命令，在我们一顿操作后，开发完成，到了提交代码的阶段，又要诸如此类 git add 、git commit、git push   等命令，虽然简单，但是输入起来也是不够简洁，作为一个程序员，开发程序就是为了提高我们的效率的，懒是人类进步的源泉，所以我们可以通过配置别名的方式，简化这些命令。<br>它的基本用法是  git config –global alias.&lt;简化的字符&gt; 原始命令<br>如下面的例子：<br>$ git config –global alias.co checkout<br>$ git config –global alias.ci commit<br>$ git config –global alias.br branch</p>\n<p>作者：政采云前端团队<br>链接：<a href=\"https://juejin.cn/post/6974184935804534815\">https://juejin.cn/post/6974184935804534815</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"秘钥配置\"><a href=\"#秘钥配置\" class=\"headerlink\" title=\"秘钥配置\"></a>秘钥配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你公司内部邮箱地址&quot;</span><br><span class=\"line\">// 复制id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户名邮箱配置\"><a href=\"#用户名邮箱配置\" class=\"headerlink\" title=\"用户名邮箱配置\"></a>用户名邮箱配置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;xxx&quot;</span><br><span class=\"line\">git config --global user.email &quot;xxx@xx.com&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"git-add\"><a href=\"#git-add\" class=\"headerlink\" title=\"git add\"></a>git add</h3><p>添加文件到暂存区</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加某个文件到暂存区，后面可以跟多个文件，以空格区分</span></span><br><span class=\"line\">git add xxx</span><br><span class=\"line\"><span class=\"comment\"># 添加当前更改的所有文件到暂存区。</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 提交暂存的更改，会新开编辑器进行编辑</span></span><br><span class=\"line\">git commit </span><br><span class=\"line\"><span class=\"comment\"># 提交暂存的更改，并记录下备注</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;you message&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 等同于 git add . &amp;&amp; git commit -m</span></span><br><span class=\"line\">git commit -am</span><br><span class=\"line\"><span class=\"comment\"># 对最近一次的提交的信息进行修改,此操作会修改commit的hash值</span></span><br><span class=\"line\">git commit --amend</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch &amp;&amp; git merge </span></span><br><span class=\"line\">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class=\"line\"><span class=\"comment\"># 使用rebase的模式进行合并</span></span><br><span class=\"line\">git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-fetch\"><a href=\"#git-fetch\" class=\"headerlink\" title=\"git fetch\"></a>git fetch</h3><p>与 <code>git pull</code> 不同的是 <code>git fetch</code> 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前的代码没有影响</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取远程仓库特定分支的更新</span></span><br><span class=\"line\">git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br><span class=\"line\"><span class=\"comment\"># 获取远程仓库所有分支的更新</span></span><br><span class=\"line\">git fetch --all</span><br><span class=\"line\">复制代码</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建本地分支，但不切换</span></span><br><span class=\"line\">git branch &lt;branch-name&gt; </span><br><span class=\"line\"><span class=\"comment\"># 查看本地分支</span></span><br><span class=\"line\">git branch</span><br><span class=\"line\"><span class=\"comment\"># 查看远程分支</span></span><br><span class=\"line\">git branch -r</span><br><span class=\"line\"><span class=\"comment\"># 查看本地和远程分支</span></span><br><span class=\"line\">git branch -a</span><br><span class=\"line\"><span class=\"comment\"># 删除本地分支</span></span><br><span class=\"line\">git branch -D &lt;branch-nane&gt;</span><br><span class=\"line\"><span class=\"comment\"># 重新命名分支</span></span><br><span class=\"line\">git branch -m &lt;old-branch-name&gt; &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push :&lt;branchname&gt;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://juejin.cn/post/6974184935804534815\">git使用文章，掘进</a></p>\n<h2 id=\"配置-git-alias-提升工作效率\"><a href=\"#配置-git-alias-提升工作效率\" class=\"headerlink\" title=\"配置 git alias 提升工作效率\"></a>配置 git alias 提升工作效率</h2><p>一般我们在工作中，接到开发任务后，需要新创建一个分支进行开发  此时需要 用到 git branch、git checkout、 git pull 等命令，在我们一顿操作后，开发完成，到了提交代码的阶段，又要诸如此类 git add 、git commit、git push   等命令，虽然简单，但是输入起来也是不够简洁，作为一个程序员，开发程序就是为了提高我们的效率的，懒是人类进步的源泉，所以我们可以通过配置别名的方式，简化这些命令。<br>它的基本用法是  git config –global alias.&lt;简化的字符&gt; 原始命令<br>如下面的例子：<br>$ git config –global alias.co checkout<br>$ git config –global alias.ci commit<br>$ git config –global alias.br branch</p>\n<p>作者：政采云前端团队<br>链接：<a href=\"https://juejin.cn/post/6974184935804534815\">https://juejin.cn/post/6974184935804534815</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n"},{"title":"算法实验题","date":"2022-10-15T02:06:51.000Z","_content":"\n[acm程序设计实验课](https://oj.neauacm.cn/contest.php?cid=1106)\n\n## 3月16号D题查找字符串\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint a[26]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};\nint b[26];\nchar find(char c){\n\tfor(int i=0;i<26;i++){\n\t\tif(c==a[i])return c;\n\t}\n} \n\nint main(){\n\tchar s[1000005];\n\tscanf(\"%s\",s);\n\tint n=strlen(s);\n\tfor(int i=0;i<n;i++){\n\t\tb[s[i]-97]++;\n\t}\n\tchar c='a';\n\tint num=b[0];\n\tfor(int i=0;i<26;i++){\n\t\tif(b[i]>num){\n\t\t\tnum=b[i];\n\t\t\tc=i+'a';\n\t\t}\n\t}\n\tprintf(\"%c\",c);\n\treturn 0;\n}\n```\n\n## e题查找出现次数最多的\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nlong long a[1005][1005];\nlong mod=1000000007;\nint main(){\n\tint m,n,q;\n\tscanf(\"%d%d%d\",&m,&n,&q);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\ta[i][j]=1;\n\t\t}\n\t}\n\tint ii,jj;\n\tlong long k;\n\twhile(q--){\n\t\tscanf(\"%d%d%lld\",&ii,&jj,&k);\n\t\ta[ii][jj]=(k%mod*a[ii][jj])%mod;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tprintf(\"%lld \",a[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n## f题查找账号密码\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint n;\ntypedef struct {\n\tchar name[15];\n\tchar pwd[15];\n}STUDENT;\nSTUDENT s[10005];\nint find(char *name){\n\tfor(int i=0;i<n;i++){\n\t\tif(strcmp(name,s[i].name)==0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\nint main(){\n\tint q;\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s%s\",s[i].name,s[i].pwd);\n\t}\n\twhile(q--){\n\t\tchar name[15];\n\t\tscanf(\"%s\",&name);\n\t\tint flag=find(name);\n\t\tif(flag==-1){\n\t\t\tprintf(\"-1\\n\");\n\t\t}else{\n\t\t\tprintf(\"%s\\n\",s[flag].pwd);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n## g题\n\n```cpp\n#include<stdio.h>\n\nint main(){\n\tint a[100005],b[100005]={0};\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tb[i]=(a[0]+a[1])/2;\n\t\t}else if(i==n-1){\n\t\t\tb[i]=(a[i]+a[i-1])/2;\n\t\t}else{\n\t\t\tb[i]=(a[i+1]+a[i]+a[i-1])/3;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tprintf(\"%d \",b[i]);\n\t}\n\treturn 0;\n}\n```\n\n## h题走路\n\n```\n35 50 1 1 1615\nRRRRRRRRRRRRRRRRRRRRRRRRRDLDDDRRURURRURRRURRRRRDRRRLLLLLLLDDDLLLLLLLLLUUULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRDDRRURURRRRRRRRRRRRRRRDRRLLLLLLLLLLLLLLLLDLLLLULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLULLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRUURRRRRRRRRDDRRRRRRRRRDLLLLLLLLUUULLLLLLLDLLLDLDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUURRRRRRRRRRRRRDDDDRRRRRRRDRLLLLLLLUUUUULLLLLLLLLDLLLDLDLDDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUUUURRRRRRRRRRRRRRRDDDDDDRRRRRRRDLLLLLLLUUUUUUULLLLLLLLLDLLLDLDLDDLDDLLLLLLLLLLLLLLLLDLRRRRRRRRRRRRRRRRRUUUUUUUURRRRRRRRRRRRRRRRDDDDDDDDRRRRRRDLLLLLLLDDDDDDDLLLLLLLLLLULLULULUULUULLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRDRDDRDRDRRDRRRRRURRURRUURUURRRRRRRDLLLLLLDDDDDLLLLLLLLLLLULLULULUULLLLLLLULLDLLLLLLLLLLDRRRRRRRRRRUURRDDRRRRRRRDRDRDRRDRRRRRURRURRUURRRRRRRDLLLLDDDLLLLLLLLLLLLULLULULLLLLLLLUUULLDDDLLLLLLLLLLDLRRRRRRRRRRUUUURRRRDDDDRRRRRRRRDRRDRRRRRURRURRRRRRRRRLDLLLLLLLDLLLLLLLLULLLLLLLLLLUUUUULLLDDDLDDLLLLLLLLLLDRRRRRRRRRRUUUUUURRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLLLLLUUUUUUULLLLLDDDLDDDLDLLLLLLLLLLDRRRRRRRRRRUUUUUUUURRRRRRRRDDDDDDDDRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLUUUUUUUUULLLLLLLDDDLDDDLDDLDLLLLLLLLLDLRRRRRRRRRRUUUUUUUUUURRRRRRRRRRRDDDDDDDDDDRRRRRRRRRRRRRRRRLLDLLLLLLLLLLLLUUUUUUUULUULULLLLLLLLDDDLDDDLDDLDDDLLLLLLLLLLDRRRRRRRRRUUUUUUUUUUUURRRRRRRRRRRRDRDDRDRDRDDDDDDDRRRRRRRUUUUUULLLLLLULLULULUULULLLLLLLLDDDLDDDLDDLDDDLDDLLLLLLLLLLDRRRRRRRRRRLDLLLLLLLLLLDRRRRRRRRRRDLLLLLLLLLLDRRRRRRRRR\n```\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint a[105][105];\nint main(){\n\tint m,n,x,y,q;\n\tscanf(\"%d%d%d%d%d\\n\",&m,&n,&x,&y,&q);\n\n\ta[x][y]=1;\n\twhile(q--){\n\t\tchar c;\n\t\tscanf(\"%c\",&c);\n\t\tswitch(c){\n\t\t\tcase 'U':if(x>1)x--;break;\n\t\t\tcase 'D':if(x<m)x++;break;\n\t\t\tcase 'L':if(y>1)y--;break;\n\t\t\tcase 'R':if(y<n)y++;break;\n\t\t}\n\t\ta[x][y]=1;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(a[i][j]==1)\n\t\t\t\tprintf(\"* \");\n\t\t\telse{\n\t\t\t\tprintf(\"  \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/学校/大二下/acm/实验1.md","raw":"---\ntitle: '算法实验题'\ndate: 2022-10-15 10:06:51\ntags: \n\t- 算法\ncategories: 算法\n---\n\n[acm程序设计实验课](https://oj.neauacm.cn/contest.php?cid=1106)\n\n## 3月16号D题查找字符串\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint a[26]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};\nint b[26];\nchar find(char c){\n\tfor(int i=0;i<26;i++){\n\t\tif(c==a[i])return c;\n\t}\n} \n\nint main(){\n\tchar s[1000005];\n\tscanf(\"%s\",s);\n\tint n=strlen(s);\n\tfor(int i=0;i<n;i++){\n\t\tb[s[i]-97]++;\n\t}\n\tchar c='a';\n\tint num=b[0];\n\tfor(int i=0;i<26;i++){\n\t\tif(b[i]>num){\n\t\t\tnum=b[i];\n\t\t\tc=i+'a';\n\t\t}\n\t}\n\tprintf(\"%c\",c);\n\treturn 0;\n}\n```\n\n## e题查找出现次数最多的\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nlong long a[1005][1005];\nlong mod=1000000007;\nint main(){\n\tint m,n,q;\n\tscanf(\"%d%d%d\",&m,&n,&q);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\ta[i][j]=1;\n\t\t}\n\t}\n\tint ii,jj;\n\tlong long k;\n\twhile(q--){\n\t\tscanf(\"%d%d%lld\",&ii,&jj,&k);\n\t\ta[ii][jj]=(k%mod*a[ii][jj])%mod;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tprintf(\"%lld \",a[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n## f题查找账号密码\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint n;\ntypedef struct {\n\tchar name[15];\n\tchar pwd[15];\n}STUDENT;\nSTUDENT s[10005];\nint find(char *name){\n\tfor(int i=0;i<n;i++){\n\t\tif(strcmp(name,s[i].name)==0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\nint main(){\n\tint q;\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s%s\",s[i].name,s[i].pwd);\n\t}\n\twhile(q--){\n\t\tchar name[15];\n\t\tscanf(\"%s\",&name);\n\t\tint flag=find(name);\n\t\tif(flag==-1){\n\t\t\tprintf(\"-1\\n\");\n\t\t}else{\n\t\t\tprintf(\"%s\\n\",s[flag].pwd);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n## g题\n\n```cpp\n#include<stdio.h>\n\nint main(){\n\tint a[100005],b[100005]={0};\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tif(i==0){\n\t\t\tb[i]=(a[0]+a[1])/2;\n\t\t}else if(i==n-1){\n\t\t\tb[i]=(a[i]+a[i-1])/2;\n\t\t}else{\n\t\t\tb[i]=(a[i+1]+a[i]+a[i-1])/3;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tprintf(\"%d \",b[i]);\n\t}\n\treturn 0;\n}\n```\n\n## h题走路\n\n```\n35 50 1 1 1615\nRRRRRRRRRRRRRRRRRRRRRRRRRDLDDDRRURURRURRRURRRRRDRRRLLLLLLLDDDLLLLLLLLLUUULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRDDRRURURRRRRRRRRRRRRRRDRRLLLLLLLLLLLLLLLLDLLLLULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLULLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRUURRRRRRRRRDDRRRRRRRRRDLLLLLLLLUUULLLLLLLDLLLDLDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUURRRRRRRRRRRRRDDDDRRRRRRRDRLLLLLLLUUUUULLLLLLLLLDLLLDLDLDDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUUUURRRRRRRRRRRRRRRDDDDDDRRRRRRRDLLLLLLLUUUUUUULLLLLLLLLDLLLDLDLDDLDDLLLLLLLLLLLLLLLLDLRRRRRRRRRRRRRRRRRUUUUUUUURRRRRRRRRRRRRRRRDDDDDDDDRRRRRRDLLLLLLLDDDDDDDLLLLLLLLLLULLULULUULUULLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRDRDDRDRDRRDRRRRRURRURRUURUURRRRRRRDLLLLLLDDDDDLLLLLLLLLLLULLULULUULLLLLLLULLDLLLLLLLLLLDRRRRRRRRRRUURRDDRRRRRRRDRDRDRRDRRRRRURRURRUURRRRRRRDLLLLDDDLLLLLLLLLLLLULLULULLLLLLLLUUULLDDDLLLLLLLLLLDLRRRRRRRRRRUUUURRRRDDDDRRRRRRRRDRRDRRRRRURRURRRRRRRRRLDLLLLLLLDLLLLLLLLULLLLLLLLLLUUUUULLLDDDLDDLLLLLLLLLLDRRRRRRRRRRUUUUUURRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLLLLLUUUUUUULLLLLDDDLDDDLDLLLLLLLLLLDRRRRRRRRRRUUUUUUUURRRRRRRRDDDDDDDDRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLUUUUUUUUULLLLLLLDDDLDDDLDDLDLLLLLLLLLDLRRRRRRRRRRUUUUUUUUUURRRRRRRRRRRDDDDDDDDDDRRRRRRRRRRRRRRRRLLDLLLLLLLLLLLLUUUUUUUULUULULLLLLLLLDDDLDDDLDDLDDDLLLLLLLLLLDRRRRRRRRRUUUUUUUUUUUURRRRRRRRRRRRDRDDRDRDRDDDDDDDRRRRRRRUUUUUULLLLLLULLULULUULULLLLLLLLDDDLDDDLDDLDDDLDDLLLLLLLLLLDRRRRRRRRRRLDLLLLLLLLLLDRRRRRRRRRRDLLLLLLLLLLDRRRRRRRRR\n```\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint a[105][105];\nint main(){\n\tint m,n,x,y,q;\n\tscanf(\"%d%d%d%d%d\\n\",&m,&n,&x,&y,&q);\n\n\ta[x][y]=1;\n\twhile(q--){\n\t\tchar c;\n\t\tscanf(\"%c\",&c);\n\t\tswitch(c){\n\t\t\tcase 'U':if(x>1)x--;break;\n\t\t\tcase 'D':if(x<m)x++;break;\n\t\t\tcase 'L':if(y>1)y--;break;\n\t\t\tcase 'R':if(y<n)y++;break;\n\t\t}\n\t\ta[x][y]=1;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(a[i][j]==1)\n\t\t\t\tprintf(\"* \");\n\t\t\telse{\n\t\t\t\tprintf(\"  \");\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n","slug":"学校/大二下/acm/实验1","published":1,"updated":"2023-03-21T09:53:40.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8j007mo8hu6h5e5dtq","content":"<p><a href=\"https://oj.neauacm.cn/contest.php?cid=1106\">acm程序设计实验课</a></p>\n<h2 id=\"3月16号D题查找字符串\"><a href=\"#3月16号D题查找字符串\" class=\"headerlink\" title=\"3月16号D题查找字符串\"></a>3月16号D题查找字符串</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">26</span>]=&#123;<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;i&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>,<span class=\"string\">&#x27;k&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;m&#x27;</span>,<span class=\"string\">&#x27;n&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;q&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;s&#x27;</span>,<span class=\"string\">&#x27;t&#x27;</span>,<span class=\"string\">&#x27;u&#x27;</span>,<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>,<span class=\"string\">&#x27;x&#x27;</span>,<span class=\"string\">&#x27;y&#x27;</span>,<span class=\"string\">&#x27;z&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> b[<span class=\"number\">26</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==a[i])<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> s[<span class=\"number\">1000005</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s);</span><br><span class=\"line\">\t<span class=\"type\">int</span> n=<span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\tb[s[i]<span class=\"number\">-97</span>]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">char</span> c=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num=b[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b[i]&gt;num)&#123;</span><br><span class=\"line\">\t\t\tnum=b[i];</span><br><span class=\"line\">\t\t\tc=i+<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,c);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"e题查找出现次数最多的\"><a href=\"#e题查找出现次数最多的\" class=\"headerlink\" title=\"e题查找出现次数最多的\"></a>e题查找出现次数最多的</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a[<span class=\"number\">1005</span>][<span class=\"number\">1005</span>];</span><br><span class=\"line\"><span class=\"type\">long</span> mod=<span class=\"number\">1000000007</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m,n,q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;m,&amp;n,&amp;q);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\ta[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ii,jj;</span><br><span class=\"line\">\t<span class=\"type\">long</span> <span class=\"type\">long</span> k;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%lld&quot;</span>,&amp;ii,&amp;jj,&amp;k);</span><br><span class=\"line\">\t\ta[ii][jj]=(k%mod*a[ii][jj])%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld &quot;</span>,a[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"f题查找账号密码\"><a href=\"#f题查找账号密码\" class=\"headerlink\" title=\"f题查找账号密码\"></a>f题查找账号密码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">15</span>];</span><br><span class=\"line\">\t<span class=\"type\">char</span> pwd[<span class=\"number\">15</span>];</span><br><span class=\"line\">&#125;STUDENT;</span><br><span class=\"line\">STUDENT s[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">char</span> *name)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(name,s[i].name)==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s&quot;</span>,s[i].name,s[i].pwd);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> name[<span class=\"number\">15</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,&amp;name);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> flag=<span class=\"built_in\">find</span>(name);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,s[flag].pwd);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"g题\"><a href=\"#g题\" class=\"headerlink\" title=\"g题\"></a>g题</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a[<span class=\"number\">100005</span>],b[<span class=\"number\">100005</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[<span class=\"number\">0</span>]+a[<span class=\"number\">1</span>])/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[i]+a[i<span class=\"number\">-1</span>])/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[i+<span class=\"number\">1</span>]+a[i]+a[i<span class=\"number\">-1</span>])/<span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,b[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"h题走路\"><a href=\"#h题走路\" class=\"headerlink\" title=\"h题走路\"></a>h题走路</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">35 50 1 1 1615</span><br><span class=\"line\">RRRRRRRRRRRRRRRRRRRRRRRRRDLDDDRRURURRURRRURRRRRDRRRLLLLLLLDDDLLLLLLLLLUUULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRDDRRURURRRRRRRRRRRRRRRDRRLLLLLLLLLLLLLLLLDLLLLULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLULLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRUURRRRRRRRRDDRRRRRRRRRDLLLLLLLLUUULLLLLLLDLLLDLDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUURRRRRRRRRRRRRDDDDRRRRRRRDRLLLLLLLUUUUULLLLLLLLLDLLLDLDLDDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUUUURRRRRRRRRRRRRRRDDDDDDRRRRRRRDLLLLLLLUUUUUUULLLLLLLLLDLLLDLDLDDLDDLLLLLLLLLLLLLLLLDLRRRRRRRRRRRRRRRRRUUUUUUUURRRRRRRRRRRRRRRRDDDDDDDDRRRRRRDLLLLLLLDDDDDDDLLLLLLLLLLULLULULUULUULLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRDRDDRDRDRRDRRRRRURRURRUURUURRRRRRRDLLLLLLDDDDDLLLLLLLLLLLULLULULUULLLLLLLULLDLLLLLLLLLLDRRRRRRRRRRUURRDDRRRRRRRDRDRDRRDRRRRRURRURRUURRRRRRRDLLLLDDDLLLLLLLLLLLLULLULULLLLLLLLUUULLDDDLLLLLLLLLLDLRRRRRRRRRRUUUURRRRDDDDRRRRRRRRDRRDRRRRRURRURRRRRRRRRLDLLLLLLLDLLLLLLLLULLLLLLLLLLUUUUULLLDDDLDDLLLLLLLLLLDRRRRRRRRRRUUUUUURRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLLLLLUUUUUUULLLLLDDDLDDDLDLLLLLLLLLLDRRRRRRRRRRUUUUUUUURRRRRRRRDDDDDDDDRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLUUUUUUUUULLLLLLLDDDLDDDLDDLDLLLLLLLLLDLRRRRRRRRRRUUUUUUUUUURRRRRRRRRRRDDDDDDDDDDRRRRRRRRRRRRRRRRLLDLLLLLLLLLLLLUUUUUUUULUULULLLLLLLLDDDLDDDLDDLDDDLLLLLLLLLLDRRRRRRRRRUUUUUUUUUUUURRRRRRRRRRRRDRDDRDRDRDDDDDDDRRRRRRRUUUUUULLLLLLULLULULUULULLLLLLLLDDDLDDDLDDLDDDLDDLLLLLLLLLLDRRRRRRRRRRLDLLLLLLLLLLDRRRRRRRRRRDLLLLLLLLLLDRRRRRRRRR</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">105</span>][<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m,n,x,y,q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d%d\\n&quot;</span>,&amp;m,&amp;n,&amp;x,&amp;y,&amp;q);</span><br><span class=\"line\"></span><br><span class=\"line\">\ta[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%c&quot;</span>,&amp;c);</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;U&#x27;</span>:<span class=\"keyword\">if</span>(x&gt;<span class=\"number\">1</span>)x--;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;D&#x27;</span>:<span class=\"keyword\">if</span>(x&lt;m)x++;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;L&#x27;</span>:<span class=\"keyword\">if</span>(y&gt;<span class=\"number\">1</span>)y--;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;R&#x27;</span>:<span class=\"keyword\">if</span>(y&lt;n)y++;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[i][j]==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;* &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://oj.neauacm.cn/contest.php?cid=1106\">acm程序设计实验课</a></p>\n<h2 id=\"3月16号D题查找字符串\"><a href=\"#3月16号D题查找字符串\" class=\"headerlink\" title=\"3月16号D题查找字符串\"></a>3月16号D题查找字符串</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">26</span>]=&#123;<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;i&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>,<span class=\"string\">&#x27;k&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;m&#x27;</span>,<span class=\"string\">&#x27;n&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;q&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;s&#x27;</span>,<span class=\"string\">&#x27;t&#x27;</span>,<span class=\"string\">&#x27;u&#x27;</span>,<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>,<span class=\"string\">&#x27;x&#x27;</span>,<span class=\"string\">&#x27;y&#x27;</span>,<span class=\"string\">&#x27;z&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> b[<span class=\"number\">26</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">char</span> c)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==a[i])<span class=\"keyword\">return</span> c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> s[<span class=\"number\">1000005</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s);</span><br><span class=\"line\">\t<span class=\"type\">int</span> n=<span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\tb[s[i]<span class=\"number\">-97</span>]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">char</span> c=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num=b[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b[i]&gt;num)&#123;</span><br><span class=\"line\">\t\t\tnum=b[i];</span><br><span class=\"line\">\t\t\tc=i+<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,c);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"e题查找出现次数最多的\"><a href=\"#e题查找出现次数最多的\" class=\"headerlink\" title=\"e题查找出现次数最多的\"></a>e题查找出现次数最多的</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> a[<span class=\"number\">1005</span>][<span class=\"number\">1005</span>];</span><br><span class=\"line\"><span class=\"type\">long</span> mod=<span class=\"number\">1000000007</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m,n,q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;m,&amp;n,&amp;q);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\ta[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ii,jj;</span><br><span class=\"line\">\t<span class=\"type\">long</span> <span class=\"type\">long</span> k;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%lld&quot;</span>,&amp;ii,&amp;jj,&amp;k);</span><br><span class=\"line\">\t\ta[ii][jj]=(k%mod*a[ii][jj])%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld &quot;</span>,a[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"f题查找账号密码\"><a href=\"#f题查找账号密码\" class=\"headerlink\" title=\"f题查找账号密码\"></a>f题查找账号密码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">15</span>];</span><br><span class=\"line\">\t<span class=\"type\">char</span> pwd[<span class=\"number\">15</span>];</span><br><span class=\"line\">&#125;STUDENT;</span><br><span class=\"line\">STUDENT s[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">char</span> *name)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(name,s[i].name)==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s&quot;</span>,s[i].name,s[i].pwd);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> name[<span class=\"number\">15</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,&amp;name);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> flag=<span class=\"built_in\">find</span>(name);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,s[flag].pwd);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"g题\"><a href=\"#g题\" class=\"headerlink\" title=\"g题\"></a>g题</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a[<span class=\"number\">100005</span>],b[<span class=\"number\">100005</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[<span class=\"number\">0</span>]+a[<span class=\"number\">1</span>])/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[i]+a[i<span class=\"number\">-1</span>])/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tb[i]=(a[i+<span class=\"number\">1</span>]+a[i]+a[i<span class=\"number\">-1</span>])/<span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,b[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"h题走路\"><a href=\"#h题走路\" class=\"headerlink\" title=\"h题走路\"></a>h题走路</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">35 50 1 1 1615</span><br><span class=\"line\">RRRRRRRRRRRRRRRRRRRRRRRRRDLDDDRRURURRURRRURRRRRDRRRLLLLLLLDDDLLLLLLLLLUUULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRDDRRURURRRRRRRRRRRRRRRDRRLLLLLLLLLLLLLLLLDLLLLULLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRLLLLLLLLLLLULLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRUURRRRRRRRRDDRRRRRRRRRDLLLLLLLLUUULLLLLLLDLLLDLDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUURRRRRRRRRRRRRDDDDRRRRRRRDRLLLLLLLUUUUULLLLLLLLLDLLLDLDLDDLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRUUUUUURRRRRRRRRRRRRRRDDDDDDRRRRRRRDLLLLLLLUUUUUUULLLLLLLLLDLLLDLDLDDLDDLLLLLLLLLLLLLLLLDLRRRRRRRRRRRRRRRRRUUUUUUUURRRRRRRRRRRRRRRRDDDDDDDDRRRRRRDLLLLLLLDDDDDDDLLLLLLLLLLULLULULUULUULLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRDRDDRDRDRRDRRRRRURRURRUURUURRRRRRRDLLLLLLDDDDDLLLLLLLLLLLULLULULUULLLLLLLULLDLLLLLLLLLLDRRRRRRRRRRUURRDDRRRRRRRDRDRDRRDRRRRRURRURRUURRRRRRRDLLLLDDDLLLLLLLLLLLLULLULULLLLLLLLUUULLDDDLLLLLLLLLLDLRRRRRRRRRRUUUURRRRDDDDRRRRRRRRDRRDRRRRRURRURRRRRRRRRLDLLLLLLLDLLLLLLLLULLLLLLLLLLUUUUULLLDDDLDDLLLLLLLLLLDRRRRRRRRRRUUUUUURRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLLLLLUUUUUUULLLLLDDDLDDDLDLLLLLLLLLLDRRRRRRRRRRUUUUUUUURRRRRRRRDDDDDDDDRRRRRRRRRRRRRRRRRRRRLDLLLLLLLLLLLLLLLLLLUUUUUUUUULLLLLLLDDDLDDDLDDLDLLLLLLLLLDLRRRRRRRRRRUUUUUUUUUURRRRRRRRRRRDDDDDDDDDDRRRRRRRRRRRRRRRRLLDLLLLLLLLLLLLUUUUUUUULUULULLLLLLLLDDDLDDDLDDLDDDLLLLLLLLLLDRRRRRRRRRUUUUUUUUUUUURRRRRRRRRRRRDRDDRDRDRDDDDDDDRRRRRRRUUUUUULLLLLLULLULULUULULLLLLLLLDDDLDDDLDDLDDDLDDLLLLLLLLLLDRRRRRRRRRRLDLLLLLLLLLLDRRRRRRRRRRDLLLLLLLLLLDRRRRRRRRR</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">105</span>][<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m,n,x,y,q;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d%d\\n&quot;</span>,&amp;m,&amp;n,&amp;x,&amp;y,&amp;q);</span><br><span class=\"line\"></span><br><span class=\"line\">\ta[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%c&quot;</span>,&amp;c);</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;U&#x27;</span>:<span class=\"keyword\">if</span>(x&gt;<span class=\"number\">1</span>)x--;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;D&#x27;</span>:<span class=\"keyword\">if</span>(x&lt;m)x++;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;L&#x27;</span>:<span class=\"keyword\">if</span>(y&gt;<span class=\"number\">1</span>)y--;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">&#x27;R&#x27;</span>:<span class=\"keyword\">if</span>(y&lt;n)y++;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[i][j]==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;* &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"vuejs设计与实现笔记","date":"2023-03-15T02:06:51.000Z","_content":"\n\n## 第一章 性能与可维护性的权衡\n\n**声明式是将非代码逻辑映射成js代码，命令式是js代码**\n\n\n1. 响应式原理？\n2. 怎么收集副作用函数？\n3. 怎么收集副作用函数？\n4. 调度器的作用？\n5. 调度器怎么实现一个任务队列只执行一次的？\n6. tracker收集依赖  trigger触发副作用函数  scheduler调度器\n7.\n","source":"_posts/学校/面试复习/vue/vuejs设计与实现笔记.md","raw":"---\ntitle: vuejs设计与实现笔记\ndate: 2023-03-15 10:06:51\ntags: \n    - 书\n    - 源码\n    - vue\ncategories: 前端\n---\n\n\n## 第一章 性能与可维护性的权衡\n\n**声明式是将非代码逻辑映射成js代码，命令式是js代码**\n\n\n1. 响应式原理？\n2. 怎么收集副作用函数？\n3. 怎么收集副作用函数？\n4. 调度器的作用？\n5. 调度器怎么实现一个任务队列只执行一次的？\n6. tracker收集依赖  trigger触发副作用函数  scheduler调度器\n7.\n","slug":"学校/面试复习/vue/vuejs设计与实现笔记","published":1,"updated":"2023-03-21T09:56:55.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8k007qo8hugylm733o","content":"<h2 id=\"第一章-性能与可维护性的权衡\"><a href=\"#第一章-性能与可维护性的权衡\" class=\"headerlink\" title=\"第一章 性能与可维护性的权衡\"></a>第一章 性能与可维护性的权衡</h2><p><strong>声明式是将非代码逻辑映射成js代码，命令式是js代码</strong></p>\n<ol>\n<li>响应式原理？</li>\n<li>怎么收集副作用函数？</li>\n<li>怎么收集副作用函数？</li>\n<li>调度器的作用？</li>\n<li>调度器怎么实现一个任务队列只执行一次的？</li>\n<li>tracker收集依赖  trigger触发副作用函数  scheduler调度器</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第一章-性能与可维护性的权衡\"><a href=\"#第一章-性能与可维护性的权衡\" class=\"headerlink\" title=\"第一章 性能与可维护性的权衡\"></a>第一章 性能与可维护性的权衡</h2><p><strong>声明式是将非代码逻辑映射成js代码，命令式是js代码</strong></p>\n<ol>\n<li>响应式原理？</li>\n<li>怎么收集副作用函数？</li>\n<li>怎么收集副作用函数？</li>\n<li>调度器的作用？</li>\n<li>调度器怎么实现一个任务队列只执行一次的？</li>\n<li>tracker收集依赖  trigger触发副作用函数  scheduler调度器</li>\n<li></li>\n</ol>\n"},{"title":"刷题记录","date":"2022-10-15T02:06:51.000Z","_content":"\n1. 运行结果是[f(),f(),f()]\n\n   ```js\n   function test (){\n     var num = []\n     var i\n     for (i = 0; i < 3; i++) {\n         num[i] = function () {\n             console.log(i)\n         }\n     }\n     return num\n   }\n   console.log(test())\n   ```\n2. js和object-c是动态语言\n3. call和apply（只是参数列表不一样，非严格模式下传递null则使用全局对象，this也叫上下文，apply可以将数组转换为参数列表集合）\n4. window.open(\"url\",name)可以打开新窗口\n5. 加减乘除和求余运算会将非number转换为number之后运算，'30'%8，但是加法运算会变成拼接\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/第一天.md527132.1027915.png)\n6. 加减乘除运算，引用类型会调用toString方法之后运算，对象转换为[object Object],数组转换为''  基本类型除了字符串相加会调用Number转换数据true为1，\"30\"%9正常运算，null转换为0，undefined转换为NaN，因为字符串运算优先级高，所以和他运算的都会变成字符串\n7. js定义变量可以用_和$\n8. 以下操作只会产生黑色,因为js线程和gui线程相互阻塞，js执行完微任务之后才渲染\n\n   ```js\n   document.getElementById('btn').style = 'background: blue';\n   document.getElementById('btn').style = 'background: red';\n   Promise.resolve().then(() => {\n   document.getElementById('btn').style = 'background: black';\n   })\n   ```\n9. 字符串.search()返回第一个索引\n10. 函数提升优先级高于变量提升，且不会被同名变量声明覆盖，但是会被变量赋值后覆盖。在本题中，函数a和同名变量a会先进行提升，之后变量a又被赋值为10，再输出a的typeof值，此时a的值为10，类型为number，A选项正确。\n11. 这里考的是JS的运行机制！     事件(click,focus等等)，定时器(setTimeout和setInterval)，ajax,都是会触发异步，属于异步任务；js是单线程的，一个时间点只能做一件事，优先处理同步任务；     按照代码从上往下执行，遇到异步，就挂起，放到异步任务里，继续执行同步任务，只有同步任务执行完了，才去看看有没有异步任务，然后再按照顺序执行！     这里for循环是同步任务，onclick是异步任务，所以等for循环执行完了，i变成4了，注意：这里因为i是全局变量，最后一个i++，使得i为4(后面的onclick函数，最后在循环外面执行，不受i<length限制)；     所以for循环每执行一次，onclick事件函数都会被挂起一次，共4次；     for循环结束后，点击事件 触发了4个onclick函数，接着输出4个4！ 对大家有用的话，希望点个赞👍！\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/da4115e308c948169a9a73e50d09a3e7\n    来源：牛客网\n\n    var elements=document.getElementsByTagName('li');\n    var length=elements.length;\n    for(var i=0;i<length;i++){\n        elements[i].onclick=function() {\n            alert(i);\n        }\n    }\n    ```\n12. iframe本质不是是动态语言的Incude机制和利用ajax动态填充内容，他根本不是动态语言，也没有加载和填充，就是一个标签引入别的框架和样式\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/18eb5039ac4541d585f9f175574b3ab5\n    来源：牛客网\n\n    1、创建比一般的 DOM 元素慢了 1-2 个数量级\n    iframe 的创建比其它包括 scripts 和 css 的 DOM 元素的创建慢了 1-2 个数量级，使用 iframe 的页面一般不会包含太多 iframe，所以创建 DOM 节点所花费的时间不会占很大的比重。但带来一些其它的问题：onload 事件以及连接池（connection pool）\n\n    2、阻塞页面加载\n    及时触发 window 的 onload 事件是非常重要的。onload 事件触发使浏览器的 “忙” 指示器停止，告诉用户当前网页已经加载完毕。当 onload 事件加载延迟后，它给用户的感觉就是这个网页非常慢。\n\n    window 的 onload 事件需要在所有 iframe 加载完毕后（包含里面的元素）才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 SRC 可以避免这种阻塞情况\n\n    3、唯一的连接池\n    浏览器只能开少量的连接到 web 服务器。比较老的浏览器，包含 Internet Explorer 6 & 7 和 Firefox 2，只能对一个域名（hostname）同时打开两个连接。这个数量的限制在新版本的浏览器中有所提高。Safari 3+ 和 Opera 9+ 可同时对一个域名打开 4 个连接，Chrome 1+, IE 8 以及 Firefox 3 可以同时打开 6 个\n\n    绝大部分浏览器，主页面和其中的 iframe 是共享这些连接的。这意味着 iframe 在加载资源时可能用光了所有的可用连接，从而阻塞了主页面资源的加载。如果 iframe 中的内容比主页面的内容更重要，这当然是很好的。但通常情况下，iframe 里的内容是没有主页面的内容重要的。这时 iframe 中用光了可用的连接就是不值得的了。一种解决办法是，在主页面上重要的元素加载完毕后，再动态设置 iframe 的 SRC。\n\n    4、不利于 SEO\n    搜索引擎的检索程序无法解读 iframe。另外，iframe 本身不是动态语言，样式和脚本都需要额外导入。综上，iframe 应谨慎使用。\n    ```\n13. true && 1结果是1不是true\n14. array. sort(sortFunction)是按照sortFunction结果大小排序。 一言不合先把比较的对象定义在数组上方，再手工分析 class Untitled { public static void main(String[] args) { //4 2 0 1 3 7 var array=[-1,1,3,4,6,10]; array.sort((a,b)=>Math.abs(a-3)-Math.abs(b-3)); System.out.println(array); } } 发现最小的是算好后的第三个数字，对应原数组原位置上面是，3。看看选项中只有一个是以3排在前面的数组。好了，后面的不用比了。就是C\n15. 加号优先级高于 三目运算。低于括号。 所以括号中无论真假 加上前边的字符串都为 TRUE 三目运算为TRUE是 输出 define\n\n    ```js\n    console.log('Value is ' + (val != '0') ? 'define' : 'undefine');\n    ```\n16. Object.prototype.toString.call([])可以判断数组类型\n17. commonjs在变量的头尾穿插了很多内置变量\n18. 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n19. ```js\n    链接：https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517\n    来源：牛客网\n\n    以下关于JavaScript的描述中错误的是\n    在原型上扩展的可枚举方法，会被for in循环出来\n    使用object.defineProperty可向对象添加或者修改属性\n    每个对象都有prototype属性，返回对象类型原型的引用\n    通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n    原型链是JS实现继承的一种模型\n    For循环是按顺序的，for in 循环是不一定按顺序的\n\n    B:使用object.defineProperty可向对象添加或者修改属性\n    这里是小写的object而非Object，所以错误。\n\n    C: 每个对象都有prototype属性，返回对象类型原型的引用\n    var obj = Object.create(null)\n    console.log(obj)\n    如果使用 chrome 浏览器控制台输入上面代码，可以看到打印了一个空对象，展开看到No Properties，而随便自己用字面量声明一个对象，都能看到proto属性。\n\n    所以，不是每个对象都有prototype属性。后面这句，严格来说是不是每个对象都会返回Object.prototype？，但实际应该是这个对象的原型的引用，加个“类型”是什么意思，所以这个选项考点到底是第一句话还是第二句话？\n\n    D: 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n    ```\n20. amd和cmd是浏览器端的开发规范，目的是要解决模块加载时间过长会阻塞页面渲染和js执行，amd是异步模块加载规范，cmd是commonjs模式和amd的集合体是就近模块加载\n21. onblur失去焦点，onkeydown是键盘按键，onfocus是聚焦,mousedown鼠标事件\n22. ```js\n    for(var i=0;i<2;i++){\n        (function (i){setTimeout(function(){\n            console.log(i)\n        },0)})(i)\n    }\n    //闭包内部函数保存了外部函数的引用\n    ```\n23. splice会修改原数组，concat，map，sort会返回原数组\n24. **window.requestAnimationFrame()** 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行\n25. ```js\n    for(let i = 0; i < 5; i++){\n        requestAnimationFrame(() => console.log(i));\n    }\n    // let使用块级作用域，会声明五个变量并保存在作用域中\n    ```\n26. 闭包，每次调用函数返回新函数都会开辟新的内存空间，变量彼此隔离\n\n    ```js\n    function Foo() {\n        var i = 0;\n        return function() {\n            console.log(i++);\n        }\n    }\n    var f1 = Foo(),\n    var f2 = Foo();\n    f1();\n    f1();\n    f2();\n    ```\n27. url如果有空格可能会产生数据丢失，所以用encodeURLComponent能将字符转义为16进制编码，decodeURLComponent会将编码后的结果解析成正常字符\n28. ```js\n    ● 首先， js有变量提升和函数提升，指的是用 var声明变量 或用 function 函数名（）{  } 声明的，会在 js预解析 阶段提升到顶端；（es6的let  和 const 不会提升）\n    ● 其次，函数提升优先级 高于 变量提升\n    ● 注意， 相同作用域时声明变量而不赋值则还是以前的值， 而子作用域声明不赋值则函数内该值为undefined，因为声明了私有变量\n\n    var a;\n    a();\n    function a() {\n      console.log(a);\n    }\n    ```\n29. 对于正则表达式 /(l)\\1/g，其中(l)是第一个分组，\\1指向第一个分组，即\\1重复了第一个分组的内容，所以该正则表达式可以表示成/(ll)/g  ,而对于第二个参数$1，表示用第一个分组的内容 l 对匹配到的部分进行替换(即 ll 替换成 l )，同时正则表达式有g表示全局匹配，所以4个ll被替换成2个ll。\n\n    ```js\n    var str = \"Hellllo world\";\n    str = str.replace(/(l)\\1/g, '$1');\n    ```\n30. java前身是oak\n31. class为es6关键字，在jsx中需要用className表示html中的class\n32. 当类中一个属性只有get()方法而无set()方法时，该属性是无法进行赋值的，连构造方法中的初始化都不行，因此，当对象的price属性在构造方法中进行初始化，会抛出异常。\n\n    ```js\n    class Phone{\n      constructor(price){\n        this.price = price;\n      }\n      get price(){\n        return 999;\n      }\n    }\n    var p = new Phone(888);\n    console.log(p.price);\n    ```\n33. ```js\n    push,pop,shift,unshift,splice,sort,foreach这些功能专一的，使用时不需要返回值的会在原数据修改，而那些功能性函数filter，concat，slice，map不会改变原数组\n    会改变数组的方法：\n    push()\n    pop()\n    shift()\n    unshift()\n    splice()\n    sort()\n    reverse()\n    forEach()\n    不会改变数组的方法：\n    filter()\n    concat() \n    slice()\n    map()\n    ```\n34. 通过原生js document.getElementById(\"button1\").setAttribute 属性设置禁用时,第二个参数不论设置什么样的值,都能进行禁用。应该js在检测标签时只要有disabled时,便设置为禁用。\n35. ```js\n    链接：https://www.nowcoder.com/questionTerminal/ccb9a78b25d34629919ea53cc320c56f\n    来源：牛客网\n\n    <SCRIPT language=\"JavaScript\">\n    javascript:window.history.forward(1);\n    </SCRIPT>\n    这 种方法是用于防止由下一个页面返回的。\n    简单的说，页面A（A中有这段代码）转向页面B，\n    这时，B向A转向是被禁止。\n    2.\n    有时候我们再做网页时不希望某个网页通过浏览器的前进后退按钮来后退或前进，可以通过简单的办法达到该效果\n    <body οnbefοreunlοad=\"history.go(0)\">这样这个网页就会永远停留再这个页面，不能前进后退了。\n    ```\n36. Object.is(NaN,NaN) 输出true,NaN == NaN 为false，-0 === +0 为true，Object.is(+0,-0)为false\n37. 加减乘除如果是引用类型就调用valueof方法，不然就是直接Number()\n38. concat 也能用于字符串相加\n39. 由于存在变量提升，在if语句执行之前会先使用var声明变量a，并且声明时是在全局作用域下，因此变量a自动成为window对象的属性，故a in window的返回结果为true，使用“!”将条件取反后返回结果为false，所以不会执行if中的赋值语句，a值为undefined\n\n    ```js\n    if(! \"a\" in window){\n        var a = 1;\n    }\n    alert(a);\n    ```\n40. \\w用于匹配数字、字母或者下划线，A选项错误；/a?/表示匹配0个或者1个a，B选项错误；i修饰符表示忽略大小写，C选项正确；表示对第一个捕获组的引用，应使用\\1\n41. xmlhttprequest 有open(get,url),onreadystatechange，end，首先open配置好请求，之后配置好statechange钩子，回调方法里可以获取readystate，最后会在xhr里放入结果，配置好后send\n42. 变量提升会提升到函数中\n\n    ```js\n    var a = 1;\n    function test() {\n        console.log(a);\n        if(false) {\n            var a = 2;\n        }\n    }\n    test();\n\n    //其实代码执行过程如下：\n    var a ；\n    a = 1;\n    function test() { //函数会先去找自己内部的变量，内部有就不会往外面找，内部没有才去外面找\n        var a; //变量提升\n        console.log(a);\n        if(false) { //因为false没有满足if的条件，所以不能进入if语句里进行赋值\n            a = 2;    //if语句的条件把false改成true，就可以进入if语句赋值\n        }\n    }\n    test();\n    ```\n43. 阻止默认事件会组织提交行为，不会阻止冒泡\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/0f6cf1641d9941cab8671b9e45ac2fb2\n    来源：牛客网\n\n    几个常见的事件的方法\n    preventDefault()    取消事件默认行为，如阻止点击提交按钮时对表单的提交（本题中click并没有什么默认行为）\n    stopImmediatePropagation()   取消事件冒泡同时阻止当前节点上的事件处理程序被调用，影响当前的事件***\n\n    stopPropagation()   取消事件冒泡，不影响事件***\n\n    cancelBubbe()     取消事件冒泡\n\n    returnValue()      取消事件默认行为\n    ```\n44. Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）\n\n    * promise.then() 注册的回调 （promise task queue）\n\n    Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。\n45. ```js\n    链接：https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948\n    来源：牛客网\n\n    前提是myobj是一个对象，只是存在与不存在的问题，几种表示方法：\n    1、！obj\n    2、！window.obj\n    3、typeof myObj == \"undefined（判断对象是否有定义，已定义未赋值，返回true）\n    4、myObj == undefined（已定义未赋值。返回true）\n    5、myObj === undefined （已定义未赋值，返回true）\n    6、!this.hasOwnProperty('myObj'))（判断是否为顶层对象的一个属性）\n    7、myobj == null（注意null与undefined的区别，ull指的是已经赋值为null的空对象，即这个对象实际上是有值的，而undefined指的是不存在或没有赋值的对象。）\n    以上几种都正确，但是我用的最多争议最少的是第三种\n    ```\n46. Math.max不能操作数组，Math.max.apply(Math,arr)可以\n47. Navagator：提供有关浏览器的信息 Window：Window对象处于对象层次的最顶层，它提供了处理Navagator窗口的方法和属性 Location：提供了与当前打开的URL一起工作的方法和属性，是一个静态的对象 History：提供了与历史清单有关的信息 Document：包含与文档元素一起工作的对象，它将这些元素封装起来供编程人员使用\n48. window对象中提供了两个属性来获取当前窗口距离屏幕左侧和顶部的距离，单位为像素。\n\n    * screenLeft：窗口距离屏幕左侧的距离\n    * screenTop：窗口距离屏幕顶部的距离\n49. forEach方法按升序为数组中含有效值的每一项执行一次 callback函数，那些未初始化的项将被跳过。new Array(10)创建的数组默认值都是undefined，所以回调函数都会被跳过。\n\n    ```js\n    let i = 0;\n    new Array(10).forEach(() => {\n      i++;\n    });\n    ```\n50. ```js\n    链接：https://www.nowcoder.com/questionTerminal/733abe2a678f470aba56b94c5af2af8f\n    来源：牛客网\n\n    A选项：isIDCard=/^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$/\n    C选项：isIDCard=/^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/\n    ^：起始符号，^x表示以x开头\n    $：结束符号，x$表示以x结尾\n    [n-m]：表示从n到m的数字\n    \\d：表示数字，等同于[0-9]\n    X{m}：表示由m个X字符构成，\\d{4}表示4位数字\n\n    15位身份证的构成：六位出生地区码+六位出身日期码+三位顺序码\n    18位身份证的构成：六位出生地区码+八位出生日期码+三位顺序码+一位校验码\n\n    C选项的构成：\n    [1-9]\\d{5}：六位出生地区码，出生地区码没有以0开头，因此第一位为[1-9]。\n    [1-9]\\d{3}：八位出生日期码的四位年份，同样年份没有以0开头。\n    ((0\\d)|(1[0-2]))：八位出生日期码的两位月份，| 表示或者，月份的形式为0\\d或者是10、11、12。\n    (([0|1|2]\\d)|3[0-1])：八位出生日期码的两位日期，日期由01至31。\n    \\d{4}：三位顺序码+一位校验码，共四位。\n    A选项的构成：\n    [1-9]\\d{7}：六位出生地区码+两位出生日期码的年份，这里的年份指后两位，因此没有第一位不能为0的限制，所以合并了。\n    后面的与C选项类似了。\n    好吧其实我也是第一次知道身份证还有15位的。\n    ```\n51.\n","source":"_posts/学校/面试复习/牛客刷题/第一天.md","raw":"---\ntitle: '刷题记录'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: js\n---\n\n1. 运行结果是[f(),f(),f()]\n\n   ```js\n   function test (){\n     var num = []\n     var i\n     for (i = 0; i < 3; i++) {\n         num[i] = function () {\n             console.log(i)\n         }\n     }\n     return num\n   }\n   console.log(test())\n   ```\n2. js和object-c是动态语言\n3. call和apply（只是参数列表不一样，非严格模式下传递null则使用全局对象，this也叫上下文，apply可以将数组转换为参数列表集合）\n4. window.open(\"url\",name)可以打开新窗口\n5. 加减乘除和求余运算会将非number转换为number之后运算，'30'%8，但是加法运算会变成拼接\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/第一天.md527132.1027915.png)\n6. 加减乘除运算，引用类型会调用toString方法之后运算，对象转换为[object Object],数组转换为''  基本类型除了字符串相加会调用Number转换数据true为1，\"30\"%9正常运算，null转换为0，undefined转换为NaN，因为字符串运算优先级高，所以和他运算的都会变成字符串\n7. js定义变量可以用_和$\n8. 以下操作只会产生黑色,因为js线程和gui线程相互阻塞，js执行完微任务之后才渲染\n\n   ```js\n   document.getElementById('btn').style = 'background: blue';\n   document.getElementById('btn').style = 'background: red';\n   Promise.resolve().then(() => {\n   document.getElementById('btn').style = 'background: black';\n   })\n   ```\n9. 字符串.search()返回第一个索引\n10. 函数提升优先级高于变量提升，且不会被同名变量声明覆盖，但是会被变量赋值后覆盖。在本题中，函数a和同名变量a会先进行提升，之后变量a又被赋值为10，再输出a的typeof值，此时a的值为10，类型为number，A选项正确。\n11. 这里考的是JS的运行机制！     事件(click,focus等等)，定时器(setTimeout和setInterval)，ajax,都是会触发异步，属于异步任务；js是单线程的，一个时间点只能做一件事，优先处理同步任务；     按照代码从上往下执行，遇到异步，就挂起，放到异步任务里，继续执行同步任务，只有同步任务执行完了，才去看看有没有异步任务，然后再按照顺序执行！     这里for循环是同步任务，onclick是异步任务，所以等for循环执行完了，i变成4了，注意：这里因为i是全局变量，最后一个i++，使得i为4(后面的onclick函数，最后在循环外面执行，不受i<length限制)；     所以for循环每执行一次，onclick事件函数都会被挂起一次，共4次；     for循环结束后，点击事件 触发了4个onclick函数，接着输出4个4！ 对大家有用的话，希望点个赞👍！\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/da4115e308c948169a9a73e50d09a3e7\n    来源：牛客网\n\n    var elements=document.getElementsByTagName('li');\n    var length=elements.length;\n    for(var i=0;i<length;i++){\n        elements[i].onclick=function() {\n            alert(i);\n        }\n    }\n    ```\n12. iframe本质不是是动态语言的Incude机制和利用ajax动态填充内容，他根本不是动态语言，也没有加载和填充，就是一个标签引入别的框架和样式\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/18eb5039ac4541d585f9f175574b3ab5\n    来源：牛客网\n\n    1、创建比一般的 DOM 元素慢了 1-2 个数量级\n    iframe 的创建比其它包括 scripts 和 css 的 DOM 元素的创建慢了 1-2 个数量级，使用 iframe 的页面一般不会包含太多 iframe，所以创建 DOM 节点所花费的时间不会占很大的比重。但带来一些其它的问题：onload 事件以及连接池（connection pool）\n\n    2、阻塞页面加载\n    及时触发 window 的 onload 事件是非常重要的。onload 事件触发使浏览器的 “忙” 指示器停止，告诉用户当前网页已经加载完毕。当 onload 事件加载延迟后，它给用户的感觉就是这个网页非常慢。\n\n    window 的 onload 事件需要在所有 iframe 加载完毕后（包含里面的元素）才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 SRC 可以避免这种阻塞情况\n\n    3、唯一的连接池\n    浏览器只能开少量的连接到 web 服务器。比较老的浏览器，包含 Internet Explorer 6 & 7 和 Firefox 2，只能对一个域名（hostname）同时打开两个连接。这个数量的限制在新版本的浏览器中有所提高。Safari 3+ 和 Opera 9+ 可同时对一个域名打开 4 个连接，Chrome 1+, IE 8 以及 Firefox 3 可以同时打开 6 个\n\n    绝大部分浏览器，主页面和其中的 iframe 是共享这些连接的。这意味着 iframe 在加载资源时可能用光了所有的可用连接，从而阻塞了主页面资源的加载。如果 iframe 中的内容比主页面的内容更重要，这当然是很好的。但通常情况下，iframe 里的内容是没有主页面的内容重要的。这时 iframe 中用光了可用的连接就是不值得的了。一种解决办法是，在主页面上重要的元素加载完毕后，再动态设置 iframe 的 SRC。\n\n    4、不利于 SEO\n    搜索引擎的检索程序无法解读 iframe。另外，iframe 本身不是动态语言，样式和脚本都需要额外导入。综上，iframe 应谨慎使用。\n    ```\n13. true && 1结果是1不是true\n14. array. sort(sortFunction)是按照sortFunction结果大小排序。 一言不合先把比较的对象定义在数组上方，再手工分析 class Untitled { public static void main(String[] args) { //4 2 0 1 3 7 var array=[-1,1,3,4,6,10]; array.sort((a,b)=>Math.abs(a-3)-Math.abs(b-3)); System.out.println(array); } } 发现最小的是算好后的第三个数字，对应原数组原位置上面是，3。看看选项中只有一个是以3排在前面的数组。好了，后面的不用比了。就是C\n15. 加号优先级高于 三目运算。低于括号。 所以括号中无论真假 加上前边的字符串都为 TRUE 三目运算为TRUE是 输出 define\n\n    ```js\n    console.log('Value is ' + (val != '0') ? 'define' : 'undefine');\n    ```\n16. Object.prototype.toString.call([])可以判断数组类型\n17. commonjs在变量的头尾穿插了很多内置变量\n18. 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n19. ```js\n    链接：https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517\n    来源：牛客网\n\n    以下关于JavaScript的描述中错误的是\n    在原型上扩展的可枚举方法，会被for in循环出来\n    使用object.defineProperty可向对象添加或者修改属性\n    每个对象都有prototype属性，返回对象类型原型的引用\n    通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n    原型链是JS实现继承的一种模型\n    For循环是按顺序的，for in 循环是不一定按顺序的\n\n    B:使用object.defineProperty可向对象添加或者修改属性\n    这里是小写的object而非Object，所以错误。\n\n    C: 每个对象都有prototype属性，返回对象类型原型的引用\n    var obj = Object.create(null)\n    console.log(obj)\n    如果使用 chrome 浏览器控制台输入上面代码，可以看到打印了一个空对象，展开看到No Properties，而随便自己用字面量声明一个对象，都能看到proto属性。\n\n    所以，不是每个对象都有prototype属性。后面这句，严格来说是不是每个对象都会返回Object.prototype？，但实际应该是这个对象的原型的引用，加个“类型”是什么意思，所以这个选项考点到底是第一句话还是第二句话？\n\n    D: 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性\n    ```\n20. amd和cmd是浏览器端的开发规范，目的是要解决模块加载时间过长会阻塞页面渲染和js执行，amd是异步模块加载规范，cmd是commonjs模式和amd的集合体是就近模块加载\n21. onblur失去焦点，onkeydown是键盘按键，onfocus是聚焦,mousedown鼠标事件\n22. ```js\n    for(var i=0;i<2;i++){\n        (function (i){setTimeout(function(){\n            console.log(i)\n        },0)})(i)\n    }\n    //闭包内部函数保存了外部函数的引用\n    ```\n23. splice会修改原数组，concat，map，sort会返回原数组\n24. **window.requestAnimationFrame()** 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行\n25. ```js\n    for(let i = 0; i < 5; i++){\n        requestAnimationFrame(() => console.log(i));\n    }\n    // let使用块级作用域，会声明五个变量并保存在作用域中\n    ```\n26. 闭包，每次调用函数返回新函数都会开辟新的内存空间，变量彼此隔离\n\n    ```js\n    function Foo() {\n        var i = 0;\n        return function() {\n            console.log(i++);\n        }\n    }\n    var f1 = Foo(),\n    var f2 = Foo();\n    f1();\n    f1();\n    f2();\n    ```\n27. url如果有空格可能会产生数据丢失，所以用encodeURLComponent能将字符转义为16进制编码，decodeURLComponent会将编码后的结果解析成正常字符\n28. ```js\n    ● 首先， js有变量提升和函数提升，指的是用 var声明变量 或用 function 函数名（）{  } 声明的，会在 js预解析 阶段提升到顶端；（es6的let  和 const 不会提升）\n    ● 其次，函数提升优先级 高于 变量提升\n    ● 注意， 相同作用域时声明变量而不赋值则还是以前的值， 而子作用域声明不赋值则函数内该值为undefined，因为声明了私有变量\n\n    var a;\n    a();\n    function a() {\n      console.log(a);\n    }\n    ```\n29. 对于正则表达式 /(l)\\1/g，其中(l)是第一个分组，\\1指向第一个分组，即\\1重复了第一个分组的内容，所以该正则表达式可以表示成/(ll)/g  ,而对于第二个参数$1，表示用第一个分组的内容 l 对匹配到的部分进行替换(即 ll 替换成 l )，同时正则表达式有g表示全局匹配，所以4个ll被替换成2个ll。\n\n    ```js\n    var str = \"Hellllo world\";\n    str = str.replace(/(l)\\1/g, '$1');\n    ```\n30. java前身是oak\n31. class为es6关键字，在jsx中需要用className表示html中的class\n32. 当类中一个属性只有get()方法而无set()方法时，该属性是无法进行赋值的，连构造方法中的初始化都不行，因此，当对象的price属性在构造方法中进行初始化，会抛出异常。\n\n    ```js\n    class Phone{\n      constructor(price){\n        this.price = price;\n      }\n      get price(){\n        return 999;\n      }\n    }\n    var p = new Phone(888);\n    console.log(p.price);\n    ```\n33. ```js\n    push,pop,shift,unshift,splice,sort,foreach这些功能专一的，使用时不需要返回值的会在原数据修改，而那些功能性函数filter，concat，slice，map不会改变原数组\n    会改变数组的方法：\n    push()\n    pop()\n    shift()\n    unshift()\n    splice()\n    sort()\n    reverse()\n    forEach()\n    不会改变数组的方法：\n    filter()\n    concat() \n    slice()\n    map()\n    ```\n34. 通过原生js document.getElementById(\"button1\").setAttribute 属性设置禁用时,第二个参数不论设置什么样的值,都能进行禁用。应该js在检测标签时只要有disabled时,便设置为禁用。\n35. ```js\n    链接：https://www.nowcoder.com/questionTerminal/ccb9a78b25d34629919ea53cc320c56f\n    来源：牛客网\n\n    <SCRIPT language=\"JavaScript\">\n    javascript:window.history.forward(1);\n    </SCRIPT>\n    这 种方法是用于防止由下一个页面返回的。\n    简单的说，页面A（A中有这段代码）转向页面B，\n    这时，B向A转向是被禁止。\n    2.\n    有时候我们再做网页时不希望某个网页通过浏览器的前进后退按钮来后退或前进，可以通过简单的办法达到该效果\n    <body οnbefοreunlοad=\"history.go(0)\">这样这个网页就会永远停留再这个页面，不能前进后退了。\n    ```\n36. Object.is(NaN,NaN) 输出true,NaN == NaN 为false，-0 === +0 为true，Object.is(+0,-0)为false\n37. 加减乘除如果是引用类型就调用valueof方法，不然就是直接Number()\n38. concat 也能用于字符串相加\n39. 由于存在变量提升，在if语句执行之前会先使用var声明变量a，并且声明时是在全局作用域下，因此变量a自动成为window对象的属性，故a in window的返回结果为true，使用“!”将条件取反后返回结果为false，所以不会执行if中的赋值语句，a值为undefined\n\n    ```js\n    if(! \"a\" in window){\n        var a = 1;\n    }\n    alert(a);\n    ```\n40. \\w用于匹配数字、字母或者下划线，A选项错误；/a?/表示匹配0个或者1个a，B选项错误；i修饰符表示忽略大小写，C选项正确；表示对第一个捕获组的引用，应使用\\1\n41. xmlhttprequest 有open(get,url),onreadystatechange，end，首先open配置好请求，之后配置好statechange钩子，回调方法里可以获取readystate，最后会在xhr里放入结果，配置好后send\n42. 变量提升会提升到函数中\n\n    ```js\n    var a = 1;\n    function test() {\n        console.log(a);\n        if(false) {\n            var a = 2;\n        }\n    }\n    test();\n\n    //其实代码执行过程如下：\n    var a ；\n    a = 1;\n    function test() { //函数会先去找自己内部的变量，内部有就不会往外面找，内部没有才去外面找\n        var a; //变量提升\n        console.log(a);\n        if(false) { //因为false没有满足if的条件，所以不能进入if语句里进行赋值\n            a = 2;    //if语句的条件把false改成true，就可以进入if语句赋值\n        }\n    }\n    test();\n    ```\n43. 阻止默认事件会组织提交行为，不会阻止冒泡\n\n    ```js\n    链接：https://www.nowcoder.com/questionTerminal/0f6cf1641d9941cab8671b9e45ac2fb2\n    来源：牛客网\n\n    几个常见的事件的方法\n    preventDefault()    取消事件默认行为，如阻止点击提交按钮时对表单的提交（本题中click并没有什么默认行为）\n    stopImmediatePropagation()   取消事件冒泡同时阻止当前节点上的事件处理程序被调用，影响当前的事件***\n\n    stopPropagation()   取消事件冒泡，不影响事件***\n\n    cancelBubbe()     取消事件冒泡\n\n    returnValue()      取消事件默认行为\n    ```\n44. Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）\n\n    * promise.then() 注册的回调 （promise task queue）\n\n    Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。\n45. ```js\n    链接：https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948\n    来源：牛客网\n\n    前提是myobj是一个对象，只是存在与不存在的问题，几种表示方法：\n    1、！obj\n    2、！window.obj\n    3、typeof myObj == \"undefined（判断对象是否有定义，已定义未赋值，返回true）\n    4、myObj == undefined（已定义未赋值。返回true）\n    5、myObj === undefined （已定义未赋值，返回true）\n    6、!this.hasOwnProperty('myObj'))（判断是否为顶层对象的一个属性）\n    7、myobj == null（注意null与undefined的区别，ull指的是已经赋值为null的空对象，即这个对象实际上是有值的，而undefined指的是不存在或没有赋值的对象。）\n    以上几种都正确，但是我用的最多争议最少的是第三种\n    ```\n46. Math.max不能操作数组，Math.max.apply(Math,arr)可以\n47. Navagator：提供有关浏览器的信息 Window：Window对象处于对象层次的最顶层，它提供了处理Navagator窗口的方法和属性 Location：提供了与当前打开的URL一起工作的方法和属性，是一个静态的对象 History：提供了与历史清单有关的信息 Document：包含与文档元素一起工作的对象，它将这些元素封装起来供编程人员使用\n48. window对象中提供了两个属性来获取当前窗口距离屏幕左侧和顶部的距离，单位为像素。\n\n    * screenLeft：窗口距离屏幕左侧的距离\n    * screenTop：窗口距离屏幕顶部的距离\n49. forEach方法按升序为数组中含有效值的每一项执行一次 callback函数，那些未初始化的项将被跳过。new Array(10)创建的数组默认值都是undefined，所以回调函数都会被跳过。\n\n    ```js\n    let i = 0;\n    new Array(10).forEach(() => {\n      i++;\n    });\n    ```\n50. ```js\n    链接：https://www.nowcoder.com/questionTerminal/733abe2a678f470aba56b94c5af2af8f\n    来源：牛客网\n\n    A选项：isIDCard=/^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$/\n    C选项：isIDCard=/^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$/\n    ^：起始符号，^x表示以x开头\n    $：结束符号，x$表示以x结尾\n    [n-m]：表示从n到m的数字\n    \\d：表示数字，等同于[0-9]\n    X{m}：表示由m个X字符构成，\\d{4}表示4位数字\n\n    15位身份证的构成：六位出生地区码+六位出身日期码+三位顺序码\n    18位身份证的构成：六位出生地区码+八位出生日期码+三位顺序码+一位校验码\n\n    C选项的构成：\n    [1-9]\\d{5}：六位出生地区码，出生地区码没有以0开头，因此第一位为[1-9]。\n    [1-9]\\d{3}：八位出生日期码的四位年份，同样年份没有以0开头。\n    ((0\\d)|(1[0-2]))：八位出生日期码的两位月份，| 表示或者，月份的形式为0\\d或者是10、11、12。\n    (([0|1|2]\\d)|3[0-1])：八位出生日期码的两位日期，日期由01至31。\n    \\d{4}：三位顺序码+一位校验码，共四位。\n    A选项的构成：\n    [1-9]\\d{7}：六位出生地区码+两位出生日期码的年份，这里的年份指后两位，因此没有第一位不能为0的限制，所以合并了。\n    后面的与C选项类似了。\n    好吧其实我也是第一次知道身份证还有15位的。\n    ```\n51.\n","slug":"学校/面试复习/牛客刷题/第一天","published":1,"updated":"2023-03-21T09:57:58.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8l007uo8huh47k474e","content":"<ol>\n<li><p>运行结果是[f(),f(),f()]</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span> ()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = []</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">      num[i] = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">test</span>())</span><br></pre></td></tr></table></figure></li>\n<li><p>js和object-c是动态语言</p>\n</li>\n<li><p>call和apply（只是参数列表不一样，非严格模式下传递null则使用全局对象，this也叫上下文，apply可以将数组转换为参数列表集合）</p>\n</li>\n<li><p>window.open(“url”,name)可以打开新窗口</p>\n</li>\n<li><p>加减乘除和求余运算会将非number转换为number之后运算，’30’%8，但是加法运算会变成拼接</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/第一天.md527132.1027915.png\"></p>\n</li>\n<li><p>加减乘除运算，引用类型会调用toString方法之后运算，对象转换为[object Object],数组转换为’’  基本类型除了字符串相加会调用Number转换数据true为1，”30”%9正常运算，null转换为0，undefined转换为NaN，因为字符串运算优先级高，所以和他运算的都会变成字符串</p>\n</li>\n<li><p>js定义变量可以用_和$</p>\n</li>\n<li><p>以下操作只会产生黑色,因为js线程和gui线程相互阻塞，js执行完微任务之后才渲染</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: blue&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: red&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: black&#x27;</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>字符串.search()返回第一个索引</p>\n</li>\n<li><p>函数提升优先级高于变量提升，且不会被同名变量声明覆盖，但是会被变量赋值后覆盖。在本题中，函数a和同名变量a会先进行提升，之后变量a又被赋值为10，再输出a的typeof值，此时a的值为10，类型为number，A选项正确。</p>\n</li>\n<li><p>这里考的是JS的运行机制！     事件(click,focus等等)，定时器(setTimeout和setInterval)，ajax,都是会触发异步，属于异步任务；js是单线程的，一个时间点只能做一件事，优先处理同步任务；     按照代码从上往下执行，遇到异步，就挂起，放到异步任务里，继续执行同步任务，只有同步任务执行完了，才去看看有没有异步任务，然后再按照顺序执行！     这里for循环是同步任务，onclick是异步任务，所以等for循环执行完了，i变成4了，注意：这里因为i是全局变量，最后一个i++，使得i为4(后面的onclick函数，最后在循环外面执行，不受i&lt;length限制)；     所以for循环每执行一次，onclick事件函数都会被挂起一次，共4次；     for循环结束后，点击事件 触发了4个onclick函数，接着输出4个4！ 对大家有用的话，希望点个赞👍！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/da4115e308c948169a9a73e50d09a3e7</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> elements=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> length=elements.<span class=\"property\">length</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;length;i++)&#123;</span><br><span class=\"line\">    elements[i].<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>iframe本质不是是动态语言的Incude机制和利用ajax动态填充内容，他根本不是动态语言，也没有加载和填充，就是一个标签引入别的框架和样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/18eb5039ac4541d585f9f175574b3ab5</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、创建比一般的 <span class=\"variable constant_\">DOM</span> 元素慢了 <span class=\"number\">1</span>-<span class=\"number\">2</span> 个数量级</span><br><span class=\"line\">iframe 的创建比其它包括 scripts 和 css 的 <span class=\"variable constant_\">DOM</span> 元素的创建慢了 <span class=\"number\">1</span>-<span class=\"number\">2</span> 个数量级，使用 iframe 的页面一般不会包含太多 iframe，所以创建 <span class=\"variable constant_\">DOM</span> 节点所花费的时间不会占很大的比重。但带来一些其它的问题：onload 事件以及连接池（connection pool）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>、阻塞页面加载</span><br><span class=\"line\">及时触发 <span class=\"variable language_\">window</span> 的 onload 事件是非常重要的。onload 事件触发使浏览器的 “忙” 指示器停止，告诉用户当前网页已经加载完毕。当 onload 事件加载延迟后，它给用户的感觉就是这个网页非常慢。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span> 的 onload 事件需要在所有 iframe 加载完毕后（包含里面的元素）才会触发。在 <span class=\"title class_\">Safari</span> 和 <span class=\"title class_\">Chrome</span> 里，通过 <span class=\"title class_\">JavaScript</span> 动态设置 iframe 的 <span class=\"variable constant_\">SRC</span> 可以避免这种阻塞情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>、唯一的连接池</span><br><span class=\"line\">浏览器只能开少量的连接到 web 服务器。比较老的浏览器，包含 <span class=\"title class_\">Internet</span> <span class=\"title class_\">Explorer</span> <span class=\"number\">6</span> &amp; <span class=\"number\">7</span> 和 <span class=\"title class_\">Firefox</span> <span class=\"number\">2</span>，只能对一个域名（hostname）同时打开两个连接。这个数量的限制在新版本的浏览器中有所提高。<span class=\"title class_\">Safari</span> <span class=\"number\">3</span>+ 和 <span class=\"title class_\">Opera</span> <span class=\"number\">9</span>+ 可同时对一个域名打开 <span class=\"number\">4</span> 个连接，<span class=\"title class_\">Chrome</span> <span class=\"number\">1</span>+, <span class=\"variable constant_\">IE</span> <span class=\"number\">8</span> 以及 <span class=\"title class_\">Firefox</span> <span class=\"number\">3</span> 可以同时打开 <span class=\"number\">6</span> 个</span><br><span class=\"line\"></span><br><span class=\"line\">绝大部分浏览器，主页面和其中的 iframe 是共享这些连接的。这意味着 iframe 在加载资源时可能用光了所有的可用连接，从而阻塞了主页面资源的加载。如果 iframe 中的内容比主页面的内容更重要，这当然是很好的。但通常情况下，iframe 里的内容是没有主页面的内容重要的。这时 iframe 中用光了可用的连接就是不值得的了。一种解决办法是，在主页面上重要的元素加载完毕后，再动态设置 iframe 的 <span class=\"variable constant_\">SRC</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span>、不利于 <span class=\"variable constant_\">SEO</span></span><br><span class=\"line\">搜索引擎的检索程序无法解读 iframe。另外，iframe 本身不是动态语言，样式和脚本都需要额外导入。综上，iframe 应谨慎使用。</span><br></pre></td></tr></table></figure></li>\n<li><p>true &amp;&amp; 1结果是1不是true</p>\n</li>\n<li><p>array. sort(sortFunction)是按照sortFunction结果大小排序。 一言不合先把比较的对象定义在数组上方，再手工分析 class Untitled { public static void main(String[] args) { //4 2 0 1 3 7 var array=[-1,1,3,4,6,10]; array.sort((a,b)=&gt;Math.abs(a-3)-Math.abs(b-3)); System.out.println(array); } } 发现最小的是算好后的第三个数字，对应原数组原位置上面是，3。看看选项中只有一个是以3排在前面的数组。好了，后面的不用比了。就是C</p>\n</li>\n<li><p>加号优先级高于 三目运算。低于括号。 所以括号中无论真假 加上前边的字符串都为 TRUE 三目运算为TRUE是 输出 define</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Value is &#x27;</span> + (val != <span class=\"string\">&#x27;0&#x27;</span>) ? <span class=\"string\">&#x27;define&#x27;</span> : <span class=\"string\">&#x27;undefine&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>Object.prototype.toString.call([])可以判断数组类型</p>\n</li>\n<li><p>commonjs在变量的头尾穿插了很多内置变量</p>\n</li>\n<li><p>通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性</p>\n</li>\n<li><p>```js<br>链接：<a href=\"https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517\">https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517</a><br>来源：牛客网</p>\n<p>以下关于JavaScript的描述中错误的是<br>在原型上扩展的可枚举方法，会被for in循环出来<br>使用object.defineProperty可向对象添加或者修改属性<br>每个对象都有prototype属性，返回对象类型原型的引用<br>通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性<br>原型链是JS实现继承的一种模型<br>For循环是按顺序的，for in 循环是不一定按顺序的</p>\n<p>B:使用object.defineProperty可向对象添加或者修改属性<br>这里是小写的object而非Object，所以错误。</p>\n<p>C: 每个对象都有prototype属性，返回对象类型原型的引用<br>var obj = Object.create(null)<br>console.log(obj)<br>如果使用 chrome 浏览器控制台输入上面代码，可以看到打印了一个空对象，展开看到No Properties，而随便自己用字面量声明一个对象，都能看到proto属性。</p>\n<p>所以，不是每个对象都有prototype属性。后面这句，严格来说是不是每个对象都会返回Object.prototype？，但实际应该是这个对象的原型的引用，加个“类型”是什么意思，所以这个选项考点到底是第一句话还是第二句话？</p>\n<p>D: 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20. amd和cmd是浏览器端的开发规范，目的是要解决模块加载时间过长会阻塞页面渲染和js执行，amd是异步模块加载规范，cmd是commonjs模式和amd的集合体是就近模块加载</span><br><span class=\"line\">21. onblur失去焦点，onkeydown是键盘按键，onfocus是聚焦,mousedown鼠标事件</span><br><span class=\"line\">22. ```js</span><br><span class=\"line\">    for(var i=0;i&lt;2;i++)&#123;</span><br><span class=\"line\">        (function (i)&#123;setTimeout(function()&#123;</span><br><span class=\"line\">            console.log(i)</span><br><span class=\"line\">        &#125;,0)&#125;)(i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //闭包内部函数保存了外部函数的引用</span><br></pre></td></tr></table></figure></li>\n<li><p>splice会修改原数组，concat，map，sort会返回原数组</p>\n</li>\n<li><p><strong>window.requestAnimationFrame()</strong> 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行</p>\n</li>\n<li><p>```js<br>for(let i = 0; i &lt; 5; i++){</p>\n<pre><code>requestAnimationFrame(() =&gt; console.log(i));\n</code></pre>\n<p>}<br>// let使用块级作用域，会声明五个变量并保存在作用域中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26. 闭包，每次调用函数返回新函数都会开辟新的内存空间，变量彼此隔离</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    function Foo() &#123;</span><br><span class=\"line\">        var i = 0;</span><br><span class=\"line\">        return function() &#123;</span><br><span class=\"line\">            console.log(i++);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var f1 = Foo(),</span><br><span class=\"line\">    var f2 = Foo();</span><br><span class=\"line\">    f1();</span><br><span class=\"line\">    f1();</span><br><span class=\"line\">    f2();</span><br></pre></td></tr></table></figure></li>\n<li><p>url如果有空格可能会产生数据丢失，所以用encodeURLComponent能将字符转义为16进制编码，decodeURLComponent会将编码后的结果解析成正常字符</p>\n</li>\n<li><p>```js<br>● 首先， js有变量提升和函数提升，指的是用 var声明变量 或用 function 函数名（）{  } 声明的，会在 js预解析 阶段提升到顶端；（es6的let  和 const 不会提升）<br>● 其次，函数提升优先级 高于 变量提升<br>● 注意， 相同作用域时声明变量而不赋值则还是以前的值， 而子作用域声明不赋值则函数内该值为undefined，因为声明了私有变量</p>\n<p>var a;<br>a();<br>function a() {<br>  console.log(a);<br>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29. 对于正则表达式 /(l)\\1/g，其中(l)是第一个分组，\\1指向第一个分组，即\\1重复了第一个分组的内容，所以该正则表达式可以表示成/(ll)/g  ,而对于第二个参数$1，表示用第一个分组的内容 l 对匹配到的部分进行替换(即 ll 替换成 l )，同时正则表达式有g表示全局匹配，所以4个ll被替换成2个ll。</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    var str = &quot;Hellllo world&quot;;</span><br><span class=\"line\">    str = str.replace(/(l)\\1/g, &#x27;$1&#x27;);</span><br></pre></td></tr></table></figure></li>\n<li><p>java前身是oak</p>\n</li>\n<li><p>class为es6关键字，在jsx中需要用className表示html中的class</p>\n</li>\n<li><p>当类中一个属性只有get()方法而无set()方法时，该属性是无法进行赋值的，连构造方法中的初始化都不行，因此，当对象的price属性在构造方法中进行初始化，会抛出异常。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Phone</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">price</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> <span class=\"title function_\">price</span>()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">999</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Phone</span>(<span class=\"number\">888</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"property\">price</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>```js<br>push,pop,shift,unshift,splice,sort,foreach这些功能专一的，使用时不需要返回值的会在原数据修改，而那些功能性函数filter，concat，slice，map不会改变原数组<br>会改变数组的方法：<br>push()<br>pop()<br>shift()<br>unshift()<br>splice()<br>sort()<br>reverse()<br>forEach()<br>不会改变数组的方法：<br>filter()<br>concat()<br>slice()<br>map()</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">34. 通过原生js document.getElementById(&quot;button1&quot;).setAttribute 属性设置禁用时,第二个参数不论设置什么样的值,都能进行禁用。应该js在检测标签时只要有disabled时,便设置为禁用。</span><br><span class=\"line\">35. ```js</span><br><span class=\"line\">    链接：https://www.nowcoder.com/questionTerminal/ccb9a78b25d34629919ea53cc320c56f</span><br><span class=\"line\">    来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;SCRIPT language=&quot;JavaScript&quot;&gt;</span><br><span class=\"line\">    javascript:window.history.forward(1);</span><br><span class=\"line\">    &lt;/SCRIPT&gt;</span><br><span class=\"line\">    这 种方法是用于防止由下一个页面返回的。</span><br><span class=\"line\">    简单的说，页面A（A中有这段代码）转向页面B，</span><br><span class=\"line\">    这时，B向A转向是被禁止。</span><br><span class=\"line\">    2.</span><br><span class=\"line\">    有时候我们再做网页时不希望某个网页通过浏览器的前进后退按钮来后退或前进，可以通过简单的办法达到该效果</span><br><span class=\"line\">    &lt;body οnbefοreunlοad=&quot;history.go(0)&quot;&gt;这样这个网页就会永远停留再这个页面，不能前进后退了。</span><br></pre></td></tr></table></figure></li>\n<li><p>Object.is(NaN,NaN) 输出true,NaN == NaN 为false，-0 === +0 为true，Object.is(+0,-0)为false</p>\n</li>\n<li><p>加减乘除如果是引用类型就调用valueof方法，不然就是直接Number()</p>\n</li>\n<li><p>concat 也能用于字符串相加</p>\n</li>\n<li><p>由于存在变量提升，在if语句执行之前会先使用var声明变量a，并且声明时是在全局作用域下，因此变量a自动成为window对象的属性，故a in window的返回结果为true，使用“!”将条件取反后返回结果为false，所以不会执行if中的赋值语句，a值为undefined</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(! <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(a);</span><br></pre></td></tr></table></figure></li>\n<li><p>\\w用于匹配数字、字母或者下划线，A选项错误；/a?/表示匹配0个或者1个a，B选项错误；i修饰符表示忽略大小写，C选项正确；表示对第一个捕获组的引用，应使用\\1</p>\n</li>\n<li><p>xmlhttprequest 有open(get,url),onreadystatechange，end，首先open配置好请求，之后配置好statechange钩子，回调方法里可以获取readystate，最后会在xhr里放入结果，配置好后send</p>\n</li>\n<li><p>变量提升会提升到函数中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//其实代码执行过程如下：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a ；</span><br><span class=\"line\">a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">//函数会先去找自己内部的变量，内部有就不会往外面找，内部没有才去外面找</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> a; <span class=\"comment\">//变量提升</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"literal\">false</span>) &#123; <span class=\"comment\">//因为false没有满足if的条件，所以不能进入if语句里进行赋值</span></span><br><span class=\"line\">        a = <span class=\"number\">2</span>;    <span class=\"comment\">//if语句的条件把false改成true，就可以进入if语句赋值</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();</span><br></pre></td></tr></table></figure></li>\n<li><p>阻止默认事件会组织提交行为，不会阻止冒泡</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/0f6cf1641d9941cab8671b9e45ac2fb2</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\">几个常见的事件的方法</span><br><span class=\"line\"><span class=\"title function_\">preventDefault</span>()    取消事件默认行为，如阻止点击提交按钮时对表单的提交（本题中click并没有什么默认行为）</span><br><span class=\"line\"><span class=\"title function_\">stopImmediatePropagation</span>()   取消事件冒泡同时阻止当前节点上的事件处理程序被调用，影响当前的事件***</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">stopPropagation</span>()   取消事件冒泡，不影响事件***</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">cancelBubbe</span>()     取消事件冒泡</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">returnValue</span>()      取消事件默认行为</span><br></pre></td></tr></table></figure></li>\n<li><p>Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）</p>\n<ul>\n<li>promise.then() 注册的回调 （promise task queue）</li>\n</ul>\n<p>Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。</p>\n</li>\n<li><p>```js<br>链接：<a href=\"https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948\">https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948</a><br>来源：牛客网</p>\n<p>前提是myobj是一个对象，只是存在与不存在的问题，几种表示方法：<br>1、！obj<br>2、！window.obj<br>3、typeof myObj == “undefined（判断对象是否有定义，已定义未赋值，返回true）<br>4、myObj == undefined（已定义未赋值。返回true）<br>5、myObj === undefined （已定义未赋值，返回true）<br>6、!this.hasOwnProperty(‘myObj’))（判断是否为顶层对象的一个属性）<br>7、myobj == null（注意null与undefined的区别，ull指的是已经赋值为null的空对象，即这个对象实际上是有值的，而undefined指的是不存在或没有赋值的对象。）<br>以上几种都正确，但是我用的最多争议最少的是第三种</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">46. Math.max不能操作数组，Math.max.apply(Math,arr)可以</span><br><span class=\"line\">47. Navagator：提供有关浏览器的信息 Window：Window对象处于对象层次的最顶层，它提供了处理Navagator窗口的方法和属性 Location：提供了与当前打开的URL一起工作的方法和属性，是一个静态的对象 History：提供了与历史清单有关的信息 Document：包含与文档元素一起工作的对象，它将这些元素封装起来供编程人员使用</span><br><span class=\"line\">48. window对象中提供了两个属性来获取当前窗口距离屏幕左侧和顶部的距离，单位为像素。</span><br><span class=\"line\"></span><br><span class=\"line\">    * screenLeft：窗口距离屏幕左侧的距离</span><br><span class=\"line\">    * screenTop：窗口距离屏幕顶部的距离</span><br><span class=\"line\">49. forEach方法按升序为数组中含有效值的每一项执行一次 callback函数，那些未初始化的项将被跳过。new Array(10)创建的数组默认值都是undefined，所以回调函数都会被跳过。</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    let i = 0;</span><br><span class=\"line\">    new Array(10).forEach(() =&gt; &#123;</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></li>\n<li><pre><code class=\"js\">链接：https://www.nowcoder.com/questionTerminal/733abe2a678f470aba56b94c5af2af8f\n来源：牛客网\n\nA选项：isIDCard=/^[1-9]\\d&#123;7&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;$/\nC选项：isIDCard=/^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;4&#125;$/\n^：起始符号，^x表示以x开头\n$：结束符号，x$表示以x结尾\n[n-m]：表示从n到m的数字\n\\d：表示数字，等同于[0-9]\nX&#123;m&#125;：表示由m个X字符构成，\\d&#123;4&#125;表示4位数字\n\n15位身份证的构成：六位出生地区码+六位出身日期码+三位顺序码\n18位身份证的构成：六位出生地区码+八位出生日期码+三位顺序码+一位校验码\n\nC选项的构成：\n[1-9]\\d&#123;5&#125;：六位出生地区码，出生地区码没有以0开头，因此第一位为[1-9]。\n[1-9]\\d&#123;3&#125;：八位出生日期码的四位年份，同样年份没有以0开头。\n((0\\d)|(1[0-2]))：八位出生日期码的两位月份，| 表示或者，月份的形式为0\\d或者是10、11、12。\n(([0|1|2]\\d)|3[0-1])：八位出生日期码的两位日期，日期由01至31。\n\\d&#123;4&#125;：三位顺序码+一位校验码，共四位。\nA选项的构成：\n[1-9]\\d&#123;7&#125;：六位出生地区码+两位出生日期码的年份，这里的年份指后两位，因此没有第一位不能为0的限制，所以合并了。\n后面的与C选项类似了。\n好吧其实我也是第一次知道身份证还有15位的。\n</code></pre>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>运行结果是[f(),f(),f()]</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span> ()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = []</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">      num[i] = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">test</span>())</span><br></pre></td></tr></table></figure></li>\n<li><p>js和object-c是动态语言</p>\n</li>\n<li><p>call和apply（只是参数列表不一样，非严格模式下传递null则使用全局对象，this也叫上下文，apply可以将数组转换为参数列表集合）</p>\n</li>\n<li><p>window.open(“url”,name)可以打开新窗口</p>\n</li>\n<li><p>加减乘除和求余运算会将非number转换为number之后运算，’30’%8，但是加法运算会变成拼接</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/第一天.md527132.1027915.png\"></p>\n</li>\n<li><p>加减乘除运算，引用类型会调用toString方法之后运算，对象转换为[object Object],数组转换为’’  基本类型除了字符串相加会调用Number转换数据true为1，”30”%9正常运算，null转换为0，undefined转换为NaN，因为字符串运算优先级高，所以和他运算的都会变成字符串</p>\n</li>\n<li><p>js定义变量可以用_和$</p>\n</li>\n<li><p>以下操作只会产生黑色,因为js线程和gui线程相互阻塞，js执行完微任务之后才渲染</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: blue&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: red&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>).<span class=\"property\">style</span> = <span class=\"string\">&#x27;background: black&#x27;</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>字符串.search()返回第一个索引</p>\n</li>\n<li><p>函数提升优先级高于变量提升，且不会被同名变量声明覆盖，但是会被变量赋值后覆盖。在本题中，函数a和同名变量a会先进行提升，之后变量a又被赋值为10，再输出a的typeof值，此时a的值为10，类型为number，A选项正确。</p>\n</li>\n<li><p>这里考的是JS的运行机制！     事件(click,focus等等)，定时器(setTimeout和setInterval)，ajax,都是会触发异步，属于异步任务；js是单线程的，一个时间点只能做一件事，优先处理同步任务；     按照代码从上往下执行，遇到异步，就挂起，放到异步任务里，继续执行同步任务，只有同步任务执行完了，才去看看有没有异步任务，然后再按照顺序执行！     这里for循环是同步任务，onclick是异步任务，所以等for循环执行完了，i变成4了，注意：这里因为i是全局变量，最后一个i++，使得i为4(后面的onclick函数，最后在循环外面执行，不受i&lt;length限制)；     所以for循环每执行一次，onclick事件函数都会被挂起一次，共4次；     for循环结束后，点击事件 触发了4个onclick函数，接着输出4个4！ 对大家有用的话，希望点个赞👍！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/da4115e308c948169a9a73e50d09a3e7</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> elements=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> length=elements.<span class=\"property\">length</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;length;i++)&#123;</span><br><span class=\"line\">    elements[i].<span class=\"property\">onclick</span>=<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>iframe本质不是是动态语言的Incude机制和利用ajax动态填充内容，他根本不是动态语言，也没有加载和填充，就是一个标签引入别的框架和样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/18eb5039ac4541d585f9f175574b3ab5</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、创建比一般的 <span class=\"variable constant_\">DOM</span> 元素慢了 <span class=\"number\">1</span>-<span class=\"number\">2</span> 个数量级</span><br><span class=\"line\">iframe 的创建比其它包括 scripts 和 css 的 <span class=\"variable constant_\">DOM</span> 元素的创建慢了 <span class=\"number\">1</span>-<span class=\"number\">2</span> 个数量级，使用 iframe 的页面一般不会包含太多 iframe，所以创建 <span class=\"variable constant_\">DOM</span> 节点所花费的时间不会占很大的比重。但带来一些其它的问题：onload 事件以及连接池（connection pool）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>、阻塞页面加载</span><br><span class=\"line\">及时触发 <span class=\"variable language_\">window</span> 的 onload 事件是非常重要的。onload 事件触发使浏览器的 “忙” 指示器停止，告诉用户当前网页已经加载完毕。当 onload 事件加载延迟后，它给用户的感觉就是这个网页非常慢。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span> 的 onload 事件需要在所有 iframe 加载完毕后（包含里面的元素）才会触发。在 <span class=\"title class_\">Safari</span> 和 <span class=\"title class_\">Chrome</span> 里，通过 <span class=\"title class_\">JavaScript</span> 动态设置 iframe 的 <span class=\"variable constant_\">SRC</span> 可以避免这种阻塞情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>、唯一的连接池</span><br><span class=\"line\">浏览器只能开少量的连接到 web 服务器。比较老的浏览器，包含 <span class=\"title class_\">Internet</span> <span class=\"title class_\">Explorer</span> <span class=\"number\">6</span> &amp; <span class=\"number\">7</span> 和 <span class=\"title class_\">Firefox</span> <span class=\"number\">2</span>，只能对一个域名（hostname）同时打开两个连接。这个数量的限制在新版本的浏览器中有所提高。<span class=\"title class_\">Safari</span> <span class=\"number\">3</span>+ 和 <span class=\"title class_\">Opera</span> <span class=\"number\">9</span>+ 可同时对一个域名打开 <span class=\"number\">4</span> 个连接，<span class=\"title class_\">Chrome</span> <span class=\"number\">1</span>+, <span class=\"variable constant_\">IE</span> <span class=\"number\">8</span> 以及 <span class=\"title class_\">Firefox</span> <span class=\"number\">3</span> 可以同时打开 <span class=\"number\">6</span> 个</span><br><span class=\"line\"></span><br><span class=\"line\">绝大部分浏览器，主页面和其中的 iframe 是共享这些连接的。这意味着 iframe 在加载资源时可能用光了所有的可用连接，从而阻塞了主页面资源的加载。如果 iframe 中的内容比主页面的内容更重要，这当然是很好的。但通常情况下，iframe 里的内容是没有主页面的内容重要的。这时 iframe 中用光了可用的连接就是不值得的了。一种解决办法是，在主页面上重要的元素加载完毕后，再动态设置 iframe 的 <span class=\"variable constant_\">SRC</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span>、不利于 <span class=\"variable constant_\">SEO</span></span><br><span class=\"line\">搜索引擎的检索程序无法解读 iframe。另外，iframe 本身不是动态语言，样式和脚本都需要额外导入。综上，iframe 应谨慎使用。</span><br></pre></td></tr></table></figure></li>\n<li><p>true &amp;&amp; 1结果是1不是true</p>\n</li>\n<li><p>array. sort(sortFunction)是按照sortFunction结果大小排序。 一言不合先把比较的对象定义在数组上方，再手工分析 class Untitled { public static void main(String[] args) { //4 2 0 1 3 7 var array=[-1,1,3,4,6,10]; array.sort((a,b)=&gt;Math.abs(a-3)-Math.abs(b-3)); System.out.println(array); } } 发现最小的是算好后的第三个数字，对应原数组原位置上面是，3。看看选项中只有一个是以3排在前面的数组。好了，后面的不用比了。就是C</p>\n</li>\n<li><p>加号优先级高于 三目运算。低于括号。 所以括号中无论真假 加上前边的字符串都为 TRUE 三目运算为TRUE是 输出 define</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Value is &#x27;</span> + (val != <span class=\"string\">&#x27;0&#x27;</span>) ? <span class=\"string\">&#x27;define&#x27;</span> : <span class=\"string\">&#x27;undefine&#x27;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>Object.prototype.toString.call([])可以判断数组类型</p>\n</li>\n<li><p>commonjs在变量的头尾穿插了很多内置变量</p>\n</li>\n<li><p>通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性</p>\n</li>\n<li><p>```js<br>链接：<a href=\"https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517\">https://www.nowcoder.com/questionTerminal/cd2be232e64340adbacdca85410a2517</a><br>来源：牛客网</p>\n<p>以下关于JavaScript的描述中错误的是<br>在原型上扩展的可枚举方法，会被for in循环出来<br>使用object.defineProperty可向对象添加或者修改属性<br>每个对象都有prototype属性，返回对象类型原型的引用<br>通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性<br>原型链是JS实现继承的一种模型<br>For循环是按顺序的，for in 循环是不一定按顺序的</p>\n<p>B:使用object.defineProperty可向对象添加或者修改属性<br>这里是小写的object而非Object，所以错误。</p>\n<p>C: 每个对象都有prototype属性，返回对象类型原型的引用<br>var obj = Object.create(null)<br>console.log(obj)<br>如果使用 chrome 浏览器控制台输入上面代码，可以看到打印了一个空对象，展开看到No Properties，而随便自己用字面量声明一个对象，都能看到proto属性。</p>\n<p>所以，不是每个对象都有prototype属性。后面这句，严格来说是不是每个对象都会返回Object.prototype？，但实际应该是这个对象的原型的引用，加个“类型”是什么意思，所以这个选项考点到底是第一句话还是第二句话？</p>\n<p>D: 通过hasOwnProperty可判断一个对象以及其原型链上是否具有指定名称的属性</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20. amd和cmd是浏览器端的开发规范，目的是要解决模块加载时间过长会阻塞页面渲染和js执行，amd是异步模块加载规范，cmd是commonjs模式和amd的集合体是就近模块加载</span><br><span class=\"line\">21. onblur失去焦点，onkeydown是键盘按键，onfocus是聚焦,mousedown鼠标事件</span><br><span class=\"line\">22. ```js</span><br><span class=\"line\">    for(var i=0;i&lt;2;i++)&#123;</span><br><span class=\"line\">        (function (i)&#123;setTimeout(function()&#123;</span><br><span class=\"line\">            console.log(i)</span><br><span class=\"line\">        &#125;,0)&#125;)(i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //闭包内部函数保存了外部函数的引用</span><br></pre></td></tr></table></figure></li>\n<li><p>splice会修改原数组，concat，map，sort会返回原数组</p>\n</li>\n<li><p><strong>window.requestAnimationFrame()</strong> 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行</p>\n</li>\n<li><p>```js<br>for(let i = 0; i &lt; 5; i++){</p>\n<pre><code>requestAnimationFrame(() =&gt; console.log(i));\n</code></pre>\n<p>}<br>// let使用块级作用域，会声明五个变量并保存在作用域中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">26. 闭包，每次调用函数返回新函数都会开辟新的内存空间，变量彼此隔离</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    function Foo() &#123;</span><br><span class=\"line\">        var i = 0;</span><br><span class=\"line\">        return function() &#123;</span><br><span class=\"line\">            console.log(i++);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var f1 = Foo(),</span><br><span class=\"line\">    var f2 = Foo();</span><br><span class=\"line\">    f1();</span><br><span class=\"line\">    f1();</span><br><span class=\"line\">    f2();</span><br></pre></td></tr></table></figure></li>\n<li><p>url如果有空格可能会产生数据丢失，所以用encodeURLComponent能将字符转义为16进制编码，decodeURLComponent会将编码后的结果解析成正常字符</p>\n</li>\n<li><p>```js<br>● 首先， js有变量提升和函数提升，指的是用 var声明变量 或用 function 函数名（）{  } 声明的，会在 js预解析 阶段提升到顶端；（es6的let  和 const 不会提升）<br>● 其次，函数提升优先级 高于 变量提升<br>● 注意， 相同作用域时声明变量而不赋值则还是以前的值， 而子作用域声明不赋值则函数内该值为undefined，因为声明了私有变量</p>\n<p>var a;<br>a();<br>function a() {<br>  console.log(a);<br>}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29. 对于正则表达式 /(l)\\1/g，其中(l)是第一个分组，\\1指向第一个分组，即\\1重复了第一个分组的内容，所以该正则表达式可以表示成/(ll)/g  ,而对于第二个参数$1，表示用第一个分组的内容 l 对匹配到的部分进行替换(即 ll 替换成 l )，同时正则表达式有g表示全局匹配，所以4个ll被替换成2个ll。</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    var str = &quot;Hellllo world&quot;;</span><br><span class=\"line\">    str = str.replace(/(l)\\1/g, &#x27;$1&#x27;);</span><br></pre></td></tr></table></figure></li>\n<li><p>java前身是oak</p>\n</li>\n<li><p>class为es6关键字，在jsx中需要用className表示html中的class</p>\n</li>\n<li><p>当类中一个属性只有get()方法而无set()方法时，该属性是无法进行赋值的，连构造方法中的初始化都不行，因此，当对象的price属性在构造方法中进行初始化，会抛出异常。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Phone</span>&#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">price</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> <span class=\"title function_\">price</span>()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">999</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Phone</span>(<span class=\"number\">888</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"property\">price</span>);</span><br></pre></td></tr></table></figure></li>\n<li><p>```js<br>push,pop,shift,unshift,splice,sort,foreach这些功能专一的，使用时不需要返回值的会在原数据修改，而那些功能性函数filter，concat，slice，map不会改变原数组<br>会改变数组的方法：<br>push()<br>pop()<br>shift()<br>unshift()<br>splice()<br>sort()<br>reverse()<br>forEach()<br>不会改变数组的方法：<br>filter()<br>concat()<br>slice()<br>map()</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">34. 通过原生js document.getElementById(&quot;button1&quot;).setAttribute 属性设置禁用时,第二个参数不论设置什么样的值,都能进行禁用。应该js在检测标签时只要有disabled时,便设置为禁用。</span><br><span class=\"line\">35. ```js</span><br><span class=\"line\">    链接：https://www.nowcoder.com/questionTerminal/ccb9a78b25d34629919ea53cc320c56f</span><br><span class=\"line\">    来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;SCRIPT language=&quot;JavaScript&quot;&gt;</span><br><span class=\"line\">    javascript:window.history.forward(1);</span><br><span class=\"line\">    &lt;/SCRIPT&gt;</span><br><span class=\"line\">    这 种方法是用于防止由下一个页面返回的。</span><br><span class=\"line\">    简单的说，页面A（A中有这段代码）转向页面B，</span><br><span class=\"line\">    这时，B向A转向是被禁止。</span><br><span class=\"line\">    2.</span><br><span class=\"line\">    有时候我们再做网页时不希望某个网页通过浏览器的前进后退按钮来后退或前进，可以通过简单的办法达到该效果</span><br><span class=\"line\">    &lt;body οnbefοreunlοad=&quot;history.go(0)&quot;&gt;这样这个网页就会永远停留再这个页面，不能前进后退了。</span><br></pre></td></tr></table></figure></li>\n<li><p>Object.is(NaN,NaN) 输出true,NaN == NaN 为false，-0 === +0 为true，Object.is(+0,-0)为false</p>\n</li>\n<li><p>加减乘除如果是引用类型就调用valueof方法，不然就是直接Number()</p>\n</li>\n<li><p>concat 也能用于字符串相加</p>\n</li>\n<li><p>由于存在变量提升，在if语句执行之前会先使用var声明变量a，并且声明时是在全局作用域下，因此变量a自动成为window对象的属性，故a in window的返回结果为true，使用“!”将条件取反后返回结果为false，所以不会执行if中的赋值语句，a值为undefined</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(! <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(a);</span><br></pre></td></tr></table></figure></li>\n<li><p>\\w用于匹配数字、字母或者下划线，A选项错误；/a?/表示匹配0个或者1个a，B选项错误；i修饰符表示忽略大小写，C选项正确；表示对第一个捕获组的引用，应使用\\1</p>\n</li>\n<li><p>xmlhttprequest 有open(get,url),onreadystatechange，end，首先open配置好请求，之后配置好statechange钩子，回调方法里可以获取readystate，最后会在xhr里放入结果，配置好后send</p>\n</li>\n<li><p>变量提升会提升到函数中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//其实代码执行过程如下：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a ；</span><br><span class=\"line\">a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">//函数会先去找自己内部的变量，内部有就不会往外面找，内部没有才去外面找</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> a; <span class=\"comment\">//变量提升</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"literal\">false</span>) &#123; <span class=\"comment\">//因为false没有满足if的条件，所以不能进入if语句里进行赋值</span></span><br><span class=\"line\">        a = <span class=\"number\">2</span>;    <span class=\"comment\">//if语句的条件把false改成true，就可以进入if语句赋值</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">test</span>();</span><br></pre></td></tr></table></figure></li>\n<li><p>阻止默认事件会组织提交行为，不会阻止冒泡</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：<span class=\"attr\">https</span>:<span class=\"comment\">//www.nowcoder.com/questionTerminal/0f6cf1641d9941cab8671b9e45ac2fb2</span></span><br><span class=\"line\">来源：牛客网</span><br><span class=\"line\"></span><br><span class=\"line\">几个常见的事件的方法</span><br><span class=\"line\"><span class=\"title function_\">preventDefault</span>()    取消事件默认行为，如阻止点击提交按钮时对表单的提交（本题中click并没有什么默认行为）</span><br><span class=\"line\"><span class=\"title function_\">stopImmediatePropagation</span>()   取消事件冒泡同时阻止当前节点上的事件处理程序被调用，影响当前的事件***</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">stopPropagation</span>()   取消事件冒泡，不影响事件***</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">cancelBubbe</span>()     取消事件冒泡</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">returnValue</span>()      取消事件默认行为</span><br></pre></td></tr></table></figure></li>\n<li><p>Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）</p>\n<ul>\n<li>promise.then() 注册的回调 （promise task queue）</li>\n</ul>\n<p>Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。</p>\n</li>\n<li><p>```js<br>链接：<a href=\"https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948\">https://www.nowcoder.com/questionTerminal/58616412d69e4991831bf12cafbf7948</a><br>来源：牛客网</p>\n<p>前提是myobj是一个对象，只是存在与不存在的问题，几种表示方法：<br>1、！obj<br>2、！window.obj<br>3、typeof myObj == “undefined（判断对象是否有定义，已定义未赋值，返回true）<br>4、myObj == undefined（已定义未赋值。返回true）<br>5、myObj === undefined （已定义未赋值，返回true）<br>6、!this.hasOwnProperty(‘myObj’))（判断是否为顶层对象的一个属性）<br>7、myobj == null（注意null与undefined的区别，ull指的是已经赋值为null的空对象，即这个对象实际上是有值的，而undefined指的是不存在或没有赋值的对象。）<br>以上几种都正确，但是我用的最多争议最少的是第三种</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">46. Math.max不能操作数组，Math.max.apply(Math,arr)可以</span><br><span class=\"line\">47. Navagator：提供有关浏览器的信息 Window：Window对象处于对象层次的最顶层，它提供了处理Navagator窗口的方法和属性 Location：提供了与当前打开的URL一起工作的方法和属性，是一个静态的对象 History：提供了与历史清单有关的信息 Document：包含与文档元素一起工作的对象，它将这些元素封装起来供编程人员使用</span><br><span class=\"line\">48. window对象中提供了两个属性来获取当前窗口距离屏幕左侧和顶部的距离，单位为像素。</span><br><span class=\"line\"></span><br><span class=\"line\">    * screenLeft：窗口距离屏幕左侧的距离</span><br><span class=\"line\">    * screenTop：窗口距离屏幕顶部的距离</span><br><span class=\"line\">49. forEach方法按升序为数组中含有效值的每一项执行一次 callback函数，那些未初始化的项将被跳过。new Array(10)创建的数组默认值都是undefined，所以回调函数都会被跳过。</span><br><span class=\"line\"></span><br><span class=\"line\">    ```js</span><br><span class=\"line\">    let i = 0;</span><br><span class=\"line\">    new Array(10).forEach(() =&gt; &#123;</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></li>\n<li><pre><code class=\"js\">链接：https://www.nowcoder.com/questionTerminal/733abe2a678f470aba56b94c5af2af8f\n来源：牛客网\n\nA选项：isIDCard=/^[1-9]\\d&#123;7&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;$/\nC选项：isIDCard=/^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;4&#125;$/\n^：起始符号，^x表示以x开头\n$：结束符号，x$表示以x结尾\n[n-m]：表示从n到m的数字\n\\d：表示数字，等同于[0-9]\nX&#123;m&#125;：表示由m个X字符构成，\\d&#123;4&#125;表示4位数字\n\n15位身份证的构成：六位出生地区码+六位出身日期码+三位顺序码\n18位身份证的构成：六位出生地区码+八位出生日期码+三位顺序码+一位校验码\n\nC选项的构成：\n[1-9]\\d&#123;5&#125;：六位出生地区码，出生地区码没有以0开头，因此第一位为[1-9]。\n[1-9]\\d&#123;3&#125;：八位出生日期码的四位年份，同样年份没有以0开头。\n((0\\d)|(1[0-2]))：八位出生日期码的两位月份，| 表示或者，月份的形式为0\\d或者是10、11、12。\n(([0|1|2]\\d)|3[0-1])：八位出生日期码的两位日期，日期由01至31。\n\\d&#123;4&#125;：三位顺序码+一位校验码，共四位。\nA选项的构成：\n[1-9]\\d&#123;7&#125;：六位出生地区码+两位出生日期码的年份，这里的年份指后两位，因此没有第一位不能为0的限制，所以合并了。\n后面的与C选项类似了。\n好吧其实我也是第一次知道身份证还有15位的。\n</code></pre>\n</li>\n<li></li>\n</ol>\n"},{"title":"做题痕迹","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nconst readline = require('readline')\nconst rl = readline.createInterface({\n    input:process.stdin,\n    output:process.stdout\n})\n\nrl.on(\"line\",(res)=>{\n    main(parseInt(res))\n})\n\nfunction main(n){\n    let m= Array(2*n-1).fill(0).map(item=>\n        Array(2*n-1).fill(0)\n    );\n    for (let i = 0; i < 2*n-1; i++) {\n        m[i][i]=1\n        m[i][2*n-2-i]=1\n        m[n-1][i]=1\n        m[i][n-1]=1\n        if(i<n){\n            m[0][2*n-2-i]=1\n            m[i][0]=1\n            m[2*n-2][i]=1\n            m[n-1+i][2*n-2]=1\n        }\n    }\n    for (let i = 0; i < 2*n-1; i++) {\n        for (let j = 0; j < 2*n-1; j++) {\n            if(m[i][j]){\n                process.stdout.write(\"*\")\n            }else{\n                process.stdout.write(\" \")\n            }\n          \n        }\n        console.log()\n    }\n}\nmain(3)\n\n\n\n\n// let n,p,x;\n// let calc,arr;\n// let time = 0\n\n// if(time==0){\n//     arr=res.split(' ').map(x=>parseInt(x));\n//      n = arr[0]\n//      p = arr[1]\n//      x = arr[2]\n// }else{\n//     calc = res.split(' ').map(x=>parseInt(x))\n// }\n\n// time++;\n// if(time==2){\n//     main(n,p,x,calc)\n//     rl.close();\n// }\n\n// function main(n,p,x,calc){\n//     let sum=0;\n//     for (let i = 0; i < n; i++) {\n//         sum+=calc[i];\n//     }\n//     let res = 0;\n//     for (let i = 0; i < n; i++) {\n//         let my = sum-calc[i]\n//         let now = parseInt(my/x);\n//         let after = parseInt((my+p)/x)\n//         res+=after-now\n//         if(calc[i]<=p&&sum%x==0)res--\n//     }\n//     console.log(res);\n// }\n\n```\n","source":"_posts/算法/leetcode/js/421网易做题痕迹.md","raw":"---\ntitle: '做题痕迹'\ndate: 2022-10-15 10:06:51\ntags: \n    - leetcode\ncategories: 算法\n---\n\n```javascript\nconst readline = require('readline')\nconst rl = readline.createInterface({\n    input:process.stdin,\n    output:process.stdout\n})\n\nrl.on(\"line\",(res)=>{\n    main(parseInt(res))\n})\n\nfunction main(n){\n    let m= Array(2*n-1).fill(0).map(item=>\n        Array(2*n-1).fill(0)\n    );\n    for (let i = 0; i < 2*n-1; i++) {\n        m[i][i]=1\n        m[i][2*n-2-i]=1\n        m[n-1][i]=1\n        m[i][n-1]=1\n        if(i<n){\n            m[0][2*n-2-i]=1\n            m[i][0]=1\n            m[2*n-2][i]=1\n            m[n-1+i][2*n-2]=1\n        }\n    }\n    for (let i = 0; i < 2*n-1; i++) {\n        for (let j = 0; j < 2*n-1; j++) {\n            if(m[i][j]){\n                process.stdout.write(\"*\")\n            }else{\n                process.stdout.write(\" \")\n            }\n          \n        }\n        console.log()\n    }\n}\nmain(3)\n\n\n\n\n// let n,p,x;\n// let calc,arr;\n// let time = 0\n\n// if(time==0){\n//     arr=res.split(' ').map(x=>parseInt(x));\n//      n = arr[0]\n//      p = arr[1]\n//      x = arr[2]\n// }else{\n//     calc = res.split(' ').map(x=>parseInt(x))\n// }\n\n// time++;\n// if(time==2){\n//     main(n,p,x,calc)\n//     rl.close();\n// }\n\n// function main(n,p,x,calc){\n//     let sum=0;\n//     for (let i = 0; i < n; i++) {\n//         sum+=calc[i];\n//     }\n//     let res = 0;\n//     for (let i = 0; i < n; i++) {\n//         let my = sum-calc[i]\n//         let now = parseInt(my/x);\n//         let after = parseInt((my+p)/x)\n//         res+=after-now\n//         if(calc[i]<=p&&sum%x==0)res--\n//     }\n//     console.log(res);\n// }\n\n```\n","slug":"算法/leetcode/js/421网易做题痕迹","published":1,"updated":"2023-03-21T09:17:17.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8m007wo8hu0iejbrhj","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>:process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>:process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;line&quot;</span>,<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">main</span>(<span class=\"built_in\">parseInt</span>(res))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m= <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>*n-<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span></span><br><span class=\"line\">        <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>*n-<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        m[i][i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[i][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>-i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[n-<span class=\"number\">1</span>][i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[i][n-<span class=\"number\">1</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;n)&#123;</span><br><span class=\"line\">            m[<span class=\"number\">0</span>][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>-i]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[i][<span class=\"number\">0</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[<span class=\"number\">2</span>*n-<span class=\"number\">2</span>][i]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[n-<span class=\"number\">1</span>+i][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m[i][j])&#123;</span><br><span class=\"line\">                process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">main</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let n,p,x;</span></span><br><span class=\"line\"><span class=\"comment\">// let calc,arr;</span></span><br><span class=\"line\"><span class=\"comment\">// let time = 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// if(time==0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     arr=res.split(&#x27; &#x27;).map(x=&gt;parseInt(x));</span></span><br><span class=\"line\"><span class=\"comment\">//      n = arr[0]</span></span><br><span class=\"line\"><span class=\"comment\">//      p = arr[1]</span></span><br><span class=\"line\"><span class=\"comment\">//      x = arr[2]</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     calc = res.split(&#x27; &#x27;).map(x=&gt;parseInt(x))</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// time++;</span></span><br><span class=\"line\"><span class=\"comment\">// if(time==2)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     main(n,p,x,calc)</span></span><br><span class=\"line\"><span class=\"comment\">//     rl.close();</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// function main(n,p,x,calc)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     let sum=0;</span></span><br><span class=\"line\"><span class=\"comment\">//     for (let i = 0; i &lt; n; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         sum+=calc[i];</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     let res = 0;</span></span><br><span class=\"line\"><span class=\"comment\">//     for (let i = 0; i &lt; n; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         let my = sum-calc[i]</span></span><br><span class=\"line\"><span class=\"comment\">//         let now = parseInt(my/x);</span></span><br><span class=\"line\"><span class=\"comment\">//         let after = parseInt((my+p)/x)</span></span><br><span class=\"line\"><span class=\"comment\">//         res+=after-now</span></span><br><span class=\"line\"><span class=\"comment\">//         if(calc[i]&lt;=p&amp;&amp;sum%x==0)res--</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>:process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>:process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&quot;line&quot;</span>,<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">main</span>(<span class=\"built_in\">parseInt</span>(res))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m= <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>*n-<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span></span><br><span class=\"line\">        <span class=\"title class_\">Array</span>(<span class=\"number\">2</span>*n-<span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        m[i][i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[i][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>-i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[n-<span class=\"number\">1</span>][i]=<span class=\"number\">1</span></span><br><span class=\"line\">        m[i][n-<span class=\"number\">1</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i&lt;n)&#123;</span><br><span class=\"line\">            m[<span class=\"number\">0</span>][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>-i]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[i][<span class=\"number\">0</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[<span class=\"number\">2</span>*n-<span class=\"number\">2</span>][i]=<span class=\"number\">1</span></span><br><span class=\"line\">            m[n-<span class=\"number\">1</span>+i][<span class=\"number\">2</span>*n-<span class=\"number\">2</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>*n-<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(m[i][j])&#123;</span><br><span class=\"line\">                process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">main</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// let n,p,x;</span></span><br><span class=\"line\"><span class=\"comment\">// let calc,arr;</span></span><br><span class=\"line\"><span class=\"comment\">// let time = 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// if(time==0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     arr=res.split(&#x27; &#x27;).map(x=&gt;parseInt(x));</span></span><br><span class=\"line\"><span class=\"comment\">//      n = arr[0]</span></span><br><span class=\"line\"><span class=\"comment\">//      p = arr[1]</span></span><br><span class=\"line\"><span class=\"comment\">//      x = arr[2]</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     calc = res.split(&#x27; &#x27;).map(x=&gt;parseInt(x))</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// time++;</span></span><br><span class=\"line\"><span class=\"comment\">// if(time==2)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     main(n,p,x,calc)</span></span><br><span class=\"line\"><span class=\"comment\">//     rl.close();</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// function main(n,p,x,calc)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     let sum=0;</span></span><br><span class=\"line\"><span class=\"comment\">//     for (let i = 0; i &lt; n; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         sum+=calc[i];</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     let res = 0;</span></span><br><span class=\"line\"><span class=\"comment\">//     for (let i = 0; i &lt; n; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         let my = sum-calc[i]</span></span><br><span class=\"line\"><span class=\"comment\">//         let now = parseInt(my/x);</span></span><br><span class=\"line\"><span class=\"comment\">//         let after = parseInt((my+p)/x)</span></span><br><span class=\"line\"><span class=\"comment\">//         res+=after-now</span></span><br><span class=\"line\"><span class=\"comment\">//         if(calc[i]&lt;=p&amp;&amp;sum%x==0)res--</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(res);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"刷题记录","date":"2022-10-15T02:06:51.000Z","_content":"\n1. 为什么0 == null 为false\n\n   ```js\n   如果x不是正常值（比如抛出一个错误），中断执行。\n   如果y不是正常值，中断执行。\n   如果Type(x)与Type(y)相同，执行严格相等运算x === y。\n   如果x是null，y是undefined，返回true。\n   如果x是undefined，y是null，返回true。\n   如果Type(x)是数值，Type(y)是字符串，返回x == ToNumber(y)的结果。\n   如果Type(x)是字符串，Type(y)是数值，返回ToNumber(x) == y的结果。\n   如果Type(x)是布尔值，返回ToNumber(x) == y的结果。\n   如果Type(y)是布尔值，返回x == ToNumber(y)的结果。\n   如果Type(x)是字符串或数值或Symbol值，Type(y)是对象，返回x == ToPrimitive(y)的结果。\n   如果Type(x)是对象，Type(y)是字符串或数值或Symbol值，返回ToPrimitive(x) == y的结果。\n   返回false。\n   ```\n2.\n","source":"_posts/学校/面试复习/牛客刷题/第二天.md","raw":"---\ntitle: '刷题记录'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: js\n---\n\n1. 为什么0 == null 为false\n\n   ```js\n   如果x不是正常值（比如抛出一个错误），中断执行。\n   如果y不是正常值，中断执行。\n   如果Type(x)与Type(y)相同，执行严格相等运算x === y。\n   如果x是null，y是undefined，返回true。\n   如果x是undefined，y是null，返回true。\n   如果Type(x)是数值，Type(y)是字符串，返回x == ToNumber(y)的结果。\n   如果Type(x)是字符串，Type(y)是数值，返回ToNumber(x) == y的结果。\n   如果Type(x)是布尔值，返回ToNumber(x) == y的结果。\n   如果Type(y)是布尔值，返回x == ToNumber(y)的结果。\n   如果Type(x)是字符串或数值或Symbol值，Type(y)是对象，返回x == ToPrimitive(y)的结果。\n   如果Type(x)是对象，Type(y)是字符串或数值或Symbol值，返回ToPrimitive(x) == y的结果。\n   返回false。\n   ```\n2.\n","slug":"学校/面试复习/牛客刷题/第二天","published":1,"updated":"2023-03-21T09:58:10.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8n0080o8hue6zn6i0w","content":"<ol>\n<li><p>为什么0 == null 为false</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果x不是正常值（比如抛出一个错误），中断执行。</span><br><span class=\"line\">如果y不是正常值，中断执行。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)与<span class=\"title class_\">Type</span>(y)相同，执行严格相等运算x === y。</span><br><span class=\"line\">如果x是<span class=\"literal\">null</span>，y是<span class=\"literal\">undefined</span>，返回<span class=\"literal\">true</span>。</span><br><span class=\"line\">如果x是<span class=\"literal\">undefined</span>，y是<span class=\"literal\">null</span>，返回<span class=\"literal\">true</span>。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是数值，<span class=\"title class_\">Type</span>(y)是字符串，返回x == <span class=\"title class_\">ToNumber</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是字符串，<span class=\"title class_\">Type</span>(y)是数值，返回<span class=\"title class_\">ToNumber</span>(x) == y的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是布尔值，返回<span class=\"title class_\">ToNumber</span>(x) == y的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(y)是布尔值，返回x == <span class=\"title class_\">ToNumber</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是字符串或数值或<span class=\"title class_\">Symbol</span>值，<span class=\"title class_\">Type</span>(y)是对象，返回x == <span class=\"title class_\">ToPrimitive</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是对象，<span class=\"title class_\">Type</span>(y)是字符串或数值或<span class=\"title class_\">Symbol</span>值，返回<span class=\"title class_\">ToPrimitive</span>(x) == y的结果。</span><br><span class=\"line\">返回<span class=\"literal\">false</span>。</span><br></pre></td></tr></table></figure></li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>为什么0 == null 为false</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果x不是正常值（比如抛出一个错误），中断执行。</span><br><span class=\"line\">如果y不是正常值，中断执行。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)与<span class=\"title class_\">Type</span>(y)相同，执行严格相等运算x === y。</span><br><span class=\"line\">如果x是<span class=\"literal\">null</span>，y是<span class=\"literal\">undefined</span>，返回<span class=\"literal\">true</span>。</span><br><span class=\"line\">如果x是<span class=\"literal\">undefined</span>，y是<span class=\"literal\">null</span>，返回<span class=\"literal\">true</span>。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是数值，<span class=\"title class_\">Type</span>(y)是字符串，返回x == <span class=\"title class_\">ToNumber</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是字符串，<span class=\"title class_\">Type</span>(y)是数值，返回<span class=\"title class_\">ToNumber</span>(x) == y的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是布尔值，返回<span class=\"title class_\">ToNumber</span>(x) == y的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(y)是布尔值，返回x == <span class=\"title class_\">ToNumber</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是字符串或数值或<span class=\"title class_\">Symbol</span>值，<span class=\"title class_\">Type</span>(y)是对象，返回x == <span class=\"title class_\">ToPrimitive</span>(y)的结果。</span><br><span class=\"line\">如果<span class=\"title class_\">Type</span>(x)是对象，<span class=\"title class_\">Type</span>(y)是字符串或数值或<span class=\"title class_\">Symbol</span>值，返回<span class=\"title class_\">ToPrimitive</span>(x) == y的结果。</span><br><span class=\"line\">返回<span class=\"literal\">false</span>。</span><br></pre></td></tr></table></figure></li>\n<li></li>\n</ol>\n"},{"title":"偶数子序列","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nlet allarr;\nlet alltemp,restemp=[];\nlet nn,kk;\nlet res;\nfunction begin(n){\n    alltemp=new Array(n).fill(0)\n}\n// function clear(){\n//     alltemp==new Array(nn).fill(0)\n//     restemp=[]\n// }\n\nfunction fn(x,s){\n    // console.log(\"restemp:\"+restemp);\n    // console.log(\"x:\"+x);\n    if(kk==x){\n        // console.log(\"kk x restemp:\"+restemp);\n        // console.log(\"kk:\"+kk);\n        // console.log(\"x:\"+x);\n        if(s%2==0)res++;\n        return ;\n    }\n    for (let i = 0; i < nn; i++) {\n        if(!alltemp[i]){\n            restemp.push(allarr[i])\n            alltemp[i]=1\n            s+=allarr[i]\n            // let y=x+1\n            fn(x+1,s)\n            alltemp[i]=0\n            restemp.pop()\n        }\n    }\n}\n\nfunction main(n,k,arr){\n    res=0\n    allarr=arr;\n    nn=n;\n    kk=k;\n    begin(n);\n    fn(0,0)\n    return res/jiecheng(k);\n}\n\nfunction jiecheng(x){\n    if(x==1)return 1;\n    return x*jiecheng(x-1)\n}\nconsole.log(main(5,2,[1,2,3,4,5]));\nconsole.log(main(3,1,[1,2,3]));\nconsole.log(main(4,3,[1,4,2,2]));\n\n```\n","source":"_posts/算法/leetcode/js/偶数子序列.md","raw":"---\ntitle: '偶数子序列'\ndate: 2022-10-15 10:06:51\ntags: \n    - leetcode\ncategories: 算法\n---\n\n```javascript\nlet allarr;\nlet alltemp,restemp=[];\nlet nn,kk;\nlet res;\nfunction begin(n){\n    alltemp=new Array(n).fill(0)\n}\n// function clear(){\n//     alltemp==new Array(nn).fill(0)\n//     restemp=[]\n// }\n\nfunction fn(x,s){\n    // console.log(\"restemp:\"+restemp);\n    // console.log(\"x:\"+x);\n    if(kk==x){\n        // console.log(\"kk x restemp:\"+restemp);\n        // console.log(\"kk:\"+kk);\n        // console.log(\"x:\"+x);\n        if(s%2==0)res++;\n        return ;\n    }\n    for (let i = 0; i < nn; i++) {\n        if(!alltemp[i]){\n            restemp.push(allarr[i])\n            alltemp[i]=1\n            s+=allarr[i]\n            // let y=x+1\n            fn(x+1,s)\n            alltemp[i]=0\n            restemp.pop()\n        }\n    }\n}\n\nfunction main(n,k,arr){\n    res=0\n    allarr=arr;\n    nn=n;\n    kk=k;\n    begin(n);\n    fn(0,0)\n    return res/jiecheng(k);\n}\n\nfunction jiecheng(x){\n    if(x==1)return 1;\n    return x*jiecheng(x-1)\n}\nconsole.log(main(5,2,[1,2,3,4,5]));\nconsole.log(main(3,1,[1,2,3]));\nconsole.log(main(4,3,[1,4,2,2]));\n\n```\n","slug":"算法/leetcode/js/偶数子序列","published":1,"updated":"2023-03-21T09:17:33.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8o0083o8hu9ng2dah5","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> allarr;</span><br><span class=\"line\"><span class=\"keyword\">let</span> alltemp,restemp=[];</span><br><span class=\"line\"><span class=\"keyword\">let</span> nn,kk;</span><br><span class=\"line\"><span class=\"keyword\">let</span> res;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">begin</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    alltemp=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// function clear()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     alltemp==new Array(nn).fill(0)</span></span><br><span class=\"line\"><span class=\"comment\">//     restemp=[]</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">x,s</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;restemp:&quot;+restemp);</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;x:&quot;+x);</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(kk==x)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;kk x restemp:&quot;+restemp);</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;kk:&quot;+kk);</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;x:&quot;+x);</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s%<span class=\"number\">2</span>==<span class=\"number\">0</span>)res++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nn; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!alltemp[i])&#123;</span><br><span class=\"line\">            restemp.<span class=\"title function_\">push</span>(allarr[i])</span><br><span class=\"line\">            alltemp[i]=<span class=\"number\">1</span></span><br><span class=\"line\">            s+=allarr[i]</span><br><span class=\"line\">            <span class=\"comment\">// let y=x+1</span></span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(x+<span class=\"number\">1</span>,s)</span><br><span class=\"line\">            alltemp[i]=<span class=\"number\">0</span></span><br><span class=\"line\">            restemp.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\">n,k,arr</span>)&#123;</span><br><span class=\"line\">    res=<span class=\"number\">0</span></span><br><span class=\"line\">    allarr=arr;</span><br><span class=\"line\">    nn=n;</span><br><span class=\"line\">    kk=k;</span><br><span class=\"line\">    <span class=\"title function_\">begin</span>(n);</span><br><span class=\"line\">    <span class=\"title function_\">fn</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res/<span class=\"title function_\">jiecheng</span>(k);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">jiecheng</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x==<span class=\"number\">1</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x*<span class=\"title function_\">jiecheng</span>(x-<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">5</span>,<span class=\"number\">2</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">3</span>,<span class=\"number\">1</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">4</span>,<span class=\"number\">3</span>,[<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> allarr;</span><br><span class=\"line\"><span class=\"keyword\">let</span> alltemp,restemp=[];</span><br><span class=\"line\"><span class=\"keyword\">let</span> nn,kk;</span><br><span class=\"line\"><span class=\"keyword\">let</span> res;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">begin</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    alltemp=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// function clear()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     alltemp==new Array(nn).fill(0)</span></span><br><span class=\"line\"><span class=\"comment\">//     restemp=[]</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">x,s</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;restemp:&quot;+restemp);</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;x:&quot;+x);</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(kk==x)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;kk x restemp:&quot;+restemp);</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;kk:&quot;+kk);</span></span><br><span class=\"line\">        <span class=\"comment\">// console.log(&quot;x:&quot;+x);</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s%<span class=\"number\">2</span>==<span class=\"number\">0</span>)res++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nn; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!alltemp[i])&#123;</span><br><span class=\"line\">            restemp.<span class=\"title function_\">push</span>(allarr[i])</span><br><span class=\"line\">            alltemp[i]=<span class=\"number\">1</span></span><br><span class=\"line\">            s+=allarr[i]</span><br><span class=\"line\">            <span class=\"comment\">// let y=x+1</span></span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(x+<span class=\"number\">1</span>,s)</span><br><span class=\"line\">            alltemp[i]=<span class=\"number\">0</span></span><br><span class=\"line\">            restemp.<span class=\"title function_\">pop</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\">n,k,arr</span>)&#123;</span><br><span class=\"line\">    res=<span class=\"number\">0</span></span><br><span class=\"line\">    allarr=arr;</span><br><span class=\"line\">    nn=n;</span><br><span class=\"line\">    kk=k;</span><br><span class=\"line\">    <span class=\"title function_\">begin</span>(n);</span><br><span class=\"line\">    <span class=\"title function_\">fn</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res/<span class=\"title function_\">jiecheng</span>(k);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">jiecheng</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x==<span class=\"number\">1</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x*<span class=\"title function_\">jiecheng</span>(x-<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">5</span>,<span class=\"number\">2</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">3</span>,<span class=\"number\">1</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]));</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">main</span>(<span class=\"number\">4</span>,<span class=\"number\">3</span>,[<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"订阅模式","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nlet tree = {\n    val: '计算机学院',\n    children: [{\n        val: '软件工程',\n        children: [{\n            val: '一班',\n            children: []\n          },\n          {\n            val: '二班',\n            children: []\n          }\n        ]\n      },\n      {\n        val: '计算机科学与技术',\n        children: [{\n          val: '计算机一班',\n          children: []\n        }]\n      }\n    ]\n  }\n// \nfunction fn(obj,target,result){\n    result.push(obj.val);\n    if(obj.val==target)return result;\n    else{\n        //if(!obj.children.length)return result;\n        for (let i = 0; i < obj.children.length; i++) {\n            let arr=fn(obj.children[i],target,result.slice());\n            if(arr[arr.length-1]==target) return arr;\n        }\n        return result.slice();\n    }\n}\nconsole.log(fn(tree,\"计算机一班\",[]));\n\n// function search(node, target) {\n//     let result = []\n//     let searchTarget = function(node, target, result) {\n//       result.push(node.val)\n//       if (node.val === target) {\n//         return result\n//       } else {\n//         for (let i = 0; i < node.children.length; i++) {\n//           let arr = searchTarget(node.children[i], target, result.slice())\n//           if (arr[arr.length - 1] === target) {\n//             return arr\n//           }\n//         }\n//         return result.slice()\n//       }\n//     }\n//     return searchTarget(node, target, result)\n//   }\n//   console.log(search(tree, '计算机一班'))\n```\n","source":"_posts/算法/leetcode/js/订阅模式.md","raw":"---\ntitle: '订阅模式'\ndate: 2022-10-15 10:06:51\ntags: \n    - leetcode\ncategories: 算法\n---\n\n```javascript\nlet tree = {\n    val: '计算机学院',\n    children: [{\n        val: '软件工程',\n        children: [{\n            val: '一班',\n            children: []\n          },\n          {\n            val: '二班',\n            children: []\n          }\n        ]\n      },\n      {\n        val: '计算机科学与技术',\n        children: [{\n          val: '计算机一班',\n          children: []\n        }]\n      }\n    ]\n  }\n// \nfunction fn(obj,target,result){\n    result.push(obj.val);\n    if(obj.val==target)return result;\n    else{\n        //if(!obj.children.length)return result;\n        for (let i = 0; i < obj.children.length; i++) {\n            let arr=fn(obj.children[i],target,result.slice());\n            if(arr[arr.length-1]==target) return arr;\n        }\n        return result.slice();\n    }\n}\nconsole.log(fn(tree,\"计算机一班\",[]));\n\n// function search(node, target) {\n//     let result = []\n//     let searchTarget = function(node, target, result) {\n//       result.push(node.val)\n//       if (node.val === target) {\n//         return result\n//       } else {\n//         for (let i = 0; i < node.children.length; i++) {\n//           let arr = searchTarget(node.children[i], target, result.slice())\n//           if (arr[arr.length - 1] === target) {\n//             return arr\n//           }\n//         }\n//         return result.slice()\n//       }\n//     }\n//     return searchTarget(node, target, result)\n//   }\n//   console.log(search(tree, '计算机一班'))\n```\n","slug":"算法/leetcode/js/订阅模式","published":1,"updated":"2023-03-21T09:17:53.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8p0087o8hudf5dhvkh","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> tree = &#123;</span><br><span class=\"line\">    <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机学院&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">        <span class=\"attr\">val</span>: <span class=\"string\">&#x27;软件工程&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">val</span>: <span class=\"string\">&#x27;一班&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">val</span>: <span class=\"string\">&#x27;二班&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机科学与技术&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">          <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机一班&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">children</span>: []</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">obj,target,result</span>)&#123;</span><br><span class=\"line\">    result.<span class=\"title function_\">push</span>(obj.<span class=\"property\">val</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj.<span class=\"property\">val</span>==target)<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//if(!obj.children.length)return result;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; obj.<span class=\"property\">children</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> arr=<span class=\"title function_\">fn</span>(obj.<span class=\"property\">children</span>[i],target,result.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[arr.<span class=\"property\">length</span>-<span class=\"number\">1</span>]==target) <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.<span class=\"title function_\">slice</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>(tree,<span class=\"string\">&quot;计算机一班&quot;</span>,[]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// function search(node, target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     let result = []</span></span><br><span class=\"line\"><span class=\"comment\">//     let searchTarget = function(node, target, result) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//       result.push(node.val)</span></span><br><span class=\"line\"><span class=\"comment\">//       if (node.val === target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         return result</span></span><br><span class=\"line\"><span class=\"comment\">//       &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         for (let i = 0; i &lt; node.children.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//           let arr = searchTarget(node.children[i], target, result.slice())</span></span><br><span class=\"line\"><span class=\"comment\">//           if (arr[arr.length - 1] === target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//             return arr</span></span><br><span class=\"line\"><span class=\"comment\">//           &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//         &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//         return result.slice()</span></span><br><span class=\"line\"><span class=\"comment\">//       &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     return searchTarget(node, target, result)</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(search(tree, &#x27;计算机一班&#x27;))</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> tree = &#123;</span><br><span class=\"line\">    <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机学院&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">        <span class=\"attr\">val</span>: <span class=\"string\">&#x27;软件工程&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">val</span>: <span class=\"string\">&#x27;一班&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: []</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">val</span>: <span class=\"string\">&#x27;二班&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: []</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机科学与技术&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">          <span class=\"attr\">val</span>: <span class=\"string\">&#x27;计算机一班&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">children</span>: []</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">obj,target,result</span>)&#123;</span><br><span class=\"line\">    result.<span class=\"title function_\">push</span>(obj.<span class=\"property\">val</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj.<span class=\"property\">val</span>==target)<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//if(!obj.children.length)return result;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; obj.<span class=\"property\">children</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> arr=<span class=\"title function_\">fn</span>(obj.<span class=\"property\">children</span>[i],target,result.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[arr.<span class=\"property\">length</span>-<span class=\"number\">1</span>]==target) <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.<span class=\"title function_\">slice</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>(tree,<span class=\"string\">&quot;计算机一班&quot;</span>,[]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// function search(node, target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     let result = []</span></span><br><span class=\"line\"><span class=\"comment\">//     let searchTarget = function(node, target, result) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//       result.push(node.val)</span></span><br><span class=\"line\"><span class=\"comment\">//       if (node.val === target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         return result</span></span><br><span class=\"line\"><span class=\"comment\">//       &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//         for (let i = 0; i &lt; node.children.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//           let arr = searchTarget(node.children[i], target, result.slice())</span></span><br><span class=\"line\"><span class=\"comment\">//           if (arr[arr.length - 1] === target) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//             return arr</span></span><br><span class=\"line\"><span class=\"comment\">//           &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//         &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//         return result.slice()</span></span><br><span class=\"line\"><span class=\"comment\">//       &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//     return searchTarget(node, target, result)</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//   console.log(search(tree, &#x27;计算机一班&#x27;))</span></span><br></pre></td></tr></table></figure>\n"},{"title":"js一些时间工具类","date":"2022-10-15T02:06:51.000Z","_content":"\n```javascript\nfunction formatNum(num) {\n            let res = Number(num);\n            return res < 10 ? '0' + res : res;\n        }\n        function getToday() {\n            let date = new Date();\n            let y = date.getFullYear();\n            let m = date.getMonth();\n            let d = date.getDate();\n            let hour = date.getHours();\n             let minutes = new Date().getMinutes();\n             let seconds = new Date().getSeconds();\n  \n             date =y + '-' + this.formatNum(m + 1) + '-' + this.formatNum(d) + ' ' +this.formatNum(hour)+ ':' +this.formatNum(minutes)+\":\"+this.formatNum(seconds)\n   \n            return date;\n        }\n```\n","source":"_posts/编程语言/JavaScript/时间/时间格式化.md","raw":"---\ntitle: 'js一些时间工具类'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: js\n---\n\n```javascript\nfunction formatNum(num) {\n            let res = Number(num);\n            return res < 10 ? '0' + res : res;\n        }\n        function getToday() {\n            let date = new Date();\n            let y = date.getFullYear();\n            let m = date.getMonth();\n            let d = date.getDate();\n            let hour = date.getHours();\n             let minutes = new Date().getMinutes();\n             let seconds = new Date().getSeconds();\n  \n             date =y + '-' + this.formatNum(m + 1) + '-' + this.formatNum(d) + ' ' +this.formatNum(hour)+ ':' +this.formatNum(minutes)+\":\"+this.formatNum(seconds)\n   \n            return date;\n        }\n```\n","slug":"编程语言/JavaScript/时间/时间格式化","published":1,"updated":"2023-03-21T10:03:11.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8q008ao8hufxae9sn5","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">formatNum</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> res = <span class=\"title class_\">Number</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + res : res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">getToday</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> y = date.<span class=\"title function_\">getFullYear</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> m = date.<span class=\"title function_\">getMonth</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> d = date.<span class=\"title function_\">getDate</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> hour = date.<span class=\"title function_\">getHours</span>();</span><br><span class=\"line\">             <span class=\"keyword\">let</span> minutes = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getMinutes</span>();</span><br><span class=\"line\">             <span class=\"keyword\">let</span> seconds = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getSeconds</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">             date =y + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(m + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(d) + <span class=\"string\">&#x27; &#x27;</span> +<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(hour)+ <span class=\"string\">&#x27;:&#x27;</span> +<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(minutes)+<span class=\"string\">&quot;:&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(seconds)</span><br><span class=\"line\">   </span><br><span class=\"line\">            <span class=\"keyword\">return</span> date;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">formatNum</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> res = <span class=\"title class_\">Number</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res &lt; <span class=\"number\">10</span> ? <span class=\"string\">&#x27;0&#x27;</span> + res : res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">function</span> <span class=\"title function_\">getToday</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> y = date.<span class=\"title function_\">getFullYear</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> m = date.<span class=\"title function_\">getMonth</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> d = date.<span class=\"title function_\">getDate</span>();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> hour = date.<span class=\"title function_\">getHours</span>();</span><br><span class=\"line\">             <span class=\"keyword\">let</span> minutes = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getMinutes</span>();</span><br><span class=\"line\">             <span class=\"keyword\">let</span> seconds = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getSeconds</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">             date =y + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(m + <span class=\"number\">1</span>) + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(d) + <span class=\"string\">&#x27; &#x27;</span> +<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(hour)+ <span class=\"string\">&#x27;:&#x27;</span> +<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(minutes)+<span class=\"string\">&quot;:&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"title function_\">formatNum</span>(seconds)</span><br><span class=\"line\">   </span><br><span class=\"line\">            <span class=\"keyword\">return</span> date;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 15分钟\n\n1. 做了一道大数相加\n2. padstart\n3. 问了简单的几个项目问题\n4. 问我能实习多久\n\n完了，就没了？\n","source":"_posts/学校/面试复习/面试内容/b站商业化二面.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 15分钟\n\n1. 做了一道大数相加\n2. padstart\n3. 问了简单的几个项目问题\n4. 问我能实习多久\n\n完了，就没了？\n","slug":"学校/面试复习/面试内容/b站商业化二面","published":1,"updated":"2023-03-21T09:59:30.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8q008do8hub20j51y6","content":"<h2 id=\"15分钟\"><a href=\"#15分钟\" class=\"headerlink\" title=\"15分钟\"></a>15分钟</h2><ol>\n<li>做了一道大数相加</li>\n<li>padstart</li>\n<li>问了简单的几个项目问题</li>\n<li>问我能实习多久</li>\n</ol>\n<p>完了，就没了？</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"15分钟\"><a href=\"#15分钟\" class=\"headerlink\" title=\"15分钟\"></a>15分钟</h2><ol>\n<li>做了一道大数相加</li>\n<li>padstart</li>\n<li>问了简单的几个项目问题</li>\n<li>问我能实习多久</li>\n</ol>\n<p>完了，就没了？</p>\n"},{"title":"字节跳动基础架构一面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 面试40min   11.30\n\n1. 项目\n2. es6\n3. 两列布局\n4. let const var\n5. vue 响应式\n6. promise\n7. object 和 map 区别\n8. 反问\n\n手写三道\n\n1. hooks 实现改 title\n2. 数组扁平化\n3. 实现sum(1,2)和sum(1)(2)\n","source":"_posts/学校/面试复习/面试内容/字节跳动基础架构一面.md","raw":"---\ntitle: '字节跳动基础架构一面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 面试40min   11.30\n\n1. 项目\n2. es6\n3. 两列布局\n4. let const var\n5. vue 响应式\n6. promise\n7. object 和 map 区别\n8. 反问\n\n手写三道\n\n1. hooks 实现改 title\n2. 数组扁平化\n3. 实现sum(1,2)和sum(1)(2)\n","slug":"学校/面试复习/面试内容/字节跳动基础架构一面","published":1,"updated":"2023-03-21T10:00:52.241Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8r008ho8hue1cdfb1b","content":"<h2 id=\"面试40min-11-30\"><a href=\"#面试40min-11-30\" class=\"headerlink\" title=\"面试40min   11.30\"></a>面试40min   11.30</h2><ol>\n<li>项目</li>\n<li>es6</li>\n<li>两列布局</li>\n<li>let const var</li>\n<li>vue 响应式</li>\n<li>promise</li>\n<li>object 和 map 区别</li>\n<li>反问</li>\n</ol>\n<p>手写三道</p>\n<ol>\n<li>hooks 实现改 title</li>\n<li>数组扁平化</li>\n<li>实现sum(1,2)和sum(1)(2)</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"面试40min-11-30\"><a href=\"#面试40min-11-30\" class=\"headerlink\" title=\"面试40min   11.30\"></a>面试40min   11.30</h2><ol>\n<li>项目</li>\n<li>es6</li>\n<li>两列布局</li>\n<li>let const var</li>\n<li>vue 响应式</li>\n<li>promise</li>\n<li>object 和 map 区别</li>\n<li>反问</li>\n</ol>\n<p>手写三道</p>\n<ol>\n<li>hooks 实现改 title</li>\n<li>数组扁平化</li>\n<li>实现sum(1,2)和sum(1)(2)</li>\n</ol>\n"},{"title":"字节跳动番茄小说","date":"2022-10-15T02:06:51.000Z","_content":"\n## 一面\n\n1. 介绍项目\n2. nginx和常规开发阶段devserver区别\n3. 跨域问题\n4. 考虑性能优化的防抖hook\n5. 双处理机调度问题\n\n## 二面\n\n1. osi七层模型\n2. http与https区别\n3. 0.1+0.2=0.3的实现\n4. 最长无重复\n","source":"_posts/学校/面试复习/面试内容/字节跳动番茄小说.md","raw":"---\ntitle: '字节跳动番茄小说'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 一面\n\n1. 介绍项目\n2. nginx和常规开发阶段devserver区别\n3. 跨域问题\n4. 考虑性能优化的防抖hook\n5. 双处理机调度问题\n\n## 二面\n\n1. osi七层模型\n2. http与https区别\n3. 0.1+0.2=0.3的实现\n4. 最长无重复\n","slug":"学校/面试复习/面试内容/字节跳动番茄小说","published":1,"updated":"2023-03-21T10:00:07.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8s008lo8hud4jk1cxl","content":"<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><ol>\n<li>介绍项目</li>\n<li>nginx和常规开发阶段devserver区别</li>\n<li>跨域问题</li>\n<li>考虑性能优化的防抖hook</li>\n<li>双处理机调度问题</li>\n</ol>\n<h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2><ol>\n<li>osi七层模型</li>\n<li>http与https区别</li>\n<li>0.1+0.2=0.3的实现</li>\n<li>最长无重复</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><ol>\n<li>介绍项目</li>\n<li>nginx和常规开发阶段devserver区别</li>\n<li>跨域问题</li>\n<li>考虑性能优化的防抖hook</li>\n<li>双处理机调度问题</li>\n</ol>\n<h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2><ol>\n<li>osi七层模型</li>\n<li>http与https区别</li>\n<li>0.1+0.2=0.3的实现</li>\n<li>最长无重复</li>\n</ol>\n"},{"title":"b站商业化一面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 面试 30分钟\n\n1. 项目照着简历一行一行问的\n2. 低代码怎么优化 json数据量\n3. 强缓存协商缓存\n4. 强缓存协商缓存的应用场景\n5. jwt，为什么不用cookie\n6. 算法求第一个不重复的字母\n7. 算法数字千分位，用正则怎么实现\n8. 反问\n","source":"_posts/学校/面试复习/面试内容/b站商业化一面.md","raw":"---\ntitle: 'b站商业化一面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 面试 30分钟\n\n1. 项目照着简历一行一行问的\n2. 低代码怎么优化 json数据量\n3. 强缓存协商缓存\n4. 强缓存协商缓存的应用场景\n5. jwt，为什么不用cookie\n6. 算法求第一个不重复的字母\n7. 算法数字千分位，用正则怎么实现\n8. 反问\n","slug":"学校/面试复习/面试内容/b站商业化一面","published":1,"updated":"2023-03-21T09:59:18.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8t008po8hu9jdj65d4","content":"<h2 id=\"面试-30分钟\"><a href=\"#面试-30分钟\" class=\"headerlink\" title=\"面试 30分钟\"></a>面试 30分钟</h2><ol>\n<li>项目照着简历一行一行问的</li>\n<li>低代码怎么优化 json数据量</li>\n<li>强缓存协商缓存</li>\n<li>强缓存协商缓存的应用场景</li>\n<li>jwt，为什么不用cookie</li>\n<li>算法求第一个不重复的字母</li>\n<li>算法数字千分位，用正则怎么实现</li>\n<li>反问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"面试-30分钟\"><a href=\"#面试-30分钟\" class=\"headerlink\" title=\"面试 30分钟\"></a>面试 30分钟</h2><ol>\n<li>项目照着简历一行一行问的</li>\n<li>低代码怎么优化 json数据量</li>\n<li>强缓存协商缓存</li>\n<li>强缓存协商缓存的应用场景</li>\n<li>jwt，为什么不用cookie</li>\n<li>算法求第一个不重复的字母</li>\n<li>算法数字千分位，用正则怎么实现</li>\n<li>反问</li>\n</ol>\n"},{"title":"小红书电商技术一面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 1面2小时 11.25\n\n1. 问了低代码1个半小时多。。。。\n2. ts omit\n3. n维数组扁平化到 x 维，回溯\n4. 反问\n","source":"_posts/学校/面试复习/面试内容/小红书电商技术一面.md","raw":"---\ntitle: '小红书电商技术一面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 1面2小时 11.25\n\n1. 问了低代码1个半小时多。。。。\n2. ts omit\n3. n维数组扁平化到 x 维，回溯\n4. 反问\n","slug":"学校/面试复习/面试内容/小红书电商技术一面","published":1,"updated":"2023-03-21T10:01:05.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8u008so8hua3vj74g1","content":"<h2 id=\"1面2小时-11-25\"><a href=\"#1面2小时-11-25\" class=\"headerlink\" title=\"1面2小时 11.25\"></a>1面2小时 11.25</h2><ol>\n<li>问了低代码1个半小时多。。。。</li>\n<li>ts omit</li>\n<li>n维数组扁平化到 x 维，回溯</li>\n<li>反问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1面2小时-11-25\"><a href=\"#1面2小时-11-25\" class=\"headerlink\" title=\"1面2小时 11.25\"></a>1面2小时 11.25</h2><ol>\n<li>问了低代码1个半小时多。。。。</li>\n<li>ts omit</li>\n<li>n维数组扁平化到 x 维，回溯</li>\n<li>反问</li>\n</ol>\n"},{"title":"小红书电商技术二面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 面经 11.30 50min\n\n1. 介绍项目\n2. 性能优化\n3. 讲一下webpack\n4. 小程序怎么进行优化，渲染层和逻辑层区分\n5. H5高清屏的方案，分辨率的问题\n6. 跨端原理\n7. ast，虚拟dom，小程序是用的哪个\n8. git\n9. tree shaking有时候会把依赖分割出去，什么原因，怎么解决\n10. webpack阿巴阿巴\n11. 缓存\n12. CI/CD\n13. 算法，二叉树的左视图\n14. 反问\n\n面试官说我工程方面的经验少\n","source":"_posts/学校/面试复习/面试内容/小红书电商技术二面.md","raw":"---\ntitle: '小红书电商技术二面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 面经 11.30 50min\n\n1. 介绍项目\n2. 性能优化\n3. 讲一下webpack\n4. 小程序怎么进行优化，渲染层和逻辑层区分\n5. H5高清屏的方案，分辨率的问题\n6. 跨端原理\n7. ast，虚拟dom，小程序是用的哪个\n8. git\n9. tree shaking有时候会把依赖分割出去，什么原因，怎么解决\n10. webpack阿巴阿巴\n11. 缓存\n12. CI/CD\n13. 算法，二叉树的左视图\n14. 反问\n\n面试官说我工程方面的经验少\n","slug":"学校/面试复习/面试内容/小红书电商技术二面","published":1,"updated":"2023-03-21T10:01:22.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8v008wo8huakze3irw","content":"<h2 id=\"面经-11-30-50min\"><a href=\"#面经-11-30-50min\" class=\"headerlink\" title=\"面经 11.30 50min\"></a>面经 11.30 50min</h2><ol>\n<li>介绍项目</li>\n<li>性能优化</li>\n<li>讲一下webpack</li>\n<li>小程序怎么进行优化，渲染层和逻辑层区分</li>\n<li>H5高清屏的方案，分辨率的问题</li>\n<li>跨端原理</li>\n<li>ast，虚拟dom，小程序是用的哪个</li>\n<li>git</li>\n<li>tree shaking有时候会把依赖分割出去，什么原因，怎么解决</li>\n<li>webpack阿巴阿巴</li>\n<li>缓存</li>\n<li>CI/CD</li>\n<li>算法，二叉树的左视图</li>\n<li>反问</li>\n</ol>\n<p>面试官说我工程方面的经验少</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"面经-11-30-50min\"><a href=\"#面经-11-30-50min\" class=\"headerlink\" title=\"面经 11.30 50min\"></a>面经 11.30 50min</h2><ol>\n<li>介绍项目</li>\n<li>性能优化</li>\n<li>讲一下webpack</li>\n<li>小程序怎么进行优化，渲染层和逻辑层区分</li>\n<li>H5高清屏的方案，分辨率的问题</li>\n<li>跨端原理</li>\n<li>ast，虚拟dom，小程序是用的哪个</li>\n<li>git</li>\n<li>tree shaking有时候会把依赖分割出去，什么原因，怎么解决</li>\n<li>webpack阿巴阿巴</li>\n<li>缓存</li>\n<li>CI/CD</li>\n<li>算法，二叉树的左视图</li>\n<li>反问</li>\n</ol>\n<p>面试官说我工程方面的经验少</p>\n"},{"title":"百度工程效能一面","date":"2022-10-15T02:06:51.000Z","_content":"\n![](file://C:\\Personal\\Documents\\IkMarkdown\\makedown-manager/.assets/百度一面.md151231.320574.png)\n\n## 工程效能全栈实习生面试 50min\n\n1. 学习前端的路径\n2. 为什么研究源码，实习和青训做了什么\n3. 掌握哪些排序算法，应该怎么用\n4. linklist和arraylist区别\n5. react hooks\n6. useref 的使用，除了操作dom还有其他作用吗\n7. jwt实现原理\n8. `斐波那契数`逐渐优化\n\n   ```js\n   let rem = []\n   function fib(n){\n       if(n<=1)return n\n       if(rem[n])return rem[n]\n       rem[n-1] = fib(n-1)\n       rem[n-2] = fib(n-2)\n       return rem[n-1] + rem[n-2]\n   }\n\n   console.log(fib(55));\n   ```\n9. `将数组（含有负数）中的每一个数字平方，确保返回的数组还是有序的。`要求时间复杂度O(n)\n\n   ```js\n   function reverse(arr, i, j){\n       let temp\n       while(i<j){\n           temp = arr[i]\n           arr[i] = arr[j]\n           arr[j] = temp\n           i++\n           j--\n       }\n   }\n   function process(arr){\n       let array = arr.map(x => x * x)\n       let idx = 0\n       for(let i=1;i<array.length;i++){\n           if(array[i] < array[idx]){\n               idx = i\n           }\n       }\n       reverse(array,0,idx)\n       // console.log(array);\n       let l = 0, r = idx + 1,k = 0\n       let res = []\n       while(l <= idx && r < array.length){\n           res.push(array[l] < array[r] ? array[l++] : array[r++])\n       }\n       while(l <= idx){\n           res.push(array[l++])\n       }\n       while(r < array.length ){\n           res.push(array[r++])\n       }\n       console.log(res);\n   }\n\n\n   process([-6,-3,-2,0,1,2,3])\n\n   ```\n10. `创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。`\n\n    ```js\n    /**\n     * 创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。\n     * 参数：\n     * n (number): 超过多少次不再调用func（注：限制调用func 的次数）。\n     * func (Function): 限制执行的函数。\n     */\n    function process(fn,n){\n        let time = 0\n        let res\n        return function (){\n            if(time == n)return res\n            let context = this\n            time ++\n            res = fn.apply(context, arguments)\n            return res\n        }\n    }\n\n    function func(){\n        return Math.random()\n    }\n\n    let fn = process(func, 3)\n\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    ```\n11. 反问\n\n面的是全栈，回头复习一下 golang 和 java\n","source":"_posts/学校/面试复习/面试内容/百度工程效能一面.md","raw":"---\ntitle: '百度工程效能一面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\makedown-manager/.assets/百度一面.md151231.320574.png)\n\n## 工程效能全栈实习生面试 50min\n\n1. 学习前端的路径\n2. 为什么研究源码，实习和青训做了什么\n3. 掌握哪些排序算法，应该怎么用\n4. linklist和arraylist区别\n5. react hooks\n6. useref 的使用，除了操作dom还有其他作用吗\n7. jwt实现原理\n8. `斐波那契数`逐渐优化\n\n   ```js\n   let rem = []\n   function fib(n){\n       if(n<=1)return n\n       if(rem[n])return rem[n]\n       rem[n-1] = fib(n-1)\n       rem[n-2] = fib(n-2)\n       return rem[n-1] + rem[n-2]\n   }\n\n   console.log(fib(55));\n   ```\n9. `将数组（含有负数）中的每一个数字平方，确保返回的数组还是有序的。`要求时间复杂度O(n)\n\n   ```js\n   function reverse(arr, i, j){\n       let temp\n       while(i<j){\n           temp = arr[i]\n           arr[i] = arr[j]\n           arr[j] = temp\n           i++\n           j--\n       }\n   }\n   function process(arr){\n       let array = arr.map(x => x * x)\n       let idx = 0\n       for(let i=1;i<array.length;i++){\n           if(array[i] < array[idx]){\n               idx = i\n           }\n       }\n       reverse(array,0,idx)\n       // console.log(array);\n       let l = 0, r = idx + 1,k = 0\n       let res = []\n       while(l <= idx && r < array.length){\n           res.push(array[l] < array[r] ? array[l++] : array[r++])\n       }\n       while(l <= idx){\n           res.push(array[l++])\n       }\n       while(r < array.length ){\n           res.push(array[r++])\n       }\n       console.log(res);\n   }\n\n\n   process([-6,-3,-2,0,1,2,3])\n\n   ```\n10. `创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。`\n\n    ```js\n    /**\n     * 创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。\n     * 参数：\n     * n (number): 超过多少次不再调用func（注：限制调用func 的次数）。\n     * func (Function): 限制执行的函数。\n     */\n    function process(fn,n){\n        let time = 0\n        let res\n        return function (){\n            if(time == n)return res\n            let context = this\n            time ++\n            res = fn.apply(context, arguments)\n            return res\n        }\n    }\n\n    function func(){\n        return Math.random()\n    }\n\n    let fn = process(func, 3)\n\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    console.log(fn());\n    ```\n11. 反问\n\n面的是全栈，回头复习一下 golang 和 java\n","slug":"学校/面试复习/面试内容/百度工程效能一面","published":1,"updated":"2023-03-21T10:01:40.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8w008yo8hu1au8ea3f","content":"<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown\\makedown-manager/.assets/百度一面.md151231.320574.png\"></p>\n<h2 id=\"工程效能全栈实习生面试-50min\"><a href=\"#工程效能全栈实习生面试-50min\" class=\"headerlink\" title=\"工程效能全栈实习生面试 50min\"></a>工程效能全栈实习生面试 50min</h2><ol>\n<li><p>学习前端的路径</p>\n</li>\n<li><p>为什么研究源码，实习和青训做了什么</p>\n</li>\n<li><p>掌握哪些排序算法，应该怎么用</p>\n</li>\n<li><p>linklist和arraylist区别</p>\n</li>\n<li><p>react hooks</p>\n</li>\n<li><p>useref 的使用，除了操作dom还有其他作用吗</p>\n</li>\n<li><p>jwt实现原理</p>\n</li>\n<li><p><code>斐波那契数</code>逐渐优化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> rem = []</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fib</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">1</span>)<span class=\"keyword\">return</span> n</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rem[n])<span class=\"keyword\">return</span> rem[n]</span><br><span class=\"line\">    rem[n-<span class=\"number\">1</span>] = <span class=\"title function_\">fib</span>(n-<span class=\"number\">1</span>)</span><br><span class=\"line\">    rem[n-<span class=\"number\">2</span>] = <span class=\"title function_\">fib</span>(n-<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rem[n-<span class=\"number\">1</span>] + rem[n-<span class=\"number\">2</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fib</span>(<span class=\"number\">55</span>));</span><br></pre></td></tr></table></figure></li>\n<li><p><code>将数组（含有负数）中的每一个数字平方，确保返回的数组还是有序的。</code>要求时间复杂度O(n)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">arr, i, j</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;j)&#123;</span><br><span class=\"line\">        temp = arr[i]</span><br><span class=\"line\">        arr[i] = arr[j]</span><br><span class=\"line\">        arr[j] = temp</span><br><span class=\"line\">        i++</span><br><span class=\"line\">        j--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\">arr</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> array = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * x)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> idx = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>;i&lt;array.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[i] &lt; array[idx])&#123;</span><br><span class=\"line\">            idx = i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">reverse</span>(array,<span class=\"number\">0</span>,idx)</span><br><span class=\"line\">    <span class=\"comment\">// console.log(array);</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> l = <span class=\"number\">0</span>, r = idx + <span class=\"number\">1</span>,k = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l &lt;= idx &amp;&amp; r &lt; array.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[l] &lt; array[r] ? array[l++] : array[r++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l &lt;= idx)&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[l++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(r &lt; array.<span class=\"property\">length</span> )&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[r++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">process</span>([-<span class=\"number\">6</span>,-<span class=\"number\">3</span>,-<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p><code>创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。</span></span><br><span class=\"line\"><span class=\"comment\"> * 参数：</span></span><br><span class=\"line\"><span class=\"comment\"> * n (number): 超过多少次不再调用func（注：限制调用func 的次数）。</span></span><br><span class=\"line\"><span class=\"comment\"> * func (Function): 限制执行的函数。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\">fn,n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(time == n)<span class=\"keyword\">return</span> res</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span></span><br><span class=\"line\">        time ++</span><br><span class=\"line\">        res = fn.<span class=\"title function_\">apply</span>(context, <span class=\"variable language_\">arguments</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">func</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> fn = <span class=\"title function_\">process</span>(func, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br></pre></td></tr></table></figure></li>\n<li><p>反问</p>\n</li>\n</ol>\n<p>面的是全栈，回头复习一下 golang 和 java</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown\\makedown-manager/.assets/百度一面.md151231.320574.png\"></p>\n<h2 id=\"工程效能全栈实习生面试-50min\"><a href=\"#工程效能全栈实习生面试-50min\" class=\"headerlink\" title=\"工程效能全栈实习生面试 50min\"></a>工程效能全栈实习生面试 50min</h2><ol>\n<li><p>学习前端的路径</p>\n</li>\n<li><p>为什么研究源码，实习和青训做了什么</p>\n</li>\n<li><p>掌握哪些排序算法，应该怎么用</p>\n</li>\n<li><p>linklist和arraylist区别</p>\n</li>\n<li><p>react hooks</p>\n</li>\n<li><p>useref 的使用，除了操作dom还有其他作用吗</p>\n</li>\n<li><p>jwt实现原理</p>\n</li>\n<li><p><code>斐波那契数</code>逐渐优化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> rem = []</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fib</span>(<span class=\"params\">n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">1</span>)<span class=\"keyword\">return</span> n</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(rem[n])<span class=\"keyword\">return</span> rem[n]</span><br><span class=\"line\">    rem[n-<span class=\"number\">1</span>] = <span class=\"title function_\">fib</span>(n-<span class=\"number\">1</span>)</span><br><span class=\"line\">    rem[n-<span class=\"number\">2</span>] = <span class=\"title function_\">fib</span>(n-<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rem[n-<span class=\"number\">1</span>] + rem[n-<span class=\"number\">2</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fib</span>(<span class=\"number\">55</span>));</span><br></pre></td></tr></table></figure></li>\n<li><p><code>将数组（含有负数）中的每一个数字平方，确保返回的数组还是有序的。</code>要求时间复杂度O(n)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reverse</span>(<span class=\"params\">arr, i, j</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> temp</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;j)&#123;</span><br><span class=\"line\">        temp = arr[i]</span><br><span class=\"line\">        arr[i] = arr[j]</span><br><span class=\"line\">        arr[j] = temp</span><br><span class=\"line\">        i++</span><br><span class=\"line\">        j--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\">arr</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> array = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * x)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> idx = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>;i&lt;array.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array[i] &lt; array[idx])&#123;</span><br><span class=\"line\">            idx = i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">reverse</span>(array,<span class=\"number\">0</span>,idx)</span><br><span class=\"line\">    <span class=\"comment\">// console.log(array);</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> l = <span class=\"number\">0</span>, r = idx + <span class=\"number\">1</span>,k = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l &lt;= idx &amp;&amp; r &lt; array.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[l] &lt; array[r] ? array[l++] : array[r++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l &lt;= idx)&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[l++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(r &lt; array.<span class=\"property\">length</span> )&#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(array[r++])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">process</span>([-<span class=\"number\">6</span>,-<span class=\"number\">3</span>,-<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p><code>创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建一个调用func的函数，使得func在程序中最多调用n次。之后再调用这个函数，将返回最后调用func的结果。</span></span><br><span class=\"line\"><span class=\"comment\"> * 参数：</span></span><br><span class=\"line\"><span class=\"comment\"> * n (number): 超过多少次不再调用func（注：限制调用func 的次数）。</span></span><br><span class=\"line\"><span class=\"comment\"> * func (Function): 限制执行的函数。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">process</span>(<span class=\"params\">fn,n</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> time = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(time == n)<span class=\"keyword\">return</span> res</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"variable language_\">this</span></span><br><span class=\"line\">        time ++</span><br><span class=\"line\">        res = fn.<span class=\"title function_\">apply</span>(context, <span class=\"variable language_\">arguments</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">func</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> fn = <span class=\"title function_\">process</span>(func, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">fn</span>());</span><br></pre></td></tr></table></figure></li>\n<li><p>反问</p>\n</li>\n</ol>\n<p>面的是全栈，回头复习一下 golang 和 java</p>\n"},{"title":"百度工程效能二面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 百度工程效能二面 60min，体验极棒\n\n1. 介绍自己的经历\n2. golang 和 java 都做过什么\n3. ioc 和 aop\n4. golang 协程\n5. golang 常规开发使用指针还是引用\n6. gmp\n7. 说一些设计模式\n8. 手写一个工厂模式\n9. 锁的作用\n10. docker的使用\n11. docker 和 虚拟机 区别\n12. mysql 引擎\n13. mysql 查询年龄第二大的人的姓名\n14. redis 都做了什么\n15. redis 类型\n16. 怎么实现一个秒杀系统，前端后端都要做什么\n17. 反问\n","source":"_posts/学校/面试复习/面试内容/百度工程效能二面.md","raw":"---\ntitle: '百度工程效能二面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 百度工程效能二面 60min，体验极棒\n\n1. 介绍自己的经历\n2. golang 和 java 都做过什么\n3. ioc 和 aop\n4. golang 协程\n5. golang 常规开发使用指针还是引用\n6. gmp\n7. 说一些设计模式\n8. 手写一个工厂模式\n9. 锁的作用\n10. docker的使用\n11. docker 和 虚拟机 区别\n12. mysql 引擎\n13. mysql 查询年龄第二大的人的姓名\n14. redis 都做了什么\n15. redis 类型\n16. 怎么实现一个秒杀系统，前端后端都要做什么\n17. 反问\n","slug":"学校/面试复习/面试内容/百度工程效能二面","published":1,"updated":"2023-03-21T10:01:52.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8x0093o8huhm5wdjvh","content":"<h2 id=\"百度工程效能二面-60min，体验极棒\"><a href=\"#百度工程效能二面-60min，体验极棒\" class=\"headerlink\" title=\"百度工程效能二面 60min，体验极棒\"></a>百度工程效能二面 60min，体验极棒</h2><ol>\n<li>介绍自己的经历</li>\n<li>golang 和 java 都做过什么</li>\n<li>ioc 和 aop</li>\n<li>golang 协程</li>\n<li>golang 常规开发使用指针还是引用</li>\n<li>gmp</li>\n<li>说一些设计模式</li>\n<li>手写一个工厂模式</li>\n<li>锁的作用</li>\n<li>docker的使用</li>\n<li>docker 和 虚拟机 区别</li>\n<li>mysql 引擎</li>\n<li>mysql 查询年龄第二大的人的姓名</li>\n<li>redis 都做了什么</li>\n<li>redis 类型</li>\n<li>怎么实现一个秒杀系统，前端后端都要做什么</li>\n<li>反问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"百度工程效能二面-60min，体验极棒\"><a href=\"#百度工程效能二面-60min，体验极棒\" class=\"headerlink\" title=\"百度工程效能二面 60min，体验极棒\"></a>百度工程效能二面 60min，体验极棒</h2><ol>\n<li>介绍自己的经历</li>\n<li>golang 和 java 都做过什么</li>\n<li>ioc 和 aop</li>\n<li>golang 协程</li>\n<li>golang 常规开发使用指针还是引用</li>\n<li>gmp</li>\n<li>说一些设计模式</li>\n<li>手写一个工厂模式</li>\n<li>锁的作用</li>\n<li>docker的使用</li>\n<li>docker 和 虚拟机 区别</li>\n<li>mysql 引擎</li>\n<li>mysql 查询年龄第二大的人的姓名</li>\n<li>redis 都做了什么</li>\n<li>redis 类型</li>\n<li>怎么实现一个秒杀系统，前端后端都要做什么</li>\n<li>反问</li>\n</ol>\n"},{"title":"蔚来新能源一面","date":"2022-10-15T02:06:51.000Z","_content":"\n## 面试题 11.29  35min\n\n1. 为什么学前端\n2. 说一下自己的学习经历\n3. 最近看了什么书\n4. 介绍项目\n5. 演示项目\n6. 低代码为什么要做图片隐藏\n7. js 原型链\n8. js 继承\n9. 说一下寄生组合\n10. 闭包，怎么解决闭包造成的内存泄露\n11. 浏览器从输入url期间到展示期间发生了什么\n12. 回流重绘\n13. vue 源码\n14. vue 响应式原理\n15. vue2 和 vue3 响应式区别\n16. vue组件通信\n17. 反问\n","source":"_posts/学校/面试复习/面试内容/蔚来新能源一面.md","raw":"---\ntitle: '蔚来新能源一面'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: 面经\n---\n\n## 面试题 11.29  35min\n\n1. 为什么学前端\n2. 说一下自己的学习经历\n3. 最近看了什么书\n4. 介绍项目\n5. 演示项目\n6. 低代码为什么要做图片隐藏\n7. js 原型链\n8. js 继承\n9. 说一下寄生组合\n10. 闭包，怎么解决闭包造成的内存泄露\n11. 浏览器从输入url期间到展示期间发生了什么\n12. 回流重绘\n13. vue 源码\n14. vue 响应式原理\n15. vue2 和 vue3 响应式区别\n16. vue组件通信\n17. 反问\n","slug":"学校/面试复习/面试内容/蔚来新能源一面","published":1,"updated":"2023-03-21T10:02:08.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8y0096o8hufd00bww9","content":"<h2 id=\"面试题-11-29-35min\"><a href=\"#面试题-11-29-35min\" class=\"headerlink\" title=\"面试题 11.29  35min\"></a>面试题 11.29  35min</h2><ol>\n<li>为什么学前端</li>\n<li>说一下自己的学习经历</li>\n<li>最近看了什么书</li>\n<li>介绍项目</li>\n<li>演示项目</li>\n<li>低代码为什么要做图片隐藏</li>\n<li>js 原型链</li>\n<li>js 继承</li>\n<li>说一下寄生组合</li>\n<li>闭包，怎么解决闭包造成的内存泄露</li>\n<li>浏览器从输入url期间到展示期间发生了什么</li>\n<li>回流重绘</li>\n<li>vue 源码</li>\n<li>vue 响应式原理</li>\n<li>vue2 和 vue3 响应式区别</li>\n<li>vue组件通信</li>\n<li>反问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"面试题-11-29-35min\"><a href=\"#面试题-11-29-35min\" class=\"headerlink\" title=\"面试题 11.29  35min\"></a>面试题 11.29  35min</h2><ol>\n<li>为什么学前端</li>\n<li>说一下自己的学习经历</li>\n<li>最近看了什么书</li>\n<li>介绍项目</li>\n<li>演示项目</li>\n<li>低代码为什么要做图片隐藏</li>\n<li>js 原型链</li>\n<li>js 继承</li>\n<li>说一下寄生组合</li>\n<li>闭包，怎么解决闭包造成的内存泄露</li>\n<li>浏览器从输入url期间到展示期间发生了什么</li>\n<li>回流重绘</li>\n<li>vue 源码</li>\n<li>vue 响应式原理</li>\n<li>vue2 和 vue3 响应式区别</li>\n<li>vue组件通信</li>\n<li>反问</li>\n</ol>\n"},{"title":"go跨域demo","date":"2022-10-15T02:06:51.000Z","_content":"\n```go\nrouter.GlobalOPTIONS = http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    if r.Header.Get(\"Access-Control-Request-Method\") != \"\" {\n        // Set CORS headers\n        header := w.Header()\n        header.Set(\"Access-Control-Allow-Methods\", r.Header.Get(\"Allow\"))\n        header.Set(\"Access-Control-Allow-Origin\", \"*\")\n    }\n\n    // Adjust status code to 204\n    w.WriteHeader(http.StatusNoContent)\n})\n\n```\n","source":"_posts/编程语言/go/CORS跨域/go跨域demo.md","raw":"---\ntitle: 'go跨域demo'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: golang\n---\n\n```go\nrouter.GlobalOPTIONS = http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    if r.Header.Get(\"Access-Control-Request-Method\") != \"\" {\n        // Set CORS headers\n        header := w.Header()\n        header.Set(\"Access-Control-Allow-Methods\", r.Header.Get(\"Allow\"))\n        header.Set(\"Access-Control-Allow-Origin\", \"*\")\n    }\n\n    // Adjust status code to 204\n    w.WriteHeader(http.StatusNoContent)\n})\n\n```\n","slug":"编程语言/go/CORS跨域/go跨域demo","published":1,"updated":"2023-03-21T09:22:22.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co8z0099o8hu5qz1e3fw","content":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.GlobalOPTIONS = http.HandlerFunc(<span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> r.Header.Get(<span class=\"string\">&quot;Access-Control-Request-Method&quot;</span>) != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Set CORS headers</span></span><br><span class=\"line\">        header := w.Header()</span><br><span class=\"line\">        header.Set(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, r.Header.Get(<span class=\"string\">&quot;Allow&quot;</span>))</span><br><span class=\"line\">        header.Set(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Adjust status code to 204</span></span><br><span class=\"line\">    w.WriteHeader(http.StatusNoContent)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.GlobalOPTIONS = http.HandlerFunc(<span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> r.Header.Get(<span class=\"string\">&quot;Access-Control-Request-Method&quot;</span>) != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Set CORS headers</span></span><br><span class=\"line\">        header := w.Header()</span><br><span class=\"line\">        header.Set(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, r.Header.Get(<span class=\"string\">&quot;Allow&quot;</span>))</span><br><span class=\"line\">        header.Set(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Adjust status code to 204</span></span><br><span class=\"line\">    w.WriteHeader(http.StatusNoContent)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"每日打卡","date":"2022-10-15T02:06:51.000Z","_content":"\n## 5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\n\n```javascript\nthis.axios({\n    url:\"请求路径\"\n    header:{\n        \"Authorization\":\"Bearer \"+ \"你的token\"\n    }\n})\n```\n\n## 5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\n\n## 5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\n\n## 5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\n\n## 5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/每日打卡.md252947.7437885.png)\n\n## 5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\n\n## 5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\n\n## 5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\n\n## 5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握\n\n## 5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\n\n## 5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\n\n## 5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\n\n## 5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\n\n\n\n\n\n\n\"path\": \"pages/index\",\n\"style\": {\n\"navigationBarTextStyle\": \"black\",\n\"navigationStyle\": \"custom\",\n\"app-plus\": {\n\"softinputMode\": \"adjustResize\",\n\"bounce\": \"none\"\n}\n}\n\n# 3月到5月做了哪些事\n\n## 小程序大赛\n\n## 全栈实习\n\n## 做了一个政府相关的服务于哈信息的打卡考勤app\n\n## 学生端和教师端网课管理系统\n\n## 剧本杀小程序和pc管理端\n\n## 字节跳动golang青训营\n\n<button>按钮</button>\n","source":"_posts/编程语言/go/青训营/每日打卡.md","raw":"---\ntitle: '每日打卡'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: golang\n---\n\n## 5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\n\n```javascript\nthis.axios({\n    url:\"请求路径\"\n    header:{\n        \"Authorization\":\"Bearer \"+ \"你的token\"\n    }\n})\n```\n\n## 5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\n\n## 5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\n\n## 5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\n\n## 5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/每日打卡.md252947.7437885.png)\n\n## 5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\n\n## 5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\n\n## 5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\n\n## 5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握\n\n## 5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\n\n## 5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\n\n## 5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\n\n## 5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\n\n\n\n\n\n\n\"path\": \"pages/index\",\n\"style\": {\n\"navigationBarTextStyle\": \"black\",\n\"navigationStyle\": \"custom\",\n\"app-plus\": {\n\"softinputMode\": \"adjustResize\",\n\"bounce\": \"none\"\n}\n}\n\n# 3月到5月做了哪些事\n\n## 小程序大赛\n\n## 全栈实习\n\n## 做了一个政府相关的服务于哈信息的打卡考勤app\n\n## 学生端和教师端网课管理系统\n\n## 剧本杀小程序和pc管理端\n\n## 字节跳动golang青训营\n\n<button>按钮</button>\n","slug":"编程语言/go/青训营/每日打卡","published":1,"updated":"2023-03-21T09:23:27.132Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co90009do8huehp0gitq","content":"<h2 id=\"5月6日打卡，今日学习《go-module-环境配置》：这个文章介绍了通过使用代理来解决golang-org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\"><a href=\"#5月6日打卡，今日学习《go-module-环境配置》：这个文章介绍了通过使用代理来解决golang-org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\" class=\"headerlink\" title=\"5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\"></a>5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;请求路径&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">header</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Authorization&quot;</span>:<span class=\"string\">&quot;Bearer &quot;</span>+ <span class=\"string\">&quot;你的token&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5月7日打卡，今日学习《Go-Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\"><a href=\"#5月7日打卡，今日学习《Go-Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\" class=\"headerlink\" title=\"5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\"></a>5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识</h2><h2 id=\"5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程-》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布-产品经理，设计，研发，运营，测试多个岗位-，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\"><a href=\"#5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程-》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布-产品经理，设计，研发，运营，测试多个岗位-，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\" class=\"headerlink\" title=\"5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\"></a>5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作</h2><h2 id=\"5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\"><a href=\"#5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\" class=\"headerlink\" title=\"5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\"></a>5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法</h2><h2 id=\"5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1-12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go-mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名-文件夹访问到，并且介绍了golang的包管理三种模式auto-on-off\"><a href=\"#5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1-12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go-mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名-文件夹访问到，并且介绍了golang的包管理三种模式auto-on-off\" class=\"headerlink\" title=\"5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off\"></a>5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/每日打卡.md252947.7437885.png\"></p>\n<h2 id=\"5月11日打卡，今日学习《Golang-零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\"><a href=\"#5月11日打卡，今日学习《Golang-零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\" class=\"headerlink\" title=\"5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\"></a>5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点</h2><h2 id=\"5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜-Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\"><a href=\"#5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜-Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\" class=\"headerlink\" title=\"5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\"></a>5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础</h2><h2 id=\"5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\"><a href=\"#5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\" class=\"headerlink\" title=\"5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\"></a>5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点</h2><h2 id=\"5月14日打卡，今日学习《我在工作中是如何使用-git-的》：复习了git的基本使用，学到了对git命令起别名的方式，和git-rebase让提交代码更加清晰的方式和git-revert回滚提交的方法，知道了git-reset撤回暂存区的提交，加深了对git命令的掌握\"><a href=\"#5月14日打卡，今日学习《我在工作中是如何使用-git-的》：复习了git的基本使用，学到了对git命令起别名的方式，和git-rebase让提交代码更加清晰的方式和git-revert回滚提交的方法，知道了git-reset撤回暂存区的提交，加深了对git命令的掌握\" class=\"headerlink\" title=\"5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握\"></a>5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握</h2><h2 id=\"5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\"><a href=\"#5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\" class=\"headerlink\" title=\"5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\"></a>5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性</h2><h2 id=\"5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\"><a href=\"#5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\" class=\"headerlink\" title=\"5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\"></a>5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。</h2><h2 id=\"5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\"><a href=\"#5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\" class=\"headerlink\" title=\"5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\"></a>5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作</h2><h2 id=\"5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\"><a href=\"#5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\" class=\"headerlink\" title=\"5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\"></a>5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法</h2><p>“path”: “pages/index”,<br>“style”: {<br>“navigationBarTextStyle”: “black”,<br>“navigationStyle”: “custom”,<br>“app-plus”: {<br>“softinputMode”: “adjustResize”,<br>“bounce”: “none”<br>}<br>}</p>\n<h1 id=\"3月到5月做了哪些事\"><a href=\"#3月到5月做了哪些事\" class=\"headerlink\" title=\"3月到5月做了哪些事\"></a>3月到5月做了哪些事</h1><h2 id=\"小程序大赛\"><a href=\"#小程序大赛\" class=\"headerlink\" title=\"小程序大赛\"></a>小程序大赛</h2><h2 id=\"全栈实习\"><a href=\"#全栈实习\" class=\"headerlink\" title=\"全栈实习\"></a>全栈实习</h2><h2 id=\"做了一个政府相关的服务于哈信息的打卡考勤app\"><a href=\"#做了一个政府相关的服务于哈信息的打卡考勤app\" class=\"headerlink\" title=\"做了一个政府相关的服务于哈信息的打卡考勤app\"></a>做了一个政府相关的服务于哈信息的打卡考勤app</h2><h2 id=\"学生端和教师端网课管理系统\"><a href=\"#学生端和教师端网课管理系统\" class=\"headerlink\" title=\"学生端和教师端网课管理系统\"></a>学生端和教师端网课管理系统</h2><h2 id=\"剧本杀小程序和pc管理端\"><a href=\"#剧本杀小程序和pc管理端\" class=\"headerlink\" title=\"剧本杀小程序和pc管理端\"></a>剧本杀小程序和pc管理端</h2><h2 id=\"字节跳动golang青训营\"><a href=\"#字节跳动golang青训营\" class=\"headerlink\" title=\"字节跳动golang青训营\"></a>字节跳动golang青训营</h2><p><button>按钮</button></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"5月6日打卡，今日学习《go-module-环境配置》：这个文章介绍了通过使用代理来解决golang-org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\"><a href=\"#5月6日打卡，今日学习《go-module-环境配置》：这个文章介绍了通过使用代理来解决golang-org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\" class=\"headerlink\" title=\"5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法\"></a>5月6日打卡，今日学习《go module 环境配置》：这个文章介绍了通过使用代理来解决golang.org的一些第三方包被墙的问题，而且介绍了golang的代理环境配置，读者在使用第三方包出现问题时可以参照该方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;请求路径&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">header</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Authorization&quot;</span>:<span class=\"string\">&quot;Bearer &quot;</span>+ <span class=\"string\">&quot;你的token&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5月7日打卡，今日学习《Go-Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\"><a href=\"#5月7日打卡，今日学习《Go-Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\" class=\"headerlink\" title=\"5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识\"></a>5月7日打卡，今日学习《Go Web开发入门指南》：学到了最基本的go制作http服务器，并学到了用gin框架优化服务器运行速度以及gin框架基本的构建流程，了解了go使用的路由匹配方式和技术和装饰路由模式和gin的一些中间件的知识</h2><h2 id=\"5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程-》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布-产品经理，设计，研发，运营，测试多个岗位-，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\"><a href=\"#5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程-》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布-产品经理，设计，研发，运营，测试多个岗位-，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\" class=\"headerlink\" title=\"5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作\"></a>5月8日打卡，今日学习《谁说明天上线，这货压根不知道开发流程!》：本文介绍了一个完整的项目从实际开发到项目交付中的人员分布(产品经理，设计，研发，运营，测试多个岗位)，交代了每个岗位之间的分工合作，任务分配，以及项目完成之后的复盘工作</h2><h2 id=\"5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\"><a href=\"#5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\" class=\"headerlink\" title=\"5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法\"></a>5月9日打卡，今日学习《Go语言之网络编程》：学到了网络中的数据接受方和发送方的模式，了解了数据包从物理层到数据链路层到网络层再到应用层的数据传输协议，分别有mac地址传输，udp传输，tcp传输，了解到了tcp相比较于udp的在传输结果上的优点，同时也知道了tcp消耗资源的特性，也学到了socket编程，和用go监听端口，发送，接受数据包的方法</h2><h2 id=\"5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1-12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go-mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名-文件夹访问到，并且介绍了golang的包管理三种模式auto-on-off\"><a href=\"#5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1-12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go-mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名-文件夹访问到，并且介绍了golang的包管理三种模式auto-on-off\" class=\"headerlink\" title=\"5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off\"></a>5月10日打卡，今日学习《新版本Golang的包管理入门教程》：该文章讲解了golang从1.12版本之前的包管理模式和现在的包管理模式，原本繁杂的包管理变得更加简单，go.mod文件统一管理项目依赖，项目初始时有一个模块名，并且项目中的每个文件都可以通过模块名/文件夹访问到，并且介绍了golang的包管理三种模式auto,on,off</h2><p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/每日打卡.md252947.7437885.png\"></p>\n<h2 id=\"5月11日打卡，今日学习《Golang-零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\"><a href=\"#5月11日打卡，今日学习《Golang-零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\" class=\"headerlink\" title=\"5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点\"></a>5月11日打卡，今日学习《Golang 零值、空值与空结构》：从中学到了go语言中数值累心与引用类型中“空”的不同表现形式，了解了go中nil和其他语言中null的相同与不同之处，学到了用nil对一些变量判空和初始化函数默认返回值的方式，了解了空类型不占空间的特点</h2><h2 id=\"5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜-Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\"><a href=\"#5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜-Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\" class=\"headerlink\" title=\"5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础\"></a>5月12日打卡，今日学习《对Golang一知半解？这里是上百篇掘金Golang优质文章｜ Go主题月》：学到了go语言入门的学习路径，了解了基本的学习规划，并从中挑选几篇文章着重研读，准备将这篇文章用来为自己打好go语言基础</h2><h2 id=\"5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\"><a href=\"#5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\" class=\"headerlink\" title=\"5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点\"></a>5月13日打卡，今日学习《如何用Go语言进行Web应用的开发？附4个常用框架对比总结！》：了解了go语言的主流web开发框架，学到了这些开发框架的优缺点，知道了gin框架封装比较优雅，API友好，源码注释比较明确的特点</h2><h2 id=\"5月14日打卡，今日学习《我在工作中是如何使用-git-的》：复习了git的基本使用，学到了对git命令起别名的方式，和git-rebase让提交代码更加清晰的方式和git-revert回滚提交的方法，知道了git-reset撤回暂存区的提交，加深了对git命令的掌握\"><a href=\"#5月14日打卡，今日学习《我在工作中是如何使用-git-的》：复习了git的基本使用，学到了对git命令起别名的方式，和git-rebase让提交代码更加清晰的方式和git-revert回滚提交的方法，知道了git-reset撤回暂存区的提交，加深了对git命令的掌握\" class=\"headerlink\" title=\"5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握\"></a>5月14日打卡，今日学习《我在工作中是如何使用 git 的》：复习了git的基本使用，学到了对git命令起别名的方式，和git rebase让提交代码更加清晰的方式和git revert回滚提交的方法，知道了git reset撤回暂存区的提交，加深了对git命令的掌握</h2><h2 id=\"5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\"><a href=\"#5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\" class=\"headerlink\" title=\"5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性\"></a>5月15日打卡，今日学习《Go工具之generate》：学到了用generator工具自动生成错误码相关的释义，考虑可以用该功能自动生成其他具有辅助性释义的文件，提高开发效率，帮助提升代码的可读性</h2><h2 id=\"5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\"><a href=\"#5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\" class=\"headerlink\" title=\"5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。\"></a>5月17日打卡，今日学习《技术问题-经典网络模型》：本文介绍了一个简化了汇聚层，使用于规模500接入数以内的公司，介绍了接入，核心，出口的一些协议，如VRRP，RSTP，access，TRUNK，STP，网关直接落在核心交换机上的经典网络模型。</h2><h2 id=\"5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\"><a href=\"#5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\" class=\"headerlink\" title=\"5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作\"></a>5月18日打卡，今日学习《MySQL安装及GORM的增删查改》：从本文加深了对mysql的理解，学到了导入gorm依赖，用gorm自动创建表结构，以及gorm的CRUD操作，获取数据库连接，初始化等操作</h2><h2 id=\"5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\"><a href=\"#5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\" class=\"headerlink\" title=\"5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法\"></a>5月19日打卡，今日学习《Gorm使用规范最佳实践》：该系列详细介绍了Grom的使用方法和技巧，命名规范，了解了约定大于配置的条约，加深了对gorm的理解和对象关系映射方法，学会了用Gorm自动创建数据库的方法</h2><p>“path”: “pages/index”,<br>“style”: {<br>“navigationBarTextStyle”: “black”,<br>“navigationStyle”: “custom”,<br>“app-plus”: {<br>“softinputMode”: “adjustResize”,<br>“bounce”: “none”<br>}<br>}</p>\n<h1 id=\"3月到5月做了哪些事\"><a href=\"#3月到5月做了哪些事\" class=\"headerlink\" title=\"3月到5月做了哪些事\"></a>3月到5月做了哪些事</h1><h2 id=\"小程序大赛\"><a href=\"#小程序大赛\" class=\"headerlink\" title=\"小程序大赛\"></a>小程序大赛</h2><h2 id=\"全栈实习\"><a href=\"#全栈实习\" class=\"headerlink\" title=\"全栈实习\"></a>全栈实习</h2><h2 id=\"做了一个政府相关的服务于哈信息的打卡考勤app\"><a href=\"#做了一个政府相关的服务于哈信息的打卡考勤app\" class=\"headerlink\" title=\"做了一个政府相关的服务于哈信息的打卡考勤app\"></a>做了一个政府相关的服务于哈信息的打卡考勤app</h2><h2 id=\"学生端和教师端网课管理系统\"><a href=\"#学生端和教师端网课管理系统\" class=\"headerlink\" title=\"学生端和教师端网课管理系统\"></a>学生端和教师端网课管理系统</h2><h2 id=\"剧本杀小程序和pc管理端\"><a href=\"#剧本杀小程序和pc管理端\" class=\"headerlink\" title=\"剧本杀小程序和pc管理端\"></a>剧本杀小程序和pc管理端</h2><h2 id=\"字节跳动golang青训营\"><a href=\"#字节跳动golang青训营\" class=\"headerlink\" title=\"字节跳动golang青训营\"></a>字节跳动golang青训营</h2><p><button>按钮</button></p>\n"},{"title":"环境配置","date":"2022-10-15T02:06:51.000Z","_content":"\n# vscode中使用go\n\n## 使用go mod进行环境配置\n\n1. 创建项目\n\n   ```go\n   go mod init 你的包名如example.com/first\n   ```\n2. 接下来书写代码\n\n   ```go\n   package main\n\n   import (\n   \t\"fmt\"\n   )\n\n   func main() {\n   \tfmt.Println(\"-----------\")\n   }\n   ```\n3. 保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道\n4. 于是我们配置好代理，命令行执行以下命令\n\n   ```go\n   // 上面的代理是无效的，我用了不好用\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.io,direct\n\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.cn,direct\n\n   ## 这是最新版的代理，我用的别的都不好使\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://proxy.golang.com.cn,direct\n   ```\n5. 以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode\n6. 最后我们出现了久违的successed\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png)\n7.\n","source":"_posts/编程语言/go/基础语法/1环境配置.md","raw":"---\ntitle: '环境配置'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: golang\n---\n\n# vscode中使用go\n\n## 使用go mod进行环境配置\n\n1. 创建项目\n\n   ```go\n   go mod init 你的包名如example.com/first\n   ```\n2. 接下来书写代码\n\n   ```go\n   package main\n\n   import (\n   \t\"fmt\"\n   )\n\n   func main() {\n   \tfmt.Println(\"-----------\")\n   }\n   ```\n3. 保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道\n4. 于是我们配置好代理，命令行执行以下命令\n\n   ```go\n   // 上面的代理是无效的，我用了不好用\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.io,direct\n\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.cn,direct\n\n   ## 这是最新版的代理，我用的别的都不好使\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://proxy.golang.com.cn,direct\n   ```\n5. 以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode\n6. 最后我们出现了久违的successed\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png)\n7.\n","slug":"编程语言/go/基础语法/1环境配置","published":1,"updated":"2023-03-21T09:22:39.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co91009ho8hu4ei623sw","content":"<h1 id=\"vscode中使用go\"><a href=\"#vscode中使用go\" class=\"headerlink\" title=\"vscode中使用go\"></a>vscode中使用go</h1><h2 id=\"使用go-mod进行环境配置\"><a href=\"#使用go-mod进行环境配置\" class=\"headerlink\" title=\"使用go mod进行环境配置\"></a>使用go mod进行环境配置</h2><ol>\n<li><p>创建项目</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> mod init 你的包名如example.com/first</span><br></pre></td></tr></table></figure></li>\n<li><p>接下来书写代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;-----------&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道</p>\n</li>\n<li><p>于是我们配置好代理，命令行执行以下命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 上面的代理是无效的，我用了不好用</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.io,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\">## 这是最新版的代理，我用的别的都不好使</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//proxy.golang.com.cn,direct</span></span><br></pre></td></tr></table></figure></li>\n<li><p>以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode</p>\n</li>\n<li><p>最后我们出现了久违的successed</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png\"></p>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vscode中使用go\"><a href=\"#vscode中使用go\" class=\"headerlink\" title=\"vscode中使用go\"></a>vscode中使用go</h1><h2 id=\"使用go-mod进行环境配置\"><a href=\"#使用go-mod进行环境配置\" class=\"headerlink\" title=\"使用go mod进行环境配置\"></a>使用go mod进行环境配置</h2><ol>\n<li><p>创建项目</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> mod init 你的包名如example.com/first</span><br></pre></td></tr></table></figure></li>\n<li><p>接下来书写代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;-----------&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道</p>\n</li>\n<li><p>于是我们配置好代理，命令行执行以下命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 上面的代理是无效的，我用了不好用</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.io,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\">## 这是最新版的代理，我用的别的都不好使</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//proxy.golang.com.cn,direct</span></span><br></pre></td></tr></table></figure></li>\n<li><p>以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode</p>\n</li>\n<li><p>最后我们出现了久违的successed</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png\"></p>\n</li>\n<li></li>\n</ol>\n"},{"title":"青训营笔记","date":"2022-10-15T02:06:51.000Z","_content":"\n## 青训营第一节课上课笔记和作业 | 青训营笔记\n\n### 环境配置\n\n1. 首先下载好go语言安装包\n2. 之后勾选自动配置变量\n3. 然后检测版本`go version`\n\n### VS Code中使用go\n\n**使用go mod进行环境配置**\n\n1. 创建项目\n\n   ```go\n   go mod init 你的包名如example.com/first\n   ```\n2. 接下来书写代码\n\n   ```go\n   package main\n\n   import (\n   \t\"fmt\"\n   )\n\n   func main() {\n   \tfmt.Println(\"-----------\")\n   }\n   ```\n3. 保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道\n4. 于是我们配置好代理，命令行执行以下命令\n\n   ```go\n   // 前面这几行的代理是无效的，我用了不好用\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.io,direct\n\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.cn,direct\n\n   // 这是最新版的代理，我用的别的都不好使，上面的可以忽略，我写出来是为了记录\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://proxy.golang.com.cn,direct\n   ```\n5. 以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode\n6. 最后我们出现了久违的successed\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png)\n\n### 基础语法\n\n**输出语句**\n\n**变量使用**\n\n**分支语句**\n\n**循环语句**\n\n**结构体使用**\n\n**指针使用**\n\n**输入语句**\n\n**判空方法**\n\n**技巧**\n\ngithub项目前加gitpod.io就能出现编译器\n","source":"_posts/编程语言/go/青训营/第一节上课笔记.md","raw":"---\ntitle: '青训营笔记'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: golang\n---\n\n## 青训营第一节课上课笔记和作业 | 青训营笔记\n\n### 环境配置\n\n1. 首先下载好go语言安装包\n2. 之后勾选自动配置变量\n3. 然后检测版本`go version`\n\n### VS Code中使用go\n\n**使用go mod进行环境配置**\n\n1. 创建项目\n\n   ```go\n   go mod init 你的包名如example.com/first\n   ```\n2. 接下来书写代码\n\n   ```go\n   package main\n\n   import (\n   \t\"fmt\"\n   )\n\n   func main() {\n   \tfmt.Println(\"-----------\")\n   }\n   ```\n3. 保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道\n4. 于是我们配置好代理，命令行执行以下命令\n\n   ```go\n   // 前面这几行的代理是无效的，我用了不好用\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.io,direct\n\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://goproxy.cn,direct\n\n   // 这是最新版的代理，我用的别的都不好使，上面的可以忽略，我写出来是为了记录\n   go env -w GO111MODULE=on\n   go env -w GOPROXY=https://proxy.golang.com.cn,direct\n   ```\n5. 以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode\n6. 最后我们出现了久违的successed\n\n   ![](file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png)\n\n### 基础语法\n\n**输出语句**\n\n**变量使用**\n\n**分支语句**\n\n**循环语句**\n\n**结构体使用**\n\n**指针使用**\n\n**输入语句**\n\n**判空方法**\n\n**技巧**\n\ngithub项目前加gitpod.io就能出现编译器\n","slug":"编程语言/go/青训营/第一节上课笔记","published":1,"updated":"2023-03-21T09:23:39.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co92009lo8hu8to1edd0","content":"<h2 id=\"青训营第一节课上课笔记和作业-青训营笔记\"><a href=\"#青训营第一节课上课笔记和作业-青训营笔记\" class=\"headerlink\" title=\"青训营第一节课上课笔记和作业 | 青训营笔记\"></a>青训营第一节课上课笔记和作业 | 青训营笔记</h2><h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><ol>\n<li>首先下载好go语言安装包</li>\n<li>之后勾选自动配置变量</li>\n<li>然后检测版本<code>go version</code></li>\n</ol>\n<h3 id=\"VS-Code中使用go\"><a href=\"#VS-Code中使用go\" class=\"headerlink\" title=\"VS Code中使用go\"></a>VS Code中使用go</h3><p><strong>使用go mod进行环境配置</strong></p>\n<ol>\n<li><p>创建项目</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> mod init 你的包名如example.com/first</span><br></pre></td></tr></table></figure></li>\n<li><p>接下来书写代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;-----------&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道</p>\n</li>\n<li><p>于是我们配置好代理，命令行执行以下命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前面这几行的代理是无效的，我用了不好用</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.io,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这是最新版的代理，我用的别的都不好使，上面的可以忽略，我写出来是为了记录</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//proxy.golang.com.cn,direct</span></span><br></pre></td></tr></table></figure></li>\n<li><p>以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode</p>\n</li>\n<li><p>最后我们出现了久违的successed</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png\"></p>\n</li>\n</ol>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><p><strong>输出语句</strong></p>\n<p><strong>变量使用</strong></p>\n<p><strong>分支语句</strong></p>\n<p><strong>循环语句</strong></p>\n<p><strong>结构体使用</strong></p>\n<p><strong>指针使用</strong></p>\n<p><strong>输入语句</strong></p>\n<p><strong>判空方法</strong></p>\n<p><strong>技巧</strong></p>\n<p>github项目前加gitpod.io就能出现编译器</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"青训营第一节课上课笔记和作业-青训营笔记\"><a href=\"#青训营第一节课上课笔记和作业-青训营笔记\" class=\"headerlink\" title=\"青训营第一节课上课笔记和作业 | 青训营笔记\"></a>青训营第一节课上课笔记和作业 | 青训营笔记</h2><h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><ol>\n<li>首先下载好go语言安装包</li>\n<li>之后勾选自动配置变量</li>\n<li>然后检测版本<code>go version</code></li>\n</ol>\n<h3 id=\"VS-Code中使用go\"><a href=\"#VS-Code中使用go\" class=\"headerlink\" title=\"VS Code中使用go\"></a>VS Code中使用go</h3><p><strong>使用go mod进行环境配置</strong></p>\n<ol>\n<li><p>创建项目</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> mod init 你的包名如example.com/first</span><br></pre></td></tr></table></figure></li>\n<li><p>接下来书写代码</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;-----------&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>保存之后vscode提示安装插件，我们点击install all，之后发现全部报错，原因大家都知道</p>\n</li>\n<li><p>于是我们配置好代理，命令行执行以下命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 前面这几行的代理是无效的，我用了不好用</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.io,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这是最新版的代理，我用的别的都不好使，上面的可以忽略，我写出来是为了记录</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GO111MODULE=on</span><br><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//proxy.golang.com.cn,direct</span></span><br></pre></td></tr></table></figure></li>\n<li><p>以上代理我都试过了，一定要用最新的才好使，别的都已经废弃了，重启vscode并点击install all，而且如果你安装go的时候用到了programs files这个文件夹等需要管理员权限才能新建文件的，就需要以管理员身份启动vscode</p>\n</li>\n<li><p>最后我们出现了久违的successed</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/1环境配置.md413238.6011281.png\"></p>\n</li>\n</ol>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><p><strong>输出语句</strong></p>\n<p><strong>变量使用</strong></p>\n<p><strong>分支语句</strong></p>\n<p><strong>循环语句</strong></p>\n<p><strong>结构体使用</strong></p>\n<p><strong>指针使用</strong></p>\n<p><strong>输入语句</strong></p>\n<p><strong>判空方法</strong></p>\n<p><strong>技巧</strong></p>\n<p>github项目前加gitpod.io就能出现编译器</p>\n"},{"title":"golang类型转换","date":"2022-10-15T02:06:51.000Z","_content":"\n```go\n// Strval 获取变量的字符串值\n// 浮点型 3.0将会转换成字符串3, \"3\"\n// 非数值或字符类型的变量将会被转换成JSON格式字符串\nfunc Strval(value interface{}) string {\n\t// interface 转 string\n\tvar key string\n\tif value == nil {\n\t\treturn key\n\t}\n\n\tswitch value.(type) {\n\tcase float64:\n\t\tft := value.(float64)\n\t\tkey = strconv.FormatFloat(ft, 'f', -1, 64)\n\tcase float32:\n\t\tft := value.(float32)\n\t\tkey = strconv.FormatFloat(float64(ft), 'f', -1, 64)\n\tcase int:\n\t\tit := value.(int)\n\t\tkey = strconv.Itoa(it)\n\tcase uint:\n\t\tit := value.(uint)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int8:\n\t\tit := value.(int8)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint8:\n\t\tit := value.(uint8)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int16:\n\t\tit := value.(int16)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint16:\n\t\tit := value.(uint16)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int32:\n\t\tit := value.(int32)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint32:\n\t\tit := value.(uint32)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int64:\n\t\tit := value.(int64)\n\t\tkey = strconv.FormatInt(it, 10)\n\tcase uint64:\n\t\tit := value.(uint64)\n\t\tkey = strconv.FormatUint(it, 10)\n\tcase string:\n\t\tkey = value.(string)\n\tcase []byte:\n\t\tkey = string(value.([]byte))\n\tdefault:\n\t\tnewValue, _ := json.Marshal(value)\n\t\tkey = string(newValue)\n\t}\n\n\treturn key\n}\n\n\n```\n","source":"_posts/编程语言/go/类型转换/string类型转换.md","raw":"---\ntitle: 'golang类型转换'\ndate: 2022-10-15 10:06:51\ntags: 基础\ncategories: golang\n---\n\n```go\n// Strval 获取变量的字符串值\n// 浮点型 3.0将会转换成字符串3, \"3\"\n// 非数值或字符类型的变量将会被转换成JSON格式字符串\nfunc Strval(value interface{}) string {\n\t// interface 转 string\n\tvar key string\n\tif value == nil {\n\t\treturn key\n\t}\n\n\tswitch value.(type) {\n\tcase float64:\n\t\tft := value.(float64)\n\t\tkey = strconv.FormatFloat(ft, 'f', -1, 64)\n\tcase float32:\n\t\tft := value.(float32)\n\t\tkey = strconv.FormatFloat(float64(ft), 'f', -1, 64)\n\tcase int:\n\t\tit := value.(int)\n\t\tkey = strconv.Itoa(it)\n\tcase uint:\n\t\tit := value.(uint)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int8:\n\t\tit := value.(int8)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint8:\n\t\tit := value.(uint8)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int16:\n\t\tit := value.(int16)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint16:\n\t\tit := value.(uint16)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int32:\n\t\tit := value.(int32)\n\t\tkey = strconv.Itoa(int(it))\n\tcase uint32:\n\t\tit := value.(uint32)\n\t\tkey = strconv.Itoa(int(it))\n\tcase int64:\n\t\tit := value.(int64)\n\t\tkey = strconv.FormatInt(it, 10)\n\tcase uint64:\n\t\tit := value.(uint64)\n\t\tkey = strconv.FormatUint(it, 10)\n\tcase string:\n\t\tkey = value.(string)\n\tcase []byte:\n\t\tkey = string(value.([]byte))\n\tdefault:\n\t\tnewValue, _ := json.Marshal(value)\n\t\tkey = string(newValue)\n\t}\n\n\treturn key\n}\n\n\n```\n","slug":"编程语言/go/类型转换/string类型转换","published":1,"updated":"2023-03-21T09:23:11.039Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co93009oo8hu2c167jb0","content":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Strval 获取变量的字符串值</span></span><br><span class=\"line\"><span class=\"comment\">// 浮点型 3.0将会转换成字符串3, &quot;3&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 非数值或字符类型的变量将会被转换成JSON格式字符串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Strval</span><span class=\"params\">(value <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// interface 转 string</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> key <span class=\"type\">string</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> value == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> value.(<span class=\"keyword\">type</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">float64</span>:</span><br><span class=\"line\">\t\tft := value.(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatFloat(ft, <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">float32</span>:</span><br><span class=\"line\">\t\tft := value.(<span class=\"type\">float32</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatFloat(<span class=\"type\">float64</span>(ft), <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(it)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int8</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int8</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint8</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint8</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int16</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int16</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint16</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint16</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int32</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int32</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint32</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint32</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int64</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatInt(it, <span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint64</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatUint(it, <span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">string</span>:</span><br><span class=\"line\">\t\tkey = value.(<span class=\"type\">string</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> []<span class=\"type\">byte</span>:</span><br><span class=\"line\">\t\tkey = <span class=\"type\">string</span>(value.([]<span class=\"type\">byte</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tnewValue, _ := json.Marshal(value)</span><br><span class=\"line\">\t\tkey = <span class=\"type\">string</span>(newValue)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Strval 获取变量的字符串值</span></span><br><span class=\"line\"><span class=\"comment\">// 浮点型 3.0将会转换成字符串3, &quot;3&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 非数值或字符类型的变量将会被转换成JSON格式字符串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Strval</span><span class=\"params\">(value <span class=\"keyword\">interface</span>&#123;&#125;)</span></span> <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// interface 转 string</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> key <span class=\"type\">string</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> value == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> value.(<span class=\"keyword\">type</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">float64</span>:</span><br><span class=\"line\">\t\tft := value.(<span class=\"type\">float64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatFloat(ft, <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">float32</span>:</span><br><span class=\"line\">\t\tft := value.(<span class=\"type\">float32</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatFloat(<span class=\"type\">float64</span>(ft), <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(it)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int8</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int8</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint8</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint8</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int16</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int16</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint16</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint16</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int32</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int32</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint32</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint32</span>)</span><br><span class=\"line\">\t\tkey = strconv.Itoa(<span class=\"type\">int</span>(it))</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">int64</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">int64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatInt(it, <span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">uint64</span>:</span><br><span class=\"line\">\t\tit := value.(<span class=\"type\">uint64</span>)</span><br><span class=\"line\">\t\tkey = strconv.FormatUint(it, <span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"type\">string</span>:</span><br><span class=\"line\">\t\tkey = value.(<span class=\"type\">string</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> []<span class=\"type\">byte</span>:</span><br><span class=\"line\">\t\tkey = <span class=\"type\">string</span>(value.([]<span class=\"type\">byte</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\tnewValue, _ := json.Marshal(value)</span><br><span class=\"line\">\t\tkey = <span class=\"type\">string</span>(newValue)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"青训营低代码获奖反思","date":"2022-10-15T02:06:51.000Z","_content":"\n**lowcode 31个 答辩19个 5个获奖 7个证书**\n\n- 获奖率 16.1%\n- 答辩率 61.2%\n- 证书率 22.6%\n\n**监控系统18个 答辩12个 5个获奖 5个证书**\n\n- 获奖率 27.8%\n- 答辩率 66.7%\n- 证书率 27.8%\n\n**仿掘金官网44个 答辩20个 8个获奖 8个证书**\n\n- 获奖率 18.2%\n- 答辩率 45.5%\n- 证书率 18.2%\n\n**自定义10个 答辩5个 2个获奖 2个证书**\n\n- 获奖率 20%\n- 答辩率 50%\n- 证书率 20%\n","source":"_posts/学校/准大三暑假/青训营/反思/获奖反思.md","raw":"---\ntitle: '青训营低代码获奖反思'\ndate: 2022-10-15 10:06:51\ntags: \n    - 青训营\n    - 基础\ncategories: 前端\n---\n\n**lowcode 31个 答辩19个 5个获奖 7个证书**\n\n- 获奖率 16.1%\n- 答辩率 61.2%\n- 证书率 22.6%\n\n**监控系统18个 答辩12个 5个获奖 5个证书**\n\n- 获奖率 27.8%\n- 答辩率 66.7%\n- 证书率 27.8%\n\n**仿掘金官网44个 答辩20个 8个获奖 8个证书**\n\n- 获奖率 18.2%\n- 答辩率 45.5%\n- 证书率 18.2%\n\n**自定义10个 答辩5个 2个获奖 2个证书**\n\n- 获奖率 20%\n- 答辩率 50%\n- 证书率 20%\n","slug":"学校/准大三暑假/青训营/反思/获奖反思","published":1,"updated":"2023-03-21T09:44:12.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co94009so8hu4zx8787o","content":"<p><strong>lowcode 31个 答辩19个 5个获奖 7个证书</strong></p>\n<ul>\n<li>获奖率 16.1%</li>\n<li>答辩率 61.2%</li>\n<li>证书率 22.6%</li>\n</ul>\n<p><strong>监控系统18个 答辩12个 5个获奖 5个证书</strong></p>\n<ul>\n<li>获奖率 27.8%</li>\n<li>答辩率 66.7%</li>\n<li>证书率 27.8%</li>\n</ul>\n<p><strong>仿掘金官网44个 答辩20个 8个获奖 8个证书</strong></p>\n<ul>\n<li>获奖率 18.2%</li>\n<li>答辩率 45.5%</li>\n<li>证书率 18.2%</li>\n</ul>\n<p><strong>自定义10个 答辩5个 2个获奖 2个证书</strong></p>\n<ul>\n<li>获奖率 20%</li>\n<li>答辩率 50%</li>\n<li>证书率 20%</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>lowcode 31个 答辩19个 5个获奖 7个证书</strong></p>\n<ul>\n<li>获奖率 16.1%</li>\n<li>答辩率 61.2%</li>\n<li>证书率 22.6%</li>\n</ul>\n<p><strong>监控系统18个 答辩12个 5个获奖 5个证书</strong></p>\n<ul>\n<li>获奖率 27.8%</li>\n<li>答辩率 66.7%</li>\n<li>证书率 27.8%</li>\n</ul>\n<p><strong>仿掘金官网44个 答辩20个 8个获奖 8个证书</strong></p>\n<ul>\n<li>获奖率 18.2%</li>\n<li>答辩率 45.5%</li>\n<li>证书率 18.2%</li>\n</ul>\n<p><strong>自定义10个 答辩5个 2个获奖 2个证书</strong></p>\n<ul>\n<li>获奖率 20%</li>\n<li>答辩率 50%</li>\n<li>证书率 20%</li>\n</ul>\n"},{"title":"webpack源码分析","date":"2022-10-15T02:06:51.000Z","_content":"\n## 前情提要\n\n## `__webpack_require__.d`\n\n传入导出对象和文件中定义的导出对象，判断定义的对象是否全部导出，如果没有则在导出对象上定义好获取方式，define\n\n## `__webpack_require__.o`\n\n传入对象和key，判断key是否定义在对象上，own\n\n## `__webpack_require__.r`\n\n给传入的对象定义为esmodule，report\n\n## `__webpack_exports__`\n\n初始化每个模块的对象\n\n## `__WEBPACK_DEFAULT_EXPORT__`\n\n每个模块默认导出函数\n\n## `__webpack_modules__`\n\n一个数组，索引是模块id，值是每个模块的执行函数\n\nmodule是新创建的模块，里面有一个exports属性\n\n`module, module.exports, __webpack_require__`与`__unused_webpack_module, __webpack_exports__, __webpack_require__`相对应\n\n## `__webpack_require__`\n\n传入模块id，返回模块导出对象\n\n## 打包后的bundle.js究竟做了什么？\n\n1. 首先声明严格模式\n2. 定义好`__webpack_modules__`对象，key是一个id为模块id，值是一个函数，\n\n   1. 这个函数首先用`__webpack_require__.r`方法给传入的对象添加一个esmodule的属性，值为true，也就是标记该模块是esmodule\n   2. ```javascript\n      __webpack_require__.d(__webpack_exports__, {\n        \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n      });\n      ```\n   3. 然后用以上方法给__webpack_exports__定义了一个default属性，值是一个函数，返回 __WEBPACK_DEFAULT_EXPORT__\n   4. 之后定义 __WEBPACK_DEFAULT_EXPORT__ 函数为模块导出的具体内容\n\n```javascript\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (() => {\n    let node = document.createElement('div')\n    node.innerText = 'hello webpack'\n    document.getElementById('app').append(node)\n});\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _process_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\n\n(0,_process_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()\n\n})();\n\n/******/ })()\n;\n```\n\n## 总结\n\n1. 首先定义好了`__webpack_modules__ `，key是模块id，属性是一个函数，这个函数会给传入的对象添加好所有属于该模块id的依赖\n2. 之后`__webpack_require__`会根据模块id返回该模块对应的module.exports对象，如果缓存里有就直接拿，没有就创建一个包含exports属性的对象返回给module变量，同时将该对象传入`__webpack_modules__ `进而给这个对象添加好模块的所有方法\n3. 运行时根据webpack定义好的依赖树进行执行，用到什么就require(id)进来\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md619427.862813.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630655.7572731.png)\n\n\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630753.2392985.png)\n\n合并模块\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630941.8944969.png)\n","source":"_posts/前端/进阶/前端工程化/webpack/webpack源码.md","raw":"---\ntitle: 'webpack源码分析'\ndate: 2022-10-15 10:06:51\ntags: \n   - 源码\n   - webpack\ncategories: 前端\n---\n\n## 前情提要\n\n## `__webpack_require__.d`\n\n传入导出对象和文件中定义的导出对象，判断定义的对象是否全部导出，如果没有则在导出对象上定义好获取方式，define\n\n## `__webpack_require__.o`\n\n传入对象和key，判断key是否定义在对象上，own\n\n## `__webpack_require__.r`\n\n给传入的对象定义为esmodule，report\n\n## `__webpack_exports__`\n\n初始化每个模块的对象\n\n## `__WEBPACK_DEFAULT_EXPORT__`\n\n每个模块默认导出函数\n\n## `__webpack_modules__`\n\n一个数组，索引是模块id，值是每个模块的执行函数\n\nmodule是新创建的模块，里面有一个exports属性\n\n`module, module.exports, __webpack_require__`与`__unused_webpack_module, __webpack_exports__, __webpack_require__`相对应\n\n## `__webpack_require__`\n\n传入模块id，返回模块导出对象\n\n## 打包后的bundle.js究竟做了什么？\n\n1. 首先声明严格模式\n2. 定义好`__webpack_modules__`对象，key是一个id为模块id，值是一个函数，\n\n   1. 这个函数首先用`__webpack_require__.r`方法给传入的对象添加一个esmodule的属性，值为true，也就是标记该模块是esmodule\n   2. ```javascript\n      __webpack_require__.d(__webpack_exports__, {\n        \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n      });\n      ```\n   3. 然后用以上方法给__webpack_exports__定义了一个default属性，值是一个函数，返回 __WEBPACK_DEFAULT_EXPORT__\n   4. 之后定义 __WEBPACK_DEFAULT_EXPORT__ 函数为模块导出的具体内容\n\n```javascript\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (() => {\n    let node = document.createElement('div')\n    node.innerText = 'hello webpack'\n    document.getElementById('app').append(node)\n});\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _process_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\n\n(0,_process_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()\n\n})();\n\n/******/ })()\n;\n```\n\n## 总结\n\n1. 首先定义好了`__webpack_modules__ `，key是模块id，属性是一个函数，这个函数会给传入的对象添加好所有属于该模块id的依赖\n2. 之后`__webpack_require__`会根据模块id返回该模块对应的module.exports对象，如果缓存里有就直接拿，没有就创建一个包含exports属性的对象返回给module变量，同时将该对象传入`__webpack_modules__ `进而给这个对象添加好模块的所有方法\n3. 运行时根据webpack定义好的依赖树进行执行，用到什么就require(id)进来\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md619427.862813.png)\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630655.7572731.png)\n\n\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630753.2392985.png)\n\n合并模块\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630941.8944969.png)\n","slug":"前端/进阶/前端工程化/webpack/webpack源码","published":1,"updated":"2023-03-21T09:36:42.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co95009vo8hufff4a605","content":"<h2 id=\"前情提要\"><a href=\"#前情提要\" class=\"headerlink\" title=\"前情提要\"></a>前情提要</h2><h2 id=\"webpack-require-d\"><a href=\"#webpack-require-d\" class=\"headerlink\" title=\"__webpack_require__.d\"></a><code>__webpack_require__.d</code></h2><p>传入导出对象和文件中定义的导出对象，判断定义的对象是否全部导出，如果没有则在导出对象上定义好获取方式，define</p>\n<h2 id=\"webpack-require-o\"><a href=\"#webpack-require-o\" class=\"headerlink\" title=\"__webpack_require__.o\"></a><code>__webpack_require__.o</code></h2><p>传入对象和key，判断key是否定义在对象上，own</p>\n<h2 id=\"webpack-require-r\"><a href=\"#webpack-require-r\" class=\"headerlink\" title=\"__webpack_require__.r\"></a><code>__webpack_require__.r</code></h2><p>给传入的对象定义为esmodule，report</p>\n<h2 id=\"webpack-exports\"><a href=\"#webpack-exports\" class=\"headerlink\" title=\"__webpack_exports__\"></a><code>__webpack_exports__</code></h2><p>初始化每个模块的对象</p>\n<h2 id=\"WEBPACK-DEFAULT-EXPORT\"><a href=\"#WEBPACK-DEFAULT-EXPORT\" class=\"headerlink\" title=\"__WEBPACK_DEFAULT_EXPORT__\"></a><code>__WEBPACK_DEFAULT_EXPORT__</code></h2><p>每个模块默认导出函数</p>\n<h2 id=\"webpack-modules\"><a href=\"#webpack-modules\" class=\"headerlink\" title=\"__webpack_modules__\"></a><code>__webpack_modules__</code></h2><p>一个数组，索引是模块id，值是每个模块的执行函数</p>\n<p>module是新创建的模块，里面有一个exports属性</p>\n<p><code>module, module.exports, __webpack_require__</code>与<code>__unused_webpack_module, __webpack_exports__, __webpack_require__</code>相对应</p>\n<h2 id=\"webpack-require\"><a href=\"#webpack-require\" class=\"headerlink\" title=\"__webpack_require__\"></a><code>__webpack_require__</code></h2><p>传入模块id，返回模块导出对象</p>\n<h2 id=\"打包后的bundle-js究竟做了什么？\"><a href=\"#打包后的bundle-js究竟做了什么？\" class=\"headerlink\" title=\"打包后的bundle.js究竟做了什么？\"></a>打包后的bundle.js究竟做了什么？</h2><ol>\n<li><p>首先声明严格模式</p>\n</li>\n<li><p>定义好<code>__webpack_modules__</code>对象，key是一个id为模块id，值是一个函数，</p>\n<ol>\n<li>这个函数首先用<code>__webpack_require__.r</code>方法给传入的对象添加一个esmodule的属性，值为true，也就是标记该模块是esmodule</li>\n<li>```javascript<br><strong>webpack_require</strong>.d(<strong>webpack_exports</strong>, {<br>  “default”: () =&gt; (<strong>WEBPACK_DEFAULT_EXPORT</strong>)<br>});<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   3. 然后用以上方法给__webpack_exports__定义了一个default属性，值是一个函数，返回 __WEBPACK_DEFAULT_EXPORT__</span><br><span class=\"line\">   4. 之后定义 __WEBPACK_DEFAULT_EXPORT__ 函数为模块导出的具体内容</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">/******/ (() =&gt; &#123; // webpackBootstrap</span><br><span class=\"line\">/******/ \t&quot;use strict&quot;;</span><br><span class=\"line\">/******/ \tvar __webpack_modules__ = ([</span><br><span class=\"line\">/* 0 */,</span><br><span class=\"line\">/* 1 */</span><br><span class=\"line\">/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">__webpack_require__.r(__webpack_exports__);</span><br><span class=\"line\">/* harmony export */ __webpack_require__.d(__webpack_exports__, &#123;</span><br><span class=\"line\">/* harmony export */   &quot;default&quot;: () =&gt; (__WEBPACK_DEFAULT_EXPORT__)</span><br><span class=\"line\">/* harmony export */ &#125;);</span><br><span class=\"line\">/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (() =&gt; &#123;</span><br><span class=\"line\">    let node = document.createElement(&#x27;div&#x27;)</span><br><span class=\"line\">    node.innerText = &#x27;hello webpack&#x27;</span><br><span class=\"line\">    document.getElementById(&#x27;app&#x27;).append(node)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">/***/ &#125;)</span><br><span class=\"line\">/******/ \t]);</span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">/******/ \t// The module cache</span><br><span class=\"line\">/******/ \tvar __webpack_module_cache__ = &#123;&#125;;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t// The require function</span><br><span class=\"line\">/******/ \tfunction __webpack_require__(moduleId) &#123;</span><br><span class=\"line\">/******/ \t\t// Check if module is in cache</span><br><span class=\"line\">/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];</span><br><span class=\"line\">/******/ \t\tif (cachedModule !== undefined) &#123;</span><br><span class=\"line\">/******/ \t\t\treturn cachedModule.exports;</span><br><span class=\"line\">/******/ \t\t&#125;</span><br><span class=\"line\">/******/ \t\t// Create a new module (and put it into the cache)</span><br><span class=\"line\">/******/ \t\tvar module = __webpack_module_cache__[moduleId] = &#123;</span><br><span class=\"line\">/******/ \t\t\t// no module.id needed</span><br><span class=\"line\">/******/ \t\t\t// no module.loaded needed</span><br><span class=\"line\">/******/ \t\t\texports: &#123;&#125;</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t\t// Execute the module function</span><br><span class=\"line\">/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t\t// Return the exports of the module</span><br><span class=\"line\">/******/ \t\treturn module.exports;</span><br><span class=\"line\">/******/ \t&#125;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">/******/ \t/* webpack/runtime/define property getters */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t// define getter functions for harmony exports</span><br><span class=\"line\">/******/ \t\t__webpack_require__.d = (exports, definition) =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t\tfor(var key in definition) &#123;</span><br><span class=\"line\">/******/ \t\t\t\tif(__webpack_require__.o(definition, key) &amp;&amp; !__webpack_require__.o(exports, key)) &#123;</span><br><span class=\"line\">/******/ \t\t\t\t\tObject.defineProperty(exports, key, &#123; enumerable: true, get: definition[key] &#125;);</span><br><span class=\"line\">/******/ \t\t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t/* webpack/runtime/hasOwnProperty shorthand */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t__webpack_require__.o = (obj, prop) =&gt; (Object.prototype.hasOwnProperty.call(obj, prop))</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t/* webpack/runtime/make namespace object */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t// define __esModule on exports</span><br><span class=\"line\">/******/ \t\t__webpack_require__.r = (exports) =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t\tif(typeof Symbol !== &#x27;undefined&#x27; &amp;&amp; Symbol.toStringTag) &#123;</span><br><span class=\"line\">/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, &#123; value: &#x27;Module&#x27; &#125;);</span><br><span class=\"line\">/******/ \t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t\tObject.defineProperty(exports, &#x27;__esModule&#x27;, &#123; value: true &#125;);</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">var __webpack_exports__ = &#123;&#125;;</span><br><span class=\"line\">// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.</span><br><span class=\"line\">(() =&gt; &#123;</span><br><span class=\"line\">__webpack_require__.r(__webpack_exports__);</span><br><span class=\"line\">/* harmony import */ var _process_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(0,_process_js__WEBPACK_IMPORTED_MODULE_0__[&quot;default&quot;])()</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">/******/ &#125;)()</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ol>\n<li>首先定义好了<code>__webpack_modules__ </code>，key是模块id，属性是一个函数，这个函数会给传入的对象添加好所有属于该模块id的依赖</li>\n<li>之后<code>__webpack_require__</code>会根据模块id返回该模块对应的module.exports对象，如果缓存里有就直接拿，没有就创建一个包含exports属性的对象返回给module变量，同时将该对象传入<code>__webpack_modules__ </code>进而给这个对象添加好模块的所有方法</li>\n<li>运行时根据webpack定义好的依赖树进行执行，用到什么就require(id)进来</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md619427.862813.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630655.7572731.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630753.2392985.png\"></p>\n<p>合并模块</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630941.8944969.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前情提要\"><a href=\"#前情提要\" class=\"headerlink\" title=\"前情提要\"></a>前情提要</h2><h2 id=\"webpack-require-d\"><a href=\"#webpack-require-d\" class=\"headerlink\" title=\"__webpack_require__.d\"></a><code>__webpack_require__.d</code></h2><p>传入导出对象和文件中定义的导出对象，判断定义的对象是否全部导出，如果没有则在导出对象上定义好获取方式，define</p>\n<h2 id=\"webpack-require-o\"><a href=\"#webpack-require-o\" class=\"headerlink\" title=\"__webpack_require__.o\"></a><code>__webpack_require__.o</code></h2><p>传入对象和key，判断key是否定义在对象上，own</p>\n<h2 id=\"webpack-require-r\"><a href=\"#webpack-require-r\" class=\"headerlink\" title=\"__webpack_require__.r\"></a><code>__webpack_require__.r</code></h2><p>给传入的对象定义为esmodule，report</p>\n<h2 id=\"webpack-exports\"><a href=\"#webpack-exports\" class=\"headerlink\" title=\"__webpack_exports__\"></a><code>__webpack_exports__</code></h2><p>初始化每个模块的对象</p>\n<h2 id=\"WEBPACK-DEFAULT-EXPORT\"><a href=\"#WEBPACK-DEFAULT-EXPORT\" class=\"headerlink\" title=\"__WEBPACK_DEFAULT_EXPORT__\"></a><code>__WEBPACK_DEFAULT_EXPORT__</code></h2><p>每个模块默认导出函数</p>\n<h2 id=\"webpack-modules\"><a href=\"#webpack-modules\" class=\"headerlink\" title=\"__webpack_modules__\"></a><code>__webpack_modules__</code></h2><p>一个数组，索引是模块id，值是每个模块的执行函数</p>\n<p>module是新创建的模块，里面有一个exports属性</p>\n<p><code>module, module.exports, __webpack_require__</code>与<code>__unused_webpack_module, __webpack_exports__, __webpack_require__</code>相对应</p>\n<h2 id=\"webpack-require\"><a href=\"#webpack-require\" class=\"headerlink\" title=\"__webpack_require__\"></a><code>__webpack_require__</code></h2><p>传入模块id，返回模块导出对象</p>\n<h2 id=\"打包后的bundle-js究竟做了什么？\"><a href=\"#打包后的bundle-js究竟做了什么？\" class=\"headerlink\" title=\"打包后的bundle.js究竟做了什么？\"></a>打包后的bundle.js究竟做了什么？</h2><ol>\n<li><p>首先声明严格模式</p>\n</li>\n<li><p>定义好<code>__webpack_modules__</code>对象，key是一个id为模块id，值是一个函数，</p>\n<ol>\n<li>这个函数首先用<code>__webpack_require__.r</code>方法给传入的对象添加一个esmodule的属性，值为true，也就是标记该模块是esmodule</li>\n<li>```javascript<br><strong>webpack_require</strong>.d(<strong>webpack_exports</strong>, {<br>  “default”: () =&gt; (<strong>WEBPACK_DEFAULT_EXPORT</strong>)<br>});<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   3. 然后用以上方法给__webpack_exports__定义了一个default属性，值是一个函数，返回 __WEBPACK_DEFAULT_EXPORT__</span><br><span class=\"line\">   4. 之后定义 __WEBPACK_DEFAULT_EXPORT__ 函数为模块导出的具体内容</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">/******/ (() =&gt; &#123; // webpackBootstrap</span><br><span class=\"line\">/******/ \t&quot;use strict&quot;;</span><br><span class=\"line\">/******/ \tvar __webpack_modules__ = ([</span><br><span class=\"line\">/* 0 */,</span><br><span class=\"line\">/* 1 */</span><br><span class=\"line\">/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">__webpack_require__.r(__webpack_exports__);</span><br><span class=\"line\">/* harmony export */ __webpack_require__.d(__webpack_exports__, &#123;</span><br><span class=\"line\">/* harmony export */   &quot;default&quot;: () =&gt; (__WEBPACK_DEFAULT_EXPORT__)</span><br><span class=\"line\">/* harmony export */ &#125;);</span><br><span class=\"line\">/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (() =&gt; &#123;</span><br><span class=\"line\">    let node = document.createElement(&#x27;div&#x27;)</span><br><span class=\"line\">    node.innerText = &#x27;hello webpack&#x27;</span><br><span class=\"line\">    document.getElementById(&#x27;app&#x27;).append(node)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">/***/ &#125;)</span><br><span class=\"line\">/******/ \t]);</span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">/******/ \t// The module cache</span><br><span class=\"line\">/******/ \tvar __webpack_module_cache__ = &#123;&#125;;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t// The require function</span><br><span class=\"line\">/******/ \tfunction __webpack_require__(moduleId) &#123;</span><br><span class=\"line\">/******/ \t\t// Check if module is in cache</span><br><span class=\"line\">/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];</span><br><span class=\"line\">/******/ \t\tif (cachedModule !== undefined) &#123;</span><br><span class=\"line\">/******/ \t\t\treturn cachedModule.exports;</span><br><span class=\"line\">/******/ \t\t&#125;</span><br><span class=\"line\">/******/ \t\t// Create a new module (and put it into the cache)</span><br><span class=\"line\">/******/ \t\tvar module = __webpack_module_cache__[moduleId] = &#123;</span><br><span class=\"line\">/******/ \t\t\t// no module.id needed</span><br><span class=\"line\">/******/ \t\t\t// no module.loaded needed</span><br><span class=\"line\">/******/ \t\t\texports: &#123;&#125;</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t\t// Execute the module function</span><br><span class=\"line\">/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t\t// Return the exports of the module</span><br><span class=\"line\">/******/ \t\treturn module.exports;</span><br><span class=\"line\">/******/ \t&#125;</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">/******/ \t/* webpack/runtime/define property getters */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t// define getter functions for harmony exports</span><br><span class=\"line\">/******/ \t\t__webpack_require__.d = (exports, definition) =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t\tfor(var key in definition) &#123;</span><br><span class=\"line\">/******/ \t\t\t\tif(__webpack_require__.o(definition, key) &amp;&amp; !__webpack_require__.o(exports, key)) &#123;</span><br><span class=\"line\">/******/ \t\t\t\t\tObject.defineProperty(exports, key, &#123; enumerable: true, get: definition[key] &#125;);</span><br><span class=\"line\">/******/ \t\t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t/* webpack/runtime/hasOwnProperty shorthand */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t__webpack_require__.o = (obj, prop) =&gt; (Object.prototype.hasOwnProperty.call(obj, prop))</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/******/ \t/* webpack/runtime/make namespace object */</span><br><span class=\"line\">/******/ \t(() =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t// define __esModule on exports</span><br><span class=\"line\">/******/ \t\t__webpack_require__.r = (exports) =&gt; &#123;</span><br><span class=\"line\">/******/ \t\t\tif(typeof Symbol !== &#x27;undefined&#x27; &amp;&amp; Symbol.toStringTag) &#123;</span><br><span class=\"line\">/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, &#123; value: &#x27;Module&#x27; &#125;);</span><br><span class=\"line\">/******/ \t\t\t&#125;</span><br><span class=\"line\">/******/ \t\t\tObject.defineProperty(exports, &#x27;__esModule&#x27;, &#123; value: true &#125;);</span><br><span class=\"line\">/******/ \t\t&#125;;</span><br><span class=\"line\">/******/ \t&#125;)();</span><br><span class=\"line\">/******/ </span><br><span class=\"line\">/************************************************************************/</span><br><span class=\"line\">var __webpack_exports__ = &#123;&#125;;</span><br><span class=\"line\">// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.</span><br><span class=\"line\">(() =&gt; &#123;</span><br><span class=\"line\">__webpack_require__.r(__webpack_exports__);</span><br><span class=\"line\">/* harmony import */ var _process_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(0,_process_js__WEBPACK_IMPORTED_MODULE_0__[&quot;default&quot;])()</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">/******/ &#125;)()</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ol>\n<li>首先定义好了<code>__webpack_modules__ </code>，key是模块id，属性是一个函数，这个函数会给传入的对象添加好所有属于该模块id的依赖</li>\n<li>之后<code>__webpack_require__</code>会根据模块id返回该模块对应的module.exports对象，如果缓存里有就直接拿，没有就创建一个包含exports属性的对象返回给module变量，同时将该对象传入<code>__webpack_modules__ </code>进而给这个对象添加好模块的所有方法</li>\n<li>运行时根据webpack定义好的依赖树进行执行，用到什么就require(id)进来</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md619427.862813.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630655.7572731.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630753.2392985.png\"></p>\n<p>合并模块</p>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/webpack源码.md630941.8944969.png\"></p>\n"},{"title":"koa学习","date":"2022-10-15T02:06:51.000Z","_content":"\n## koa安装\n\n```javascript\nnpm install -g koa-generator\n\nkoa2 mykoa\n\nnpm install ejs\n\n<%name%>\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md507155.4952171.png)\n\n> html文件能热部署\n>\n> js文件不能\n\n## ejs\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md514529.3909751.png)\n\n## 跨域问题\n\n解决跨域问题用koa-cores\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md519032.6122771.png)\n\nclient does not support authentication protocal requested by server;consider upgrading mysql client\n\n## vuex\n\n> 不推荐直接操纵state，应该是操作mutations或者actions\n>\n> updateUsers\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md70019.0938479.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md70072.0889825.png)\n\n## 登陆跳转方法\n\n1. 用vuex存储用户名和值并显示\n2. 通过name和params显示\n3. 通过this.$roater.push跳转并携带参数path，query\n4. 通过两个请求\n\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md82970.8534267.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md178935.16939.png)\n","source":"_posts/前端/学习/唯创前端上课笔记/node/320第一节课.md","raw":"---\ntitle: 'koa学习'\ndate: 2022-10-15 10:06:51\ntags: node\ncategories: 前端\n---\n\n## koa安装\n\n```javascript\nnpm install -g koa-generator\n\nkoa2 mykoa\n\nnpm install ejs\n\n<%name%>\n```\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md507155.4952171.png)\n\n> html文件能热部署\n>\n> js文件不能\n\n## ejs\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md514529.3909751.png)\n\n## 跨域问题\n\n解决跨域问题用koa-cores\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md519032.6122771.png)\n\nclient does not support authentication protocal requested by server;consider upgrading mysql client\n\n## vuex\n\n> 不推荐直接操纵state，应该是操作mutations或者actions\n>\n> updateUsers\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md70019.0938479.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md70072.0889825.png)\n\n## 登陆跳转方法\n\n1. 用vuex存储用户名和值并显示\n2. 通过name和params显示\n3. 通过this.$roater.push跳转并携带参数path，query\n4. 通过两个请求\n\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md82970.8534267.png)\n\n![](file://C:\\Personal\\Documents\\IkMarkdown\\.assets\\320第一节课.md178935.16939.png)\n","slug":"前端/学习/唯创前端上课笔记/node/320第一节课","published":1,"updated":"2023-03-21T09:15:22.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co96009zo8hu2wxl3w92","content":"<h2 id=\"koa安装\"><a href=\"#koa安装\" class=\"headerlink\" title=\"koa安装\"></a>koa安装</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g koa-generator</span><br><span class=\"line\"></span><br><span class=\"line\">koa2 mykoa</span><br><span class=\"line\"></span><br><span class=\"line\">npm install ejs</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%name%&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md507155.4952171.png\"></p>\n<blockquote>\n<p>html文件能热部署</p>\n<p>js文件不能</p>\n</blockquote>\n<h2 id=\"ejs\"><a href=\"#ejs\" class=\"headerlink\" title=\"ejs\"></a>ejs</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md514529.3909751.png\"></p>\n<h2 id=\"跨域问题\"><a href=\"#跨域问题\" class=\"headerlink\" title=\"跨域问题\"></a>跨域问题</h2><p>解决跨域问题用koa-cores</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md519032.6122771.png\"></p>\n<p>client does not support authentication protocal requested by server;consider upgrading mysql client</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><blockquote>\n<p>不推荐直接操纵state，应该是操作mutations或者actions</p>\n<p>updateUsers</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md70019.0938479.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md70072.0889825.png\"></p>\n<h2 id=\"登陆跳转方法\"><a href=\"#登陆跳转方法\" class=\"headerlink\" title=\"登陆跳转方法\"></a>登陆跳转方法</h2><ol>\n<li>用vuex存储用户名和值并显示</li>\n<li>通过name和params显示</li>\n<li>通过this.$roater.push跳转并携带参数path，query</li>\n<li>通过两个请求</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md82970.8534267.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md178935.16939.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"koa安装\"><a href=\"#koa安装\" class=\"headerlink\" title=\"koa安装\"></a>koa安装</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g koa-generator</span><br><span class=\"line\"></span><br><span class=\"line\">koa2 mykoa</span><br><span class=\"line\"></span><br><span class=\"line\">npm install ejs</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%name%&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md507155.4952171.png\"></p>\n<blockquote>\n<p>html文件能热部署</p>\n<p>js文件不能</p>\n</blockquote>\n<h2 id=\"ejs\"><a href=\"#ejs\" class=\"headerlink\" title=\"ejs\"></a>ejs</h2><p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md514529.3909751.png\"></p>\n<h2 id=\"跨域问题\"><a href=\"#跨域问题\" class=\"headerlink\" title=\"跨域问题\"></a>跨域问题</h2><p>解决跨域问题用koa-cores</p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md519032.6122771.png\"></p>\n<p>client does not support authentication protocal requested by server;consider upgrading mysql client</p>\n<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><blockquote>\n<p>不推荐直接操纵state，应该是操作mutations或者actions</p>\n<p>updateUsers</p>\n</blockquote>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md70019.0938479.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md70072.0889825.png\"></p>\n<h2 id=\"登陆跳转方法\"><a href=\"#登陆跳转方法\" class=\"headerlink\" title=\"登陆跳转方法\"></a>登陆跳转方法</h2><ol>\n<li>用vuex存储用户名和值并显示</li>\n<li>通过name和params显示</li>\n<li>通过this.$roater.push跳转并携带参数path，query</li>\n<li>通过两个请求</li>\n</ol>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md82970.8534267.png\"></p>\n<p><img src=\"file://C:\\Personal\\Documents\\IkMarkdown.assets\\320第一节课.md178935.16939.png\"></p>\n"},{"title":"低代码项目架构","date":"2022-10-15T02:06:51.000Z","_content":"\n## 前情提要\n\n- 每个flexbox干两件事，一件是布局，另一件是当画布\n- 除了flex的其余组件只干一件事，在画布上画画\n- PowerfulDynamicDraw和DynamicDraw的区别：PowerfulDynamicDraw能渲染flexbox和和普通组件，DynamicDraw只能渲染普通组件\n-\n\n## 核心架构\n\n祖宗：main用于布局\n\n爷：center用于存放核心数据，并提供修改数据的方法(methods或者自定义事件)\n\n父：PowerfulDynamicDraw多个大画布和多个基础组件组件，但只接收center传过来的数据，和监听用户操作，需要修改数据通通交给center处理\n\n大儿子：FlexBox组件，一个大画布和多个基础组件，有一个小画布DynamicDraw\n\n子：渲染一个基础组件，没事就接收用户的操作然后给爷爷发个事件让他处理\n\n大孙子：小画布本体，有多个基础组件\n\n孙：小画布中的多个基础组件中的一个\n\n## 数据层面\n\n> 祖宗用来布局\n>\n> 爷爷用来存全局数据(提供修改变量的方法，但是不接收任何用户拖拽操作))，（相当于处理中心，暴露修改数据的方法)\n>\n> 爹(center)用来获取数据，发数据(相当于数据管道，不渲染组件)\n>\n> 大儿子(盒子)获取数据，发给孙子数据(既当管道，也当渲染器)\n>\n> 儿子(物料)读数据(只渲染)\n>\n> 大孙子(盒子)获取数据，发数据给重孙(既当管道，也当渲染器)\n>\n> 孙子(物料)读数据(只渲染)\n\n## 用户操作层面\n\n> 爷爷只接收一个点击操作用来显示蓝色蒙版\n>\n> 爹接收dragenter让大儿子高亮\n>\n> 大儿子(盒子)接收click用于高亮，drop接收组件\n>\n> 儿子(物料)click选中，dragstart获取当前选中的组件view\n>\n> 大孙子(盒子)获取click选中，dragstart获取当前选中的组件view，drop接收组件\n>\n> 孙子(物料)click选中，dragstart获取当前选中的组件view\n\n\n\n> 数据修改都源于用户操作，可以发现越往下接收的用户操作越多，但是由于权限越来越低，所以只能将数据交给爷爷处理，越往上级写操作越多，越往下级读操作，激发自定义事件操作越多\n","source":"_posts/学校/准大三暑假/青训营/反思/项目架构.md","raw":"---\ntitle: '低代码项目架构'\ndate: 2022-10-15 10:06:51\ntags: \n    - 青训营\n    - 基础\n    - 随手记\n    - 低代码\ncategories: 前端\n---\n\n## 前情提要\n\n- 每个flexbox干两件事，一件是布局，另一件是当画布\n- 除了flex的其余组件只干一件事，在画布上画画\n- PowerfulDynamicDraw和DynamicDraw的区别：PowerfulDynamicDraw能渲染flexbox和和普通组件，DynamicDraw只能渲染普通组件\n-\n\n## 核心架构\n\n祖宗：main用于布局\n\n爷：center用于存放核心数据，并提供修改数据的方法(methods或者自定义事件)\n\n父：PowerfulDynamicDraw多个大画布和多个基础组件组件，但只接收center传过来的数据，和监听用户操作，需要修改数据通通交给center处理\n\n大儿子：FlexBox组件，一个大画布和多个基础组件，有一个小画布DynamicDraw\n\n子：渲染一个基础组件，没事就接收用户的操作然后给爷爷发个事件让他处理\n\n大孙子：小画布本体，有多个基础组件\n\n孙：小画布中的多个基础组件中的一个\n\n## 数据层面\n\n> 祖宗用来布局\n>\n> 爷爷用来存全局数据(提供修改变量的方法，但是不接收任何用户拖拽操作))，（相当于处理中心，暴露修改数据的方法)\n>\n> 爹(center)用来获取数据，发数据(相当于数据管道，不渲染组件)\n>\n> 大儿子(盒子)获取数据，发给孙子数据(既当管道，也当渲染器)\n>\n> 儿子(物料)读数据(只渲染)\n>\n> 大孙子(盒子)获取数据，发数据给重孙(既当管道，也当渲染器)\n>\n> 孙子(物料)读数据(只渲染)\n\n## 用户操作层面\n\n> 爷爷只接收一个点击操作用来显示蓝色蒙版\n>\n> 爹接收dragenter让大儿子高亮\n>\n> 大儿子(盒子)接收click用于高亮，drop接收组件\n>\n> 儿子(物料)click选中，dragstart获取当前选中的组件view\n>\n> 大孙子(盒子)获取click选中，dragstart获取当前选中的组件view，drop接收组件\n>\n> 孙子(物料)click选中，dragstart获取当前选中的组件view\n\n\n\n> 数据修改都源于用户操作，可以发现越往下接收的用户操作越多，但是由于权限越来越低，所以只能将数据交给爷爷处理，越往上级写操作越多，越往下级读操作，激发自定义事件操作越多\n","slug":"学校/准大三暑假/青训营/反思/项目架构","published":1,"updated":"2023-03-21T09:44:51.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9700a3o8hubitecs23","content":"<h2 id=\"前情提要\"><a href=\"#前情提要\" class=\"headerlink\" title=\"前情提要\"></a>前情提要</h2><ul>\n<li>每个flexbox干两件事，一件是布局，另一件是当画布</li>\n<li>除了flex的其余组件只干一件事，在画布上画画</li>\n<li>PowerfulDynamicDraw和DynamicDraw的区别：PowerfulDynamicDraw能渲染flexbox和和普通组件，DynamicDraw只能渲染普通组件</li>\n<li></li>\n</ul>\n<h2 id=\"核心架构\"><a href=\"#核心架构\" class=\"headerlink\" title=\"核心架构\"></a>核心架构</h2><p>祖宗：main用于布局</p>\n<p>爷：center用于存放核心数据，并提供修改数据的方法(methods或者自定义事件)</p>\n<p>父：PowerfulDynamicDraw多个大画布和多个基础组件组件，但只接收center传过来的数据，和监听用户操作，需要修改数据通通交给center处理</p>\n<p>大儿子：FlexBox组件，一个大画布和多个基础组件，有一个小画布DynamicDraw</p>\n<p>子：渲染一个基础组件，没事就接收用户的操作然后给爷爷发个事件让他处理</p>\n<p>大孙子：小画布本体，有多个基础组件</p>\n<p>孙：小画布中的多个基础组件中的一个</p>\n<h2 id=\"数据层面\"><a href=\"#数据层面\" class=\"headerlink\" title=\"数据层面\"></a>数据层面</h2><blockquote>\n<p>祖宗用来布局</p>\n<p>爷爷用来存全局数据(提供修改变量的方法，但是不接收任何用户拖拽操作))，（相当于处理中心，暴露修改数据的方法)</p>\n<p>爹(center)用来获取数据，发数据(相当于数据管道，不渲染组件)</p>\n<p>大儿子(盒子)获取数据，发给孙子数据(既当管道，也当渲染器)</p>\n<p>儿子(物料)读数据(只渲染)</p>\n<p>大孙子(盒子)获取数据，发数据给重孙(既当管道，也当渲染器)</p>\n<p>孙子(物料)读数据(只渲染)</p>\n</blockquote>\n<h2 id=\"用户操作层面\"><a href=\"#用户操作层面\" class=\"headerlink\" title=\"用户操作层面\"></a>用户操作层面</h2><blockquote>\n<p>爷爷只接收一个点击操作用来显示蓝色蒙版</p>\n<p>爹接收dragenter让大儿子高亮</p>\n<p>大儿子(盒子)接收click用于高亮，drop接收组件</p>\n<p>儿子(物料)click选中，dragstart获取当前选中的组件view</p>\n<p>大孙子(盒子)获取click选中，dragstart获取当前选中的组件view，drop接收组件</p>\n<p>孙子(物料)click选中，dragstart获取当前选中的组件view</p>\n</blockquote>\n<blockquote>\n<p>数据修改都源于用户操作，可以发现越往下接收的用户操作越多，但是由于权限越来越低，所以只能将数据交给爷爷处理，越往上级写操作越多，越往下级读操作，激发自定义事件操作越多</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前情提要\"><a href=\"#前情提要\" class=\"headerlink\" title=\"前情提要\"></a>前情提要</h2><ul>\n<li>每个flexbox干两件事，一件是布局，另一件是当画布</li>\n<li>除了flex的其余组件只干一件事，在画布上画画</li>\n<li>PowerfulDynamicDraw和DynamicDraw的区别：PowerfulDynamicDraw能渲染flexbox和和普通组件，DynamicDraw只能渲染普通组件</li>\n<li></li>\n</ul>\n<h2 id=\"核心架构\"><a href=\"#核心架构\" class=\"headerlink\" title=\"核心架构\"></a>核心架构</h2><p>祖宗：main用于布局</p>\n<p>爷：center用于存放核心数据，并提供修改数据的方法(methods或者自定义事件)</p>\n<p>父：PowerfulDynamicDraw多个大画布和多个基础组件组件，但只接收center传过来的数据，和监听用户操作，需要修改数据通通交给center处理</p>\n<p>大儿子：FlexBox组件，一个大画布和多个基础组件，有一个小画布DynamicDraw</p>\n<p>子：渲染一个基础组件，没事就接收用户的操作然后给爷爷发个事件让他处理</p>\n<p>大孙子：小画布本体，有多个基础组件</p>\n<p>孙：小画布中的多个基础组件中的一个</p>\n<h2 id=\"数据层面\"><a href=\"#数据层面\" class=\"headerlink\" title=\"数据层面\"></a>数据层面</h2><blockquote>\n<p>祖宗用来布局</p>\n<p>爷爷用来存全局数据(提供修改变量的方法，但是不接收任何用户拖拽操作))，（相当于处理中心，暴露修改数据的方法)</p>\n<p>爹(center)用来获取数据，发数据(相当于数据管道，不渲染组件)</p>\n<p>大儿子(盒子)获取数据，发给孙子数据(既当管道，也当渲染器)</p>\n<p>儿子(物料)读数据(只渲染)</p>\n<p>大孙子(盒子)获取数据，发数据给重孙(既当管道，也当渲染器)</p>\n<p>孙子(物料)读数据(只渲染)</p>\n</blockquote>\n<h2 id=\"用户操作层面\"><a href=\"#用户操作层面\" class=\"headerlink\" title=\"用户操作层面\"></a>用户操作层面</h2><blockquote>\n<p>爷爷只接收一个点击操作用来显示蓝色蒙版</p>\n<p>爹接收dragenter让大儿子高亮</p>\n<p>大儿子(盒子)接收click用于高亮，drop接收组件</p>\n<p>儿子(物料)click选中，dragstart获取当前选中的组件view</p>\n<p>大孙子(盒子)获取click选中，dragstart获取当前选中的组件view，drop接收组件</p>\n<p>孙子(物料)click选中，dragstart获取当前选中的组件view</p>\n</blockquote>\n<blockquote>\n<p>数据修改都源于用户操作，可以发现越往下接收的用户操作越多，但是由于权限越来越低，所以只能将数据交给爷爷处理，越往上级写操作越多，越往下级读操作，激发自定义事件操作越多</p>\n</blockquote>\n"},{"title":"对低代码的思考","date":"2022-10-15T02:06:51.000Z","_content":"\n## 常规低代码平台存在的问题\n\n## 一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\n\n## 二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\n\n## 于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\n\n## 该低代码平台能提升开发者效率的原因\n\n1. 开发者在还原网页时，每次写好相关的网页样式之后，都需要保存，编译之后切换到浏览器，出现问题了则打开控制台调试，这占据了大部分开发的时间\n2. 我们开发的工具，所见即所得，选项式修改样式，为开发者省去了调试和敲代码的时间\n\n下面是我们网页的还原的案例\n\nhttp://lc.gql.fit/example/one\n\n我们的演示视频里是38分41秒大体还原该网页，并且由于刚开发完还不熟练，如果熟练之后，再加上复制功能，还能加快数几分钟时间\n\n## 我们网页的主要架构图\n\n---\n\n## 主要功能实现\n\n## 1. 渲染器实现\n\n- 首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据\n- 组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的text，button，img，link，video组件\n- FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component\n\n## 2. 递归操作dom生成html和vue文件\n\n- 首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法\n\n  ```javascript\n  let FlexBoxHtml = `<div><div>`\n  let LinkHtml = `<div class=\"link\"><a></a></div>`\n  let TextHtml = `<div><p></p><div>`\n  let ButtonHtml = `<div class=\"button-com\"><button></button></div>`\n  let ImgHtml = `<div class=\"card\"><img fit=\"cover\"></img></div>`\n  ```\n\n  ```javascript\n  function strToDom(str){\n      var temp = document.createElement('div')\n      temp.innerHTML = str\n      return temp.childNodes\n  }\n\n  function domToStr( node ) {  \n      var tmpNode = document.createElement( \"div\" );  \n      tmpNode.appendChild( node.cloneNode( true ) );  \n      var str = tmpNode.innerHTML;  \n      tmpNode = node = null; // prevent memory leaks in IE  \n      return str;  \n   }  \n  ```\n- 导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法\n\n  ```javascript\n  let styleStr ;\n  let bodyRes ;\n  let baseName = 'block',baseIndex = 1\n\n  export function exportHtmlHandle(views,isVue){\n      baseIndex = 1\n      styleStr = ''\n      bodyRes = document.createElement('div')\n      bodyRes.classList.add('canvas')\n      for(let i = 0 ; i < views.length ; i++){\n          bodyRes.appendChild(getHtmlRes(views[i]))\n      }\n      // 根据最后的dom转换成最终文件对象,返回对象并生成文件\n      let res = jsonToHtml['getMainStr'](bodyRes,styleStr,isVue);\n      let blob = new Blob([res],{type:''})\n      let fileName = isVue ? 'page.vue' : 'page.html'\n      FileSaver.saveAs(blob, fileName)\n  }\n  ```\n- 该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom\n\n  ```javascript\n  function getHtmlRes(view){\n      // 遍历views数组\n      let tempDom = jsonToHtml[view.component](view, baseIndex )\n      let childDom = tempDom.cloneNode(true)\n      let tempStr = styleToStr(view.style)\n\n      styleStr += `\n          ${\".\" + baseName +\"-\" + baseIndex++}{\n          ${tempStr}\n      }` \n      if(view.component != 'FlexBox'){\n          let sonStr = styleToStr(view[view.sonStyle])\n          styleStr += `\n              ${\".\" + baseName +\"-\" + baseIndex++}{\n              ${sonStr}\n          }` \n      }\n\n      if(view.children){\n          for(let i = 0; i < view.children.length; i++){\n              childDom.appendChild(getHtmlRes(view.children[i]))\n          }\n      }\n      return childDom\n  }\n\n  ```\n- 那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串\n- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出\n\n  ```javascript\n  // 根据最后的dom转换成最终文件对象,返回对象并生成文件\n  let res = jsonToHtml['getMainStr'](bodyRes,styleStr,isVue);\n  let blob = new Blob([res],{type:''})\n  let fileName = isVue ? 'page.vue' : 'page.html'\n  FileSaver.saveAs(blob, fileName)\n  ```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/答辩稿子.md186861.0243026.png)\n\nhttp://lc.gql.fit/example/one\n\nBAT man队伍项目的demo链接 [http://lc.gql.fit/example/one\n\n](http://lc.gql.fit/example/one)\n\n\n1. 我们平台主要由四部分组成，左侧物料区，中心数据区和渲染器，右侧属性修改区\n2. 用户将物料区的组件拖拽到中心区域，对提前准备好的数据模版进行深拷贝之后将拷贝后的结果放进数据区，配合中心的弹性盒子，最终会形成树形结构的数据\n3. 中心渲染器接收到数据之后会对数据进行遍历，如果有子节点就将数据送到递归渲染器，没有子节点就将数据送到组件渲染器\n4. 最终渲染器会生成网页视图，同时会接收用户的点击与拖拽事件向右侧发送当前被选中的组件数据\n5. 用户可在右侧修改组件属性，修改的同时会将结果反馈到中心视图\n\n\n\nDom模版：对应每个组件的html代码\n\n数据解析：接收views数据并将数组中的对象传入递归生成dom的方法\n\n方法概述：递归过程中为dom模版添加类名和属性，同时通过正则表达式将style对象转换为浏览器支持的格式\n\nDom转换：将递归生成的dom转换为字符串，并利用FileSaver将其以文件导出\n\n\n\n## 问题：\n\n1. 你们平台的优势\n   像素级别还原网页，节省了一个正常开发者还原网页时的繁琐的保存，调试的时间，并且这个网页和正常平台最大的不同就是渲染器支持递归的，也就是说他可以生成无限层级，这是符合一个网页的结构的\n2. 无限深度怎么做的\n   我会\n3. 渲染器怎么做的\n   我会\n4. 修改属性怎么做的\n   我会\n5. 生成html怎么做的\n   我会\n6. 动态渲染怎么做的\n   我会\n7. 树形查找和删除怎么做的和优化的\n   原来是用的常规的树形查找，后来优化是用的相对寻址，就是我们在全局数据保存当前被选中的数组和索引，这样就不用树形递归查找了，直接根据两个变量数组和索引就能完成了\n8. 没有事件：我们专注于发挥该编辑器还原一个网页的功能，当然要添加事件也是可以的\n\n我要演示这几个\n\n1. 首先我们可以点开演示的网址\n2. 无限层级\n3. 响应式的\n\nBAT man 队伍项目网址 http://lc.gql.fit\n\ndemo链接 http://lc.gql.fit/example/one\n","source":"_posts/学校/准大三暑假/青训营/答辩/答辩稿子.md","raw":"---\ntitle: '对低代码的思考'\ndate: 2022-10-15 10:06:51\ntags: \n    - 青训营\n    - 基础\n    - 低代码\ncategories: 前端\n---\n\n## 常规低代码平台存在的问题\n\n## 一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\n\n## 二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\n\n## 于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\n\n## 该低代码平台能提升开发者效率的原因\n\n1. 开发者在还原网页时，每次写好相关的网页样式之后，都需要保存，编译之后切换到浏览器，出现问题了则打开控制台调试，这占据了大部分开发的时间\n2. 我们开发的工具，所见即所得，选项式修改样式，为开发者省去了调试和敲代码的时间\n\n下面是我们网页的还原的案例\n\nhttp://lc.gql.fit/example/one\n\n我们的演示视频里是38分41秒大体还原该网页，并且由于刚开发完还不熟练，如果熟练之后，再加上复制功能，还能加快数几分钟时间\n\n## 我们网页的主要架构图\n\n---\n\n## 主要功能实现\n\n## 1. 渲染器实现\n\n- 首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据\n- 组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的text，button，img，link，video组件\n- FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component\n\n## 2. 递归操作dom生成html和vue文件\n\n- 首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法\n\n  ```javascript\n  let FlexBoxHtml = `<div><div>`\n  let LinkHtml = `<div class=\"link\"><a></a></div>`\n  let TextHtml = `<div><p></p><div>`\n  let ButtonHtml = `<div class=\"button-com\"><button></button></div>`\n  let ImgHtml = `<div class=\"card\"><img fit=\"cover\"></img></div>`\n  ```\n\n  ```javascript\n  function strToDom(str){\n      var temp = document.createElement('div')\n      temp.innerHTML = str\n      return temp.childNodes\n  }\n\n  function domToStr( node ) {  \n      var tmpNode = document.createElement( \"div\" );  \n      tmpNode.appendChild( node.cloneNode( true ) );  \n      var str = tmpNode.innerHTML;  \n      tmpNode = node = null; // prevent memory leaks in IE  \n      return str;  \n   }  \n  ```\n- 导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法\n\n  ```javascript\n  let styleStr ;\n  let bodyRes ;\n  let baseName = 'block',baseIndex = 1\n\n  export function exportHtmlHandle(views,isVue){\n      baseIndex = 1\n      styleStr = ''\n      bodyRes = document.createElement('div')\n      bodyRes.classList.add('canvas')\n      for(let i = 0 ; i < views.length ; i++){\n          bodyRes.appendChild(getHtmlRes(views[i]))\n      }\n      // 根据最后的dom转换成最终文件对象,返回对象并生成文件\n      let res = jsonToHtml['getMainStr'](bodyRes,styleStr,isVue);\n      let blob = new Blob([res],{type:''})\n      let fileName = isVue ? 'page.vue' : 'page.html'\n      FileSaver.saveAs(blob, fileName)\n  }\n  ```\n- 该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom\n\n  ```javascript\n  function getHtmlRes(view){\n      // 遍历views数组\n      let tempDom = jsonToHtml[view.component](view, baseIndex )\n      let childDom = tempDom.cloneNode(true)\n      let tempStr = styleToStr(view.style)\n\n      styleStr += `\n          ${\".\" + baseName +\"-\" + baseIndex++}{\n          ${tempStr}\n      }` \n      if(view.component != 'FlexBox'){\n          let sonStr = styleToStr(view[view.sonStyle])\n          styleStr += `\n              ${\".\" + baseName +\"-\" + baseIndex++}{\n              ${sonStr}\n          }` \n      }\n\n      if(view.children){\n          for(let i = 0; i < view.children.length; i++){\n              childDom.appendChild(getHtmlRes(view.children[i]))\n          }\n      }\n      return childDom\n  }\n\n  ```\n- 那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串\n- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出\n\n  ```javascript\n  // 根据最后的dom转换成最终文件对象,返回对象并生成文件\n  let res = jsonToHtml['getMainStr'](bodyRes,styleStr,isVue);\n  let blob = new Blob([res],{type:''})\n  let fileName = isVue ? 'page.vue' : 'page.html'\n  FileSaver.saveAs(blob, fileName)\n  ```\n\n![](file://C:\\Personal\\Documents/IkMarkdown/.assets/答辩稿子.md186861.0243026.png)\n\nhttp://lc.gql.fit/example/one\n\nBAT man队伍项目的demo链接 [http://lc.gql.fit/example/one\n\n](http://lc.gql.fit/example/one)\n\n\n1. 我们平台主要由四部分组成，左侧物料区，中心数据区和渲染器，右侧属性修改区\n2. 用户将物料区的组件拖拽到中心区域，对提前准备好的数据模版进行深拷贝之后将拷贝后的结果放进数据区，配合中心的弹性盒子，最终会形成树形结构的数据\n3. 中心渲染器接收到数据之后会对数据进行遍历，如果有子节点就将数据送到递归渲染器，没有子节点就将数据送到组件渲染器\n4. 最终渲染器会生成网页视图，同时会接收用户的点击与拖拽事件向右侧发送当前被选中的组件数据\n5. 用户可在右侧修改组件属性，修改的同时会将结果反馈到中心视图\n\n\n\nDom模版：对应每个组件的html代码\n\n数据解析：接收views数据并将数组中的对象传入递归生成dom的方法\n\n方法概述：递归过程中为dom模版添加类名和属性，同时通过正则表达式将style对象转换为浏览器支持的格式\n\nDom转换：将递归生成的dom转换为字符串，并利用FileSaver将其以文件导出\n\n\n\n## 问题：\n\n1. 你们平台的优势\n   像素级别还原网页，节省了一个正常开发者还原网页时的繁琐的保存，调试的时间，并且这个网页和正常平台最大的不同就是渲染器支持递归的，也就是说他可以生成无限层级，这是符合一个网页的结构的\n2. 无限深度怎么做的\n   我会\n3. 渲染器怎么做的\n   我会\n4. 修改属性怎么做的\n   我会\n5. 生成html怎么做的\n   我会\n6. 动态渲染怎么做的\n   我会\n7. 树形查找和删除怎么做的和优化的\n   原来是用的常规的树形查找，后来优化是用的相对寻址，就是我们在全局数据保存当前被选中的数组和索引，这样就不用树形递归查找了，直接根据两个变量数组和索引就能完成了\n8. 没有事件：我们专注于发挥该编辑器还原一个网页的功能，当然要添加事件也是可以的\n\n我要演示这几个\n\n1. 首先我们可以点开演示的网址\n2. 无限层级\n3. 响应式的\n\nBAT man 队伍项目网址 http://lc.gql.fit\n\ndemo链接 http://lc.gql.fit/example/one\n","slug":"学校/准大三暑假/青训营/答辩/答辩稿子","published":1,"updated":"2023-03-21T09:45:42.150Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9800a6o8hue6qs11jh","content":"<h2 id=\"常规低代码平台存在的问题\"><a href=\"#常规低代码平台存在的问题\" class=\"headerlink\" title=\"常规低代码平台存在的问题\"></a>常规低代码平台存在的问题</h2><h2 id=\"一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\"><a href=\"#一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\" class=\"headerlink\" title=\"一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\"></a>一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰</h2><h2 id=\"二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\"><a href=\"#二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\" class=\"headerlink\" title=\"二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\"></a>二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用</h2><h2 id=\"于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\"><a href=\"#于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\" class=\"headerlink\" title=\"于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\"></a>于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发</h2><h2 id=\"该低代码平台能提升开发者效率的原因\"><a href=\"#该低代码平台能提升开发者效率的原因\" class=\"headerlink\" title=\"该低代码平台能提升开发者效率的原因\"></a>该低代码平台能提升开发者效率的原因</h2><ol>\n<li>开发者在还原网页时，每次写好相关的网页样式之后，都需要保存，编译之后切换到浏览器，出现问题了则打开控制台调试，这占据了大部分开发的时间</li>\n<li>我们开发的工具，所见即所得，选项式修改样式，为开发者省去了调试和敲代码的时间</li>\n</ol>\n<p>下面是我们网页的还原的案例</p>\n<p><a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>我们的演示视频里是38分41秒大体还原该网页，并且由于刚开发完还不熟练，如果熟练之后，再加上复制功能，还能加快数几分钟时间</p>\n<h2 id=\"我们网页的主要架构图\"><a href=\"#我们网页的主要架构图\" class=\"headerlink\" title=\"我们网页的主要架构图\"></a>我们网页的主要架构图</h2><hr>\n<h2 id=\"主要功能实现\"><a href=\"#主要功能实现\" class=\"headerlink\" title=\"主要功能实现\"></a>主要功能实现</h2><h2 id=\"1-渲染器实现\"><a href=\"#1-渲染器实现\" class=\"headerlink\" title=\"1. 渲染器实现\"></a>1. 渲染器实现</h2><ul>\n<li>首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据</li>\n<li>组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的text，button，img，link，video组件</li>\n<li>FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component</li>\n</ul>\n<h2 id=\"2-递归操作dom生成html和vue文件\"><a href=\"#2-递归操作dom生成html和vue文件\" class=\"headerlink\" title=\"2. 递归操作dom生成html和vue文件\"></a>2. 递归操作dom生成html和vue文件</h2><ul>\n<li><p>首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">FlexBoxHtml</span> = <span class=\"string\">`&lt;div&gt;&lt;div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">LinkHtml</span> = <span class=\"string\">`&lt;div class=&quot;link&quot;&gt;&lt;a&gt;&lt;/a&gt;&lt;/div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">TextHtml</span> = <span class=\"string\">`&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">ButtonHtml</span> = <span class=\"string\">`&lt;div class=&quot;button-com&quot;&gt;&lt;button&gt;&lt;/button&gt;&lt;/div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">ImgHtml</span> = <span class=\"string\">`&lt;div class=&quot;card&quot;&gt;&lt;img fit=&quot;cover&quot;&gt;&lt;/img&gt;&lt;/div&gt;`</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">strToDom</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span><br><span class=\"line\">    temp.<span class=\"property\">innerHTML</span> = str</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp.<span class=\"property\">childNodes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">domToStr</span>(<span class=\"params\"> node </span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmpNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>( <span class=\"string\">&quot;div&quot;</span> );  </span><br><span class=\"line\">    tmpNode.<span class=\"title function_\">appendChild</span>( node.<span class=\"title function_\">cloneNode</span>( <span class=\"literal\">true</span> ) );  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = tmpNode.<span class=\"property\">innerHTML</span>;  </span><br><span class=\"line\">    tmpNode = node = <span class=\"literal\">null</span>; <span class=\"comment\">// prevent memory leaks in IE  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;  </span><br><span class=\"line\"> &#125;  </span><br></pre></td></tr></table></figure></li>\n<li><p>导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> styleStr ;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bodyRes ;</span><br><span class=\"line\"><span class=\"keyword\">let</span> baseName = <span class=\"string\">&#x27;block&#x27;</span>,baseIndex = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportHtmlHandle</span>(<span class=\"params\">views,isVue</span>)&#123;</span><br><span class=\"line\">    baseIndex = <span class=\"number\">1</span></span><br><span class=\"line\">    styleStr = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    bodyRes = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span><br><span class=\"line\">    bodyRes.<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&#x27;canvas&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span> ; i &lt; views.<span class=\"property\">length</span> ; i++)&#123;</span><br><span class=\"line\">        bodyRes.<span class=\"title function_\">appendChild</span>(<span class=\"title function_\">getHtmlRes</span>(views[i]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 根据最后的dom转换成最终文件对象,返回对象并生成文件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = jsonToHtml[<span class=\"string\">&#x27;getMainStr&#x27;</span>](bodyRes,styleStr,isVue);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;&#x27;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fileName = isVue ? <span class=\"string\">&#x27;page.vue&#x27;</span> : <span class=\"string\">&#x27;page.html&#x27;</span></span><br><span class=\"line\">    <span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(blob, fileName)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getHtmlRes</span>(<span class=\"params\">view</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历views数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tempDom = jsonToHtml[view.<span class=\"property\">component</span>](view, baseIndex )</span><br><span class=\"line\">    <span class=\"keyword\">let</span> childDom = tempDom.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tempStr = <span class=\"title function_\">styleToStr</span>(view.<span class=\"property\">style</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    styleStr += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;<span class=\"string\">&quot;.&quot;</span> + baseName +<span class=\"string\">&quot;-&quot;</span> + baseIndex++&#125;</span>&#123;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;tempStr&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &#125;`</span> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(view.<span class=\"property\">component</span> != <span class=\"string\">&#x27;FlexBox&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sonStr = <span class=\"title function_\">styleToStr</span>(view[view.<span class=\"property\">sonStyle</span>])</span><br><span class=\"line\">        styleStr += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">            <span class=\"subst\">$&#123;<span class=\"string\">&quot;.&quot;</span> + baseName +<span class=\"string\">&quot;-&quot;</span> + baseIndex++&#125;</span>&#123;</span></span><br><span class=\"line\"><span class=\"string\">            <span class=\"subst\">$&#123;sonStr&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &#125;`</span> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(view.<span class=\"property\">children</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; view.<span class=\"property\">children</span>.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            childDom.<span class=\"title function_\">appendChild</span>(<span class=\"title function_\">getHtmlRes</span>(view.<span class=\"property\">children</span>[i]))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> childDom</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串</p>\n</li>\n<li><p>最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据最后的dom转换成最终文件对象,返回对象并生成文件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = jsonToHtml[<span class=\"string\">&#x27;getMainStr&#x27;</span>](bodyRes,styleStr,isVue);</span><br><span class=\"line\"><span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">let</span> fileName = isVue ? <span class=\"string\">&#x27;page.vue&#x27;</span> : <span class=\"string\">&#x27;page.html&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(blob, fileName)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/答辩稿子.md186861.0243026.png\"></p>\n<p><a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>BAT man队伍项目的demo链接 [<a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>](<a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a>)</p>\n<ol>\n<li>我们平台主要由四部分组成，左侧物料区，中心数据区和渲染器，右侧属性修改区</li>\n<li>用户将物料区的组件拖拽到中心区域，对提前准备好的数据模版进行深拷贝之后将拷贝后的结果放进数据区，配合中心的弹性盒子，最终会形成树形结构的数据</li>\n<li>中心渲染器接收到数据之后会对数据进行遍历，如果有子节点就将数据送到递归渲染器，没有子节点就将数据送到组件渲染器</li>\n<li>最终渲染器会生成网页视图，同时会接收用户的点击与拖拽事件向右侧发送当前被选中的组件数据</li>\n<li>用户可在右侧修改组件属性，修改的同时会将结果反馈到中心视图</li>\n</ol>\n<p>Dom模版：对应每个组件的html代码</p>\n<p>数据解析：接收views数据并将数组中的对象传入递归生成dom的方法</p>\n<p>方法概述：递归过程中为dom模版添加类名和属性，同时通过正则表达式将style对象转换为浏览器支持的格式</p>\n<p>Dom转换：将递归生成的dom转换为字符串，并利用FileSaver将其以文件导出</p>\n<h2 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h2><ol>\n<li>你们平台的优势<br>像素级别还原网页，节省了一个正常开发者还原网页时的繁琐的保存，调试的时间，并且这个网页和正常平台最大的不同就是渲染器支持递归的，也就是说他可以生成无限层级，这是符合一个网页的结构的</li>\n<li>无限深度怎么做的<br>我会</li>\n<li>渲染器怎么做的<br>我会</li>\n<li>修改属性怎么做的<br>我会</li>\n<li>生成html怎么做的<br>我会</li>\n<li>动态渲染怎么做的<br>我会</li>\n<li>树形查找和删除怎么做的和优化的<br>原来是用的常规的树形查找，后来优化是用的相对寻址，就是我们在全局数据保存当前被选中的数组和索引，这样就不用树形递归查找了，直接根据两个变量数组和索引就能完成了</li>\n<li>没有事件：我们专注于发挥该编辑器还原一个网页的功能，当然要添加事件也是可以的</li>\n</ol>\n<p>我要演示这几个</p>\n<ol>\n<li>首先我们可以点开演示的网址</li>\n<li>无限层级</li>\n<li>响应式的</li>\n</ol>\n<p>BAT man 队伍项目网址 <a href=\"http://lc.gql.fit/\">http://lc.gql.fit</a></p>\n<p>demo链接 <a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常规低代码平台存在的问题\"><a href=\"#常规低代码平台存在的问题\" class=\"headerlink\" title=\"常规低代码平台存在的问题\"></a>常规低代码平台存在的问题</h2><h2 id=\"一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\"><a href=\"#一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\" class=\"headerlink\" title=\"一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰\"></a>一、面向丝毫不懂开发的人：这些人很难仅通过拖拽和少量代码完全实现自己想要的app的效果，并且最终实现app之后也很难维护，如果app有要修改的东西，那么将举步维艰</h2><h2 id=\"二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\"><a href=\"#二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\" class=\"headerlink\" title=\"二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用\"></a>二、还原网页能力差，一些低代码平台仅通过绝对定位的方式很难还原一个响应式的网页，而且提供的布局容器也不便使用</h2><h2 id=\"于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\"><a href=\"#于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\" class=\"headerlink\" title=\"于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发\"></a>于是我们出于为了让自己开发的低代码平台能真正投入使用，投入生产，提升开发效率，决定换个方向，面向那些懂得前端技术的开发者，帮助他们通过点击就可以还原大部分的常规复杂度的网页，大体还原完成后，导出html或者vue文件，以便进一步开发</h2><h2 id=\"该低代码平台能提升开发者效率的原因\"><a href=\"#该低代码平台能提升开发者效率的原因\" class=\"headerlink\" title=\"该低代码平台能提升开发者效率的原因\"></a>该低代码平台能提升开发者效率的原因</h2><ol>\n<li>开发者在还原网页时，每次写好相关的网页样式之后，都需要保存，编译之后切换到浏览器，出现问题了则打开控制台调试，这占据了大部分开发的时间</li>\n<li>我们开发的工具，所见即所得，选项式修改样式，为开发者省去了调试和敲代码的时间</li>\n</ol>\n<p>下面是我们网页的还原的案例</p>\n<p><a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>我们的演示视频里是38分41秒大体还原该网页，并且由于刚开发完还不熟练，如果熟练之后，再加上复制功能，还能加快数几分钟时间</p>\n<h2 id=\"我们网页的主要架构图\"><a href=\"#我们网页的主要架构图\" class=\"headerlink\" title=\"我们网页的主要架构图\"></a>我们网页的主要架构图</h2><hr>\n<h2 id=\"主要功能实现\"><a href=\"#主要功能实现\" class=\"headerlink\" title=\"主要功能实现\"></a>主要功能实现</h2><h2 id=\"1-渲染器实现\"><a href=\"#1-渲染器实现\" class=\"headerlink\" title=\"1. 渲染器实现\"></a>1. 渲染器实现</h2><ul>\n<li>首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据</li>\n<li>组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的text，button，img，link，video组件</li>\n<li>FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component</li>\n</ul>\n<h2 id=\"2-递归操作dom生成html和vue文件\"><a href=\"#2-递归操作dom生成html和vue文件\" class=\"headerlink\" title=\"2. 递归操作dom生成html和vue文件\"></a>2. 递归操作dom生成html和vue文件</h2><ul>\n<li><p>首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">FlexBoxHtml</span> = <span class=\"string\">`&lt;div&gt;&lt;div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">LinkHtml</span> = <span class=\"string\">`&lt;div class=&quot;link&quot;&gt;&lt;a&gt;&lt;/a&gt;&lt;/div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">TextHtml</span> = <span class=\"string\">`&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">ButtonHtml</span> = <span class=\"string\">`&lt;div class=&quot;button-com&quot;&gt;&lt;button&gt;&lt;/button&gt;&lt;/div&gt;`</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">ImgHtml</span> = <span class=\"string\">`&lt;div class=&quot;card&quot;&gt;&lt;img fit=&quot;cover&quot;&gt;&lt;/img&gt;&lt;/div&gt;`</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">strToDom</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span><br><span class=\"line\">    temp.<span class=\"property\">innerHTML</span> = str</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp.<span class=\"property\">childNodes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">domToStr</span>(<span class=\"params\"> node </span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmpNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>( <span class=\"string\">&quot;div&quot;</span> );  </span><br><span class=\"line\">    tmpNode.<span class=\"title function_\">appendChild</span>( node.<span class=\"title function_\">cloneNode</span>( <span class=\"literal\">true</span> ) );  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = tmpNode.<span class=\"property\">innerHTML</span>;  </span><br><span class=\"line\">    tmpNode = node = <span class=\"literal\">null</span>; <span class=\"comment\">// prevent memory leaks in IE  </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;  </span><br><span class=\"line\"> &#125;  </span><br></pre></td></tr></table></figure></li>\n<li><p>导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> styleStr ;</span><br><span class=\"line\"><span class=\"keyword\">let</span> bodyRes ;</span><br><span class=\"line\"><span class=\"keyword\">let</span> baseName = <span class=\"string\">&#x27;block&#x27;</span>,baseIndex = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">exportHtmlHandle</span>(<span class=\"params\">views,isVue</span>)&#123;</span><br><span class=\"line\">    baseIndex = <span class=\"number\">1</span></span><br><span class=\"line\">    styleStr = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    bodyRes = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>)</span><br><span class=\"line\">    bodyRes.<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&#x27;canvas&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span> ; i &lt; views.<span class=\"property\">length</span> ; i++)&#123;</span><br><span class=\"line\">        bodyRes.<span class=\"title function_\">appendChild</span>(<span class=\"title function_\">getHtmlRes</span>(views[i]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 根据最后的dom转换成最终文件对象,返回对象并生成文件</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = jsonToHtml[<span class=\"string\">&#x27;getMainStr&#x27;</span>](bodyRes,styleStr,isVue);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;&#x27;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fileName = isVue ? <span class=\"string\">&#x27;page.vue&#x27;</span> : <span class=\"string\">&#x27;page.html&#x27;</span></span><br><span class=\"line\">    <span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(blob, fileName)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getHtmlRes</span>(<span class=\"params\">view</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历views数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tempDom = jsonToHtml[view.<span class=\"property\">component</span>](view, baseIndex )</span><br><span class=\"line\">    <span class=\"keyword\">let</span> childDom = tempDom.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tempStr = <span class=\"title function_\">styleToStr</span>(view.<span class=\"property\">style</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    styleStr += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;<span class=\"string\">&quot;.&quot;</span> + baseName +<span class=\"string\">&quot;-&quot;</span> + baseIndex++&#125;</span>&#123;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;tempStr&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">    &#125;`</span> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(view.<span class=\"property\">component</span> != <span class=\"string\">&#x27;FlexBox&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sonStr = <span class=\"title function_\">styleToStr</span>(view[view.<span class=\"property\">sonStyle</span>])</span><br><span class=\"line\">        styleStr += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">            <span class=\"subst\">$&#123;<span class=\"string\">&quot;.&quot;</span> + baseName +<span class=\"string\">&quot;-&quot;</span> + baseIndex++&#125;</span>&#123;</span></span><br><span class=\"line\"><span class=\"string\">            <span class=\"subst\">$&#123;sonStr&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &#125;`</span> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(view.<span class=\"property\">children</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; view.<span class=\"property\">children</span>.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            childDom.<span class=\"title function_\">appendChild</span>(<span class=\"title function_\">getHtmlRes</span>(view.<span class=\"property\">children</span>[i]))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> childDom</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串</p>\n</li>\n<li><p>最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据最后的dom转换成最终文件对象,返回对象并生成文件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = jsonToHtml[<span class=\"string\">&#x27;getMainStr&#x27;</span>](bodyRes,styleStr,isVue);</span><br><span class=\"line\"><span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([res],&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">let</span> fileName = isVue ? <span class=\"string\">&#x27;page.vue&#x27;</span> : <span class=\"string\">&#x27;page.html&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">FileSaver</span>.<span class=\"title function_\">saveAs</span>(blob, fileName)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"file://C:\\Personal\\Documents/IkMarkdown/.assets/答辩稿子.md186861.0243026.png\"></p>\n<p><a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>BAT man队伍项目的demo链接 [<a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n<p>](<a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a>)</p>\n<ol>\n<li>我们平台主要由四部分组成，左侧物料区，中心数据区和渲染器，右侧属性修改区</li>\n<li>用户将物料区的组件拖拽到中心区域，对提前准备好的数据模版进行深拷贝之后将拷贝后的结果放进数据区，配合中心的弹性盒子，最终会形成树形结构的数据</li>\n<li>中心渲染器接收到数据之后会对数据进行遍历，如果有子节点就将数据送到递归渲染器，没有子节点就将数据送到组件渲染器</li>\n<li>最终渲染器会生成网页视图，同时会接收用户的点击与拖拽事件向右侧发送当前被选中的组件数据</li>\n<li>用户可在右侧修改组件属性，修改的同时会将结果反馈到中心视图</li>\n</ol>\n<p>Dom模版：对应每个组件的html代码</p>\n<p>数据解析：接收views数据并将数组中的对象传入递归生成dom的方法</p>\n<p>方法概述：递归过程中为dom模版添加类名和属性，同时通过正则表达式将style对象转换为浏览器支持的格式</p>\n<p>Dom转换：将递归生成的dom转换为字符串，并利用FileSaver将其以文件导出</p>\n<h2 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h2><ol>\n<li>你们平台的优势<br>像素级别还原网页，节省了一个正常开发者还原网页时的繁琐的保存，调试的时间，并且这个网页和正常平台最大的不同就是渲染器支持递归的，也就是说他可以生成无限层级，这是符合一个网页的结构的</li>\n<li>无限深度怎么做的<br>我会</li>\n<li>渲染器怎么做的<br>我会</li>\n<li>修改属性怎么做的<br>我会</li>\n<li>生成html怎么做的<br>我会</li>\n<li>动态渲染怎么做的<br>我会</li>\n<li>树形查找和删除怎么做的和优化的<br>原来是用的常规的树形查找，后来优化是用的相对寻址，就是我们在全局数据保存当前被选中的数组和索引，这样就不用树形递归查找了，直接根据两个变量数组和索引就能完成了</li>\n<li>没有事件：我们专注于发挥该编辑器还原一个网页的功能，当然要添加事件也是可以的</li>\n</ol>\n<p>我要演示这几个</p>\n<ol>\n<li>首先我们可以点开演示的网址</li>\n<li>无限层级</li>\n<li>响应式的</li>\n</ol>\n<p>BAT man 队伍项目网址 <a href=\"http://lc.gql.fit/\">http://lc.gql.fit</a></p>\n<p>demo链接 <a href=\"http://lc.gql.fit/example/one\">http://lc.gql.fit/example/one</a></p>\n"},{"title":"答辩亮点与难点","date":"2022-10-15T02:06:51.000Z","_content":"\n亮点1.布局灵活\n\n多种定位方式\n\n画布组件支持绝对定位/静态定位/弹性盒子布局定位\n\n弹性盒子深度无限\n\n弹性盒子采用树状数据结构，支持无限向下生成子盒子\n\n横向/纵向排布\n\n弹性盒子布局定位方式下，可设置弹性盒子的主轴，设置盒子内组件分布反向与分布方式\n\n导出文件格式多样\n\n支持一键网站发布/预览功能，支持html、vue以及json文件导出，便于开发人员进一步对系统进行丰富\n\n支持json文件导入\n\n开发人员通过json文件导入网页布局模板、复杂组件，或未完成的网页继续进行搭建。\n\n\n难点1.渲染器的实现\n\n渲染组件\n\n首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据\n\n递归遍历\n\n组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的物料组件\n\n遍历树渲染\n\nFlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component\n\n\n难点2.递归操作dom生成文件\n\n1.首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法\n\n2.导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法\n\n3.该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom\n\n4.那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出\n","source":"_posts/学校/准大三暑假/青训营/答辩/亮点与难点.md","raw":"---\ntitle: '答辩亮点与难点'\ndate: 2022-10-15 10:06:51\ntags: \n    - 青训营\n    - 基础\n    - 低代码\ncategories: 前端\n---\n\n亮点1.布局灵活\n\n多种定位方式\n\n画布组件支持绝对定位/静态定位/弹性盒子布局定位\n\n弹性盒子深度无限\n\n弹性盒子采用树状数据结构，支持无限向下生成子盒子\n\n横向/纵向排布\n\n弹性盒子布局定位方式下，可设置弹性盒子的主轴，设置盒子内组件分布反向与分布方式\n\n导出文件格式多样\n\n支持一键网站发布/预览功能，支持html、vue以及json文件导出，便于开发人员进一步对系统进行丰富\n\n支持json文件导入\n\n开发人员通过json文件导入网页布局模板、复杂组件，或未完成的网页继续进行搭建。\n\n\n难点1.渲染器的实现\n\n渲染组件\n\n首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据\n\n递归遍历\n\n组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的物料组件\n\n遍历树渲染\n\nFlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component\n\n\n难点2.递归操作dom生成文件\n\n1.首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法\n\n2.导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法\n\n3.该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom\n\n4.那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出\n","slug":"学校/准大三暑假/青训营/答辩/亮点与难点","published":1,"updated":"2023-03-21T09:45:20.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9900a9o8hucyhcc61p","content":"<p>亮点1.布局灵活</p>\n<p>多种定位方式</p>\n<p>画布组件支持绝对定位/静态定位/弹性盒子布局定位</p>\n<p>弹性盒子深度无限</p>\n<p>弹性盒子采用树状数据结构，支持无限向下生成子盒子</p>\n<p>横向/纵向排布</p>\n<p>弹性盒子布局定位方式下，可设置弹性盒子的主轴，设置盒子内组件分布反向与分布方式</p>\n<p>导出文件格式多样</p>\n<p>支持一键网站发布/预览功能，支持html、vue以及json文件导出，便于开发人员进一步对系统进行丰富</p>\n<p>支持json文件导入</p>\n<p>开发人员通过json文件导入网页布局模板、复杂组件，或未完成的网页继续进行搭建。</p>\n<p>难点1.渲染器的实现</p>\n<p>渲染组件</p>\n<p>首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据</p>\n<p>递归遍历</p>\n<p>组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的物料组件</p>\n<p>遍历树渲染</p>\n<p>FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component</p>\n<p>难点2.递归操作dom生成文件</p>\n<p>1.首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法</p>\n<p>2.导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法</p>\n<p>3.该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom</p>\n<p>4.那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出</p>\n","site":{"data":{}},"excerpt":"","more":"<p>亮点1.布局灵活</p>\n<p>多种定位方式</p>\n<p>画布组件支持绝对定位/静态定位/弹性盒子布局定位</p>\n<p>弹性盒子深度无限</p>\n<p>弹性盒子采用树状数据结构，支持无限向下生成子盒子</p>\n<p>横向/纵向排布</p>\n<p>弹性盒子布局定位方式下，可设置弹性盒子的主轴，设置盒子内组件分布反向与分布方式</p>\n<p>导出文件格式多样</p>\n<p>支持一键网站发布/预览功能，支持html、vue以及json文件导出，便于开发人员进一步对系统进行丰富</p>\n<p>支持json文件导入</p>\n<p>开发人员通过json文件导入网页布局模板、复杂组件，或未完成的网页继续进行搭建。</p>\n<p>难点1.渲染器的实现</p>\n<p>渲染组件</p>\n<p>首先一个大型组件PowerfulDynamicDraw，会接收用户点击之后生成的树形结构数据</p>\n<p>递归遍历</p>\n<p>组件对该结构进行遍历，如果遍历到包含子节点数组的数据则将数据发给递归FlexBox渲染器，其余发给具体的物料组件</p>\n<p>遍历树渲染</p>\n<p>FlexBox渲染器接收到数据之后利用数据中的style样式对自身进行渲染，同时递归调用自身的动态组件component</p>\n<p>难点2.递归操作dom生成文件</p>\n<p>1.首先提前准备好html模版和每个组件的字符串，并利用浏览器提供的appendChild和innerHtml的api，实现将字符串和dom相互转换的方法</p>\n<p>2.导出过程中exportHtml接收到一个views数组，数组中每个节点都是树形结构，遍历views数组图中将树形结构传入一个递归生成dom的方法</p>\n<p>3.该方法将数据中的style对象通过正则表达式还原成浏览器支持的格式同时根据数据中的component属性对应出提前准备好的字符串，再配合浏览器api将其转换为dom</p>\n<p>4.那么有了dom之后我们就可以为其动态的添加类名和属性，同时通过类名对应好生成的样式字符串- 最终生成html文件主要内容的dom字符串和样式字符串，我们利用模版字符串将其拼接到最后的html/vue文件模版，并利用FileSaver将文件导出</p>\n"},{"title":"title","date":"2022-10-15T02:06:51.000Z","_content":"\n## 编写自顶向下编程，先把架构搭建好，然后再展开\n\n## 写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\n\n## 规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\n\n## 没有规律就写死规律，用盒子上下左右硬撑\n\n## 外面的高度，宽度都确定了之后，才写内部，不然容易串行\n","source":"_posts/前端/进阶/大前端进阶/前端静态页面经验/编写经验.md","raw":"---\ntitle: 'title'\ndate: 2022-10-15 10:06:51\ntags: \ncategories: \n---\n\n## 编写自顶向下编程，先把架构搭建好，然后再展开\n\n## 写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\n\n## 规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\n\n## 没有规律就写死规律，用盒子上下左右硬撑\n\n## 外面的高度，宽度都确定了之后，才写内部，不然容易串行\n","slug":"前端/进阶/大前端进阶/前端静态页面经验/编写经验","published":1,"updated":"2023-03-21T09:15:22.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9a00ado8hufo6h0qi7","content":"<h2 id=\"编写自顶向下编程，先把架构搭建好，然后再展开\"><a href=\"#编写自顶向下编程，先把架构搭建好，然后再展开\" class=\"headerlink\" title=\"编写自顶向下编程，先把架构搭建好，然后再展开\"></a>编写自顶向下编程，先把架构搭建好，然后再展开</h2><h2 id=\"写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\"><a href=\"#写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\" class=\"headerlink\" title=\"写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\"></a>写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发</h2><h2 id=\"规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\"><a href=\"#规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\" class=\"headerlink\" title=\"规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\"></a>规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，</h2><h2 id=\"没有规律就写死规律，用盒子上下左右硬撑\"><a href=\"#没有规律就写死规律，用盒子上下左右硬撑\" class=\"headerlink\" title=\"没有规律就写死规律，用盒子上下左右硬撑\"></a>没有规律就写死规律，用盒子上下左右硬撑</h2><h2 id=\"外面的高度，宽度都确定了之后，才写内部，不然容易串行\"><a href=\"#外面的高度，宽度都确定了之后，才写内部，不然容易串行\" class=\"headerlink\" title=\"外面的高度，宽度都确定了之后，才写内部，不然容易串行\"></a>外面的高度，宽度都确定了之后，才写内部，不然容易串行</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"编写自顶向下编程，先把架构搭建好，然后再展开\"><a href=\"#编写自顶向下编程，先把架构搭建好，然后再展开\" class=\"headerlink\" title=\"编写自顶向下编程，先把架构搭建好，然后再展开\"></a>编写自顶向下编程，先把架构搭建好，然后再展开</h2><h2 id=\"写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\"><a href=\"#写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\" class=\"headerlink\" title=\"写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发\"></a>写页面先找架构，然后是规律，每个模块的规律，之后封装组件，然后自顶向下开发</h2><h2 id=\"规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\"><a href=\"#规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\" class=\"headerlink\" title=\"规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，\"></a>规律有哪些，一个架构的盒子位置，一个盒子的上下左右中间位置，</h2><h2 id=\"没有规律就写死规律，用盒子上下左右硬撑\"><a href=\"#没有规律就写死规律，用盒子上下左右硬撑\" class=\"headerlink\" title=\"没有规律就写死规律，用盒子上下左右硬撑\"></a>没有规律就写死规律，用盒子上下左右硬撑</h2><h2 id=\"外面的高度，宽度都确定了之后，才写内部，不然容易串行\"><a href=\"#外面的高度，宽度都确定了之后，才写内部，不然容易串行\" class=\"headerlink\" title=\"外面的高度，宽度都确定了之后，才写内部，不然容易串行\"></a>外面的高度，宽度都确定了之后，才写内部，不然容易串行</h2>"},{"title":"低代码待添加的功能","date":"2022-10-15T02:06:51.000Z","_content":"\n## 样式\n\n1. 左侧样式布局\n2. 中间和top的按钮修改调整\n3. 操作区调整\n\n## 画布\n\n1. 中间改为巨型画布，用户可拖拽，放大，缩小自己的画布\n2. 提供一个固定的按钮，点击即可切换到页面\n3. 支持辅助线，上下左右\n\n## 项目区\n\n1. 支持登陆\n2. 支持引流\n3. 支持同时新建和使用多个项目\n4. 导入后新建项目\n\n## 操作区\n\n1. 修改类名\n2. 添加类名\n3. 自主控制即将生成的盒子样式\n\n## 极简版本\n","source":"_posts/学校/准大三暑假/青训营/项目新功能/待添加的功能.md","raw":"---\ntitle: '低代码待添加的功能'\ndate: 2022-10-15 10:06:51\ntags: \n    - 青训营\n    - 基础\n    - 低代码\ncategories: 前端\n---\n\n## 样式\n\n1. 左侧样式布局\n2. 中间和top的按钮修改调整\n3. 操作区调整\n\n## 画布\n\n1. 中间改为巨型画布，用户可拖拽，放大，缩小自己的画布\n2. 提供一个固定的按钮，点击即可切换到页面\n3. 支持辅助线，上下左右\n\n## 项目区\n\n1. 支持登陆\n2. 支持引流\n3. 支持同时新建和使用多个项目\n4. 导入后新建项目\n\n## 操作区\n\n1. 修改类名\n2. 添加类名\n3. 自主控制即将生成的盒子样式\n\n## 极简版本\n","slug":"学校/准大三暑假/青训营/项目新功能/待添加的功能","published":1,"updated":"2023-03-21T09:46:14.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9b00ago8hu9z7edwee","content":"<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><ol>\n<li>左侧样式布局</li>\n<li>中间和top的按钮修改调整</li>\n<li>操作区调整</li>\n</ol>\n<h2 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h2><ol>\n<li>中间改为巨型画布，用户可拖拽，放大，缩小自己的画布</li>\n<li>提供一个固定的按钮，点击即可切换到页面</li>\n<li>支持辅助线，上下左右</li>\n</ol>\n<h2 id=\"项目区\"><a href=\"#项目区\" class=\"headerlink\" title=\"项目区\"></a>项目区</h2><ol>\n<li>支持登陆</li>\n<li>支持引流</li>\n<li>支持同时新建和使用多个项目</li>\n<li>导入后新建项目</li>\n</ol>\n<h2 id=\"操作区\"><a href=\"#操作区\" class=\"headerlink\" title=\"操作区\"></a>操作区</h2><ol>\n<li>修改类名</li>\n<li>添加类名</li>\n<li>自主控制即将生成的盒子样式</li>\n</ol>\n<h2 id=\"极简版本\"><a href=\"#极简版本\" class=\"headerlink\" title=\"极简版本\"></a>极简版本</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><ol>\n<li>左侧样式布局</li>\n<li>中间和top的按钮修改调整</li>\n<li>操作区调整</li>\n</ol>\n<h2 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h2><ol>\n<li>中间改为巨型画布，用户可拖拽，放大，缩小自己的画布</li>\n<li>提供一个固定的按钮，点击即可切换到页面</li>\n<li>支持辅助线，上下左右</li>\n</ol>\n<h2 id=\"项目区\"><a href=\"#项目区\" class=\"headerlink\" title=\"项目区\"></a>项目区</h2><ol>\n<li>支持登陆</li>\n<li>支持引流</li>\n<li>支持同时新建和使用多个项目</li>\n<li>导入后新建项目</li>\n</ol>\n<h2 id=\"操作区\"><a href=\"#操作区\" class=\"headerlink\" title=\"操作区\"></a>操作区</h2><ol>\n<li>修改类名</li>\n<li>添加类名</li>\n<li>自主控制即将生成的盒子样式</li>\n</ol>\n<h2 id=\"极简版本\"><a href=\"#极简版本\" class=\"headerlink\" title=\"极简版本\"></a>极简版本</h2>"},{"title":"刷题记录","date":"2022-10-15T02:06:51.000Z","_content":"\n## js 基础\n\nhttps://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358\n\n1. js 中取余运算会将字符串强制转为数字\n\nhttps://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543\n\n2. Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）\n\n* promise.then() 注册的回调 （promise task queue）\n\nNode 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。\n","source":"_posts/学校/面试复习/牛客刷题/新年第一天/第一天1_4.md","raw":"---\ntitle: '刷题记录'\ndate: 2022-10-15 10:06:51\ntags: \n    - 基础\ncategories: js\n---\n\n## js 基础\n\nhttps://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358\n\n1. js 中取余运算会将字符串强制转为数字\n\nhttps://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543\n\n2. Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）\n\n* promise.then() 注册的回调 （promise task queue）\n\nNode 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。\n","slug":"学校/面试复习/牛客刷题/新年第一天/第一天1_4","published":1,"updated":"2023-03-21T09:58:22.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfi3co9j00c2o8hu28baak38","content":"<h2 id=\"js-基础\"><a href=\"#js-基础\" class=\"headerlink\" title=\"js 基础\"></a>js 基础</h2><p><a href=\"https://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358\">https://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358</a></p>\n<ol>\n<li>js 中取余运算会将字符串强制转为数字</li>\n</ol>\n<p><a href=\"https://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543\">https://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543</a></p>\n<ol start=\"2\">\n<li>Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）</li>\n</ol>\n<ul>\n<li>promise.then() 注册的回调 （promise task queue）</li>\n</ul>\n<p>Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"js-基础\"><a href=\"#js-基础\" class=\"headerlink\" title=\"js 基础\"></a>js 基础</h2><p><a href=\"https://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358\">https://www.nowcoder.com/questionTerminal/905943ae163f408e9cd38d5d68afc358</a></p>\n<ol>\n<li>js 中取余运算会将字符串强制转为数字</li>\n</ol>\n<p><a href=\"https://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543\">https://www.nowcoder.com/questionTerminal/d4902e0e162e4befb1534f99bc9b4543</a></p>\n<ol start=\"2\">\n<li>Node 中的“微任务(microtasks)其实是一个统称，包含了两部分： *    process.nextTick() 注册的回调 （nextTick task queue）</li>\n</ol>\n<ul>\n<li>promise.then() 注册的回调 （promise task queue）</li>\n</ul>\n<p>Node 在执行微任务时， 会优先执行 nextTick task queue 中的任务，执行完之后会接着执行 promise task queue 中的任务。所以如果 process.nextTick 的回调与 promise.then 的回调都处于主线程或事件循环中的同一阶段， process.nextTick 的回调要优先于 promise.then 的回调执行。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clfi3co5x0008o8hu6tk6bpmr","category_id":"clfi3co5t0005o8hug18vc6j6","_id":"clfi3co62000go8hu6t7h6brh"},{"post_id":"clfi3co5n0003o8hu08akbmjf","category_id":"clfi3co5t0005o8hug18vc6j6","_id":"clfi3co64000ko8hu6k5z0om1"},{"post_id":"clfi3co5r0004o8hu2idsh31u","category_id":"clfi3co5z000ao8hu02vob86e","_id":"clfi3co66000no8hu3gvcgodi"},{"post_id":"clfi3co63000jo8hucx44635i","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6b000so8hu9lref9ca"},{"post_id":"clfi3co5w0007o8hufir45a15","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6d000xo8huagx6fn70"},{"post_id":"clfi3co64000mo8hu9vyvapqt","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6f0010o8hufj25egga"},{"post_id":"clfi3co68000qo8hu03j64nm9","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6g0015o8hu5c3ocg54"},{"post_id":"clfi3co5y0009o8hu75oldzfh","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6i0018o8hu2k1u6cc4"},{"post_id":"clfi3co6a000ro8hu54org5ns","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6j001co8hu375rahou"},{"post_id":"clfi3co6d000wo8hu6dv0axul","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6k001go8hu9vgr7dl3"},{"post_id":"clfi3co60000do8huhryc8m0i","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co6l001ko8hudbnkdyif"},{"post_id":"clfi3co6e000zo8hu3sg5br9r","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6m001no8hu7oaqe7b8"},{"post_id":"clfi3co6g0014o8hu5serby7z","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6n001ro8hu7mnt4894"},{"post_id":"clfi3co61000fo8hug5g06ce2","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6o001uo8hu2ceae2n6"},{"post_id":"clfi3co6i001bo8hua2xd9zsn","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co6p001xo8hu6wr2fxm8"},{"post_id":"clfi3co6k001fo8hu92y3h4nj","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co6p0020o8hubpdo76ek"},{"post_id":"clfi3co6h0017o8hu0os47gqr","category_id":"clfi3co6k001do8hu1q9og6w7","_id":"clfi3co6q0022o8huf786bxfv"},{"post_id":"clfi3co6m001mo8hu9ebga0no","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co6q0025o8hu54wa5l2x"},{"post_id":"clfi3co6l001jo8hugy4ffgwi","category_id":"clfi3co6m001oo8huafpu3uej","_id":"clfi3co6r0027o8hug2q5g7kl"},{"post_id":"clfi3co6n001qo8hu0yrr8yl6","category_id":"clfi3co6p001wo8hu15od4azx","_id":"clfi3co6r002ao8hu43zk4eip"},{"post_id":"clfi3co72002ro8huhs814yje","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co75002xo8hu25zsht21"},{"post_id":"clfi3co73002so8hugd7a9u9c","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co76002zo8hucvx3fp9k"},{"post_id":"clfi3co74002uo8hu9iwsaf09","category_id":"clfi3co5z000ao8hu02vob86e","_id":"clfi3co770033o8hu1rrbaf07"},{"post_id":"clfi3co75002wo8hufqx3fvmf","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co780036o8hu5b4j9ilf"},{"post_id":"clfi3co76002yo8hu45yyfpov","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co790039o8hu1bfkewcm"},{"post_id":"clfi3co770032o8hucpebch67","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co7a003do8hu0o24gzpo"},{"post_id":"clfi3co790038o8huctuwe8xf","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co7c003io8hu0eq03pwy"},{"post_id":"clfi3co770035o8hufwl58n0s","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7e003qo8hudulycj73"},{"post_id":"clfi3co7a003co8hue9lyfptw","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7g003wo8hu5j4vhhnz"},{"post_id":"clfi3co7d003oo8hu2uipbg1r","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7h0040o8hug5lggi95"},{"post_id":"clfi3co7b003fo8huhed41hxe","category_id":"clfi3co7e003po8huajyefi16","_id":"clfi3co7h0043o8hug4sr2isp"},{"post_id":"clfi3co7f003vo8hub7kqb1fx","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7i0047o8hu7g05089a"},{"post_id":"clfi3co7g003zo8hu3ipbgbi8","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7j004bo8hudb59ctt7"},{"post_id":"clfi3co7b003ho8hu47lra96o","category_id":"clfi3co7g003xo8hu3xoxhryi","_id":"clfi3co7l004fo8hu7qlgghz1"},{"post_id":"clfi3co7i0046o8huf0ue7gzs","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7o004lo8hudwmidzbw"},{"post_id":"clfi3co7c003mo8hud8awbskg","category_id":"clfi3co7g003xo8hu3xoxhryi","_id":"clfi3co7p004oo8hufw4revvj"},{"post_id":"clfi3co7j004ao8hu1cmo2ifi","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7r004ro8hubq60fhc4"},{"post_id":"clfi3co7k004eo8hugk37dduu","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7s004uo8hudqt78dfx"},{"post_id":"clfi3co7e003so8hufog070ik","category_id":"clfi3co7g003xo8hu3xoxhryi","_id":"clfi3co7u004yo8hu31nghj08"},{"post_id":"clfi3co7l004ho8hu2h3w6p9l","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co7v0051o8hu43llcc5k"},{"post_id":"clfi3co7n004ko8hug73m33p5","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7x0055o8hu7swb3ez1"},{"post_id":"clfi3co7o004mo8huhgf10tx5","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7y0058o8hu00qw7me8"},{"post_id":"clfi3co7q004po8hu7xb93jrq","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co7z005co8hugqam7xfl"},{"post_id":"clfi3co7r004so8hu4cr14wvq","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co80005fo8hu0s5h7wvq"},{"post_id":"clfi3co7t004wo8huhaoj8o7b","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co81005io8hu5z5dbi6w"},{"post_id":"clfi3co7u004zo8hu807zg00j","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co82005mo8huhqpf7b2x"},{"post_id":"clfi3co7w0053o8hu38l32e4l","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co82005po8hu2bnw2c2s"},{"post_id":"clfi3co7x0056o8hu0ylx2gyj","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co83005so8hu046sfswq"},{"post_id":"clfi3co7y005ao8hugc1z83ai","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co84005vo8hucr2f66se"},{"post_id":"clfi3co7z005do8hu8x7x84o6","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co85005yo8hu4kqn4lib"},{"post_id":"clfi3co80005go8hu5sqb5w2m","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co850061o8huerai5a5w"},{"post_id":"clfi3co81005ko8huhf3zbdzb","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co860064o8hu7a8n5782"},{"post_id":"clfi3co82005no8huectq9q5x","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co870067o8hu59rfckrb"},{"post_id":"clfi3co83005qo8huegi42w3p","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co87006ao8hu98uo4r1h"},{"post_id":"clfi3co83005to8hu83ercemh","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co88006eo8hu970k93oh"},{"post_id":"clfi3co84005wo8hucosrahrw","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co89006ho8hu3x9cdnee"},{"post_id":"clfi3co860065o8hu1zp8gz4b","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8a006ko8hua9jx9yor"},{"post_id":"clfi3co88006fo8hugvpdee9n","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8b006oo8hu2601b2x5"},{"post_id":"clfi3co89006io8hu0nc1an7x","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8c006so8huc7ee3gkm"},{"post_id":"clfi3co8a006lo8hu0l8u4ayu","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8d006vo8hu6jcj3gda"},{"post_id":"clfi3co8b006no8huf28r2e9s","category_id":"clfi3co5z000ao8hu02vob86e","_id":"clfi3co8e006zo8hu3hgk6okd"},{"post_id":"clfi3co8c006ro8hubyljacjq","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8f0072o8hu5r35hma5"},{"post_id":"clfi3co8d006uo8hudxel97vy","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co8f0075o8hu3zdlb081"},{"post_id":"clfi3co8d006xo8hucdyr91vw","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8g0079o8hu9631gk00"},{"post_id":"clfi3co8e0071o8hu902948hw","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8h007co8hu1e743t3g"},{"post_id":"clfi3co8f0074o8hu04r9e1rb","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8i007go8hucdd7fuol"},{"post_id":"clfi3co8g0078o8hu2jn1eyki","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8j007jo8hu7yvr7n0x"},{"post_id":"clfi3co8h007bo8hu2jdshaea","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8k007no8hufmd217vy"},{"post_id":"clfi3co8i007fo8hu553vabm8","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8l007ro8hucvvlg4jg"},{"post_id":"clfi3co8j007mo8hu6h5e5dtq","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co8m007xo8hucgsp5l9o"},{"post_id":"clfi3co8k007qo8hugylm733o","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co8n0081o8hu44be2vpm"},{"post_id":"clfi3co8l007uo8huh47k474e","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co8o0084o8huca0kgzus"},{"post_id":"clfi3co8i007io8hucq732pm3","category_id":"clfi3co8k007po8hu6rag7p41","_id":"clfi3co8p0088o8huay7xgtqy"},{"post_id":"clfi3co8m007wo8hu0iejbrhj","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co8q008bo8huhtnvh7np"},{"post_id":"clfi3co8n0080o8hue6zn6i0w","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co8r008eo8hugxxi8r1e"},{"post_id":"clfi3co8o0083o8hu9ng2dah5","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co8s008io8hu48s12c6i"},{"post_id":"clfi3co8p0087o8hudf5dhvkh","category_id":"clfi3co62000ho8hueb8cgy7o","_id":"clfi3co8t008mo8hue9px19au"},{"post_id":"clfi3co8q008ao8hufxae9sn5","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co8u008qo8huavks5sbs"},{"post_id":"clfi3co8t008po8hu9jdj65d4","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co8x008zo8huf41o8dvd"},{"post_id":"clfi3co8q008do8hub20j51y6","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co8y0094o8hu4mfv7smk"},{"post_id":"clfi3co8u008so8hua3vj74g1","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co8z0097o8hua815a9pm"},{"post_id":"clfi3co8v008wo8huakze3irw","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co90009ao8hu2wazdl8c"},{"post_id":"clfi3co8r008ho8hue1cdfb1b","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co91009eo8hu28uwcn3y"},{"post_id":"clfi3co8w008yo8hu1au8ea3f","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co92009io8hu8tvgg79e"},{"post_id":"clfi3co8x0093o8huhm5wdjvh","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co93009mo8hue0j02vre"},{"post_id":"clfi3co8s008lo8hud4jk1cxl","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co94009qo8huhnfofmxj"},{"post_id":"clfi3co8y0096o8hufd00bww9","category_id":"clfi3co8s008ko8hu3qtzceqc","_id":"clfi3co95009to8hu10lihksw"},{"post_id":"clfi3co92009lo8hu8to1edd0","category_id":"clfi3co91009go8hu1dxzfhlx","_id":"clfi3co96009xo8hu8f4bfwo2"},{"post_id":"clfi3co8z0099o8hu5qz1e3fw","category_id":"clfi3co91009go8hu1dxzfhlx","_id":"clfi3co9700a0o8hu25dabfz1"},{"post_id":"clfi3co93009oo8hu2c167jb0","category_id":"clfi3co91009go8hu1dxzfhlx","_id":"clfi3co9800a4o8hu1r5ahd4c"},{"post_id":"clfi3co94009so8hu4zx8787o","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9900a7o8hu618jbwmq"},{"post_id":"clfi3co90009do8huehp0gitq","category_id":"clfi3co91009go8hu1dxzfhlx","_id":"clfi3co9a00abo8huf8vdc5w8"},{"post_id":"clfi3co95009vo8hufff4a605","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9b00aeo8hu2orfgorx"},{"post_id":"clfi3co96009zo8hu2wxl3w92","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9f00aho8hud6xlewp9"},{"post_id":"clfi3co91009ho8hu4ei623sw","category_id":"clfi3co91009go8hu1dxzfhlx","_id":"clfi3co9g00ajo8hu1fslg522"},{"post_id":"clfi3co9700a3o8hubitecs23","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9g00alo8hudt5h2rdy"},{"post_id":"clfi3co9800a6o8hue6qs11jh","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9g00ano8hucosj5sae"},{"post_id":"clfi3co9900a9o8hucyhcc61p","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9g00apo8hu2g8uc6zp"},{"post_id":"clfi3co9b00ago8hu9z7edwee","category_id":"clfi3co6c000to8hu2d7qh6vf","_id":"clfi3co9g00aro8hu7r0w2sik"},{"post_id":"clfi3co9j00c2o8hu28baak38","category_id":"clfi3co79003ao8hu1l7o2bgi","_id":"clfi3co9k00c4o8hu0ppgfqpc"}],"PostTag":[{"post_id":"clfi3co5x0008o8hu6tk6bpmr","tag_id":"clfi3co5v0006o8hu6h187oxv","_id":"clfi3co60000co8huhgd8eagy"},{"post_id":"clfi3co5n0003o8hu08akbmjf","tag_id":"clfi3co5v0006o8hu6h187oxv","_id":"clfi3co61000eo8hu4lfj5e2v"},{"post_id":"clfi3co5r0004o8hu2idsh31u","tag_id":"clfi3co5z000bo8hugcmm3wgg","_id":"clfi3co64000lo8hu06lo7f2u"},{"post_id":"clfi3co68000qo8hu03j64nm9","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6c000uo8hu13ya3j54"},{"post_id":"clfi3co5w0007o8hufir45a15","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6e000yo8hu9rjh55fe"},{"post_id":"clfi3co5w0007o8hufir45a15","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6f0011o8hu3vghfkj0"},{"post_id":"clfi3co6a000ro8hu54org5ns","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6h0016o8hugxwy6e54"},{"post_id":"clfi3co6a000ro8hu54org5ns","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6i0019o8hu7poqdh92"},{"post_id":"clfi3co6e000zo8hu3sg5br9r","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6k001eo8hu7jhvhsad"},{"post_id":"clfi3co6e000zo8hu3sg5br9r","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6l001ho8hu63w12bzt"},{"post_id":"clfi3co6g0014o8hu5serby7z","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6m001lo8huahzy86ny"},{"post_id":"clfi3co6g0014o8hu5serby7z","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6n001po8hu1vraeo59"},{"post_id":"clfi3co5y0009o8hu75oldzfh","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6o001to8hu9z5rgw7c"},{"post_id":"clfi3co5y0009o8hu75oldzfh","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6p001vo8hu0bexbz2d"},{"post_id":"clfi3co6i001bo8hua2xd9zsn","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6p001zo8hu33e78e5d"},{"post_id":"clfi3co6i001bo8hua2xd9zsn","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6q0021o8huatg10wyw"},{"post_id":"clfi3co61000fo8hug5g06ce2","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6q0024o8hu3aku26ub"},{"post_id":"clfi3co61000fo8hug5g06ce2","tag_id":"clfi3co6l001io8hu2nkibfsw","_id":"clfi3co6r0026o8hu3wz18gug"},{"post_id":"clfi3co63000jo8hucx44635i","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6r0029o8huboqdat0y"},{"post_id":"clfi3co63000jo8hucx44635i","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6r002bo8huhf4l16dt"},{"post_id":"clfi3co64000mo8hu9vyvapqt","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co6r002do8huabp41uz6"},{"post_id":"clfi3co64000mo8hu9vyvapqt","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6s002eo8hu6lbh3urq"},{"post_id":"clfi3co6d000wo8hu6dv0axul","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co6s002go8huakla3adm"},{"post_id":"clfi3co6d000wo8hu6dv0axul","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co6s002ho8hu08pofnzr"},{"post_id":"clfi3co6k001fo8hu92y3h4nj","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co6s002io8hu0u3d7a2j"},{"post_id":"clfi3co6k001fo8hu92y3h4nj","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co6t002ko8hu8g6x5wop"},{"post_id":"clfi3co6l001jo8hugy4ffgwi","tag_id":"clfi3co6s002fo8hua1e80fex","_id":"clfi3co6t002lo8hub79b6qyh"},{"post_id":"clfi3co6m001mo8hu9ebga0no","tag_id":"clfi3co6s002jo8hu8v4md6ra","_id":"clfi3co6t002oo8hua7wm9wdz"},{"post_id":"clfi3co6m001mo8hu9ebga0no","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co6t002po8huhdrhcq69"},{"post_id":"clfi3co6n001qo8hu0yrr8yl6","tag_id":"clfi3co6t002no8hu9pl8f71f","_id":"clfi3co6t002qo8huelkf5f40"},{"post_id":"clfi3co73002so8hugd7a9u9c","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co75002vo8hue6v7697m"},{"post_id":"clfi3co75002wo8hufqx3fvmf","tag_id":"clfi3co73002to8hu4wczhgqg","_id":"clfi3co760031o8hu9lpm34va"},{"post_id":"clfi3co72002ro8huhs814yje","tag_id":"clfi3co73002to8hu4wczhgqg","_id":"clfi3co770034o8hu5hjfenrh"},{"post_id":"clfi3co76002yo8hu45yyfpov","tag_id":"clfi3co73002to8hu4wczhgqg","_id":"clfi3co780037o8hubt9z2nfp"},{"post_id":"clfi3co770032o8hucpebch67","tag_id":"clfi3co73002to8hu4wczhgqg","_id":"clfi3co7a003bo8huc5zo1osa"},{"post_id":"clfi3co74002uo8hu9iwsaf09","tag_id":"clfi3co760030o8hu58jm93ch","_id":"clfi3co7a003eo8hu814p3zi4"},{"post_id":"clfi3co770035o8hufwl58n0s","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7b003go8huegfhfmqh"},{"post_id":"clfi3co790038o8huctuwe8xf","tag_id":"clfi3co62000io8huc3bqdnay","_id":"clfi3co7c003lo8huelageytk"},{"post_id":"clfi3co790038o8huctuwe8xf","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co7d003no8hu1xccbjgo"},{"post_id":"clfi3co7a003co8hue9lyfptw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7e003ro8hu1lf471qu"},{"post_id":"clfi3co7b003ho8hu47lra96o","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7f003uo8hu32y90e9r"},{"post_id":"clfi3co7c003mo8hud8awbskg","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7g003yo8hudn7odo0u"},{"post_id":"clfi3co7b003fo8huhed41hxe","tag_id":"clfi3co7c003ko8hu5spd6c03","_id":"clfi3co7h0041o8hu8kkt470d"},{"post_id":"clfi3co7e003so8hufog070ik","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7i0045o8hudukchmvh"},{"post_id":"clfi3co7g003zo8hu3ipbgbi8","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7j0049o8hub3x534ys"},{"post_id":"clfi3co7d003oo8hu2uipbg1r","tag_id":"clfi3co7f003to8hua48petes","_id":"clfi3co7k004do8hu0jkp40bx"},{"post_id":"clfi3co7i0046o8huf0ue7gzs","tag_id":"clfi3co7f003to8hua48petes","_id":"clfi3co7l004go8huhyn4gc7d"},{"post_id":"clfi3co7o004mo8huhgf10tx5","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co7u004xo8hu5aszc8i4"},{"post_id":"clfi3co7o004mo8huhgf10tx5","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7v0050o8hufypr4laz"},{"post_id":"clfi3co7q004po8hu7xb93jrq","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co7x0054o8huc8z97569"},{"post_id":"clfi3co7q004po8hu7xb93jrq","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co7x0057o8hu3nuwb8lc"},{"post_id":"clfi3co7j004ao8hu1cmo2ifi","tag_id":"clfi3co7p004no8huahsm4oku","_id":"clfi3co7z005bo8hu5e7t36cl"},{"post_id":"clfi3co7r004so8hu4cr14wvq","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co7z005eo8hu8n75avg1"},{"post_id":"clfi3co7r004so8hu4cr14wvq","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co80005ho8hu7pvkeck7"},{"post_id":"clfi3co7t004wo8huhaoj8o7b","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co82005lo8hubmwhgo4w"},{"post_id":"clfi3co7t004wo8huhaoj8o7b","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co82005oo8hu69j064j2"},{"post_id":"clfi3co7k004eo8hugk37dduu","tag_id":"clfi3co7f003to8hua48petes","_id":"clfi3co83005ro8hu42gi6wd3"},{"post_id":"clfi3co7k004eo8hugk37dduu","tag_id":"clfi3co7m004io8hucu3ggeur","_id":"clfi3co84005uo8hudtyk2mg5"},{"post_id":"clfi3co7u004zo8hu807zg00j","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co84005xo8hu0yjc5ffq"},{"post_id":"clfi3co7u004zo8hu807zg00j","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co850060o8hu0iz1egb7"},{"post_id":"clfi3co7w0053o8hu38l32e4l","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co860063o8hueban9047"},{"post_id":"clfi3co7w0053o8hu38l32e4l","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co870066o8hug40y4jof"},{"post_id":"clfi3co7l004ho8hu2h3w6p9l","tag_id":"clfi3co7p004no8huahsm4oku","_id":"clfi3co870069o8hu9ci60p43"},{"post_id":"clfi3co7x0056o8hu0ylx2gyj","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co88006do8hug83186rx"},{"post_id":"clfi3co7x0056o8hu0ylx2gyj","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co89006go8hufwpmbcpc"},{"post_id":"clfi3co7y005ao8hugc1z83ai","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8a006jo8hu1u3leoui"},{"post_id":"clfi3co7y005ao8hugc1z83ai","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8b006mo8hu8p96hz2z"},{"post_id":"clfi3co7n004ko8hug73m33p5","tag_id":"clfi3co7y0059o8huhw1ed3ya","_id":"clfi3co8b006po8hu7msb9rcl"},{"post_id":"clfi3co80005go8hu5sqb5w2m","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8c006to8hu9ooq2ugx"},{"post_id":"clfi3co80005go8hu5sqb5w2m","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8d006wo8hub75z1y1x"},{"post_id":"clfi3co81005ko8huhf3zbdzb","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8e0070o8hu442hfl3h"},{"post_id":"clfi3co81005ko8huhf3zbdzb","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8f0073o8huczvc0m6h"},{"post_id":"clfi3co82005no8huectq9q5x","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8f0076o8hu1cce30xw"},{"post_id":"clfi3co82005no8huectq9q5x","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8g007ao8hu9gieh3xq"},{"post_id":"clfi3co7z005do8hu8x7x84o6","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8h007do8hub4n4ckav"},{"post_id":"clfi3co7z005do8hu8x7x84o6","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8i007ho8hufmru2qdi"},{"post_id":"clfi3co7z005do8hu8x7x84o6","tag_id":"clfi3co81005jo8hu0knw3vkr","_id":"clfi3co8j007ko8hud9dc3m6h"},{"post_id":"clfi3co83005qo8huegi42w3p","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8k007oo8hu69zf0i48"},{"post_id":"clfi3co83005qo8huegi42w3p","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8l007so8hu5py72e02"},{"post_id":"clfi3co83005to8hu83ercemh","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8m007vo8hu37bz4iit"},{"post_id":"clfi3co83005to8hu83ercemh","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8n007yo8hu1g6pdysv"},{"post_id":"clfi3co84005wo8hucosrahrw","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8o0082o8hu1u7kdrp9"},{"post_id":"clfi3co84005wo8hucosrahrw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8o0085o8hu4zm71wi1"},{"post_id":"clfi3co88006fo8hugvpdee9n","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8p0089o8huhrmp17hh"},{"post_id":"clfi3co88006fo8hugvpdee9n","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8q008co8hufx6tb28m"},{"post_id":"clfi3co860065o8hu1zp8gz4b","tag_id":"clfi3co87006bo8hu3t7h5d8n","_id":"clfi3co8r008go8hufs9hd6l3"},{"post_id":"clfi3co89006io8hu0nc1an7x","tag_id":"clfi3co81005jo8hu0knw3vkr","_id":"clfi3co8s008jo8hu2eqqcu36"},{"post_id":"clfi3co89006io8hu0nc1an7x","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8t008no8hu3ptvejxd"},{"post_id":"clfi3co8d006uo8hudxel97vy","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8u008ro8hu3ssrhvn3"},{"post_id":"clfi3co8d006uo8hudxel97vy","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co8v008uo8hu4md8hift"},{"post_id":"clfi3co8a006lo8hu0l8u4ayu","tag_id":"clfi3co8c006qo8hu4mwb1wqn","_id":"clfi3co8w008xo8hu4lhq7ms0"},{"post_id":"clfi3co8a006lo8hu0l8u4ayu","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8x0091o8hu8ba3glag"},{"post_id":"clfi3co8f0074o8hu04r9e1rb","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co8y0095o8hud7m06j5z"},{"post_id":"clfi3co8f0074o8hu04r9e1rb","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co8z0098o8hu11f84fne"},{"post_id":"clfi3co8g0078o8hu2jn1eyki","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co90009co8hu86s3bglr"},{"post_id":"clfi3co8g0078o8hu2jn1eyki","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co91009fo8huc2713noq"},{"post_id":"clfi3co8h007bo8hu2jdshaea","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co92009ko8hu5hqcbjkm"},{"post_id":"clfi3co8h007bo8hu2jdshaea","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co93009no8hu3zji6npe"},{"post_id":"clfi3co8i007fo8hu553vabm8","tag_id":"clfi3co6s002jo8hu8v4md6ra","_id":"clfi3co94009ro8hu4vqmg41i"},{"post_id":"clfi3co8i007fo8hu553vabm8","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co95009uo8hu97rh4d05"},{"post_id":"clfi3co8b006no8huf28r2e9s","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co96009yo8hu9i71c5gl"},{"post_id":"clfi3co8b006no8huf28r2e9s","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9700a1o8hu6mducfju"},{"post_id":"clfi3co8b006no8huf28r2e9s","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9800a5o8huhas1gx5y"},{"post_id":"clfi3co8b006no8huf28r2e9s","tag_id":"clfi3co8h007eo8hu5dbo3lj5","_id":"clfi3co9900a8o8hu2p2jawfo"},{"post_id":"clfi3co8j007mo8hu6h5e5dtq","tag_id":"clfi3co66000po8hubreqglke","_id":"clfi3co9a00aco8huaolg6et7"},{"post_id":"clfi3co8l007uo8huh47k474e","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9b00afo8hubdyl32ow"},{"post_id":"clfi3co8c006ro8hubyljacjq","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9g00aio8hubow6g5eq"},{"post_id":"clfi3co8c006ro8hubyljacjq","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9g00ako8hu1o5r2ekh"},{"post_id":"clfi3co8c006ro8hubyljacjq","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9g00amo8hugvnu8hg3"},{"post_id":"clfi3co8n0080o8hue6zn6i0w","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9g00aoo8huhlsuc4xi"},{"post_id":"clfi3co8d006xo8hucdyr91vw","tag_id":"clfi3co81005jo8hu0knw3vkr","_id":"clfi3co9g00aqo8hudb1o30yr"},{"post_id":"clfi3co8d006xo8hucdyr91vw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9g00aso8hu8lyucpxl"},{"post_id":"clfi3co8d006xo8hucdyr91vw","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9g00ato8hu54a9h3xw"},{"post_id":"clfi3co8q008ao8hufxae9sn5","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00auo8hu6hf7ef75"},{"post_id":"clfi3co8e0071o8hu902948hw","tag_id":"clfi3co6r0028o8huacf3f81g","_id":"clfi3co9h00avo8huesnvdrqs"},{"post_id":"clfi3co8e0071o8hu902948hw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00awo8hu2gydgvez"},{"post_id":"clfi3co8e0071o8hu902948hw","tag_id":"clfi3co8p0086o8hu89j3espe","_id":"clfi3co9h00axo8hu4iinhhf6"},{"post_id":"clfi3co8q008do8hub20j51y6","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00ayo8hu86f29zl0"},{"post_id":"clfi3co8r008ho8hue1cdfb1b","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00azo8hu773padrr"},{"post_id":"clfi3co8i007io8hucq732pm3","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b0o8hu3phh25lp"},{"post_id":"clfi3co8i007io8hucq732pm3","tag_id":"clfi3co8r008fo8hu3py7a7n0","_id":"clfi3co9h00b1o8hucqz5b3tg"},{"post_id":"clfi3co8s008lo8hud4jk1cxl","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b2o8hucnpi89az"},{"post_id":"clfi3co8t008po8hu9jdj65d4","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b3o8hu4oopbkgv"},{"post_id":"clfi3co8u008so8hua3vj74g1","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b4o8hu728e388x"},{"post_id":"clfi3co8v008wo8huakze3irw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b5o8hu9mt11y5i"},{"post_id":"clfi3co8k007qo8hugylm733o","tag_id":"clfi3co8t008oo8hudxfoe1uo","_id":"clfi3co9h00b6o8hu1tkr6bvt"},{"post_id":"clfi3co8k007qo8hugylm733o","tag_id":"clfi3co8v008vo8hu9f9s8byw","_id":"clfi3co9h00b7o8hu7p2m9jzg"},{"post_id":"clfi3co8k007qo8hugylm733o","tag_id":"clfi3co81005jo8hu0knw3vkr","_id":"clfi3co9h00b8o8hu5hzub6at"},{"post_id":"clfi3co8w008yo8hu1au8ea3f","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00b9o8hu5czw7xif"},{"post_id":"clfi3co8x0093o8huhm5wdjvh","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bao8hu8r584wxm"},{"post_id":"clfi3co8y0096o8hufd00bww9","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bbo8hu3is76vie"},{"post_id":"clfi3co8m007wo8hu0iejbrhj","tag_id":"clfi3co8x0092o8hu5eqs81tc","_id":"clfi3co9h00bco8hu3nzmhbqp"},{"post_id":"clfi3co8z0099o8hu5qz1e3fw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bdo8huhc97fzx4"},{"post_id":"clfi3co90009do8huehp0gitq","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00beo8huds6ce9h6"},{"post_id":"clfi3co8o0083o8hu9ng2dah5","tag_id":"clfi3co8x0092o8hu5eqs81tc","_id":"clfi3co9h00bfo8hu1o0855y4"},{"post_id":"clfi3co91009ho8hu4ei623sw","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bgo8hu91krem8c"},{"post_id":"clfi3co92009lo8hu8to1edd0","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bho8hu2pe1gyk9"},{"post_id":"clfi3co8p0087o8hudf5dhvkh","tag_id":"clfi3co8x0092o8hu5eqs81tc","_id":"clfi3co9h00bio8hu41w1e2km"},{"post_id":"clfi3co93009oo8hu2c167jb0","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00bjo8hu5jzgcn1u"},{"post_id":"clfi3co94009so8hu4zx8787o","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9h00bko8hudgyx5gs4"},{"post_id":"clfi3co94009so8hu4zx8787o","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9h00blo8hu7l20arss"},{"post_id":"clfi3co9700a3o8hubitecs23","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9h00bmo8hugumr3a02"},{"post_id":"clfi3co9700a3o8hubitecs23","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9i00bno8hu94j42heg"},{"post_id":"clfi3co9700a3o8hubitecs23","tag_id":"clfi3co6s002jo8hu8v4md6ra","_id":"clfi3co9i00boo8hu6ti91fc6"},{"post_id":"clfi3co9700a3o8hubitecs23","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9i00bpo8huhtd042yp"},{"post_id":"clfi3co9800a6o8hue6qs11jh","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9i00bqo8huhpd06xra"},{"post_id":"clfi3co9800a6o8hue6qs11jh","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9i00bro8hu6txp9q90"},{"post_id":"clfi3co9800a6o8hue6qs11jh","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9i00bso8hu3qcw3stm"},{"post_id":"clfi3co95009vo8hufff4a605","tag_id":"clfi3co8v008vo8hu9f9s8byw","_id":"clfi3co9i00bto8hu7y4w6koe"},{"post_id":"clfi3co95009vo8hufff4a605","tag_id":"clfi3co9700a2o8hu9i6d4lry","_id":"clfi3co9i00buo8hu2pl37i6f"},{"post_id":"clfi3co9900a9o8hucyhcc61p","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9i00bvo8huemnmh4k1"},{"post_id":"clfi3co9900a9o8hucyhcc61p","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9i00bwo8hubie8ctg3"},{"post_id":"clfi3co9900a9o8hucyhcc61p","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9i00bxo8hudcgh6bj7"},{"post_id":"clfi3co96009zo8hu2wxl3w92","tag_id":"clfi3co9900aao8hu9kz0gp5f","_id":"clfi3co9i00byo8huf7u2dw0n"},{"post_id":"clfi3co9b00ago8hu9z7edwee","tag_id":"clfi3co8g0077o8huc2ln1qfv","_id":"clfi3co9i00bzo8hu775qfove"},{"post_id":"clfi3co9b00ago8hu9z7edwee","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9i00c0o8hu4y494ec2"},{"post_id":"clfi3co9b00ago8hu9z7edwee","tag_id":"clfi3co8e006yo8hug1dr90bg","_id":"clfi3co9i00c1o8hudgpweku3"},{"post_id":"clfi3co9j00c2o8hu28baak38","tag_id":"clfi3co6q0023o8hu8t32hg5c","_id":"clfi3co9j00c3o8hu88ow4caq"}],"Tag":[{"name":"学习方法","_id":"clfi3co5v0006o8hu6h187oxv"},{"name":"为人","_id":"clfi3co5z000bo8hugcmm3wgg"},{"name":"数据结构","_id":"clfi3co62000io8huc3bqdnay"},{"name":"算法","_id":"clfi3co66000po8hubreqglke"},{"name":"刷题","_id":"clfi3co6l001io8hu2nkibfsw"},{"name":"基础","_id":"clfi3co6q0023o8hu8t32hg5c"},{"name":"笔记","_id":"clfi3co6r0028o8huacf3f81g"},{"name":"思维","_id":"clfi3co6s002fo8hua1e80fex"},{"name":"随手记","_id":"clfi3co6s002jo8hu8v4md6ra"},{"name":"计划","_id":"clfi3co6t002no8hu9pl8f71f"},{"name":"c","_id":"clfi3co73002to8hu4wczhgqg"},{"name":"人际","_id":"clfi3co760030o8hu58jm93ch"},{"name":"doc","_id":"clfi3co7c003ko8hu5spd6c03"},{"name":"练习","_id":"clfi3co7f003to8hua48petes"},{"name":"学习","_id":"clfi3co7i0048o8huark95req"},{"name":"react","_id":"clfi3co7m004io8hucu3ggeur"},{"name":"手写","_id":"clfi3co7p004no8huahsm4oku"},{"name":"工程化","_id":"clfi3co7y0059o8huhw1ed3ya"},{"name":"vue","_id":"clfi3co81005jo8hu0knw3vkr"},{"name":"开源","_id":"clfi3co87006bo8hu3t7h5d8n"},{"name":"css","_id":"clfi3co8c006qo8hu4mwb1wqn"},{"name":"低代码","_id":"clfi3co8e006yo8hug1dr90bg"},{"name":"青训营","_id":"clfi3co8g0077o8huc2ln1qfv"},{"name":"团队建设","_id":"clfi3co8h007eo8hu5dbo3lj5"},{"name":"babel","_id":"clfi3co8p0086o8hu89j3espe"},{"name":"git","_id":"clfi3co8r008fo8hu3py7a7n0"},{"name":"书","_id":"clfi3co8t008oo8hudxfoe1uo"},{"name":"源码","_id":"clfi3co8v008vo8hu9f9s8byw"},{"name":"leetcode","_id":"clfi3co8x0092o8hu5eqs81tc"},{"name":"webpack","_id":"clfi3co9700a2o8hu9i6d4lry"},{"name":"node","_id":"clfi3co9900aao8hu9kz0gp5f"}]}}